

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 03 14:56:48 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F45K20 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  006B94                     __pidataBANK0:
    84                           	opt callstack 0
    85                           
    86                           ;initializer for _randx
    87  006B94  0001               	dw	1
    88  006B96  0000               	dw	0
    89                           
    90                           	psect	idataBANK1
    91  006CBE                     __pidataBANK1:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _matCGRAM
    95  006CBE  08                 	db	8
    96  006CBF  04                 	db	4
    97  006CC0  04                 	db	4
    98  006CC1  0A                 	db	10
    99  006CC2  11                 	db	17
   100  006CC3  1F                 	db	31
   101  006CC4  11                 	db	17
   102  006CC5  00                 	db	0
   103  006CC6  1F                 	db	31
   104  006CC7  1B                 	db	27
   105  006CC8  11                 	db	17
   106  006CC9  11                 	db	17
   107  006CCA  11                 	db	17
   108  006CCB  11                 	db	17
   109  006CCC  1B                 	db	27
   110  006CCD  1F                 	db	31
   111  006CCE  00                 	db	0
   112  006CCF  15                 	db	21
   113  006CD0  0E                 	db	14
   114  006CD1  1F                 	db	31
   115  006CD2  1F                 	db	31
   116  006CD3  0E                 	db	14
   117  006CD4  15                 	db	21
   118  006CD5  00                 	db	0
   119  006CD6  0E                 	db	14
   120  006CD7  11                 	db	17
   121  006CD8  15                 	db	21
   122  006CD9  15                 	db	21
   123  006CDA  15                 	db	21
   124  006CDB  0E                 	db	14
   125  006CDC  15                 	db	21
   126  006CDD  04                 	db	4
   127  006CDE  04                 	db	4
   128  006CDF  04                 	db	4
   129  006CE0  04                 	db	4
   130  006CE1  04                 	db	4
   131  006CE2  0E                 	db	14
   132  006CE3  0E                 	db	14
   133  006CE4  1B                 	db	27
   134  006CE5  11                 	db	17
   135  006CE6  04                 	db	4
   136  006CE7  0A                 	db	10
   137  006CE8  0E                 	db	14
   138  006CE9  11                 	db	17
   139  006CEA  1F                 	db	31
   140  006CEB  10                 	db	16
   141  006CEC  0E                 	db	14
   142  006CED  00                 	db	0
   143  006CEE  08                 	db	8
   144  006CEF  04                 	db	4
   145  006CF0  0E                 	db	14
   146  006CF1  01                 	db	1
   147  006CF2  0F                 	db	15
   148  006CF3  11                 	db	17
   149  006CF4  0F                 	db	15
   150  006CF5  00                 	db	0
   151  006CF6  04                 	db	4
   152  006CF7  0A                 	db	10
   153  006CF8  0E                 	db	14
   154  006CF9  01                 	db	1
   155  006CFA  0F                 	db	15
   156  006CFB  11                 	db	17
   157  006CFC  0F                 	db	15
   158  006CFD  00                 	db	0
   159  0000                     _TRISCbits	set	3988
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _ANSELbits	set	3966
   163  0000                     _TRISA	set	3986
   164  0000                     _ANSEL	set	3966
   165  0000                     _TRISB	set	3987
   166  0000                     _ANSELH	set	3967
   167  0000                     _TRISD	set	3989
   168  0000                     _PORTBbits	set	3969
   169  0000                     _TMR1	set	4046
   170  0000                     _RCREG	set	4014
   171  0000                     _TXREG	set	4013
   172  0000                     _RCSTAbits	set	4011
   173  0000                     _TXSTAbits	set	4012
   174  0000                     _BAUDCONbits	set	4024
   175  0000                     _SPBRG	set	4015
   176  0000                     _SPBRGH	set	4016
   177  0000                     _ADRESH	set	4036
   178  0000                     _ADCON2bits	set	4032
   179  0000                     _ADCON1	set	4033
   180  0000                     _ADCON0bits	set	4034
   181  0000                     _T1CONbits	set	4045
   182  0000                     _RCIF	set	31989
   183                           
   184                           ; #config settings
   185  0000                     
   186                           	psect	cinit
   187  006EEC                     __pcinit:
   188                           	opt callstack 0
   189  006EEC                     start_initialization:
   190                           	opt callstack 0
   191  006EEC                     __initialization:
   192                           	opt callstack 0
   193                           
   194                           ; Initialize objects allocated to BANK1 (64 bytes)
   195                           ; load TBLPTR registers with __pidataBANK1
   196  006EEC  0EBE               	movlw	low __pidataBANK1
   197  006EEE  6EF6               	movwf	tblptrl,c
   198  006EF0  0E6C               	movlw	high __pidataBANK1
   199  006EF2  6EF7               	movwf	tblptrh,c
   200  006EF4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   201  006EF6  6EF8               	movwf	tblptru,c
   202  006EF8  EE01  F054         	lfsr	0,__pdataBANK1
   203  006EFC  EE10 F040          	lfsr	1,64
   204  006F00                     copy_data0:
   205  006F00  0009               	tblrd		*+
   206  006F02  CFF5 FFEE          	movff	tablat,postinc0
   207  006F06  50E5               	movf	postdec1,w,c
   208  006F08  50E1               	movf	fsr1l,w,c
   209  006F0A  E1FA               	bnz	copy_data0
   210                           
   211                           ; Initialize objects allocated to BANK0 (4 bytes)
   212                           ; load TBLPTR registers with __pidataBANK0
   213  006F0C  0E94               	movlw	low __pidataBANK0
   214  006F0E  6EF6               	movwf	tblptrl,c
   215  006F10  0E6B               	movlw	high __pidataBANK0
   216  006F12  6EF7               	movwf	tblptrh,c
   217  006F14  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   218  006F16  6EF8               	movwf	tblptru,c
   219  006F18  EE00  F0D8         	lfsr	0,__pdataBANK0
   220  006F1C  EE10 F004          	lfsr	1,4
   221  006F20                     copy_data1:
   222  006F20  0009               	tblrd		*+
   223  006F22  CFF5 FFEE          	movff	tablat,postinc0
   224  006F26  50E5               	movf	postdec1,w,c
   225  006F28  50E1               	movf	fsr1l,w,c
   226  006F2A  E1FA               	bnz	copy_data1
   227                           
   228                           ; Clear objects allocated to BANK1 (84 bytes)
   229  006F2C  EE01  F000         	lfsr	0,__pbssBANK1
   230  006F30  0E54               	movlw	84
   231  006F32                     clear_0:
   232  006F32  6AEE               	clrf	postinc0,c
   233  006F34  06E8               	decf	wreg,f,c
   234  006F36  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to BANK0 (84 bytes)
   237  006F38  EE00  F060         	lfsr	0,__pbssBANK0
   238  006F3C  0E54               	movlw	84
   239  006F3E                     clear_1:
   240  006F3E  6AEE               	clrf	postinc0,c
   241  006F40  06E8               	decf	wreg,f,c
   242  006F42  E1FD               	bnz	clear_1
   243  006F44                     end_of_initialization:
   244                           	opt callstack 0
   245  006F44                     __end_of__initialization:
   246                           	opt callstack 0
   247  006F44  0100               	movlb	0
   248  006F46  EF7F  F039         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssBANK0
   251  000060                     __pbssBANK0:
   252                           	opt callstack 0
   253  000060                     _m_tabMines:
   254                           	opt callstack 0
   255  000060                     	ds	84
   256                           
   257                           	psect	dataBANK0
   258  0000D8                     __pdataBANK0:
   259                           	opt callstack 0
   260  0000D8                     _randx:
   261                           	opt callstack 0
   262  0000D8                     	ds	4
   263                           
   264                           	psect	bssBANK1
   265  000100                     __pbssBANK1:
   266                           	opt callstack 0
   267  000100                     _m_tabVue:
   268                           	opt callstack 0
   269  000100                     	ds	84
   270                           
   271                           	psect	dataBANK1
   272  000154                     __pdataBANK1:
   273                           	opt callstack 0
   274  000154                     _matCGRAM:
   275                           	opt callstack 0
   276  000154                     	ds	64
   277                           
   278                           	psect	cstackBANK0
   279  0000B4                     __pcstackBANK0:
   280                           	opt callstack 0
   281  0000B4                     ??_initTabVue:
   282  0000B4                     ??_getAnalog:
   283  0000B4                     ??_lcd_ecrireDonnees:
   284  0000B4                     ??_lcd_busy:
   285  0000B4                     ?___wmul:
   286                           	opt callstack 0
   287  0000B4                     ?___lmul:
   288                           	opt callstack 0
   289  0000B4                     gagne@pMines:
   290                           	opt callstack 0
   291  0000B4                     ___wmul@multiplier:
   292                           	opt callstack 0
   293  0000B4                     srand@x:
   294                           	opt callstack 0
   295  0000B4                     ___lmul@multiplier:
   296                           	opt callstack 0
   297                           
   298                           ; 4 bytes @ 0x0
   299  0000B4                     	ds	1
   300  0000B5                     getAnalog@canal:
   301                           	opt callstack 0
   302  0000B5                     lcd_ecrireDonnees@donnee:
   303                           	opt callstack 0
   304  0000B5                     lcd_busy@adresse:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x1
   308  0000B5                     	ds	1
   309  0000B6                     ??_gagne:
   310  0000B6                     ??_lcd_resetSequence:
   311  0000B6                     initTabVue@j:
   312                           	opt callstack 0
   313  0000B6                     lcd_wrCom@commande:
   314                           	opt callstack 0
   315  0000B6                     lcd_wrData@caractere:
   316                           	opt callstack 0
   317  0000B6                     ___wmul@multiplicand:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x2
   321  0000B6                     	ds	1
   322  0000B7                     ??_lcd_initCGRam:
   323  0000B7                     initTabVue@i:
   324                           	opt callstack 0
   325  0000B7                     lcd_gotoXY@y:
   326                           	opt callstack 0
   327  0000B7                     lcd_ecritChar@car:
   328                           	opt callstack 0
   329                           
   330                           ; 1 bytes @ 0x3
   331  0000B7                     	ds	1
   332  0000B8                     lcd_gotoXY@x:
   333                           	opt callstack 0
   334  0000B8                     lcd_ecritChar@posRam:
   335                           	opt callstack 0
   336  0000B8                     ___wmul@product:
   337                           	opt callstack 0
   338  0000B8                     ___lmul@multiplicand:
   339                           	opt callstack 0
   340                           
   341                           ; 4 bytes @ 0x4
   342  0000B8                     	ds	1
   343  0000B9                     lcd_initCGRam@i:
   344                           	opt callstack 0
   345  0000B9                     deplace@x:
   346                           	opt callstack 0
   347  0000B9                     lcd_putMessage@chaine:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x5
   351  0000B9                     	ds	1
   352  0000BA                     gagne@nbTuile:
   353                           	opt callstack 0
   354  0000BA                     lcd_initCGRam@j:
   355                           	opt callstack 0
   356  0000BA                     calculToucheCombien@ligne:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x6
   360  0000BA                     	ds	1
   361  0000BB                     gagne@i:
   362                           	opt callstack 0
   363  0000BB                     lcd_putMessage@j:
   364                           	opt callstack 0
   365  0000BB                     deplace@y:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x7
   369  0000BB                     	ds	1
   370  0000BC                     gagne@j:
   371                           	opt callstack 0
   372  0000BC                     afficheTabVue@i:
   373                           	opt callstack 0
   374  0000BC                     afficheTabMines@i:
   375                           	opt callstack 0
   376  0000BC                     calculToucheCombien@colonne:
   377                           	opt callstack 0
   378  0000BC                     ___lmul@product:
   379                           	opt callstack 0
   380                           
   381                           ; 4 bytes @ 0x8
   382  0000BC                     	ds	1
   383  0000BD                     ??_deplace:
   384  0000BD                     enleveTuilesAutour@y:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x9
   388  0000BD                     	ds	1
   389  0000BE                     ??_calculToucheCombien:
   390  0000BE                     ??_enleveTuilesAutour:
   391  0000BE                     deplace@analogX:
   392                           	opt callstack 0
   393                           
   394                           ; 1 bytes @ 0xA
   395  0000BE                     	ds	1
   396  0000BF                     deplace@analogY:
   397                           	opt callstack 0
   398                           
   399                           ; 1 bytes @ 0xB
   400  0000BF                     	ds	1
   401  0000C0                     ?_rand:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0xC
   405  0000C0                     	ds	1
   406  0000C1                     calculToucheCombien@nbMines:
   407                           	opt callstack 0
   408                           
   409                           ; 1 bytes @ 0xD
   410  0000C1                     	ds	1
   411  0000C2                     ?___awmod:
   412                           	opt callstack 0
   413  0000C2                     enleveTuilesAutour@mem:
   414                           	opt callstack 0
   415  0000C2                     calculToucheCombien@i:
   416                           	opt callstack 0
   417  0000C2                     ___awmod@dividend:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xE
   421  0000C2                     	ds	1
   422  0000C3                     enleveTuilesAutour@x:
   423                           	opt callstack 0
   424                           
   425                           ; 1 bytes @ 0xF
   426  0000C3                     	ds	1
   427  0000C4                     enleveTuilesAutour@j:
   428                           	opt callstack 0
   429  0000C4                     calculToucheCombien@j:
   430                           	opt callstack 0
   431  0000C4                     ___awmod@divisor:
   432                           	opt callstack 0
   433                           
   434                           ; 2 bytes @ 0x10
   435  0000C4                     	ds	1
   436  0000C5                     enleveTuilesAutour@i:
   437                           	opt callstack 0
   438                           
   439                           ; 1 bytes @ 0x11
   440  0000C5                     	ds	1
   441  0000C6                     ??_metToucheCombien:
   442  0000C6                     demine@y:
   443                           	opt callstack 0
   444  0000C6                     ___awmod@counter:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x12
   448  0000C6                     	ds	1
   449  0000C7                     ??_demine:
   450  0000C7                     ___awmod@sign:
   451                           	opt callstack 0
   452                           
   453                           ; 1 bytes @ 0x13
   454  0000C7                     	ds	1
   455  0000C8                     rempliMines@nb:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x14
   459  0000C8                     	ds	1
   460  0000C9                     metToucheCombien@i:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x15
   464  0000C9                     	ds	1
   465  0000CA                     ??_rempliMines:
   466  0000CA                     metToucheCombien@j:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0x16
   470  0000CA                     	ds	3
   471  0000CD                     rempliMines@x:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x19
   475  0000CD                     	ds	1
   476  0000CE                     rempliMines@y:
   477                           	opt callstack 0
   478                           
   479                           ; 1 bytes @ 0x1A
   480  0000CE                     	ds	1
   481  0000CF                     rempliMines@i:
   482                           	opt callstack 0
   483  0000CF                     demine@x:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x1B
   487  0000CF                     	ds	1
   488  0000D0                     rempliMines@j:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0x1C
   492  0000D0                     	ds	1
   493  0000D1                     ??_main:
   494                           
   495                           ; 1 bytes @ 0x1D
   496  0000D1                     	ds	1
   497  0000D2                     main@nbMine:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x1E
   501  0000D2                     	ds	2
   502  0000D4                     main@posX:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x20
   506  0000D4                     	ds	2
   507  0000D6                     main@posY:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x22
   511  0000D6                     	ds	2
   512                           
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 49 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  posY            2   34[BANK0 ] PTR unsigned char 
   523 ;;		 -> RAM(1535), 
   524 ;;  posX            2   32[BANK0 ] PTR unsigned char 
   525 ;;		 -> RAM(1535), 
   526 ;;  nbMine          2   30[BANK0 ] PTR int 
   527 ;;		 -> RAM(1535), 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   537 ;;      Params:         0       0       0       0       0       0       0
   538 ;;      Locals:         0       6       0       0       0       0       0
   539 ;;      Temps:          0       1       0       0       0       0       0
   540 ;;      Totals:         0       7       0       0       0       0       0
   541 ;;Total ram usage:        7 bytes
   542 ;; Hardware stack levels required when called:    8
   543 ;; This function calls:
   544 ;;		_afficheTabMines
   545 ;;		_afficheTabVue
   546 ;;		_demine
   547 ;;		_deplace
   548 ;;		_gagne
   549 ;;		_initTabVue
   550 ;;		_initialisation
   551 ;;		_lcd_init
   552 ;;		_metToucheCombien
   553 ;;		_rempliMines
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560  0072FE                     __ptext0:
   561                           	opt callstack 0
   562  0072FE                     _main:
   563                           	opt callstack 23
   564  0072FE                     
   565                           ;main.c: 51: char* posX = 10;
   566  0072FE  0E0A               	movlw	10
   567  007300  0100               	movlb	0	; force () banked
   568  007302  6FD4               	movwf	main@posX& (0+255),b
   569  007304  0E00               	movlw	0
   570  007306  6FD5               	movwf	(main@posX+1)& (0+255),b
   571                           
   572                           ;main.c: 52: char* posY = 2;
   573  007308  0E02               	movlw	2
   574  00730A  0100               	movlb	0	; force () banked
   575  00730C  6FD6               	movwf	main@posY& (0+255),b
   576  00730E  0E00               	movlw	0
   577  007310  6FD7               	movwf	(main@posY+1)& (0+255),b
   578                           
   579                           ;main.c: 53: int* nbMine = 15;
   580  007312  0E0F               	movlw	15
   581  007314  0100               	movlb	0	; force () banked
   582  007316  6FD2               	movwf	main@nbMine& (0+255),b
   583  007318  0E00               	movlw	0
   584  00731A  6FD3               	movwf	(main@nbMine+1)& (0+255),b
   585  00731C                     
   586                           ; BSR set to: 0
   587                           ;main.c: 55: initialisation();
   588  00731C  EC45  F036         	call	_initialisation	;wreg free
   589  007320                     
   590                           ;main.c: 56: lcd_init();
   591  007320  ECED  F035         	call	_lcd_init	;wreg free
   592  007324                     
   593                           ;main.c: 57: initTabVue();
   594  007324  ECD0  F038         	call	_initTabVue	;wreg free
   595  007328                     
   596                           ;main.c: 58: rempliMines(nbMine);
   597  007328  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   598  00732C  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   599  007330  EC03  F03B         	call	_rempliMines	;wreg free
   600  007334                     
   601                           ;main.c: 59: metToucheCombien();
   602  007334  ECB1  F03B         	call	_metToucheCombien	;wreg free
   603  007338                     
   604                           ;main.c: 60: afficheTabVue();
   605  007338  EC49  F037         	call	_afficheTabVue	;wreg free
   606  00733C                     l2316:
   607                           
   608                           ;main.c: 63: {;main.c: 64: deplace(&posX, &posY);
   609  00733C  0ED4               	movlw	low main@posX
   610  00733E  0100               	movlb	0	; force () banked
   611  007340  6FB9               	movwf	deplace@x& (0+255),b
   612  007342  0E00               	movlw	high main@posX
   613  007344  6FBA               	movwf	(deplace@x+1)& (0+255),b
   614  007346  0ED6               	movlw	low main@posY
   615  007348  0100               	movlb	0	; force () banked
   616  00734A  6FBB               	movwf	deplace@y& (0+255),b
   617  00734C  0E00               	movlw	high main@posY
   618  00734E  6FBC               	movwf	(deplace@y+1)& (0+255),b
   619  007350  EC12  F03D         	call	_deplace	;wreg free
   620  007354                     
   621                           ;main.c: 65: if(PORTBbits.RB1==0)
   622  007354  B281               	btfsc	129,1,c	;volatile
   623  007356  EFAF  F039         	goto	u1451
   624  00735A  EFB1  F039         	goto	u1450
   625  00735E                     u1451:
   626  00735E  EFE3  F039         	goto	l2328
   627  007362                     u1450:
   628  007362                     
   629                           ;main.c: 66: if(demine(posX,posY)==0 || gagne(&nbMine))
   630  007362  C0D6  F0C6         	movff	main@posY,demine@y
   631  007366  0100               	movlb	0	; force () banked
   632  007368  51D4               	movf	main@posX& (0+255),w,b
   633  00736A  EC66  F03A         	call	_demine
   634  00736E  0900               	iorlw	0
   635  007370  B4D8               	btfsc	status,2,c
   636  007372  EFBD  F039         	goto	u1461
   637  007376  EFBF  F039         	goto	u1460
   638  00737A                     u1461:
   639  00737A  EFCE  F039         	goto	l2324
   640  00737E                     u1460:
   641  00737E  0ED2               	movlw	low main@nbMine
   642  007380  0100               	movlb	0	; force () banked
   643  007382  6FB4               	movwf	gagne@pMines& (0+255),b
   644  007384  0E00               	movlw	high main@nbMine
   645  007386  6FB5               	movwf	(gagne@pMines+1)& (0+255),b
   646  007388  ECF0  F039         	call	_gagne	;wreg free
   647  00738C  0900               	iorlw	0
   648  00738E  B4D8               	btfsc	status,2,c
   649  007390  EFCC  F039         	goto	u1471
   650  007394  EFCE  F039         	goto	u1470
   651  007398                     u1471:
   652  007398  EFE3  F039         	goto	l2328
   653  00739C                     u1470:
   654  00739C                     l2324:
   655                           
   656                           ;main.c: 67: {;main.c: 68: afficheTabMines();
   657  00739C  EC1C  F037         	call	_afficheTabMines	;wreg free
   658  0073A0                     l76:
   659  0073A0  A281               	btfss	129,1,c	;volatile
   660  0073A2  EFD5  F039         	goto	u1481
   661  0073A6  EFD7  F039         	goto	u1480
   662  0073AA                     u1481:
   663  0073AA  EFD0  F039         	goto	l76
   664  0073AE                     u1480:
   665  0073AE                     
   666                           ;main.c: 70: initTabVue();
   667  0073AE  ECD0  F038         	call	_initTabVue	;wreg free
   668                           
   669                           ;main.c: 71: rempliMines(nbMine);
   670  0073B2  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   671  0073B6  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   672  0073BA  EC03  F03B         	call	_rempliMines	;wreg free
   673                           
   674                           ;main.c: 72: metToucheCombien();
   675  0073BE  ECB1  F03B         	call	_metToucheCombien	;wreg free
   676                           
   677                           ;main.c: 73: afficheTabVue();
   678  0073C2  EC49  F037         	call	_afficheTabVue	;wreg free
   679  0073C6                     l2328:
   680                           
   681                           ;main.c: 74: };main.c: 75: _delay((unsigned long)((100)*(1000000/4000.0)));
   682  0073C6  0E21               	movlw	33
   683  0073C8  0100               	movlb	0	; force () banked
   684  0073CA  6FD1               	movwf	??_main& (0+255),b
   685  0073CC  0E76               	movlw	118
   686  0073CE                     u1497:
   687  0073CE  2EE8               	decfsz	wreg,f,c
   688  0073D0  D7FE               	bra	u1497
   689  0073D2  2FD1               	decfsz	??_main& (0+255),f,b
   690  0073D4  D7FC               	bra	u1497
   691  0073D6  F000               	nop	
   692  0073D8  EF9E  F039         	goto	l2316
   693  0073DC  EF00  F000         	goto	start
   694  0073E0                     __end_of_main:
   695                           	opt callstack 0
   696                           
   697 ;; *************** function _rempliMines *****************
   698 ;; Defined at:
   699 ;;		line 129 in file "main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  nb              2   20[BANK0 ] int 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  j               1   28[BANK0 ] unsigned char 
   704 ;;  i               1   27[BANK0 ] unsigned char 
   705 ;;  y               1   26[BANK0 ] unsigned char 
   706 ;;  x               1   25[BANK0 ] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   716 ;;      Params:         0       2       0       0       0       0       0
   717 ;;      Locals:         0       4       0       0       0       0       0
   718 ;;      Temps:          0       3       0       0       0       0       0
   719 ;;      Totals:         0       9       0       0       0       0       0
   720 ;;Total ram usage:        9 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    2
   723 ;; This function calls:
   724 ;;		___awmod
   725 ;;		_rand
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732  007606                     __ptext1:
   733                           	opt callstack 0
   734  007606                     _rempliMines:
   735                           	opt callstack 28
   736  007606                     
   737                           ;main.c: 131: char x, y;;main.c: 133: for (char i = 0; i < 4; i++) {
   738  007606  0E00               	movlw	0
   739  007608  0100               	movlb	0	; force () banked
   740  00760A  6FCF               	movwf	rempliMines@i& (0+255),b
   741  00760C                     
   742                           ; BSR set to: 0
   743  00760C  0E03               	movlw	3
   744  00760E  0100               	movlb	0	; force () banked
   745  007610  65CF               	cpfsgt	rempliMines@i& (0+255),b
   746  007612  EF0D  F03B         	goto	u1141
   747  007616  EF0F  F03B         	goto	u1140
   748  00761A                     u1141:
   749  00761A  EF11  F03B         	goto	l2138
   750  00761E                     u1140:
   751  00761E  EFA2  F03B         	goto	l2162
   752  007622                     l2138:
   753                           
   754                           ; BSR set to: 0
   755                           ;main.c: 134: for (char j = 0; j < 20; j++) {
   756  007622  0E00               	movlw	0
   757  007624  0100               	movlb	0	; force () banked
   758  007626  6FD0               	movwf	rempliMines@j& (0+255),b
   759  007628                     
   760                           ; BSR set to: 0
   761  007628  0E13               	movlw	19
   762  00762A  0100               	movlb	0	; force () banked
   763  00762C  65D0               	cpfsgt	rempliMines@j& (0+255),b
   764  00762E  EF1B  F03B         	goto	u1151
   765  007632  EF1D  F03B         	goto	u1150
   766  007636                     u1151:
   767  007636  EF1F  F03B         	goto	l2144
   768  00763A                     u1150:
   769  00763A  EF42  F03B         	goto	l2150
   770  00763E                     l2144:
   771                           
   772                           ; BSR set to: 0
   773                           ;main.c: 135: m_tabMines[i][j] = ' ';
   774  00763E  0100               	movlb	0	; force () banked
   775  007640  51CF               	movf	rempliMines@i& (0+255),w,b
   776  007642  0D15               	mullw	21
   777  007644  0E60               	movlw	low _m_tabMines
   778  007646  0100               	movlb	0	; force () banked
   779  007648  6FCA               	movwf	??_rempliMines& (0+255),b
   780  00764A  0E00               	movlw	high _m_tabMines
   781  00764C  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   782  00764E  50F3               	movf	243,w,c
   783  007650  27CA               	addwf	??_rempliMines& (0+255),f,b
   784  007652  50F4               	movf	244,w,c
   785  007654  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   786  007656  0100               	movlb	0	; force () banked
   787  007658  51D0               	movf	rempliMines@j& (0+255),w,b
   788  00765A  0100               	movlb	0	; force () banked
   789  00765C  25CA               	addwf	??_rempliMines& (0+255),w,b
   790  00765E  6ED9               	movwf	fsr2l,c
   791  007660  0100               	movlb	0	; force () banked
   792  007662  0E00               	movlw	0
   793  007664  0100               	movlb	0	; force () banked
   794  007666  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   795  007668  6EDA               	movwf	fsr2h,c
   796  00766A  0E20               	movlw	32
   797  00766C  6EDF               	movwf	indf2,c
   798  00766E                     
   799                           ; BSR set to: 0
   800  00766E  0100               	movlb	0	; force () banked
   801  007670  2BD0               	incf	rempliMines@j& (0+255),f,b
   802  007672                     
   803                           ; BSR set to: 0
   804  007672  0E13               	movlw	19
   805  007674  0100               	movlb	0	; force () banked
   806  007676  65D0               	cpfsgt	rempliMines@j& (0+255),b
   807  007678  EF40  F03B         	goto	u1161
   808  00767C  EF42  F03B         	goto	u1160
   809  007680                     u1161:
   810  007680  EF1F  F03B         	goto	l2144
   811  007684                     u1160:
   812  007684                     l2150:
   813                           
   814                           ; BSR set to: 0
   815  007684  0100               	movlb	0	; force () banked
   816  007686  2BCF               	incf	rempliMines@i& (0+255),f,b
   817  007688                     
   818                           ; BSR set to: 0
   819  007688  0E03               	movlw	3
   820  00768A  0100               	movlb	0	; force () banked
   821  00768C  65CF               	cpfsgt	rempliMines@i& (0+255),b
   822  00768E  EF4B  F03B         	goto	u1171
   823  007692  EF4D  F03B         	goto	u1170
   824  007696                     u1171:
   825  007696  EF11  F03B         	goto	l2138
   826  00769A                     u1170:
   827  00769A  EFA2  F03B         	goto	l2162
   828  00769E                     l2154:
   829                           
   830                           ; BSR set to: 0
   831                           ;main.c: 139: x = rand() % 20;
   832  00769E  ECF1  F036         	call	_rand	;wreg free
   833  0076A2  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   834  0076A6  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   835  0076AA  0E00               	movlw	0
   836  0076AC  0100               	movlb	0	; force () banked
   837  0076AE  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   838  0076B0  0E14               	movlw	20
   839  0076B2  6FC4               	movwf	___awmod@divisor& (0+255),b
   840  0076B4  EC26  F039         	call	___awmod	;wreg free
   841  0076B8  0100               	movlb	0	; force () banked
   842  0076BA  51C2               	movf	?___awmod& (0+255),w,b
   843  0076BC  0100               	movlb	0	; force () banked
   844  0076BE  6FCD               	movwf	rempliMines@x& (0+255),b
   845                           
   846                           ;main.c: 140: y = rand() % 4;
   847  0076C0  ECF1  F036         	call	_rand	;wreg free
   848  0076C4  0100               	movlb	0	; force () banked
   849  0076C6  51C0               	movf	?_rand& (0+255),w,b
   850  0076C8  0B03               	andlw	3
   851  0076CA  0100               	movlb	0	; force () banked
   852  0076CC  6FCE               	movwf	rempliMines@y& (0+255),b
   853  0076CE                     
   854                           ; BSR set to: 0
   855                           ;main.c: 141: if (m_tabMines[y][x] != 2) {
   856  0076CE  0100               	movlb	0	; force () banked
   857  0076D0  51CE               	movf	rempliMines@y& (0+255),w,b
   858  0076D2  0D15               	mullw	21
   859  0076D4  0E60               	movlw	low _m_tabMines
   860  0076D6  0100               	movlb	0	; force () banked
   861  0076D8  6FCA               	movwf	??_rempliMines& (0+255),b
   862  0076DA  0E00               	movlw	high _m_tabMines
   863  0076DC  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   864  0076DE  50F3               	movf	243,w,c
   865  0076E0  27CA               	addwf	??_rempliMines& (0+255),f,b
   866  0076E2  50F4               	movf	244,w,c
   867  0076E4  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   868  0076E6  0100               	movlb	0	; force () banked
   869  0076E8  51CD               	movf	rempliMines@x& (0+255),w,b
   870  0076EA  0100               	movlb	0	; force () banked
   871  0076EC  25CA               	addwf	??_rempliMines& (0+255),w,b
   872  0076EE  6ED9               	movwf	fsr2l,c
   873  0076F0  0100               	movlb	0	; force () banked
   874  0076F2  0E00               	movlw	0
   875  0076F4  0100               	movlb	0	; force () banked
   876  0076F6  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   877  0076F8  6EDA               	movwf	fsr2h,c
   878  0076FA  0E02               	movlw	2
   879  0076FC  18DE               	xorwf	postinc2,w,c
   880  0076FE  B4D8               	btfsc	status,2,c
   881  007700  EF84  F03B         	goto	u1181
   882  007704  EF86  F03B         	goto	u1180
   883  007708                     u1181:
   884  007708  EFA2  F03B         	goto	l2162
   885  00770C                     u1180:
   886  00770C                     
   887                           ; BSR set to: 0
   888                           ;main.c: 142: m_tabMines[y][x] = 2;
   889  00770C  0100               	movlb	0	; force () banked
   890  00770E  51CE               	movf	rempliMines@y& (0+255),w,b
   891  007710  0D15               	mullw	21
   892  007712  0E60               	movlw	low _m_tabMines
   893  007714  0100               	movlb	0	; force () banked
   894  007716  6FCA               	movwf	??_rempliMines& (0+255),b
   895  007718  0E00               	movlw	high _m_tabMines
   896  00771A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   897  00771C  50F3               	movf	243,w,c
   898  00771E  27CA               	addwf	??_rempliMines& (0+255),f,b
   899  007720  50F4               	movf	244,w,c
   900  007722  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   901  007724  0100               	movlb	0	; force () banked
   902  007726  51CD               	movf	rempliMines@x& (0+255),w,b
   903  007728  0100               	movlb	0	; force () banked
   904  00772A  25CA               	addwf	??_rempliMines& (0+255),w,b
   905  00772C  6ED9               	movwf	fsr2l,c
   906  00772E  0100               	movlb	0	; force () banked
   907  007730  0E00               	movlw	0
   908  007732  0100               	movlb	0	; force () banked
   909  007734  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   910  007736  6EDA               	movwf	fsr2h,c
   911  007738  0E02               	movlw	2
   912  00773A  6EDF               	movwf	indf2,c
   913  00773C                     
   914                           ; BSR set to: 0
   915                           ;main.c: 143: nb--;
   916  00773C  0100               	movlb	0	; force () banked
   917  00773E  07C8               	decf	rempliMines@nb& (0+255),f,b
   918  007740  A0D8               	btfss	status,0,c
   919  007742  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   920  007744                     l2162:
   921                           
   922                           ; BSR set to: 0
   923  007744  0100               	movlb	0	; force () banked
   924  007746  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   925  007748  EFB0  F03B         	goto	u1190
   926  00774C  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   927  00774E  E106               	bnz	u1191
   928  007750  05C8               	decf	rempliMines@nb& (0+255),w,b
   929  007752  B0D8               	btfsc	status,0,c
   930  007754  EFAE  F03B         	goto	u1191
   931  007758  EFB0  F03B         	goto	u1190
   932  00775C                     u1191:
   933  00775C  EF4F  F03B         	goto	l2154
   934  007760                     u1190:
   935  007760                     
   936                           ; BSR set to: 0
   937  007760  0012               	return		;funcret
   938  007762                     __end_of_rempliMines:
   939                           	opt callstack 0
   940                           
   941 ;; *************** function _rand *****************
   942 ;; Defined at:
   943 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  2   12[BANK0 ] int 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         0       2       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:         0       2       0       0       0       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    1
   964 ;; This function calls:
   965 ;;		___lmul
   966 ;; This function is called by:
   967 ;;		_rempliMines
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text2
   972  006DE2                     __ptext2:
   973                           	opt callstack 0
   974  006DE2                     _rand:
   975                           	opt callstack 28
   976  006DE2  C0D8  F0B4         	movff	_randx,___lmul@multiplier
   977  006DE6  C0D9  F0B5         	movff	_randx+1,___lmul@multiplier+1
   978  006DEA  C0DA  F0B6         	movff	_randx+2,___lmul@multiplier+2
   979  006DEE  C0DB  F0B7         	movff	_randx+3,___lmul@multiplier+3
   980  006DF2  0E6D               	movlw	109
   981  006DF4  0100               	movlb	0	; () banked
   982  006DF6  6FB8               	movwf	___lmul@multiplicand& (0+255),b
   983  006DF8  0E4E               	movlw	78
   984  006DFA  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   985  006DFC  0EC6               	movlw	198
   986  006DFE  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   987  006E00  0E41               	movlw	65
   988  006E02  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   989  006E04  EC10  F038         	call	___lmul	;wreg free
   990  006E08  C0B4  F0D8         	movff	?___lmul,_randx
   991  006E0C  C0B5  F0D9         	movff	?___lmul+1,_randx+1
   992  006E10  C0B6  F0DA         	movff	?___lmul+2,_randx+2
   993  006E14  C0B7  F0DB         	movff	?___lmul+3,_randx+3
   994  006E18  0E39               	movlw	57
   995  006E1A  0100               	movlb	0	; () banked
   996  006E1C  27D8               	addwf	_randx& (0+255),f,b
   997  006E1E  0E30               	movlw	48
   998  006E20  23D9               	addwfc	(_randx+1)& (0+255),f,b
   999  006E22  0E00               	movlw	0
  1000  006E24  23DA               	addwfc	(_randx+2)& (0+255),f,b
  1001  006E26  0E00               	movlw	0
  1002  006E28  23DB               	addwfc	(_randx+3)& (0+255),f,b
  1003  006E2A                     
  1004                           ; BSR set to: 0
  1005  006E2A  0EFF               	movlw	255
  1006  006E2C  15DA               	andwf	(_randx+2)& (0+255),w,b
  1007  006E2E  6FC0               	movwf	?_rand& (0+255),b
  1008  006E30  0E7F               	movlw	127
  1009  006E32  15DB               	andwf	(_randx+3)& (0+255),w,b
  1010  006E34  6FC1               	movwf	(?_rand+1)& (0+255),b
  1011  006E36                     
  1012                           ; BSR set to: 0
  1013  006E36  0012               	return		;funcret
  1014  006E38                     __end_of_rand:
  1015                           	opt callstack 0
  1016                           
  1017 ;; *************** function ___lmul *****************
  1018 ;; Defined at:
  1019 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1022 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  product         4    8[BANK0 ] unsigned long 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  4    0[BANK0 ] unsigned long 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1034 ;;      Params:         0       8       0       0       0       0       0
  1035 ;;      Locals:         0       4       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0
  1037 ;;      Totals:         0      12       0       0       0       0       0
  1038 ;;Total ram usage:       12 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_rand
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text3
  1048  007020                     __ptext3:
  1049                           	opt callstack 0
  1050  007020                     ___lmul:
  1051                           	opt callstack 28
  1052  007020  0E00               	movlw	0
  1053  007022  0100               	movlb	0	; () banked
  1054  007024  6FBC               	movwf	___lmul@product& (0+255),b
  1055  007026  0E00               	movlw	0
  1056  007028  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1057  00702A  0E00               	movlw	0
  1058  00702C  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1059  00702E  0E00               	movlw	0
  1060  007030  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1061  007032                     l1910:
  1062                           
  1063                           ; BSR set to: 0
  1064  007032  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1065  007034  EF1E  F038         	goto	u841
  1066  007038  EF20  F038         	goto	u840
  1067  00703C                     u841:
  1068  00703C  EF28  F038         	goto	l1914
  1069  007040                     u840:
  1070  007040                     
  1071                           ; BSR set to: 0
  1072  007040  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1073  007042  27BC               	addwf	___lmul@product& (0+255),f,b
  1074  007044  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1075  007046  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1076  007048  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1077  00704A  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1078  00704C  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1079  00704E  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1080  007050                     l1914:
  1081                           
  1082                           ; BSR set to: 0
  1083  007050  90D8               	bcf	status,0,c
  1084  007052  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1085  007054  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1086  007056  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1087  007058  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1088  00705A                     
  1089                           ; BSR set to: 0
  1090  00705A  90D8               	bcf	status,0,c
  1091  00705C  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1092  00705E  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1093  007060  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1094  007062  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1095  007064  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1096  007066  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1097  007068  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1098  00706A  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1099  00706C  A4D8               	btfss	status,2,c
  1100  00706E  EF3B  F038         	goto	u851
  1101  007072  EF3D  F038         	goto	u850
  1102  007076                     u851:
  1103  007076  EF19  F038         	goto	l1910
  1104  00707A                     u850:
  1105  00707A                     
  1106                           ; BSR set to: 0
  1107  00707A  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1108  00707E  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1109  007082  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1110  007086  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1111  00708A                     
  1112                           ; BSR set to: 0
  1113  00708A  0012               	return		;funcret
  1114  00708C                     __end_of___lmul:
  1115                           	opt callstack 0
  1116                           
  1117 ;; *************** function ___awmod *****************
  1118 ;; Defined at:
  1119 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  dividend        2   14[BANK0 ] int 
  1122 ;;  divisor         2   16[BANK0 ] int 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  sign            1   19[BANK0 ] unsigned char 
  1125 ;;  counter         1   18[BANK0 ] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  2   14[BANK0 ] int 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1135 ;;      Params:         0       4       0       0       0       0       0
  1136 ;;      Locals:         0       2       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0
  1138 ;;      Totals:         0       6       0       0       0       0       0
  1139 ;;Total ram usage:        6 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_rempliMines
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text4
  1149  00724C                     __ptext4:
  1150                           	opt callstack 0
  1151  00724C                     ___awmod:
  1152                           	opt callstack 29
  1153  00724C  0E00               	movlw	0
  1154  00724E  0100               	movlb	0	; () banked
  1155  007250  6FC7               	movwf	___awmod@sign& (0+255),b
  1156  007252                     
  1157                           ; BSR set to: 0
  1158  007252  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1159  007254  EF30  F039         	goto	u1040
  1160  007258  EF2E  F039         	goto	u1041
  1161  00725C                     u1041:
  1162  00725C  EF36  F039         	goto	l2056
  1163  007260                     u1040:
  1164  007260                     
  1165                           ; BSR set to: 0
  1166  007260  6DC2               	negf	___awmod@dividend& (0+255),b
  1167  007262  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1168  007264  B0D8               	btfsc	status,0,c
  1169  007266  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1170  007268                     
  1171                           ; BSR set to: 0
  1172  007268  0E01               	movlw	1
  1173  00726A  6FC7               	movwf	___awmod@sign& (0+255),b
  1174  00726C                     l2056:
  1175                           
  1176                           ; BSR set to: 0
  1177  00726C  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1178  00726E  EF3D  F039         	goto	u1050
  1179  007272  EF3B  F039         	goto	u1051
  1180  007276                     u1051:
  1181  007276  EF41  F039         	goto	l2060
  1182  00727A                     u1050:
  1183  00727A                     
  1184                           ; BSR set to: 0
  1185  00727A  6DC4               	negf	___awmod@divisor& (0+255),b
  1186  00727C  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1187  00727E  B0D8               	btfsc	status,0,c
  1188  007280  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1189  007282                     l2060:
  1190                           
  1191                           ; BSR set to: 0
  1192  007282  51C4               	movf	___awmod@divisor& (0+255),w,b
  1193  007284  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1194  007286  B4D8               	btfsc	status,2,c
  1195  007288  EF48  F039         	goto	u1061
  1196  00728C  EF4A  F039         	goto	u1060
  1197  007290                     u1061:
  1198  007290  EF6E  F039         	goto	l2076
  1199  007294                     u1060:
  1200  007294                     
  1201                           ; BSR set to: 0
  1202  007294  0E01               	movlw	1
  1203  007296  6FC6               	movwf	___awmod@counter& (0+255),b
  1204  007298  EF52  F039         	goto	l2066
  1205  00729C                     l2064:
  1206                           
  1207                           ; BSR set to: 0
  1208  00729C  90D8               	bcf	status,0,c
  1209  00729E  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1210  0072A0  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1211  0072A2  2BC6               	incf	___awmod@counter& (0+255),f,b
  1212  0072A4                     l2066:
  1213                           
  1214                           ; BSR set to: 0
  1215  0072A4  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1216  0072A6  EF57  F039         	goto	u1071
  1217  0072AA  EF59  F039         	goto	u1070
  1218  0072AE                     u1071:
  1219  0072AE  EF4E  F039         	goto	l2064
  1220  0072B2                     u1070:
  1221  0072B2                     l2068:
  1222                           
  1223                           ; BSR set to: 0
  1224  0072B2  51C4               	movf	___awmod@divisor& (0+255),w,b
  1225  0072B4  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1226  0072B6  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1227  0072B8  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1228  0072BA  A0D8               	btfss	status,0,c
  1229  0072BC  EF62  F039         	goto	u1081
  1230  0072C0  EF64  F039         	goto	u1080
  1231  0072C4                     u1081:
  1232  0072C4  EF68  F039         	goto	l2072
  1233  0072C8                     u1080:
  1234  0072C8                     
  1235                           ; BSR set to: 0
  1236  0072C8  51C4               	movf	___awmod@divisor& (0+255),w,b
  1237  0072CA  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1238  0072CC  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1239  0072CE  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1240  0072D0                     l2072:
  1241                           
  1242                           ; BSR set to: 0
  1243  0072D0  90D8               	bcf	status,0,c
  1244  0072D2  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1245  0072D4  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1246  0072D6                     
  1247                           ; BSR set to: 0
  1248  0072D6  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1249  0072D8  EF59  F039         	goto	l2068
  1250  0072DC                     l2076:
  1251                           
  1252                           ; BSR set to: 0
  1253  0072DC  51C7               	movf	___awmod@sign& (0+255),w,b
  1254  0072DE  B4D8               	btfsc	status,2,c
  1255  0072E0  EF74  F039         	goto	u1091
  1256  0072E4  EF76  F039         	goto	u1090
  1257  0072E8                     u1091:
  1258  0072E8  EF7A  F039         	goto	l2080
  1259  0072EC                     u1090:
  1260  0072EC                     
  1261                           ; BSR set to: 0
  1262  0072EC  6DC2               	negf	___awmod@dividend& (0+255),b
  1263  0072EE  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1264  0072F0  B0D8               	btfsc	status,0,c
  1265  0072F2  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1266  0072F4                     l2080:
  1267                           
  1268                           ; BSR set to: 0
  1269  0072F4  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1270  0072F8  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1271  0072FC                     
  1272                           ; BSR set to: 0
  1273  0072FC  0012               	return		;funcret
  1274  0072FE                     __end_of___awmod:
  1275                           	opt callstack 0
  1276                           
  1277 ;; *************** function _metToucheCombien *****************
  1278 ;; Defined at:
  1279 ;;		line 157 in file "main.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  j               1   22[BANK0 ] unsigned char 
  1284 ;;  i               1   21[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1294 ;;      Params:         0       0       0       0       0       0       0
  1295 ;;      Locals:         0       2       0       0       0       0       0
  1296 ;;      Temps:          0       3       0       0       0       0       0
  1297 ;;      Totals:         0       5       0       0       0       0       0
  1298 ;;Total ram usage:        5 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    2
  1301 ;; This function calls:
  1302 ;;		_calculToucheCombien
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text5
  1309  007762                     __ptext5:
  1310                           	opt callstack 0
  1311  007762                     _metToucheCombien:
  1312                           	opt callstack 28
  1313  007762                     
  1314                           ;main.c: 159: for (char i = 0; i < 4; i++) {
  1315  007762  0E00               	movlw	0
  1316  007764  0100               	movlb	0	; force () banked
  1317  007766  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1318  007768                     
  1319                           ; BSR set to: 0
  1320  007768  0E03               	movlw	3
  1321  00776A  0100               	movlb	0	; force () banked
  1322  00776C  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1323  00776E  EFBB  F03B         	goto	u1201
  1324  007772  EFBD  F03B         	goto	u1200
  1325  007776                     u1201:
  1326  007776  EFBF  F03B         	goto	l2170
  1327  00777A                     u1200:
  1328  00777A  EF5F  F03C         	goto	l111
  1329  00777E                     l2170:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;main.c: 160: for (char j = 0; j < 20; j++) {
  1333  00777E  0E00               	movlw	0
  1334  007780  0100               	movlb	0	; force () banked
  1335  007782  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1336  007784                     
  1337                           ; BSR set to: 0
  1338  007784  0E13               	movlw	19
  1339  007786  0100               	movlb	0	; force () banked
  1340  007788  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1341  00778A  EFC9  F03B         	goto	u1211
  1342  00778E  EFCB  F03B         	goto	u1210
  1343  007792                     u1211:
  1344  007792  EFCD  F03B         	goto	l2176
  1345  007796                     u1210:
  1346  007796  EF54  F03C         	goto	l2188
  1347  00779A                     l2176:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;main.c: 161: if (m_tabMines[i][j] != 2)
  1351  00779A  0100               	movlb	0	; force () banked
  1352  00779C  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1353  00779E  0D15               	mullw	21
  1354  0077A0  0E60               	movlw	low _m_tabMines
  1355  0077A2  0100               	movlb	0	; force () banked
  1356  0077A4  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1357  0077A6  0E00               	movlw	high _m_tabMines
  1358  0077A8  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1359  0077AA  50F3               	movf	243,w,c
  1360  0077AC  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1361  0077AE  50F4               	movf	244,w,c
  1362  0077B0  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1363  0077B2  0100               	movlb	0	; force () banked
  1364  0077B4  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1365  0077B6  0100               	movlb	0	; force () banked
  1366  0077B8  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1367  0077BA  6ED9               	movwf	fsr2l,c
  1368  0077BC  0100               	movlb	0	; force () banked
  1369  0077BE  0E00               	movlw	0
  1370  0077C0  0100               	movlb	0	; force () banked
  1371  0077C2  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1372  0077C4  6EDA               	movwf	fsr2h,c
  1373  0077C6  0E02               	movlw	2
  1374  0077C8  18DE               	xorwf	postinc2,w,c
  1375  0077CA  B4D8               	btfsc	status,2,c
  1376  0077CC  EFEA  F03B         	goto	u1221
  1377  0077D0  EFEC  F03B         	goto	u1220
  1378  0077D4                     u1221:
  1379  0077D4  EF12  F03C         	goto	l2180
  1380  0077D8                     u1220:
  1381  0077D8                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 162: m_tabMines[i][j] = calculToucheCombien(i, j) + 48;
  1384  0077D8  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1385  0077DC  0100               	movlb	0	; force () banked
  1386  0077DE  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1387  0077E0  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1388  0077E4  0100               	movlb	0	; force () banked
  1389  0077E6  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1390  0077E8  ECCF  F03D         	call	_calculToucheCombien	;wreg free
  1391  0077EC  0100               	movlb	0	; force () banked
  1392  0077EE  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1393  0077F0  0E30               	movlw	48
  1394  0077F2  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1395  0077F4  0100               	movlb	0	; force () banked
  1396  0077F6  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1397  0077F8  0D15               	mullw	21
  1398  0077FA  0E60               	movlw	low _m_tabMines
  1399  0077FC  0100               	movlb	0	; force () banked
  1400  0077FE  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1401  007800  0E00               	movlw	high _m_tabMines
  1402  007802  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1403  007804  50F3               	movf	243,w,c
  1404  007806  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1405  007808  50F4               	movf	244,w,c
  1406  00780A  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1407  00780C  0100               	movlb	0	; force () banked
  1408  00780E  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1409  007810  0100               	movlb	0	; force () banked
  1410  007812  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1411  007814  6ED9               	movwf	fsr2l,c
  1412  007816  0100               	movlb	0	; force () banked
  1413  007818  0E00               	movlw	0
  1414  00781A  0100               	movlb	0	; force () banked
  1415  00781C  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1416  00781E  6EDA               	movwf	fsr2h,c
  1417  007820  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1418  007824                     l2180:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;main.c: 163: if (m_tabMines[i][j] == '0')
  1422  007824  0100               	movlb	0	; force () banked
  1423  007826  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1424  007828  0D15               	mullw	21
  1425  00782A  0E60               	movlw	low _m_tabMines
  1426  00782C  0100               	movlb	0	; force () banked
  1427  00782E  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1428  007830  0E00               	movlw	high _m_tabMines
  1429  007832  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1430  007834  50F3               	movf	243,w,c
  1431  007836  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1432  007838  50F4               	movf	244,w,c
  1433  00783A  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1434  00783C  0100               	movlb	0	; force () banked
  1435  00783E  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1436  007840  0100               	movlb	0	; force () banked
  1437  007842  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1438  007844  6ED9               	movwf	fsr2l,c
  1439  007846  0100               	movlb	0	; force () banked
  1440  007848  0E00               	movlw	0
  1441  00784A  0100               	movlb	0	; force () banked
  1442  00784C  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1443  00784E  6EDA               	movwf	fsr2h,c
  1444  007850  0E30               	movlw	48
  1445  007852  18DE               	xorwf	postinc2,w,c
  1446  007854  A4D8               	btfss	status,2,c
  1447  007856  EF2F  F03C         	goto	u1231
  1448  00785A  EF31  F03C         	goto	u1230
  1449  00785E                     u1231:
  1450  00785E  EF49  F03C         	goto	l2184
  1451  007862                     u1230:
  1452  007862                     
  1453                           ; BSR set to: 0
  1454                           ;main.c: 164: m_tabMines[i][j] = ' ';
  1455  007862  0100               	movlb	0	; force () banked
  1456  007864  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1457  007866  0D15               	mullw	21
  1458  007868  0E60               	movlw	low _m_tabMines
  1459  00786A  0100               	movlb	0	; force () banked
  1460  00786C  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1461  00786E  0E00               	movlw	high _m_tabMines
  1462  007870  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1463  007872  50F3               	movf	243,w,c
  1464  007874  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1465  007876  50F4               	movf	244,w,c
  1466  007878  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1467  00787A  0100               	movlb	0	; force () banked
  1468  00787C  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1469  00787E  0100               	movlb	0	; force () banked
  1470  007880  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1471  007882  6ED9               	movwf	fsr2l,c
  1472  007884  0100               	movlb	0	; force () banked
  1473  007886  0E00               	movlw	0
  1474  007888  0100               	movlb	0	; force () banked
  1475  00788A  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1476  00788C  6EDA               	movwf	fsr2h,c
  1477  00788E  0E20               	movlw	32
  1478  007890  6EDF               	movwf	indf2,c
  1479  007892                     l2184:
  1480                           
  1481                           ; BSR set to: 0
  1482  007892  0100               	movlb	0	; force () banked
  1483  007894  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1484  007896                     
  1485                           ; BSR set to: 0
  1486  007896  0E13               	movlw	19
  1487  007898  0100               	movlb	0	; force () banked
  1488  00789A  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1489  00789C  EF52  F03C         	goto	u1241
  1490  0078A0  EF54  F03C         	goto	u1240
  1491  0078A4                     u1241:
  1492  0078A4  EFCD  F03B         	goto	l2176
  1493  0078A8                     u1240:
  1494  0078A8                     l2188:
  1495                           
  1496                           ; BSR set to: 0
  1497  0078A8  0100               	movlb	0	; force () banked
  1498  0078AA  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1499  0078AC                     
  1500                           ; BSR set to: 0
  1501  0078AC  0E03               	movlw	3
  1502  0078AE  0100               	movlb	0	; force () banked
  1503  0078B0  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1504  0078B2  EF5D  F03C         	goto	u1251
  1505  0078B6  EF5F  F03C         	goto	u1250
  1506  0078BA                     u1251:
  1507  0078BA  EFBF  F03B         	goto	l2170
  1508  0078BE                     u1250:
  1509  0078BE                     l111:
  1510                           
  1511                           ; BSR set to: 0
  1512  0078BE  0012               	return		;funcret
  1513  0078C0                     __end_of_metToucheCombien:
  1514                           	opt callstack 0
  1515                           
  1516 ;; *************** function _calculToucheCombien *****************
  1517 ;; Defined at:
  1518 ;;		line 174 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  ligne           2    6[BANK0 ] int 
  1521 ;;  colonne         2    8[BANK0 ] int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  j               2   16[BANK0 ] int 
  1524 ;;  i               2   14[BANK0 ] int 
  1525 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      unsigned char 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1535 ;;      Params:         0       4       0       0       0       0       0
  1536 ;;      Locals:         0       5       0       0       0       0       0
  1537 ;;      Temps:          0       3       0       0       0       0       0
  1538 ;;      Totals:         0      12       0       0       0       0       0
  1539 ;;Total ram usage:       12 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    1
  1542 ;; This function calls:
  1543 ;;		___wmul
  1544 ;; This function is called by:
  1545 ;;		_metToucheCombien
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text6
  1550  007B9E                     __ptext6:
  1551                           	opt callstack 0
  1552  007B9E                     _calculToucheCombien:
  1553                           	opt callstack 28
  1554  007B9E                     
  1555                           ;main.c: 176: int i = ligne - 1;
  1556  007B9E  0EFF               	movlw	255
  1557  007BA0  0100               	movlb	0	; force () banked
  1558  007BA2  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1559  007BA4  0100               	movlb	0	; force () banked
  1560  007BA6  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1561  007BA8  0EFF               	movlw	255
  1562  007BAA  0100               	movlb	0	; force () banked
  1563  007BAC  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1564  007BAE  0100               	movlb	0	; force () banked
  1565  007BB0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1566                           
  1567                           ;main.c: 177: int j = colonne - 1;
  1568  007BB2  0EFF               	movlw	255
  1569  007BB4  0100               	movlb	0	; force () banked
  1570  007BB6  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1571  007BB8  0100               	movlb	0	; force () banked
  1572  007BBA  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1573  007BBC  0EFF               	movlw	255
  1574  007BBE  0100               	movlb	0	; force () banked
  1575  007BC0  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1576  007BC2  0100               	movlb	0	; force () banked
  1577  007BC4  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1578  007BC6                     
  1579                           ; BSR set to: 0
  1580                           ;main.c: 178: char nbMines = 0;
  1581  007BC6  0E00               	movlw	0
  1582  007BC8  0100               	movlb	0	; force () banked
  1583  007BCA  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1584  007BCC                     
  1585                           ; BSR set to: 0
  1586                           ;main.c: 180: if (i < 0)
  1587  007BCC  0100               	movlb	0	; force () banked
  1588  007BCE  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1589  007BD0  EFEE  F03D         	goto	u860
  1590  007BD4  EFEC  F03D         	goto	u861
  1591  007BD8                     u861:
  1592  007BD8  EFF3  F03D         	goto	l1936
  1593  007BDC                     u860:
  1594  007BDC                     
  1595                           ; BSR set to: 0
  1596                           ;main.c: 181: i = 0;
  1597  007BDC  0E00               	movlw	0
  1598  007BDE  0100               	movlb	0	; force () banked
  1599  007BE0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1600  007BE2  0E00               	movlw	0
  1601  007BE4  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1602  007BE6                     l1936:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;main.c: 182: if (j < 0)
  1606  007BE6  0100               	movlb	0	; force () banked
  1607  007BE8  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1608  007BEA  EFFB  F03D         	goto	u870
  1609  007BEE  EFF9  F03D         	goto	u871
  1610  007BF2                     u871:
  1611  007BF2  EF71  F03E         	goto	l1952
  1612  007BF6                     u870:
  1613  007BF6                     
  1614                           ; BSR set to: 0
  1615                           ;main.c: 183: j = 0;
  1616  007BF6  0E00               	movlw	0
  1617  007BF8  0100               	movlb	0	; force () banked
  1618  007BFA  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1619  007BFC  0E00               	movlw	0
  1620  007BFE  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1621  007C00  EF71  F03E         	goto	l1952
  1622  007C04                     l1940:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 186: for (j = j = colonne - 1; (j <= (colonne + 1))&&(j < 20); j++) {
  1626  007C04  0EFF               	movlw	255
  1627  007C06  0100               	movlb	0	; force () banked
  1628  007C08  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1629  007C0A  0100               	movlb	0	; force () banked
  1630  007C0C  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1631  007C0E  0EFF               	movlw	255
  1632  007C10  0100               	movlb	0	; force () banked
  1633  007C12  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1634  007C14  0100               	movlb	0	; force () banked
  1635  007C16  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1636  007C18  C0C4  F0C4         	movff	calculToucheCombien@j,calculToucheCombien@j
  1637  007C1C  C0C5  F0C5         	movff	calculToucheCombien@j+1,calculToucheCombien@j+1
  1638  007C20  EF42  F03E         	goto	l1946
  1639  007C24                     l1942:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 187: if (m_tabMines[i][j] == 2)
  1643  007C24  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1644  007C28  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1645  007C2C  0E00               	movlw	0
  1646  007C2E  0100               	movlb	0	; force () banked
  1647  007C30  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1648  007C32  0E15               	movlw	21
  1649  007C34  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1650  007C36  EC01  F036         	call	___wmul	;wreg free
  1651  007C3A  0E60               	movlw	low _m_tabMines
  1652  007C3C  0100               	movlb	0	; force () banked
  1653  007C3E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1654  007C40  0E00               	movlw	high _m_tabMines
  1655  007C42  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1656  007C44  0100               	movlb	0	; force () banked
  1657  007C46  51B4               	movf	?___wmul& (0+255),w,b
  1658  007C48  0100               	movlb	0	; force () banked
  1659  007C4A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1660  007C4C  0100               	movlb	0	; force () banked
  1661  007C4E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1662  007C50  0100               	movlb	0	; force () banked
  1663  007C52  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1664  007C54  0100               	movlb	0	; force () banked
  1665  007C56  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1666  007C58  0100               	movlb	0	; force () banked
  1667  007C5A  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1668  007C5C  6ED9               	movwf	fsr2l,c
  1669  007C5E  0100               	movlb	0	; force () banked
  1670  007C60  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1671  007C62  0100               	movlb	0	; force () banked
  1672  007C64  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1673  007C66  6EDA               	movwf	fsr2h,c
  1674  007C68  0E02               	movlw	2
  1675  007C6A  18DE               	xorwf	postinc2,w,c
  1676  007C6C  A4D8               	btfss	status,2,c
  1677  007C6E  EF3B  F03E         	goto	u881
  1678  007C72  EF3D  F03E         	goto	u880
  1679  007C76                     u881:
  1680  007C76  EF3F  F03E         	goto	l120
  1681  007C7A                     u880:
  1682  007C7A                     
  1683                           ; BSR set to: 0
  1684                           ;main.c: 188: nbMines++;
  1685  007C7A  0100               	movlb	0	; force () banked
  1686  007C7C  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1687  007C7E                     l120:
  1688                           
  1689                           ; BSR set to: 0
  1690  007C7E  0100               	movlb	0	; force () banked
  1691  007C80  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1692  007C82  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1693  007C84                     l1946:
  1694                           
  1695                           ; BSR set to: 0
  1696  007C84  0E01               	movlw	1
  1697  007C86  0100               	movlb	0	; force () banked
  1698  007C88  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1699  007C8A  0100               	movlb	0	; force () banked
  1700  007C8C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1701  007C8E  0E00               	movlw	0
  1702  007C90  0100               	movlb	0	; force () banked
  1703  007C92  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1704  007C94  0100               	movlb	0	; force () banked
  1705  007C96  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1706  007C98  0100               	movlb	0	; force () banked
  1707  007C9A  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1708  007C9C  0100               	movlb	0	; force () banked
  1709  007C9E  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1710  007CA0  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1711  007CA2  0A80               	xorlw	128
  1712  007CA4  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1713  007CA6  0100               	movlb	0	; force () banked
  1714  007CA8  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1715  007CAA  0A80               	xorlw	128
  1716  007CAC  0100               	movlb	0	; force () banked
  1717  007CAE  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1718  007CB0  A0D8               	btfss	status,0,c
  1719  007CB2  EF5D  F03E         	goto	u891
  1720  007CB6  EF5F  F03E         	goto	u890
  1721  007CBA                     u891:
  1722  007CBA  EF6E  F03E         	goto	l1950
  1723  007CBE                     u890:
  1724  007CBE                     
  1725                           ; BSR set to: 0
  1726  007CBE  0100               	movlb	0	; force () banked
  1727  007CC0  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1728  007CC2  EF6C  F03E         	goto	u901
  1729  007CC6  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1730  007CC8  E109               	bnz	u900
  1731  007CCA  0E14               	movlw	20
  1732  007CCC  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1733  007CCE  A0D8               	btfss	status,0,c
  1734  007CD0  EF6C  F03E         	goto	u901
  1735  007CD4  EF6E  F03E         	goto	u900
  1736  007CD8                     u901:
  1737  007CD8  EF12  F03E         	goto	l1942
  1738  007CDC                     u900:
  1739  007CDC                     l1950:
  1740                           
  1741                           ; BSR set to: 0
  1742  007CDC  0100               	movlb	0	; force () banked
  1743  007CDE  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1744  007CE0  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1745  007CE2                     l1952:
  1746                           
  1747                           ; BSR set to: 0
  1748  007CE2  0E01               	movlw	1
  1749  007CE4  0100               	movlb	0	; force () banked
  1750  007CE6  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1751  007CE8  0100               	movlb	0	; force () banked
  1752  007CEA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1753  007CEC  0E00               	movlw	0
  1754  007CEE  0100               	movlb	0	; force () banked
  1755  007CF0  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1756  007CF2  0100               	movlb	0	; force () banked
  1757  007CF4  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1758  007CF6  0100               	movlb	0	; force () banked
  1759  007CF8  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1760  007CFA  0100               	movlb	0	; force () banked
  1761  007CFC  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1762  007CFE  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1763  007D00  0A80               	xorlw	128
  1764  007D02  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1765  007D04  0100               	movlb	0	; force () banked
  1766  007D06  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1767  007D08  0A80               	xorlw	128
  1768  007D0A  0100               	movlb	0	; force () banked
  1769  007D0C  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1770  007D0E  A0D8               	btfss	status,0,c
  1771  007D10  EF8C  F03E         	goto	u911
  1772  007D14  EF8E  F03E         	goto	u910
  1773  007D18                     u911:
  1774  007D18  EF9D  F03E         	goto	l1956
  1775  007D1C                     u910:
  1776  007D1C                     
  1777                           ; BSR set to: 0
  1778  007D1C  0100               	movlb	0	; force () banked
  1779  007D1E  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1780  007D20  EF9B  F03E         	goto	u921
  1781  007D24  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1782  007D26  E109               	bnz	u920
  1783  007D28  0E04               	movlw	4
  1784  007D2A  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1785  007D2C  A0D8               	btfss	status,0,c
  1786  007D2E  EF9B  F03E         	goto	u921
  1787  007D32  EF9D  F03E         	goto	u920
  1788  007D36                     u921:
  1789  007D36  EF02  F03E         	goto	l1940
  1790  007D3A                     u920:
  1791  007D3A                     l1956:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;main.c: 189: };main.c: 190: };main.c: 191: return nbMines;
  1795  007D3A  0100               	movlb	0	; force () banked
  1796  007D3C  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1797  007D3E                     
  1798                           ; BSR set to: 0
  1799  007D3E  0012               	return		;funcret
  1800  007D40                     __end_of_calculToucheCombien:
  1801                           	opt callstack 0
  1802                           
  1803 ;; *************** function ___wmul *****************
  1804 ;; Defined at:
  1805 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1808 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  product         2    4[BANK0 ] unsigned int 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2    0[BANK0 ] unsigned int 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, prodl, prodh
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1820 ;;      Params:         0       4       0       0       0       0       0
  1821 ;;      Locals:         0       2       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0
  1823 ;;      Totals:         0       6       0       0       0       0       0
  1824 ;;Total ram usage:        6 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_calculToucheCombien
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text7
  1834  006C02                     __ptext7:
  1835                           	opt callstack 0
  1836  006C02                     ___wmul:
  1837                           	opt callstack 28
  1838  006C02  0100               	movlb	0	; () banked
  1839  006C04  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1840  006C06  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1841  006C08  CFF3 F0B8          	movff	prodl,___wmul@product
  1842  006C0C  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1843  006C10  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1844  006C12  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1845  006C14  50F3               	movf	243,w,c
  1846  006C16  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1847  006C18  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1848  006C1A  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1849  006C1C  50F3               	movf	243,w,c
  1850  006C1E  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1851  006C20                     
  1852                           ; BSR set to: 0
  1853  006C20  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1854  006C24  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1855  006C28                     
  1856                           ; BSR set to: 0
  1857  006C28  0012               	return		;funcret
  1858  006C2A                     __end_of___wmul:
  1859                           	opt callstack 0
  1860                           
  1861 ;; *************** function _lcd_init *****************
  1862 ;; Defined at:
  1863 ;;		line 258 in file "Lcd4Lignes.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1877 ;;      Params:         0       0       0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0
  1880 ;;      Totals:         0       0       0       0       0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    5
  1884 ;; This function calls:
  1885 ;;		_lcd_initCGRam
  1886 ;;		_lcd_resetSequence
  1887 ;;		_lcd_wrCom
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text8
  1894  006BDA                     __ptext8:
  1895                           	opt callstack 0
  1896  006BDA                     _lcd_init:
  1897                           	opt callstack 25
  1898  006BDA                     
  1899                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1900  006BDA  ECA5  F037         	call	_lcd_resetSequence	;wreg free
  1901                           
  1902                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1903  006BDE  0E28               	movlw	40
  1904  006BE0  ECDA  F037         	call	_lcd_wrCom
  1905                           
  1906                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1907  006BE4  0E0F               	movlw	15
  1908  006BE6  ECDA  F037         	call	_lcd_wrCom
  1909                           
  1910                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1911  006BEA  0E01               	movlw	1
  1912  006BEC  ECDA  F037         	call	_lcd_wrCom
  1913                           
  1914                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1915  006BF0  0E06               	movlw	6
  1916  006BF2  ECDA  F037         	call	_lcd_wrCom
  1917                           
  1918                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1919  006BF6  0E80               	movlw	128
  1920  006BF8  ECDA  F037         	call	_lcd_wrCom
  1921  006BFC                     
  1922                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1923  006BFC  EC7F  F038         	call	_lcd_initCGRam	;wreg free
  1924  006C00  0012               	return		;funcret
  1925  006C02                     __end_of_lcd_init:
  1926                           	opt callstack 0
  1927                           
  1928 ;; *************** function _lcd_resetSequence *****************
  1929 ;; Defined at:
  1930 ;;		line 221 in file "Lcd4Lignes.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1944 ;;      Params:         0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0
  1946 ;;      Temps:          0       1       0       0       0       0       0
  1947 ;;      Totals:         0       1       0       0       0       0       0
  1948 ;;Total ram usage:        1 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    1
  1951 ;; This function calls:
  1952 ;;		_lcd_ecrireDonnees
  1953 ;;		_lcd_strobeEnableBit
  1954 ;; This function is called by:
  1955 ;;		_lcd_init
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text9
  1960  006F4A                     __ptext9:
  1961                           	opt callstack 0
  1962  006F4A                     _lcd_resetSequence:
  1963                           	opt callstack 28
  1964  006F4A                     
  1965                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1966  006F4A  0E00               	movlw	0
  1967  006F4C  6E95               	movwf	149,c	;volatile
  1968  006F4E                     
  1969                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1970  006F4E  0E0D               	movlw	13
  1971  006F50  0100               	movlb	0	; force () banked
  1972  006F52  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  1973  006F54  0EFB               	movlw	251
  1974  006F56                     u1507:
  1975  006F56  2EE8               	decfsz	wreg,f,c
  1976  006F58  D7FE               	bra	u1507
  1977  006F5A  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1978  006F5C  D7FC               	bra	u1507
  1979  006F5E  F000 F000          	nop2	
  1980  006F62                     
  1981                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1982  006F62  9080               	bcf	128,0,c	;volatile
  1983  006F64                     
  1984                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1985  006F64  9280               	bcf	128,1,c	;volatile
  1986  006F66                     
  1987                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1988  006F66  0E03               	movlw	3
  1989  006F68  ECDF  F035         	call	_lcd_ecrireDonnees
  1990  006F6C                     
  1991                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1992  006F6C  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  1993  006F70                     
  1994                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1995  006F70  0E03               	movlw	3
  1996  006F72                     u1517:
  1997  006F72  2EE8               	decfsz	wreg,f,c
  1998  006F74  D7FE               	bra	u1517
  1999  006F76  F000               	nop	
  2000  006F78                     
  2001                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2002  006F78  0E03               	movlw	3
  2003  006F7A  ECDF  F035         	call	_lcd_ecrireDonnees
  2004  006F7E                     
  2005                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2006  006F7E  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  2007  006F82                     
  2008                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2009  006F82  0E03               	movlw	3
  2010  006F84                     u1527:
  2011  006F84  2EE8               	decfsz	wreg,f,c
  2012  006F86  D7FE               	bra	u1527
  2013  006F88  F000               	nop	
  2014  006F8A                     
  2015                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2016  006F8A  0E03               	movlw	3
  2017  006F8C  ECDF  F035         	call	_lcd_ecrireDonnees
  2018  006F90                     
  2019                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2020  006F90  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  2021  006F94                     
  2022                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2023  006F94  0E03               	movlw	3
  2024  006F96                     u1537:
  2025  006F96  2EE8               	decfsz	wreg,f,c
  2026  006F98  D7FE               	bra	u1537
  2027  006F9A  F000               	nop	
  2028  006F9C                     
  2029                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2030  006F9C  0E02               	movlw	2
  2031  006F9E  ECDF  F035         	call	_lcd_ecrireDonnees
  2032  006FA2                     
  2033                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2034  006FA2  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  2035  006FA6                     
  2036                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2037  006FA6  0E03               	movlw	3
  2038  006FA8                     u1547:
  2039  006FA8  2EE8               	decfsz	wreg,f,c
  2040  006FAA  D7FE               	bra	u1547
  2041  006FAC  F000               	nop	
  2042  006FAE                     
  2043                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2044  006FAE  0E0F               	movlw	15
  2045  006FB0  6E95               	movwf	149,c	;volatile
  2046  006FB2  0012               	return		;funcret
  2047  006FB4                     __end_of_lcd_resetSequence:
  2048                           	opt callstack 0
  2049                           
  2050 ;; *************** function _lcd_initCGRam *****************
  2051 ;; Defined at:
  2052 ;;		line 417 in file "Lcd4Lignes.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  j               1    6[BANK0 ] unsigned char 
  2057 ;;  i               1    5[BANK0 ] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2067 ;;      Params:         0       0       0       0       0       0       0
  2068 ;;      Locals:         0       2       0       0       0       0       0
  2069 ;;      Temps:          0       2       0       0       0       0       0
  2070 ;;      Totals:         0       4       0       0       0       0       0
  2071 ;;Total ram usage:        4 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    4
  2074 ;; This function calls:
  2075 ;;		_lcd_curseurHome
  2076 ;;		_lcd_wrCom
  2077 ;;		_lcd_wrData
  2078 ;; This function is called by:
  2079 ;;		_lcd_init
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text10
  2084  0070FE                     __ptext10:
  2085                           	opt callstack 0
  2086  0070FE                     _lcd_initCGRam:
  2087                           	opt callstack 25
  2088  0070FE                     
  2089                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2090  0070FE  0E40               	movlw	64
  2091  007100  ECDA  F037         	call	_lcd_wrCom
  2092  007104                     
  2093                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2094  007104  0E00               	movlw	0
  2095  007106  0100               	movlb	0	; force () banked
  2096  007108  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2097  00710A                     
  2098                           ; BSR set to: 0
  2099  00710A  0E07               	movlw	7
  2100  00710C  0100               	movlb	0	; force () banked
  2101  00710E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2102  007110  EF8C  F038         	goto	u1001
  2103  007114  EF8E  F038         	goto	u1000
  2104  007118                     u1001:
  2105  007118  EF90  F038         	goto	l2030
  2106  00711C                     u1000:
  2107  00711C  EFCD  F038         	goto	l2046
  2108  007120                     l2030:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2112  007120  0E00               	movlw	0
  2113  007122  0100               	movlb	0	; force () banked
  2114  007124  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2115  007126                     
  2116                           ; BSR set to: 0
  2117  007126  0E07               	movlw	7
  2118  007128  0100               	movlb	0	; force () banked
  2119  00712A  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2120  00712C  EF9A  F038         	goto	u1011
  2121  007130  EF9C  F038         	goto	u1010
  2122  007134                     u1011:
  2123  007134  EF9E  F038         	goto	l2036
  2124  007138                     u1010:
  2125  007138  EFC2  F038         	goto	l2042
  2126  00713C                     l2036:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2130  00713C  0100               	movlb	0	; force () banked
  2131  00713E  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2132  007140  0D08               	mullw	8
  2133  007142  0E54               	movlw	low _matCGRAM
  2134  007144  0100               	movlb	0	; force () banked
  2135  007146  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2136  007148  0E01               	movlw	high _matCGRAM
  2137  00714A  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2138  00714C  50F3               	movf	243,w,c
  2139  00714E  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2140  007150  50F4               	movf	244,w,c
  2141  007152  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2142  007154  0100               	movlb	0	; force () banked
  2143  007156  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2144  007158  0100               	movlb	0	; force () banked
  2145  00715A  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2146  00715C  6ED9               	movwf	fsr2l,c
  2147  00715E  0100               	movlb	0	; force () banked
  2148  007160  0E00               	movlw	0
  2149  007162  0100               	movlb	0	; force () banked
  2150  007164  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2151  007166  6EDA               	movwf	fsr2h,c
  2152  007168  50DF               	movf	indf2,w,c
  2153  00716A  EC2B  F036         	call	_lcd_wrData
  2154  00716E  0100               	movlb	0	; force () banked
  2155  007170  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2156  007172                     
  2157                           ; BSR set to: 0
  2158  007172  0E07               	movlw	7
  2159  007174  0100               	movlb	0	; force () banked
  2160  007176  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2161  007178  EFC0  F038         	goto	u1021
  2162  00717C  EFC2  F038         	goto	u1020
  2163  007180                     u1021:
  2164  007180  EF9E  F038         	goto	l2036
  2165  007184                     u1020:
  2166  007184                     l2042:
  2167                           
  2168                           ; BSR set to: 0
  2169  007184  0100               	movlb	0	; force () banked
  2170  007186  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2171  007188                     
  2172                           ; BSR set to: 0
  2173  007188  0E07               	movlw	7
  2174  00718A  0100               	movlb	0	; force () banked
  2175  00718C  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2176  00718E  EFCB  F038         	goto	u1031
  2177  007192  EFCD  F038         	goto	u1030
  2178  007196                     u1031:
  2179  007196  EF90  F038         	goto	l2030
  2180  00719A                     u1030:
  2181  00719A                     l2046:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2185  00719A  ECD3  F035         	call	_lcd_curseurHome	;wreg free
  2186  00719E  0012               	return		;funcret
  2187  0071A0                     __end_of_lcd_initCGRam:
  2188                           	opt callstack 0
  2189                           
  2190 ;; *************** function _lcd_curseurHome *****************
  2191 ;; Defined at:
  2192 ;;		line 288 in file "Lcd4Lignes.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2206 ;;      Params:         0       0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    3
  2213 ;; This function calls:
  2214 ;;		_lcd_wrCom
  2215 ;; This function is called by:
  2216 ;;		_lcd_initCGRam
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text11
  2221  006BA6                     __ptext11:
  2222                           	opt callstack 0
  2223  006BA6                     _lcd_curseurHome:
  2224                           	opt callstack 25
  2225  006BA6                     
  2226                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2227  006BA6  0E02               	movlw	2
  2228  006BA8  ECDA  F037         	call	_lcd_wrCom
  2229  006BAC  0012               	return		;funcret
  2230  006BAE                     __end_of_lcd_curseurHome:
  2231                           	opt callstack 0
  2232                           
  2233 ;; *************** function _initialisation *****************
  2234 ;; Defined at:
  2235 ;;		line 84 in file "main.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2249 ;;      Params:         0       0       0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    1
  2256 ;; This function calls:
  2257 ;;		_srand
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text12
  2264  006C8A                     __ptext12:
  2265                           	opt callstack 0
  2266  006C8A                     _initialisation:
  2267                           	opt callstack 29
  2268  006C8A                     
  2269                           ;main.c: 86: TRISD = 0;
  2270  006C8A  0E00               	movlw	0
  2271  006C8C  6E95               	movwf	149,c	;volatile
  2272                           
  2273                           ;main.c: 87: ANSELH = 0;
  2274  006C8E  0E00               	movlw	0
  2275  006C90  6E7F               	movwf	127,c	;volatile
  2276  006C92                     
  2277                           ;main.c: 88: TRISB = 0xFF;
  2278  006C92  6893               	setf	147,c	;volatile
  2279                           
  2280                           ;main.c: 89: ANSEL = 0;
  2281  006C94  0E00               	movlw	0
  2282  006C96  6E7E               	movwf	126,c	;volatile
  2283                           
  2284                           ;main.c: 90: TRISA = 0;
  2285  006C98  0E00               	movlw	0
  2286  006C9A  6E92               	movwf	146,c	;volatile
  2287  006C9C                     
  2288                           ;main.c: 94: T1CONbits.TMR1ON = 1;
  2289  006C9C  80CD               	bsf	205,0,c	;volatile
  2290  006C9E                     
  2291                           ;main.c: 95: srand(TMR1);
  2292  006C9E  CFCE F0B4          	movff	4046,srand@x	;volatile
  2293  006CA2  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2294  006CA6  ECD7  F035         	call	_srand	;wreg free
  2295  006CAA                     
  2296                           ;main.c: 97: ANSELbits.ANS7 = 1;
  2297  006CAA  8E7E               	bsf	126,7,c	;volatile
  2298  006CAC                     
  2299                           ;main.c: 98: ADCON0bits.ADON = 1;
  2300  006CAC  80C2               	bsf	194,0,c	;volatile
  2301  006CAE                     
  2302                           ;main.c: 99: ADCON1 = 0;
  2303  006CAE  0E00               	movlw	0
  2304  006CB0  6EC1               	movwf	193,c	;volatile
  2305  006CB2                     
  2306                           ;main.c: 100: ADCON2bits.ADFM = 0;
  2307  006CB2  9EC0               	bcf	192,7,c	;volatile
  2308  006CB4                     
  2309                           ;main.c: 101: ADCON2bits.ACQT = 0;
  2310  006CB4  0EC7               	movlw	-57
  2311  006CB6  16C0               	andwf	192,f,c	;volatile
  2312  006CB8                     
  2313                           ;main.c: 102: ADCON2bits.ADCS = 0;
  2314  006CB8  0EF8               	movlw	-8
  2315  006CBA  16C0               	andwf	192,f,c	;volatile
  2316  006CBC  0012               	return		;funcret
  2317  006CBE                     __end_of_initialisation:
  2318                           	opt callstack 0
  2319                           
  2320 ;; *************** function _srand *****************
  2321 ;; Defined at:
  2322 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  x               2    0[BANK0 ] unsigned int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		status,2
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2336 ;;      Params:         0       2       0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0
  2339 ;;      Totals:         0       2       0       0       0       0       0
  2340 ;;Total ram usage:        2 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_initialisation
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text13
  2350  006BAE                     __ptext13:
  2351                           	opt callstack 0
  2352  006BAE                     _srand:
  2353                           	opt callstack 29
  2354  006BAE  C0B4  F0D8         	movff	srand@x,_randx
  2355  006BB2  C0B5  F0D9         	movff	srand@x+1,_randx+1
  2356  006BB6  0100               	movlb	0	; () banked
  2357  006BB8  6BDA               	clrf	(_randx+2)& (0+255),b
  2358  006BBA  6BDB               	clrf	(_randx+3)& (0+255),b
  2359  006BBC                     
  2360                           ; BSR set to: 0
  2361  006BBC  0012               	return		;funcret
  2362  006BBE                     __end_of_srand:
  2363                           	opt callstack 0
  2364                           
  2365 ;; *************** function _initTabVue *****************
  2366 ;; Defined at:
  2367 ;;		line 112 in file "main.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  j               1    2[BANK0 ] unsigned char 
  2372 ;;  i               1    3[BANK0 ] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2382 ;;      Params:         0       0       0       0       0       0       0
  2383 ;;      Locals:         0       2       0       0       0       0       0
  2384 ;;      Temps:          0       2       0       0       0       0       0
  2385 ;;      Totals:         0       4       0       0       0       0       0
  2386 ;;Total ram usage:        4 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text14
  2396  0071A0                     __ptext14:
  2397                           	opt callstack 0
  2398  0071A0                     _initTabVue:
  2399                           	opt callstack 30
  2400  0071A0                     
  2401                           ;main.c: 114: for (char i = 0; i < 4; i++) {
  2402  0071A0  0E00               	movlw	0
  2403  0071A2  0100               	movlb	0	; force () banked
  2404  0071A4  6FB7               	movwf	initTabVue@i& (0+255),b
  2405  0071A6                     
  2406                           ; BSR set to: 0
  2407  0071A6  0E03               	movlw	3
  2408  0071A8  0100               	movlb	0	; force () banked
  2409  0071AA  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2410  0071AC  EFDA  F038         	goto	u1101
  2411  0071B0  EFDC  F038         	goto	u1100
  2412  0071B4                     u1101:
  2413  0071B4  EFDE  F038         	goto	l2114
  2414  0071B8                     u1100:
  2415  0071B8  EF25  F039         	goto	l91
  2416  0071BC                     l2114:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 115: for (char j = 0; j < 20; j++) {
  2420  0071BC  0E00               	movlw	0
  2421  0071BE  0100               	movlb	0	; force () banked
  2422  0071C0  6FB6               	movwf	initTabVue@j& (0+255),b
  2423  0071C2                     
  2424                           ; BSR set to: 0
  2425  0071C2  0E13               	movlw	19
  2426  0071C4  0100               	movlb	0	; force () banked
  2427  0071C6  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2428  0071C8  EFE8  F038         	goto	u1111
  2429  0071CC  EFEA  F038         	goto	u1110
  2430  0071D0                     u1111:
  2431  0071D0  EFEC  F038         	goto	l2120
  2432  0071D4                     u1110:
  2433  0071D4  EF0F  F039         	goto	l2126
  2434  0071D8                     l2120:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;main.c: 116: m_tabVue[i][j] = 1;
  2438  0071D8  0100               	movlb	0	; force () banked
  2439  0071DA  51B7               	movf	initTabVue@i& (0+255),w,b
  2440  0071DC  0D15               	mullw	21
  2441  0071DE  0E00               	movlw	low _m_tabVue
  2442  0071E0  0100               	movlb	0	; force () banked
  2443  0071E2  6FB4               	movwf	??_initTabVue& (0+255),b
  2444  0071E4  0E01               	movlw	high _m_tabVue
  2445  0071E6  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  2446  0071E8  50F3               	movf	243,w,c
  2447  0071EA  27B4               	addwf	??_initTabVue& (0+255),f,b
  2448  0071EC  50F4               	movf	244,w,c
  2449  0071EE  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2450  0071F0  0100               	movlb	0	; force () banked
  2451  0071F2  51B6               	movf	initTabVue@j& (0+255),w,b
  2452  0071F4  0100               	movlb	0	; force () banked
  2453  0071F6  25B4               	addwf	??_initTabVue& (0+255),w,b
  2454  0071F8  6ED9               	movwf	fsr2l,c
  2455  0071FA  0100               	movlb	0	; force () banked
  2456  0071FC  0E00               	movlw	0
  2457  0071FE  0100               	movlb	0	; force () banked
  2458  007200  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2459  007202  6EDA               	movwf	fsr2h,c
  2460  007204  0E01               	movlw	1
  2461  007206  6EDF               	movwf	indf2,c
  2462  007208                     
  2463                           ; BSR set to: 0
  2464  007208  0100               	movlb	0	; force () banked
  2465  00720A  2BB6               	incf	initTabVue@j& (0+255),f,b
  2466  00720C                     
  2467                           ; BSR set to: 0
  2468  00720C  0E13               	movlw	19
  2469  00720E  0100               	movlb	0	; force () banked
  2470  007210  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2471  007212  EF0D  F039         	goto	u1121
  2472  007216  EF0F  F039         	goto	u1120
  2473  00721A                     u1121:
  2474  00721A  EFEC  F038         	goto	l2120
  2475  00721E                     u1120:
  2476  00721E                     l2126:
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;main.c: 117: };main.c: 118: m_tabVue[i][20] = 0;
  2480  00721E  0100               	movlb	0	; force () banked
  2481  007220  51B7               	movf	initTabVue@i& (0+255),w,b
  2482  007222  0D15               	mullw	21
  2483  007224  0E14               	movlw	low (_m_tabVue+20)
  2484  007226  24F3               	addwf	243,w,c
  2485  007228  6ED9               	movwf	fsr2l,c
  2486  00722A  0E01               	movlw	high (_m_tabVue+20)
  2487  00722C  20F4               	addwfc	prodh,w,c
  2488  00722E  6EDA               	movwf	fsr2h,c
  2489  007230  0E00               	movlw	0
  2490  007232  6EDF               	movwf	indf2,c
  2491  007234                     
  2492                           ; BSR set to: 0
  2493  007234  0100               	movlb	0	; force () banked
  2494  007236  2BB7               	incf	initTabVue@i& (0+255),f,b
  2495  007238                     
  2496                           ; BSR set to: 0
  2497  007238  0E03               	movlw	3
  2498  00723A  0100               	movlb	0	; force () banked
  2499  00723C  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2500  00723E  EF23  F039         	goto	u1131
  2501  007242  EF25  F039         	goto	u1130
  2502  007246                     u1131:
  2503  007246  EFDE  F038         	goto	l2114
  2504  00724A                     u1130:
  2505  00724A                     l91:
  2506                           
  2507                           ; BSR set to: 0
  2508  00724A  0012               	return		;funcret
  2509  00724C                     __end_of_initTabVue:
  2510                           	opt callstack 0
  2511                           
  2512 ;; *************** function _gagne *****************
  2513 ;; Defined at:
  2514 ;;		line 296 in file "main.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  pMines          2    0[BANK0 ] PTR int 
  2517 ;;		 -> main@nbMine(2), 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  j               1    8[BANK0 ] unsigned char 
  2520 ;;  i               1    7[BANK0 ] unsigned char 
  2521 ;;  nbTuile         1    6[BANK0 ] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      unsigned char 
  2524 ;; Registers used:
  2525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2531 ;;      Params:         0       2       0       0       0       0       0
  2532 ;;      Locals:         0       3       0       0       0       0       0
  2533 ;;      Temps:          0       4       0       0       0       0       0
  2534 ;;      Totals:         0       9       0       0       0       0       0
  2535 ;;Total ram usage:        9 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text15
  2545  0073E0                     __ptext15:
  2546                           	opt callstack 0
  2547  0073E0                     _gagne:
  2548                           	opt callstack 30
  2549  0073E0                     
  2550                           ;main.c: 298: char nbTuile=0;
  2551  0073E0  0E00               	movlw	0
  2552  0073E2  0100               	movlb	0	; force () banked
  2553  0073E4  6FBA               	movwf	gagne@nbTuile& (0+255),b
  2554                           
  2555                           ;main.c: 300: for (char i = 0; i < 4; i++) {
  2556  0073E6  0E00               	movlw	0
  2557  0073E8  0100               	movlb	0	; force () banked
  2558  0073EA  6FBB               	movwf	gagne@i& (0+255),b
  2559  0073EC                     
  2560                           ; BSR set to: 0
  2561  0073EC  0E03               	movlw	3
  2562  0073EE  0100               	movlb	0	; force () banked
  2563  0073F0  65BB               	cpfsgt	gagne@i& (0+255),b
  2564  0073F2  EFFD  F039         	goto	u1361
  2565  0073F6  EFFF  F039         	goto	u1360
  2566  0073FA                     u1361:
  2567  0073FA  EF01  F03A         	goto	l2250
  2568  0073FE                     u1360:
  2569  0073FE  EF45  F03A         	goto	l2266
  2570  007402                     l2250:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;main.c: 301: for (char j = 0; j < 20; j++) {
  2574  007402  0E00               	movlw	0
  2575  007404  0100               	movlb	0	; force () banked
  2576  007406  6FBC               	movwf	gagne@j& (0+255),b
  2577  007408                     
  2578                           ; BSR set to: 0
  2579  007408  0E13               	movlw	19
  2580  00740A  0100               	movlb	0	; force () banked
  2581  00740C  65BC               	cpfsgt	gagne@j& (0+255),b
  2582  00740E  EF0B  F03A         	goto	u1371
  2583  007412  EF0D  F03A         	goto	u1370
  2584  007416                     u1371:
  2585  007416  EF0F  F03A         	goto	l2256
  2586  00741A                     u1370:
  2587  00741A  EF3A  F03A         	goto	l2262
  2588  00741E                     l2256:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;main.c: 302: if(m_tabVue[i][j]==1)
  2592  00741E  0100               	movlb	0	; force () banked
  2593  007420  51BB               	movf	gagne@i& (0+255),w,b
  2594  007422  0D15               	mullw	21
  2595  007424  0E00               	movlw	low _m_tabVue
  2596  007426  0100               	movlb	0	; force () banked
  2597  007428  6FB6               	movwf	??_gagne& (0+255),b
  2598  00742A  0E01               	movlw	high _m_tabVue
  2599  00742C  6FB7               	movwf	(??_gagne+1)& (0+255),b
  2600  00742E  50F3               	movf	243,w,c
  2601  007430  27B6               	addwf	??_gagne& (0+255),f,b
  2602  007432  50F4               	movf	244,w,c
  2603  007434  23B7               	addwfc	(??_gagne+1)& (0+255),f,b
  2604  007436  0100               	movlb	0	; force () banked
  2605  007438  51BC               	movf	gagne@j& (0+255),w,b
  2606  00743A  0100               	movlb	0	; force () banked
  2607  00743C  25B6               	addwf	??_gagne& (0+255),w,b
  2608  00743E  6ED9               	movwf	fsr2l,c
  2609  007440  0100               	movlb	0	; force () banked
  2610  007442  0E00               	movlw	0
  2611  007444  0100               	movlb	0	; force () banked
  2612  007446  21B7               	addwfc	(??_gagne+1)& (0+255),w,b
  2613  007448  6EDA               	movwf	fsr2h,c
  2614  00744A  04DE               	decf	postinc2,w,c
  2615  00744C  A4D8               	btfss	status,2,c
  2616  00744E  EF2B  F03A         	goto	u1381
  2617  007452  EF2D  F03A         	goto	u1380
  2618  007456                     u1381:
  2619  007456  EF2F  F03A         	goto	l170
  2620  00745A                     u1380:
  2621  00745A                     
  2622                           ; BSR set to: 0
  2623                           ;main.c: 303: nbTuile++;
  2624  00745A  0100               	movlb	0	; force () banked
  2625  00745C  2BBA               	incf	gagne@nbTuile& (0+255),f,b
  2626  00745E                     l170:
  2627                           
  2628                           ; BSR set to: 0
  2629  00745E  0100               	movlb	0	; force () banked
  2630  007460  2BBC               	incf	gagne@j& (0+255),f,b
  2631  007462                     
  2632                           ; BSR set to: 0
  2633  007462  0E13               	movlw	19
  2634  007464  0100               	movlb	0	; force () banked
  2635  007466  65BC               	cpfsgt	gagne@j& (0+255),b
  2636  007468  EF38  F03A         	goto	u1391
  2637  00746C  EF3A  F03A         	goto	u1390
  2638  007470                     u1391:
  2639  007470  EF0F  F03A         	goto	l2256
  2640  007474                     u1390:
  2641  007474                     l2262:
  2642                           
  2643                           ; BSR set to: 0
  2644  007474  0100               	movlb	0	; force () banked
  2645  007476  2BBB               	incf	gagne@i& (0+255),f,b
  2646  007478                     
  2647                           ; BSR set to: 0
  2648  007478  0E03               	movlw	3
  2649  00747A  0100               	movlb	0	; force () banked
  2650  00747C  65BB               	cpfsgt	gagne@i& (0+255),b
  2651  00747E  EF43  F03A         	goto	u1401
  2652  007482  EF45  F03A         	goto	u1400
  2653  007486                     u1401:
  2654  007486  EF01  F03A         	goto	l2250
  2655  00748A                     u1400:
  2656  00748A                     l2266:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;main.c: 304: };main.c: 305: };main.c: 306: if (nbTuile == *pMines)
  2660  00748A  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2661  00748E  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2662  007492  0100               	movlb	0	; force () banked
  2663  007494  51BA               	movf	gagne@nbTuile& (0+255),w,b
  2664  007496  0100               	movlb	0	; force () banked
  2665  007498  6FB8               	movwf	(??_gagne+2)& (0+255),b
  2666  00749A  6BB9               	clrf	(??_gagne+3)& (0+255),b
  2667  00749C  50DE               	movf	postinc2,w,c
  2668  00749E  19B8               	xorwf	(??_gagne+2)& (0+255),w,b
  2669  0074A0  E107               	bnz	u1411
  2670  0074A2  50DE               	movf	postinc2,w,c
  2671  0074A4  19B9               	xorwf	(??_gagne+3)& (0+255),w,b
  2672  0074A6  A4D8               	btfss	status,2,c
  2673  0074A8  EF58  F03A         	goto	u1411
  2674  0074AC  EF5A  F03A         	goto	u1410
  2675  0074B0                     u1411:
  2676  0074B0  EF64  F03A         	goto	l2276
  2677  0074B4                     u1410:
  2678  0074B4                     
  2679                           ; BSR set to: 0
  2680                           ;main.c: 307: {;main.c: 308: (*pMines)++;
  2681  0074B4  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2682  0074B8  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2683  0074BC  2ADE               	incf	postinc2,f,c
  2684  0074BE  0E00               	movlw	0
  2685  0074C0  22DD               	addwfc	postdec2,f,c
  2686  0074C2                     
  2687                           ; BSR set to: 0
  2688                           ;main.c: 309: return 1;
  2689  0074C2  0E01               	movlw	1
  2690  0074C4  EF65  F03A         	goto	l172
  2691  0074C8                     l2276:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;main.c: 311: else;main.c: 312: return 0;
  2695  0074C8  0E00               	movlw	0
  2696  0074CA                     l172:
  2697                           
  2698                           ; BSR set to: 0
  2699  0074CA  0012               	return		;funcret
  2700  0074CC                     __end_of_gagne:
  2701                           	opt callstack 0
  2702                           
  2703 ;; *************** function _deplace *****************
  2704 ;; Defined at:
  2705 ;;		line 200 in file "main.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2708 ;;		 -> main@posX(2), 
  2709 ;;  y               2    7[BANK0 ] PTR unsigned char 
  2710 ;;		 -> main@posY(2), 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  analogY         1   11[BANK0 ] unsigned char 
  2713 ;;  analogX         1   10[BANK0 ] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2723 ;;      Params:         0       4       0       0       0       0       0
  2724 ;;      Locals:         0       2       0       0       0       0       0
  2725 ;;      Temps:          0       1       0       0       0       0       0
  2726 ;;      Totals:         0       7       0       0       0       0       0
  2727 ;;Total ram usage:        7 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    4
  2730 ;; This function calls:
  2731 ;;		_getAnalog
  2732 ;;		_lcd_gotoXY
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text16
  2739  007A24                     __ptext16:
  2740                           	opt callstack 0
  2741  007A24                     _deplace:
  2742                           	opt callstack 26
  2743  007A24                     
  2744                           ;main.c: 202: unsigned char analogX = getAnalog(7);
  2745  007A24  0E07               	movlw	7
  2746  007A26  EC15  F036         	call	_getAnalog
  2747  007A2A  0100               	movlb	0	; force () banked
  2748  007A2C  6FBE               	movwf	deplace@analogX& (0+255),b
  2749                           
  2750                           ;main.c: 205: if (0 <= analogX && analogX <= 80)
  2751  007A2E  0E06               	movlw	6
  2752  007A30  EC15  F036         	call	_getAnalog
  2753  007A34  0100               	movlb	0	; force () banked
  2754  007A36  6FBF               	movwf	deplace@analogY& (0+255),b
  2755  007A38                     
  2756                           ; BSR set to: 0
  2757  007A38  0E51               	movlw	81
  2758  007A3A  0100               	movlb	0	; force () banked
  2759  007A3C  61BE               	cpfslt	deplace@analogX& (0+255),b
  2760  007A3E  EF23  F03D         	goto	u1261
  2761  007A42  EF25  F03D         	goto	u1260
  2762  007A46                     u1261:
  2763  007A46  EF46  F03D         	goto	l2202
  2764  007A4A                     u1260:
  2765  007A4A                     
  2766                           ; BSR set to: 0
  2767                           ;main.c: 206: {;main.c: 207: *x = (*x) - 1;
  2768  007A4A  C0B9  FFD9         	movff	deplace@x,fsr2l
  2769  007A4E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2770  007A52  50DF               	movf	indf2,w,c
  2771  007A54  0100               	movlb	0	; force () banked
  2772  007A56  6FBD               	movwf	??_deplace& (0+255),b
  2773  007A58  05BD               	decf	??_deplace& (0+255),w,b
  2774  007A5A  C0B9  FFD9         	movff	deplace@x,fsr2l
  2775  007A5E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2776  007A62  6EDF               	movwf	indf2,c
  2777  007A64                     
  2778                           ; BSR set to: 0
  2779                           ;main.c: 208: if ((*x) <= 0)
  2780  007A64  C0B9  FFD9         	movff	deplace@x,fsr2l
  2781  007A68  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2782  007A6C  50DF               	movf	indf2,w,c
  2783  007A6E  A4D8               	btfss	status,2,c
  2784  007A70  EF3C  F03D         	goto	u1271
  2785  007A74  EF3E  F03D         	goto	u1270
  2786  007A78                     u1271:
  2787  007A78  EF6E  F03D         	goto	l2208
  2788  007A7C                     u1270:
  2789  007A7C                     
  2790                           ; BSR set to: 0
  2791                           ;main.c: 209: *x = 20;
  2792  007A7C  C0B9  FFD9         	movff	deplace@x,fsr2l
  2793  007A80  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2794  007A84  0E14               	movlw	20
  2795  007A86  6EDF               	movwf	indf2,c
  2796  007A88  EF6E  F03D         	goto	l2208
  2797  007A8C                     l2202:
  2798                           
  2799                           ; BSR set to: 0
  2800  007A8C  0EAE               	movlw	174
  2801  007A8E  0100               	movlb	0	; force () banked
  2802  007A90  65BE               	cpfsgt	deplace@analogX& (0+255),b
  2803  007A92  EF4D  F03D         	goto	u1281
  2804  007A96  EF4F  F03D         	goto	u1280
  2805  007A9A                     u1281:
  2806  007A9A  EF6E  F03D         	goto	l2208
  2807  007A9E                     u1280:
  2808  007A9E                     
  2809                           ; BSR set to: 0
  2810                           ;main.c: 211: {;main.c: 212: *x = (*x) + 1;
  2811  007A9E  C0B9  FFD9         	movff	deplace@x,fsr2l
  2812  007AA2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2813  007AA6  50DF               	movf	indf2,w,c
  2814  007AA8  0100               	movlb	0	; force () banked
  2815  007AAA  6FBD               	movwf	??_deplace& (0+255),b
  2816  007AAC  29BD               	incf	??_deplace& (0+255),w,b
  2817  007AAE  C0B9  FFD9         	movff	deplace@x,fsr2l
  2818  007AB2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2819  007AB6  6EDF               	movwf	indf2,c
  2820                           
  2821                           ;main.c: 213: if ((*x) >= 21)
  2822  007AB8  C0B9  FFD9         	movff	deplace@x,fsr2l
  2823  007ABC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2824  007AC0  0E14               	movlw	20
  2825  007AC2  64DF               	cpfsgt	indf2,c
  2826  007AC4  EF66  F03D         	goto	u1291
  2827  007AC8  EF68  F03D         	goto	u1290
  2828  007ACC                     u1291:
  2829  007ACC  EF6E  F03D         	goto	l2208
  2830  007AD0                     u1290:
  2831  007AD0                     
  2832                           ; BSR set to: 0
  2833                           ;main.c: 214: *x = 1;
  2834  007AD0  C0B9  FFD9         	movff	deplace@x,fsr2l
  2835  007AD4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2836  007AD8  0E01               	movlw	1
  2837  007ADA  6EDF               	movwf	indf2,c
  2838  007ADC                     l2208:
  2839                           
  2840                           ; BSR set to: 0
  2841  007ADC  0E51               	movlw	81
  2842  007ADE  0100               	movlb	0	; force () banked
  2843  007AE0  61BF               	cpfslt	deplace@analogY& (0+255),b
  2844  007AE2  EF75  F03D         	goto	u1301
  2845  007AE6  EF77  F03D         	goto	u1300
  2846  007AEA                     u1301:
  2847  007AEA  EF98  F03D         	goto	l2216
  2848  007AEE                     u1300:
  2849  007AEE                     
  2850                           ; BSR set to: 0
  2851                           ;main.c: 218: {;main.c: 219: *y = (*y) - 1;
  2852  007AEE  C0BB  FFD9         	movff	deplace@y,fsr2l
  2853  007AF2  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2854  007AF6  50DF               	movf	indf2,w,c
  2855  007AF8  0100               	movlb	0	; force () banked
  2856  007AFA  6FBD               	movwf	??_deplace& (0+255),b
  2857  007AFC  05BD               	decf	??_deplace& (0+255),w,b
  2858  007AFE  C0BB  FFD9         	movff	deplace@y,fsr2l
  2859  007B02  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2860  007B06  6EDF               	movwf	indf2,c
  2861  007B08                     
  2862                           ; BSR set to: 0
  2863                           ;main.c: 220: if ((*y) <= 0)
  2864  007B08  C0BB  FFD9         	movff	deplace@y,fsr2l
  2865  007B0C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2866  007B10  50DF               	movf	indf2,w,c
  2867  007B12  A4D8               	btfss	status,2,c
  2868  007B14  EF8E  F03D         	goto	u1311
  2869  007B18  EF90  F03D         	goto	u1310
  2870  007B1C                     u1311:
  2871  007B1C  EFC0  F03D         	goto	l2222
  2872  007B20                     u1310:
  2873  007B20                     
  2874                           ; BSR set to: 0
  2875                           ;main.c: 221: *y = 4;
  2876  007B20  C0BB  FFD9         	movff	deplace@y,fsr2l
  2877  007B24  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2878  007B28  0E04               	movlw	4
  2879  007B2A  6EDF               	movwf	indf2,c
  2880  007B2C  EFC0  F03D         	goto	l2222
  2881  007B30                     l2216:
  2882                           
  2883                           ; BSR set to: 0
  2884  007B30  0EAE               	movlw	174
  2885  007B32  0100               	movlb	0	; force () banked
  2886  007B34  65BF               	cpfsgt	deplace@analogY& (0+255),b
  2887  007B36  EF9F  F03D         	goto	u1321
  2888  007B3A  EFA1  F03D         	goto	u1320
  2889  007B3E                     u1321:
  2890  007B3E  EFC0  F03D         	goto	l2222
  2891  007B42                     u1320:
  2892  007B42                     
  2893                           ; BSR set to: 0
  2894                           ;main.c: 223: {;main.c: 224: *y = (*y) + 1;
  2895  007B42  C0BB  FFD9         	movff	deplace@y,fsr2l
  2896  007B46  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2897  007B4A  50DF               	movf	indf2,w,c
  2898  007B4C  0100               	movlb	0	; force () banked
  2899  007B4E  6FBD               	movwf	??_deplace& (0+255),b
  2900  007B50  29BD               	incf	??_deplace& (0+255),w,b
  2901  007B52  C0BB  FFD9         	movff	deplace@y,fsr2l
  2902  007B56  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2903  007B5A  6EDF               	movwf	indf2,c
  2904                           
  2905                           ;main.c: 225: if ((*y) >= 5)
  2906  007B5C  C0BB  FFD9         	movff	deplace@y,fsr2l
  2907  007B60  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2908  007B64  0E04               	movlw	4
  2909  007B66  64DF               	cpfsgt	indf2,c
  2910  007B68  EFB8  F03D         	goto	u1331
  2911  007B6C  EFBA  F03D         	goto	u1330
  2912  007B70                     u1331:
  2913  007B70  EFC0  F03D         	goto	l2222
  2914  007B74                     u1330:
  2915  007B74                     
  2916                           ; BSR set to: 0
  2917                           ;main.c: 226: *y = 1;
  2918  007B74  C0BB  FFD9         	movff	deplace@y,fsr2l
  2919  007B78  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2920  007B7C  0E01               	movlw	1
  2921  007B7E  6EDF               	movwf	indf2,c
  2922  007B80                     l2222:
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;main.c: 227: };main.c: 228: lcd_gotoXY(*x, *y);
  2926  007B80  C0BB  FFD9         	movff	deplace@y,fsr2l
  2927  007B84  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2928  007B88  50DF               	movf	indf2,w,c
  2929  007B8A  0100               	movlb	0	; force () banked
  2930  007B8C  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  2931  007B8E  C0B9  FFD9         	movff	deplace@x,fsr2l
  2932  007B92  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2933  007B96  50DF               	movf	indf2,w,c
  2934  007B98  EC46  F038         	call	_lcd_gotoXY
  2935  007B9C  0012               	return		;funcret
  2936  007B9E                     __end_of_deplace:
  2937                           	opt callstack 0
  2938                           
  2939 ;; *************** function _getAnalog *****************
  2940 ;; Defined at:
  2941 ;;		line 320 in file "main.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  canal           1    wreg     unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  canal           1    1[BANK0 ] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      unsigned char 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2955 ;;      Params:         0       0       0       0       0       0       0
  2956 ;;      Locals:         0       1       0       0       0       0       0
  2957 ;;      Temps:          0       1       0       0       0       0       0
  2958 ;;      Totals:         0       2       0       0       0       0       0
  2959 ;;Total ram usage:        2 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_deplace
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text17
  2969  006C2A                     __ptext17:
  2970                           	opt callstack 0
  2971  006C2A                     _getAnalog:
  2972                           	opt callstack 29
  2973                           
  2974                           ;incstack = 0
  2975                           ;getAnalog@canal stored from wreg
  2976  006C2A  0100               	movlb	0	; force () banked
  2977  006C2C  6FB5               	movwf	getAnalog@canal& (0+255),b
  2978  006C2E                     
  2979                           ;main.c: 322: ADCON0bits.CHS = canal;
  2980  006C2E  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  2981  006C32  0100               	movlb	0	; force () banked
  2982  006C34  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2983  006C36  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2984  006C38  50C2               	movf	194,w,c	;volatile
  2985  006C3A  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2986  006C3C  0BC3               	andlw	-61
  2987  006C3E  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2988  006C40  6EC2               	movwf	194,c	;volatile
  2989  006C42                     
  2990                           ;main.c: 324: ADCON0bits.GO_DONE = 1;
  2991  006C42  82C2               	bsf	194,1,c	;volatile
  2992  006C44                     l176:
  2993  006C44  B2C2               	btfsc	194,1,c	;volatile
  2994  006C46  EF27  F036         	goto	u161
  2995  006C4A  EF29  F036         	goto	u160
  2996  006C4E                     u161:
  2997  006C4E  EF22  F036         	goto	l176
  2998  006C52                     u160:
  2999  006C52                     
  3000                           ;main.c: 326: return ADRESH;
  3001  006C52  50C4               	movf	196,w,c	;volatile
  3002  006C54  0012               	return		;funcret
  3003  006C56                     __end_of_getAnalog:
  3004                           	opt callstack 0
  3005                           
  3006 ;; *************** function _demine *****************
  3007 ;; Defined at:
  3008 ;;		line 239 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  x               1    wreg     unsigned char 
  3011 ;;  y               1   18[BANK0 ] unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  x               1   27[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      unsigned char 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3023 ;;      Params:         0       1       0       0       0       0       0
  3024 ;;      Locals:         0       1       0       0       0       0       0
  3025 ;;      Temps:          0       8       0       0       0       0       0
  3026 ;;      Totals:         0      10       0       0       0       0       0
  3027 ;;Total ram usage:       10 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    7
  3030 ;; This function calls:
  3031 ;;		_afficheTabVue
  3032 ;;		_enleveTuilesAutour
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text18
  3039  0074CC                     __ptext18:
  3040                           	opt callstack 0
  3041  0074CC                     _demine:
  3042                           	opt callstack 23
  3043                           
  3044                           ;incstack = 0
  3045                           ;demine@x stored from wreg
  3046  0074CC  0100               	movlb	0	; force () banked
  3047  0074CE  6FCF               	movwf	demine@x& (0+255),b
  3048  0074D0                     
  3049                           ;main.c: 241: if (m_tabMines[y - 1][x - 1] == 2)
  3050  0074D0  0100               	movlb	0	; force () banked
  3051  0074D2  51C6               	movf	demine@y& (0+255),w,b
  3052  0074D4  0D15               	mullw	21
  3053  0074D6  0EEA               	movlw	234
  3054  0074D8  0100               	movlb	0	; force () banked
  3055  0074DA  6FC7               	movwf	??_demine& (0+255),b
  3056  0074DC  0EFF               	movlw	255
  3057  0074DE  6FC8               	movwf	(??_demine+1)& (0+255),b
  3058  0074E0  0E60               	movlw	low _m_tabMines
  3059  0074E2  6FC9               	movwf	(??_demine+2)& (0+255),b
  3060  0074E4  0E00               	movlw	high _m_tabMines
  3061  0074E6  6FCA               	movwf	(??_demine+3)& (0+255),b
  3062  0074E8  51C7               	movf	??_demine& (0+255),w,b
  3063  0074EA  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3064  0074EC  51C8               	movf	(??_demine+1)& (0+255),w,b
  3065  0074EE  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3066  0074F0  50F3               	movf	243,w,c
  3067  0074F2  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3068  0074F4  50F4               	movf	244,w,c
  3069  0074F6  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3070  0074F8  0100               	movlb	0	; force () banked
  3071  0074FA  51CF               	movf	demine@x& (0+255),w,b
  3072  0074FC  0100               	movlb	0	; force () banked
  3073  0074FE  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3074  007500  6ED9               	movwf	fsr2l,c
  3075  007502  0100               	movlb	0	; force () banked
  3076  007504  0E00               	movlw	0
  3077  007506  0100               	movlb	0	; force () banked
  3078  007508  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3079  00750A  6EDA               	movwf	fsr2h,c
  3080  00750C  0E02               	movlw	2
  3081  00750E  18DE               	xorwf	postinc2,w,c
  3082  007510  A4D8               	btfss	status,2,c
  3083  007512  EF8D  F03A         	goto	u1341
  3084  007516  EF8F  F03A         	goto	u1340
  3085  00751A                     u1341:
  3086  00751A  EF92  F03A         	goto	l2232
  3087  00751E                     u1340:
  3088  00751E                     
  3089                           ; BSR set to: 0
  3090                           ;main.c: 242: return 0;
  3091  00751E  0E00               	movlw	0
  3092  007520  EF02  F03B         	goto	l144
  3093  007524                     l2232:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;main.c: 243: else;main.c: 244: {;main.c: 245: if (m_tabMines[y-1][x-1]==' ')
  3097  007524  0100               	movlb	0	; force () banked
  3098  007526  51C6               	movf	demine@y& (0+255),w,b
  3099  007528  0D15               	mullw	21
  3100  00752A  0EEA               	movlw	234
  3101  00752C  0100               	movlb	0	; force () banked
  3102  00752E  6FC7               	movwf	??_demine& (0+255),b
  3103  007530  0EFF               	movlw	255
  3104  007532  6FC8               	movwf	(??_demine+1)& (0+255),b
  3105  007534  0E60               	movlw	low _m_tabMines
  3106  007536  6FC9               	movwf	(??_demine+2)& (0+255),b
  3107  007538  0E00               	movlw	high _m_tabMines
  3108  00753A  6FCA               	movwf	(??_demine+3)& (0+255),b
  3109  00753C  51C7               	movf	??_demine& (0+255),w,b
  3110  00753E  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3111  007540  51C8               	movf	(??_demine+1)& (0+255),w,b
  3112  007542  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3113  007544  50F3               	movf	243,w,c
  3114  007546  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3115  007548  50F4               	movf	244,w,c
  3116  00754A  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3117  00754C  0100               	movlb	0	; force () banked
  3118  00754E  51CF               	movf	demine@x& (0+255),w,b
  3119  007550  0100               	movlb	0	; force () banked
  3120  007552  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3121  007554  6ED9               	movwf	fsr2l,c
  3122  007556  0100               	movlb	0	; force () banked
  3123  007558  0E00               	movlw	0
  3124  00755A  0100               	movlb	0	; force () banked
  3125  00755C  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3126  00755E  6EDA               	movwf	fsr2h,c
  3127  007560  0E20               	movlw	32
  3128  007562  18DE               	xorwf	postinc2,w,c
  3129  007564  A4D8               	btfss	status,2,c
  3130  007566  EFB7  F03A         	goto	u1351
  3131  00756A  EFB9  F03A         	goto	u1350
  3132  00756E                     u1351:
  3133  00756E  EFC1  F03A         	goto	l2236
  3134  007572                     u1350:
  3135  007572                     
  3136                           ; BSR set to: 0
  3137                           ;main.c: 246: enleveTuilesAutour(x, y);
  3138  007572  C0C6  F0BD         	movff	demine@y,enleveTuilesAutour@y
  3139  007576  0100               	movlb	0	; force () banked
  3140  007578  51CF               	movf	demine@x& (0+255),w,b
  3141  00757A  EC60  F03C         	call	_enleveTuilesAutour
  3142  00757E  EF01  F03B         	goto	l2240
  3143  007582                     l2236:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;main.c: 247: else;main.c: 248: {;main.c: 249: m_tabVue[y-1][x-1]=m_tabMines[y-1][x-1];
  3147  007582  0100               	movlb	0	; force () banked
  3148  007584  51C6               	movf	demine@y& (0+255),w,b
  3149  007586  0D15               	mullw	21
  3150  007588  0EEA               	movlw	234
  3151  00758A  0100               	movlb	0	; force () banked
  3152  00758C  6FC7               	movwf	??_demine& (0+255),b
  3153  00758E  0EFF               	movlw	255
  3154  007590  6FC8               	movwf	(??_demine+1)& (0+255),b
  3155  007592  0E60               	movlw	low _m_tabMines
  3156  007594  6FC9               	movwf	(??_demine+2)& (0+255),b
  3157  007596  0E00               	movlw	high _m_tabMines
  3158  007598  6FCA               	movwf	(??_demine+3)& (0+255),b
  3159  00759A  51C7               	movf	??_demine& (0+255),w,b
  3160  00759C  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3161  00759E  51C8               	movf	(??_demine+1)& (0+255),w,b
  3162  0075A0  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3163  0075A2  50F3               	movf	243,w,c
  3164  0075A4  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3165  0075A6  50F4               	movf	244,w,c
  3166  0075A8  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3167  0075AA  0100               	movlb	0	; force () banked
  3168  0075AC  51CF               	movf	demine@x& (0+255),w,b
  3169  0075AE  0100               	movlb	0	; force () banked
  3170  0075B0  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3171  0075B2  6ED9               	movwf	fsr2l,c
  3172  0075B4  0100               	movlb	0	; force () banked
  3173  0075B6  0E00               	movlw	0
  3174  0075B8  0100               	movlb	0	; force () banked
  3175  0075BA  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3176  0075BC  6EDA               	movwf	fsr2h,c
  3177  0075BE  0100               	movlb	0	; force () banked
  3178  0075C0  51C6               	movf	demine@y& (0+255),w,b
  3179  0075C2  0D15               	mullw	21
  3180  0075C4  0EEA               	movlw	234
  3181  0075C6  0100               	movlb	0	; force () banked
  3182  0075C8  6FCB               	movwf	(??_demine+4)& (0+255),b
  3183  0075CA  0EFF               	movlw	255
  3184  0075CC  6FCC               	movwf	(??_demine+5)& (0+255),b
  3185  0075CE  0E00               	movlw	low _m_tabVue
  3186  0075D0  6FCD               	movwf	(??_demine+6)& (0+255),b
  3187  0075D2  0E01               	movlw	high _m_tabVue
  3188  0075D4  6FCE               	movwf	(??_demine+7)& (0+255),b
  3189  0075D6  51CB               	movf	(??_demine+4)& (0+255),w,b
  3190  0075D8  27CD               	addwf	(??_demine+6)& (0+255),f,b
  3191  0075DA  51CC               	movf	(??_demine+5)& (0+255),w,b
  3192  0075DC  23CE               	addwfc	(??_demine+7)& (0+255),f,b
  3193  0075DE  50F3               	movf	243,w,c
  3194  0075E0  27CD               	addwf	(??_demine+6)& (0+255),f,b
  3195  0075E2  50F4               	movf	244,w,c
  3196  0075E4  23CE               	addwfc	(??_demine+7)& (0+255),f,b
  3197  0075E6  0100               	movlb	0	; force () banked
  3198  0075E8  51CF               	movf	demine@x& (0+255),w,b
  3199  0075EA  0100               	movlb	0	; force () banked
  3200  0075EC  25CD               	addwf	(??_demine+6)& (0+255),w,b
  3201  0075EE  6EE1               	movwf	fsr1l,c
  3202  0075F0  0100               	movlb	0	; force () banked
  3203  0075F2  0E00               	movlw	0
  3204  0075F4  0100               	movlb	0	; force () banked
  3205  0075F6  21CE               	addwfc	(??_demine+7)& (0+255),w,b
  3206  0075F8  6EE2               	movwf	fsr1h,c
  3207  0075FA  CFDF FFE7          	movff	indf2,indf1
  3208  0075FE                     
  3209                           ; BSR set to: 0
  3210                           ;main.c: 250: afficheTabVue();
  3211  0075FE  EC49  F037         	call	_afficheTabVue	;wreg free
  3212  007602                     l2240:
  3213                           
  3214                           ;main.c: 251: };main.c: 252: return 1;
  3215  007602  0E01               	movlw	1
  3216  007604                     l144:
  3217  007604  0012               	return		;funcret
  3218  007606                     __end_of_demine:
  3219                           	opt callstack 0
  3220                           
  3221 ;; *************** function _enleveTuilesAutour *****************
  3222 ;; Defined at:
  3223 ;;		line 262 in file "main.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  x               1    wreg     unsigned char 
  3226 ;;  y               1    9[BANK0 ] unsigned char 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  x               1   15[BANK0 ] unsigned char 
  3229 ;;  i               1   17[BANK0 ] char 
  3230 ;;  j               1   16[BANK0 ] char 
  3231 ;;  mem             1   14[BANK0 ] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3241 ;;      Params:         0       1       0       0       0       0       0
  3242 ;;      Locals:         0       4       0       0       0       0       0
  3243 ;;      Temps:          0       4       0       0       0       0       0
  3244 ;;      Totals:         0       9       0       0       0       0       0
  3245 ;;Total ram usage:        9 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    6
  3248 ;; This function calls:
  3249 ;;		_afficheTabVue
  3250 ;; This function is called by:
  3251 ;;		_demine
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text19
  3256  0078C0                     __ptext19:
  3257                           	opt callstack 0
  3258  0078C0                     _enleveTuilesAutour:
  3259                           	opt callstack 23
  3260                           
  3261                           ;incstack = 0
  3262                           ;enleveTuilesAutour@x stored from wreg
  3263  0078C0  0100               	movlb	0	; force () banked
  3264  0078C2  6FC3               	movwf	enleveTuilesAutour@x& (0+255),b
  3265  0078C4                     
  3266                           ;main.c: 264: signed char i = x - 2;
  3267  0078C4  0100               	movlb	0	; force () banked
  3268  0078C6  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3269  0078C8  0FFE               	addlw	254
  3270  0078CA  0100               	movlb	0	; force () banked
  3271  0078CC  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3272                           
  3273                           ;main.c: 265: signed char j = y - 2;
  3274  0078CE  0100               	movlb	0	; force () banked
  3275  0078D0  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3276  0078D2  0FFE               	addlw	254
  3277  0078D4  0100               	movlb	0	; force () banked
  3278  0078D6  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3279                           
  3280                           ;main.c: 266: char mem;;main.c: 268: if (i < 0)
  3281  0078D8  0100               	movlb	0	; force () banked
  3282  0078DA  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3283  0078DC  EF74  F03C         	goto	u930
  3284  0078E0  EF72  F03C         	goto	u931
  3285  0078E4                     u931:
  3286  0078E4  EF77  F03C         	goto	l1964
  3287  0078E8                     u930:
  3288  0078E8                     
  3289                           ; BSR set to: 0
  3290                           ;main.c: 269: i = 0;
  3291  0078E8  0E00               	movlw	0
  3292  0078EA  0100               	movlb	0	; force () banked
  3293  0078EC  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3294  0078EE                     l1964:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;main.c: 270: if (j < 0)
  3298  0078EE  0100               	movlb	0	; force () banked
  3299  0078F0  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3300  0078F2  EF7F  F03C         	goto	u940
  3301  0078F6  EF7D  F03C         	goto	u941
  3302  0078FA                     u941:
  3303  0078FA  EF82  F03C         	goto	l1968
  3304  0078FE                     u940:
  3305  0078FE                     
  3306                           ; BSR set to: 0
  3307                           ;main.c: 271: j = 0;
  3308  0078FE  0E00               	movlw	0
  3309  007900  0100               	movlb	0	; force () banked
  3310  007902  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3311  007904                     l1968:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;main.c: 272: mem=i;
  3315  007904  C0C5  F0C2         	movff	enleveTuilesAutour@i,enleveTuilesAutour@mem
  3316                           
  3317                           ;main.c: 275: while(j <= y && j<4)
  3318  007908  EFF5  F03C         	goto	l1982
  3319  00790C                     l153:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;main.c: 276: {;main.c: 277: i=mem;
  3323  00790C  C0C2  F0C5         	movff	enleveTuilesAutour@mem,enleveTuilesAutour@i
  3324                           
  3325                           ;main.c: 278: while(i<=x && i<20)
  3326  007910  EFD9  F03C         	goto	l1976
  3327  007914                     l1970:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;main.c: 279: {;main.c: 280: if(m_tabMines[j][i]!=2)
  3331  007914  0100               	movlb	0	; force () banked
  3332  007916  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3333  007918  0D15               	mullw	21
  3334  00791A  0E60               	movlw	low _m_tabMines
  3335  00791C  0100               	movlb	0	; force () banked
  3336  00791E  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3337  007920  0E00               	movlw	high _m_tabMines
  3338  007922  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3339  007924  50F3               	movf	243,w,c
  3340  007926  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3341  007928  50F4               	movf	244,w,c
  3342  00792A  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3343  00792C  0100               	movlb	0	; force () banked
  3344  00792E  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3345  007930  0100               	movlb	0	; force () banked
  3346  007932  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3347  007934  6ED9               	movwf	fsr2l,c
  3348  007936  0100               	movlb	0	; force () banked
  3349  007938  0E00               	movlw	0
  3350  00793A  0100               	movlb	0	; force () banked
  3351  00793C  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3352  00793E  6EDA               	movwf	fsr2h,c
  3353  007940  0E02               	movlw	2
  3354  007942  18DE               	xorwf	postinc2,w,c
  3355  007944  B4D8               	btfsc	status,2,c
  3356  007946  EFA7  F03C         	goto	u951
  3357  00794A  EFA9  F03C         	goto	u950
  3358  00794E                     u951:
  3359  00794E  EFD7  F03C         	goto	l1974
  3360  007952                     u950:
  3361  007952                     
  3362                           ; BSR set to: 0
  3363                           ;main.c: 281: m_tabVue[j][i]=m_tabMines[j][i];
  3364  007952  0100               	movlb	0	; force () banked
  3365  007954  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3366  007956  0D15               	mullw	21
  3367  007958  0E60               	movlw	low _m_tabMines
  3368  00795A  0100               	movlb	0	; force () banked
  3369  00795C  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3370  00795E  0E00               	movlw	high _m_tabMines
  3371  007960  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3372  007962  50F3               	movf	243,w,c
  3373  007964  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3374  007966  50F4               	movf	244,w,c
  3375  007968  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3376  00796A  0100               	movlb	0	; force () banked
  3377  00796C  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3378  00796E  0100               	movlb	0	; force () banked
  3379  007970  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3380  007972  6ED9               	movwf	fsr2l,c
  3381  007974  0100               	movlb	0	; force () banked
  3382  007976  0E00               	movlw	0
  3383  007978  0100               	movlb	0	; force () banked
  3384  00797A  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3385  00797C  6EDA               	movwf	fsr2h,c
  3386  00797E  0100               	movlb	0	; force () banked
  3387  007980  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3388  007982  0D15               	mullw	21
  3389  007984  0E00               	movlw	low _m_tabVue
  3390  007986  0100               	movlb	0	; force () banked
  3391  007988  6FC0               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3392  00798A  0E01               	movlw	high _m_tabVue
  3393  00798C  6FC1               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3394  00798E  50F3               	movf	243,w,c
  3395  007990  27C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3396  007992  50F4               	movf	244,w,c
  3397  007994  23C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3398  007996  0100               	movlb	0	; force () banked
  3399  007998  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3400  00799A  0100               	movlb	0	; force () banked
  3401  00799C  25C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3402  00799E  6EE1               	movwf	fsr1l,c
  3403  0079A0  0100               	movlb	0	; force () banked
  3404  0079A2  0E00               	movlw	0
  3405  0079A4  0100               	movlb	0	; force () banked
  3406  0079A6  21C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3407  0079A8  6EE2               	movwf	fsr1h,c
  3408  0079AA  CFDF FFE7          	movff	indf2,indf1
  3409  0079AE                     l1974:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;main.c: 282: i++;
  3413  0079AE  0100               	movlb	0	; force () banked
  3414  0079B0  2BC5               	incf	enleveTuilesAutour@i& (0+255),f,b
  3415  0079B2                     l1976:
  3416                           
  3417                           ; BSR set to: 0
  3418  0079B2  0100               	movlb	0	; force () banked
  3419  0079B4  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3420  0079B6  0100               	movlb	0	; force () banked
  3421  0079B8  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3422  0079BA  EFE8  F03C         	goto	u960
  3423  0079BE  0AFF               	xorlw	255
  3424  0079C0  25C5               	addwf	enleveTuilesAutour@i& (0+255),w,b
  3425  0079C2  B0D8               	btfsc	status,0,c
  3426  0079C4  EFE6  F03C         	goto	u961
  3427  0079C8  EFE8  F03C         	goto	u960
  3428  0079CC                     u961:
  3429  0079CC  EFF3  F03C         	goto	l1980
  3430  0079D0                     u960:
  3431  0079D0                     
  3432                           ; BSR set to: 0
  3433  0079D0  0100               	movlb	0	; force () banked
  3434  0079D2  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3435  0079D4  0A80               	xorlw	128
  3436  0079D6  0F6C               	addlw	-148
  3437  0079D8  A0D8               	btfss	status,0,c
  3438  0079DA  EFF1  F03C         	goto	u971
  3439  0079DE  EFF3  F03C         	goto	u970
  3440  0079E2                     u971:
  3441  0079E2  EF8A  F03C         	goto	l1970
  3442  0079E6                     u970:
  3443  0079E6                     l1980:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;main.c: 283: };main.c: 284: j++;
  3447  0079E6  0100               	movlb	0	; force () banked
  3448  0079E8  2BC4               	incf	enleveTuilesAutour@j& (0+255),f,b
  3449  0079EA                     l1982:
  3450                           
  3451                           ; BSR set to: 0
  3452  0079EA  0100               	movlb	0	; force () banked
  3453  0079EC  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3454  0079EE  0100               	movlb	0	; force () banked
  3455  0079F0  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3456  0079F2  EF04  F03D         	goto	u980
  3457  0079F6  0AFF               	xorlw	255
  3458  0079F8  25C4               	addwf	enleveTuilesAutour@j& (0+255),w,b
  3459  0079FA  B0D8               	btfsc	status,0,c
  3460  0079FC  EF02  F03D         	goto	u981
  3461  007A00  EF04  F03D         	goto	u980
  3462  007A04                     u981:
  3463  007A04  EF0F  F03D         	goto	l1986
  3464  007A08                     u980:
  3465  007A08                     
  3466                           ; BSR set to: 0
  3467  007A08  0100               	movlb	0	; force () banked
  3468  007A0A  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3469  007A0C  0A80               	xorlw	128
  3470  007A0E  0F7C               	addlw	-132
  3471  007A10  A0D8               	btfss	status,0,c
  3472  007A12  EF0D  F03D         	goto	u991
  3473  007A16  EF0F  F03D         	goto	u990
  3474  007A1A                     u991:
  3475  007A1A  EF86  F03C         	goto	l153
  3476  007A1E                     u990:
  3477  007A1E                     l1986:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;main.c: 285: };main.c: 286: afficheTabVue();
  3481  007A1E  EC49  F037         	call	_afficheTabVue	;wreg free
  3482  007A22  0012               	return		;funcret
  3483  007A24                     __end_of_enleveTuilesAutour:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _afficheTabVue *****************
  3487 ;; Defined at:
  3488 ;;		line 335 in file "main.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  i               1    8[BANK0 ] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3502 ;;      Params:         0       0       0       0       0       0       0
  3503 ;;      Locals:         0       1       0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0
  3505 ;;      Totals:         0       1       0       0       0       0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    5
  3509 ;; This function calls:
  3510 ;;		_lcd_gotoXY
  3511 ;;		_lcd_putMessage
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;;		_demine
  3515 ;;		_enleveTuilesAutour
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text20
  3520  006E92                     __ptext20:
  3521                           	opt callstack 0
  3522  006E92                     _afficheTabVue:
  3523                           	opt callstack 23
  3524  006E92                     
  3525                           ;main.c: 337: for (char i = 0; i < 4; i++) {
  3526  006E92  0E00               	movlw	0
  3527  006E94  0100               	movlb	0	; force () banked
  3528  006E96  6FBC               	movwf	afficheTabVue@i& (0+255),b
  3529  006E98                     
  3530                           ; BSR set to: 0
  3531  006E98  0E03               	movlw	3
  3532  006E9A  0100               	movlb	0	; force () banked
  3533  006E9C  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3534  006E9E  EF53  F037         	goto	u821
  3535  006EA2  EF55  F037         	goto	u820
  3536  006EA6                     u821:
  3537  006EA6  EF57  F037         	goto	l1892
  3538  006EAA                     u820:
  3539  006EAA  EF75  F037         	goto	l184
  3540  006EAE                     l1892:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;main.c: 338: lcd_gotoXY(1, i + 1);
  3544  006EAE  0100               	movlb	0	; force () banked
  3545  006EB0  29BC               	incf	afficheTabVue@i& (0+255),w,b
  3546  006EB2  0100               	movlb	0	; force () banked
  3547  006EB4  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3548  006EB6  0E01               	movlw	1
  3549  006EB8  EC46  F038         	call	_lcd_gotoXY
  3550  006EBC                     
  3551                           ;main.c: 339: lcd_putMessage(m_tabVue[i]);
  3552  006EBC  0100               	movlb	0	; force () banked
  3553  006EBE  51BC               	movf	afficheTabVue@i& (0+255),w,b
  3554  006EC0  0D15               	mullw	21
  3555  006EC2  0E00               	movlw	low _m_tabVue
  3556  006EC4  24F3               	addwf	243,w,c
  3557  006EC6  0100               	movlb	0	; force () banked
  3558  006EC8  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3559  006ECA  0E01               	movlw	high _m_tabVue
  3560  006ECC  20F4               	addwfc	prodh,w,c
  3561  006ECE  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3562  006ED0  ECA0  F036         	call	_lcd_putMessage	;wreg free
  3563  006ED4  0100               	movlb	0	; force () banked
  3564  006ED6  2BBC               	incf	afficheTabVue@i& (0+255),f,b
  3565  006ED8                     
  3566                           ; BSR set to: 0
  3567  006ED8  0E03               	movlw	3
  3568  006EDA  0100               	movlb	0	; force () banked
  3569  006EDC  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3570  006EDE  EF73  F037         	goto	u831
  3571  006EE2  EF75  F037         	goto	u830
  3572  006EE6                     u831:
  3573  006EE6  EF57  F037         	goto	l1892
  3574  006EEA                     u830:
  3575  006EEA                     l184:
  3576                           
  3577                           ; BSR set to: 0
  3578  006EEA  0012               	return		;funcret
  3579  006EEC                     __end_of_afficheTabVue:
  3580                           	opt callstack 0
  3581                           
  3582 ;; *************** function _afficheTabMines *****************
  3583 ;; Defined at:
  3584 ;;		line 348 in file "main.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  i               1    8[BANK0 ] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3598 ;;      Params:         0       0       0       0       0       0       0
  3599 ;;      Locals:         0       1       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0
  3601 ;;      Totals:         0       1       0       0       0       0       0
  3602 ;;Total ram usage:        1 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    5
  3605 ;; This function calls:
  3606 ;;		_lcd_gotoXY
  3607 ;;		_lcd_putMessage
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text21
  3614  006E38                     __ptext21:
  3615                           	opt callstack 0
  3616  006E38                     _afficheTabMines:
  3617                           	opt callstack 25
  3618  006E38                     
  3619                           ;main.c: 350: for (char i = 0; i < 4; i++) {
  3620  006E38  0E00               	movlw	0
  3621  006E3A  0100               	movlb	0	; force () banked
  3622  006E3C  6FBC               	movwf	afficheTabMines@i& (0+255),b
  3623  006E3E                     
  3624                           ; BSR set to: 0
  3625  006E3E  0E03               	movlw	3
  3626  006E40  0100               	movlb	0	; force () banked
  3627  006E42  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3628  006E44  EF26  F037         	goto	u1421
  3629  006E48  EF28  F037         	goto	u1420
  3630  006E4C                     u1421:
  3631  006E4C  EF2A  F037         	goto	l2286
  3632  006E50                     u1420:
  3633  006E50  EF48  F037         	goto	l189
  3634  006E54                     l2286:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;main.c: 351: lcd_gotoXY(1, i + 1);
  3638  006E54  0100               	movlb	0	; force () banked
  3639  006E56  29BC               	incf	afficheTabMines@i& (0+255),w,b
  3640  006E58  0100               	movlb	0	; force () banked
  3641  006E5A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3642  006E5C  0E01               	movlw	1
  3643  006E5E  EC46  F038         	call	_lcd_gotoXY
  3644  006E62                     
  3645                           ;main.c: 352: lcd_putMessage(m_tabMines[i]);
  3646  006E62  0100               	movlb	0	; force () banked
  3647  006E64  51BC               	movf	afficheTabMines@i& (0+255),w,b
  3648  006E66  0D15               	mullw	21
  3649  006E68  0E60               	movlw	low _m_tabMines
  3650  006E6A  24F3               	addwf	243,w,c
  3651  006E6C  0100               	movlb	0	; force () banked
  3652  006E6E  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3653  006E70  0E00               	movlw	high _m_tabMines
  3654  006E72  20F4               	addwfc	prodh,w,c
  3655  006E74  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3656  006E76  ECA0  F036         	call	_lcd_putMessage	;wreg free
  3657  006E7A  0100               	movlb	0	; force () banked
  3658  006E7C  2BBC               	incf	afficheTabMines@i& (0+255),f,b
  3659  006E7E                     
  3660                           ; BSR set to: 0
  3661  006E7E  0E03               	movlw	3
  3662  006E80  0100               	movlb	0	; force () banked
  3663  006E82  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3664  006E84  EF46  F037         	goto	u1431
  3665  006E88  EF48  F037         	goto	u1430
  3666  006E8C                     u1431:
  3667  006E8C  EF2A  F037         	goto	l2286
  3668  006E90                     u1430:
  3669  006E90                     l189:
  3670                           
  3671                           ; BSR set to: 0
  3672  006E90  0012               	return		;funcret
  3673  006E92                     __end_of_afficheTabMines:
  3674                           	opt callstack 0
  3675                           
  3676 ;; *************** function _lcd_putMessage *****************
  3677 ;; Defined at:
  3678 ;;		line 387 in file "Lcd4Lignes.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
  3681 ;;		 -> m_tabMines(84), m_tabVue(84), 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  j               1    7[BANK0 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3693 ;;      Params:         0       2       0       0       0       0       0
  3694 ;;      Locals:         0       1       0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0
  3696 ;;      Totals:         0       3       0       0       0       0       0
  3697 ;;Total ram usage:        3 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    4
  3700 ;; This function calls:
  3701 ;;		_lcd_ecritChar
  3702 ;; This function is called by:
  3703 ;;		_afficheTabVue
  3704 ;;		_afficheTabMines
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text22
  3709  006D40                     __ptext22:
  3710                           	opt callstack 0
  3711  006D40                     _lcd_putMessage:
  3712                           	opt callstack 23
  3713  006D40                     
  3714                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  3715  006D40  0E00               	movlw	0
  3716  006D42  0100               	movlb	0	; force () banked
  3717  006D44  6FBB               	movwf	lcd_putMessage@j& (0+255),b
  3718  006D46  EFB4  F036         	goto	l1884
  3719  006D4A                     l1880:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  3723  006D4A  0100               	movlb	0	; force () banked
  3724  006D4C  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  3725  006D4E  0100               	movlb	0	; force () banked
  3726  006D50  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3727  006D52  6ED9               	movwf	fsr2l,c
  3728  006D54  0100               	movlb	0	; force () banked
  3729  006D56  0E00               	movlw	0
  3730  006D58  0100               	movlb	0	; force () banked
  3731  006D5A  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3732  006D5C  6EDA               	movwf	fsr2h,c
  3733  006D5E  50DF               	movf	indf2,w,c
  3734  006D60  ECC7  F036         	call	_lcd_ecritChar
  3735  006D64  0100               	movlb	0	; force () banked
  3736  006D66  2BBB               	incf	lcd_putMessage@j& (0+255),f,b
  3737  006D68                     l1884:
  3738                           
  3739                           ; BSR set to: 0
  3740  006D68  0100               	movlb	0	; force () banked
  3741  006D6A  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  3742  006D6C  0100               	movlb	0	; force () banked
  3743  006D6E  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3744  006D70  6ED9               	movwf	fsr2l,c
  3745  006D72  0100               	movlb	0	; force () banked
  3746  006D74  0E00               	movlw	0
  3747  006D76  0100               	movlb	0	; force () banked
  3748  006D78  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3749  006D7A  6EDA               	movwf	fsr2h,c
  3750  006D7C  50DF               	movf	indf2,w,c
  3751  006D7E  A4D8               	btfss	status,2,c
  3752  006D80  EFC4  F036         	goto	u811
  3753  006D84  EFC6  F036         	goto	u810
  3754  006D88                     u811:
  3755  006D88  EFA5  F036         	goto	l1880
  3756  006D8C                     u810:
  3757  006D8C                     
  3758                           ; BSR set to: 0
  3759  006D8C  0012               	return		;funcret
  3760  006D8E                     __end_of_lcd_putMessage:
  3761                           	opt callstack 0
  3762                           
  3763 ;; *************** function _lcd_ecritChar *****************
  3764 ;; Defined at:
  3765 ;;		line 359 in file "Lcd4Lignes.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  car             1    wreg     unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  car             1    3[BANK0 ] unsigned char 
  3770 ;;  posRam          1    4[BANK0 ] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3780 ;;      Params:         0       0       0       0       0       0       0
  3781 ;;      Locals:         0       2       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0
  3783 ;;      Totals:         0       2       0       0       0       0       0
  3784 ;;Total ram usage:        2 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    3
  3787 ;; This function calls:
  3788 ;;		_lcd_wrCom
  3789 ;;		_lcd_wrData
  3790 ;; This function is called by:
  3791 ;;		_lcd_putMessage
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text23
  3796  006D8E                     __ptext23:
  3797                           	opt callstack 0
  3798  006D8E                     _lcd_ecritChar:
  3799                           	opt callstack 23
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;incstack = 0
  3803                           ;lcd_ecritChar@car stored from wreg
  3804  006D8E  0100               	movlb	0	; force () banked
  3805  006D90  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  3806  006D92                     
  3807                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  3808  006D92  0100               	movlb	0	; force () banked
  3809  006D94  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  3810  006D96  EC2B  F036         	call	_lcd_wrData
  3811  006D9A  0100               	movlb	0	; force () banked
  3812  006D9C  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  3813                           
  3814                           ;Lcd4Lignes.c: 364: switch(posRam)
  3815  006D9E  EFE0  F036         	goto	l1862
  3816  006DA2                     l1854:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  3820  006DA2  0EC0               	movlw	192
  3821  006DA4  ECDA  F037         	call	_lcd_wrCom
  3822                           
  3823                           ;Lcd4Lignes.c: 368: break;
  3824  006DA8  EFF0  F036         	goto	l263
  3825  006DAC                     l1856:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  3829  006DAC  0E94               	movlw	148
  3830  006DAE  ECDA  F037         	call	_lcd_wrCom
  3831                           
  3832                           ;Lcd4Lignes.c: 371: break;
  3833  006DB2  EFF0  F036         	goto	l263
  3834  006DB6                     l1858:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  3838  006DB6  0ED4               	movlw	212
  3839  006DB8  ECDA  F037         	call	_lcd_wrCom
  3840                           
  3841                           ;Lcd4Lignes.c: 374: break;
  3842  006DBC  EFF0  F036         	goto	l263
  3843  006DC0                     l1862:
  3844                           
  3845                           ; BSR set to: 0
  3846  006DC0  0100               	movlb	0	; force () banked
  3847  006DC2  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3848                           
  3849                           ; Switch size 1, requested type "simple"
  3850                           ; Number of cases is 3, Range of values is 148 to 212
  3851                           ; switch strategies available:
  3852                           ; Name         Instructions Cycles
  3853                           ; simple_byte           10     6 (average)
  3854                           ;	Chosen strategy is simple_byte
  3855  006DC4  0A94               	xorlw	148	; case 148
  3856  006DC6  B4D8               	btfsc	status,2,c
  3857  006DC8  EFD1  F036         	goto	l1854
  3858  006DCC  0A54               	xorlw	84	; case 192
  3859  006DCE  B4D8               	btfsc	status,2,c
  3860  006DD0  EFDB  F036         	goto	l1858
  3861  006DD4  0A14               	xorlw	20	; case 212
  3862  006DD6  B4D8               	btfsc	status,2,c
  3863  006DD8  EFD6  F036         	goto	l1856
  3864  006DDC  EFF0  F036         	goto	l263
  3865  006DE0                     l263:
  3866  006DE0  0012               	return		;funcret
  3867  006DE2                     __end_of_lcd_ecritChar:
  3868                           	opt callstack 0
  3869                           
  3870 ;; *************** function _lcd_wrData *****************
  3871 ;; Defined at:
  3872 ;;		line 188 in file "Lcd4Lignes.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  caractere       1    wreg     unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  caractere       1    2[BANK0 ] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      unsigned char 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3886 ;;      Params:         0       0       0       0       0       0       0
  3887 ;;      Locals:         0       1       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0
  3889 ;;      Totals:         0       1       0       0       0       0       0
  3890 ;;Total ram usage:        1 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		_lcd_busy
  3895 ;;		_lcd_ecrireDonnees
  3896 ;;		_lcd_strobeEnableBit
  3897 ;; This function is called by:
  3898 ;;		_lcd_ecritChar
  3899 ;;		_lcd_initCGRam
  3900 ;;		_lcd_effaceChar
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text24
  3905  006C56                     __ptext24:
  3906                           	opt callstack 0
  3907  006C56                     _lcd_wrData:
  3908                           	opt callstack 26
  3909                           
  3910                           ;incstack = 0
  3911                           ;lcd_wrData@caractere stored from wreg
  3912  006C56  0100               	movlb	0	; force () banked
  3913  006C58  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  3914  006C5A                     
  3915                           ;Lcd4Lignes.c: 190: lcd_busy();
  3916  006C5A  EC7F  F036         	call	_lcd_busy	;wreg free
  3917  006C5E                     
  3918                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  3919  006C5E  0E00               	movlw	0
  3920  006C60  6E95               	movwf	149,c	;volatile
  3921  006C62                     
  3922                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  3923  006C62  8080               	bsf	128,0,c	;volatile
  3924  006C64                     
  3925                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  3926  006C64  9280               	bcf	128,1,c	;volatile
  3927  006C66                     
  3928                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  3929  006C66  0100               	movlb	0	; force () banked
  3930  006C68  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  3931  006C6A  0B0F               	andlw	15
  3932  006C6C  ECDF  F035         	call	_lcd_ecrireDonnees
  3933  006C70                     
  3934                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  3935  006C70  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  3936  006C74                     
  3937                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  3938  006C74  0100               	movlb	0	; force () banked
  3939  006C76  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  3940  006C78  ECDF  F035         	call	_lcd_ecrireDonnees
  3941  006C7C                     
  3942                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  3943  006C7C  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  3944  006C80                     
  3945                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  3946  006C80  0E0F               	movlw	15
  3947  006C82  6E95               	movwf	149,c	;volatile
  3948  006C84                     
  3949                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3950                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  3951  006C84  EC7F  F036         	call	_lcd_busy	;wreg free
  3952  006C88  0012               	return		;funcret
  3953  006C8A                     __end_of_lcd_wrData:
  3954                           	opt callstack 0
  3955                           
  3956 ;; *************** function _lcd_gotoXY *****************
  3957 ;; Defined at:
  3958 ;;		line 314 in file "Lcd4Lignes.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  x               1    wreg     unsigned char 
  3961 ;;  y               1    3[BANK0 ] unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  x               1    4[BANK0 ] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3973 ;;      Params:         0       1       0       0       0       0       0
  3974 ;;      Locals:         0       1       0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0
  3976 ;;      Totals:         0       2       0       0       0       0       0
  3977 ;;Total ram usage:        2 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    3
  3980 ;; This function calls:
  3981 ;;		_lcd_wrCom
  3982 ;; This function is called by:
  3983 ;;		_deplace
  3984 ;;		_afficheTabVue
  3985 ;;		_afficheTabMines
  3986 ;;		_lcd_effaceLigne
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text25
  3991  00708C                     __ptext25:
  3992                           	opt callstack 0
  3993  00708C                     _lcd_gotoXY:
  3994                           	opt callstack 26
  3995                           
  3996                           ;incstack = 0
  3997                           ;lcd_gotoXY@x stored from wreg
  3998  00708C  0100               	movlb	0	; force () banked
  3999  00708E  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  4000  007090                     
  4001                           ;Lcd4Lignes.c: 316: switch(y)
  4002  007090  EF6A  F038         	goto	l1876
  4003  007094                     l1866:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4007  007094  0100               	movlb	0	; force () banked
  4008  007096  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4009  007098  0F7F               	addlw	127
  4010  00709A  0980               	iorlw	128
  4011  00709C  ECDA  F037         	call	_lcd_wrCom
  4012                           
  4013                           ;Lcd4Lignes.c: 320: break;
  4014  0070A0  EF7E  F038         	goto	l252
  4015  0070A4                     l1868:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4019  0070A4  0100               	movlb	0	; force () banked
  4020  0070A6  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4021  0070A8  0FBF               	addlw	191
  4022  0070AA  0980               	iorlw	128
  4023  0070AC  ECDA  F037         	call	_lcd_wrCom
  4024                           
  4025                           ;Lcd4Lignes.c: 323: break;
  4026  0070B0  EF7E  F038         	goto	l252
  4027  0070B4                     l1870:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4031  0070B4  0100               	movlb	0	; force () banked
  4032  0070B6  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4033  0070B8  0F93               	addlw	147
  4034  0070BA  0980               	iorlw	128
  4035  0070BC  ECDA  F037         	call	_lcd_wrCom
  4036                           
  4037                           ;Lcd4Lignes.c: 326: break;
  4038  0070C0  EF7E  F038         	goto	l252
  4039  0070C4                     l1872:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4043  0070C4  0100               	movlb	0	; force () banked
  4044  0070C6  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4045  0070C8  0FD3               	addlw	211
  4046  0070CA  0980               	iorlw	128
  4047  0070CC  ECDA  F037         	call	_lcd_wrCom
  4048                           
  4049                           ;Lcd4Lignes.c: 329: break;
  4050  0070D0  EF7E  F038         	goto	l252
  4051  0070D4                     l1876:
  4052  0070D4  0100               	movlb	0	; force () banked
  4053  0070D6  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  4054                           
  4055                           ; Switch size 1, requested type "simple"
  4056                           ; Number of cases is 4, Range of values is 1 to 4
  4057                           ; switch strategies available:
  4058                           ; Name         Instructions Cycles
  4059                           ; simple_byte           13     7 (average)
  4060                           ;	Chosen strategy is simple_byte
  4061  0070D8  0A01               	xorlw	1	; case 1
  4062  0070DA  B4D8               	btfsc	status,2,c
  4063  0070DC  EF4A  F038         	goto	l1866
  4064  0070E0  0A03               	xorlw	3	; case 2
  4065  0070E2  B4D8               	btfsc	status,2,c
  4066  0070E4  EF52  F038         	goto	l1868
  4067  0070E8  0A01               	xorlw	1	; case 3
  4068  0070EA  B4D8               	btfsc	status,2,c
  4069  0070EC  EF5A  F038         	goto	l1870
  4070  0070F0  0A07               	xorlw	7	; case 4
  4071  0070F2  B4D8               	btfsc	status,2,c
  4072  0070F4  EF62  F038         	goto	l1872
  4073  0070F8  EF7E  F038         	goto	l252
  4074  0070FC                     l252:
  4075  0070FC  0012               	return		;funcret
  4076  0070FE                     __end_of_lcd_gotoXY:
  4077                           	opt callstack 0
  4078                           
  4079 ;; *************** function _lcd_wrCom *****************
  4080 ;; Defined at:
  4081 ;;		line 156 in file "Lcd4Lignes.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  commande        1    wreg     unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  commande        1    2[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      unsigned char 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4095 ;;      Params:         0       0       0       0       0       0       0
  4096 ;;      Locals:         0       1       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0
  4098 ;;      Totals:         0       1       0       0       0       0       0
  4099 ;;Total ram usage:        1 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    2
  4102 ;; This function calls:
  4103 ;;		_lcd_busy
  4104 ;;		_lcd_ecrireDonnees
  4105 ;;		_lcd_strobeEnableBit
  4106 ;; This function is called by:
  4107 ;;		_lcd_init
  4108 ;;		_lcd_curseurHome
  4109 ;;		_lcd_gotoXY
  4110 ;;		_lcd_ecritChar
  4111 ;;		_lcd_initCGRam
  4112 ;;		_lcd_effaceAffichage
  4113 ;;		_lcd_cacheCurseur
  4114 ;;		_lcd_montreCurseur
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text26
  4119  006FB4                     __ptext26:
  4120                           	opt callstack 0
  4121  006FB4                     _lcd_wrCom:
  4122                           	opt callstack 27
  4123                           
  4124                           ;incstack = 0
  4125                           ;lcd_wrCom@commande stored from wreg
  4126  006FB4  0100               	movlb	0	; force () banked
  4127  006FB6  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  4128  006FB8                     
  4129                           ;Lcd4Lignes.c: 158: lcd_busy();
  4130  006FB8  EC7F  F036         	call	_lcd_busy	;wreg free
  4131  006FBC                     
  4132                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4133  006FBC  0E00               	movlw	0
  4134  006FBE  6E95               	movwf	149,c	;volatile
  4135  006FC0                     
  4136                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4137  006FC0  9080               	bcf	128,0,c	;volatile
  4138  006FC2                     
  4139                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4140  006FC2  9280               	bcf	128,1,c	;volatile
  4141  006FC4                     
  4142                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4143  006FC4  0100               	movlb	0	; force () banked
  4144  006FC6  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  4145  006FC8  0B0F               	andlw	15
  4146  006FCA  ECDF  F035         	call	_lcd_ecrireDonnees
  4147  006FCE                     
  4148                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4149  006FCE  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  4150  006FD2                     
  4151                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4152  006FD2  0100               	movlb	0	; force () banked
  4153  006FD4  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  4154  006FD6  ECDF  F035         	call	_lcd_ecrireDonnees
  4155  006FDA                     
  4156                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4157  006FDA  ECCF  F035         	call	_lcd_strobeEnableBit	;wreg free
  4158  006FDE                     
  4159                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4160  006FDE  0E03               	movlw	3
  4161  006FE0                     u1557:
  4162  006FE0  2EE8               	decfsz	wreg,f,c
  4163  006FE2  D7FE               	bra	u1557
  4164  006FE4  F000               	nop	
  4165  006FE6                     
  4166                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4167  006FE6  0100               	movlb	0	; force () banked
  4168  006FE8  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  4169  006FEA  B4D8               	btfsc	status,2,c
  4170  006FEC  EFFA  F037         	goto	u791
  4171  006FF0  EFFC  F037         	goto	u790
  4172  006FF4                     u791:
  4173  006FF4  EF06  F038         	goto	l1814
  4174  006FF8                     u790:
  4175  006FF8                     
  4176                           ; BSR set to: 0
  4177  006FF8  0E02               	movlw	2
  4178  006FFA  0100               	movlb	0	; force () banked
  4179  006FFC  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4180  006FFE  A4D8               	btfss	status,2,c
  4181  007000  EF04  F038         	goto	u801
  4182  007004  EF06  F038         	goto	u800
  4183  007008                     u801:
  4184  007008  EF0B  F038         	goto	l1816
  4185  00700C                     u800:
  4186  00700C                     l1814:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4190  00700C  0EA6               	movlw	166
  4191  00700E                     u1567:
  4192  00700E  2EE8               	decfsz	wreg,f,c
  4193  007010  D7FE               	bra	u1567
  4194  007012  F000 F000          	nop2	
  4195  007016                     l1816:
  4196                           
  4197                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4198  007016  0E0F               	movlw	15
  4199  007018  6E95               	movwf	149,c	;volatile
  4200  00701A                     
  4201                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4202  00701A  EC7F  F036         	call	_lcd_busy	;wreg free
  4203  00701E  0012               	return		;funcret
  4204  007020                     __end_of_lcd_wrCom:
  4205                           	opt callstack 0
  4206                           
  4207 ;; *************** function _lcd_strobeEnableBit *****************
  4208 ;; Defined at:
  4209 ;;		line 431 in file "Lcd4Lignes.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		None
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4223 ;;      Params:         0       0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0
  4226 ;;      Totals:         0       0       0       0       0       0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_lcd_wrCom
  4233 ;;		_lcd_wrData
  4234 ;;		_lcd_resetSequence
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text27
  4239  006B9E                     __ptext27:
  4240                           	opt callstack 0
  4241  006B9E                     _lcd_strobeEnableBit:
  4242                           	opt callstack 28
  4243  006B9E                     
  4244                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4245  006B9E  8480               	bsf	128,2,c	;volatile
  4246                           
  4247                           ;Lcd4Lignes.c: 434: __nop();
  4248  006BA0  F000               	nop	
  4249                           
  4250                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4251  006BA2  9480               	bcf	128,2,c	;volatile
  4252  006BA4  0012               	return		;funcret
  4253  006BA6                     __end_of_lcd_strobeEnableBit:
  4254                           	opt callstack 0
  4255                           
  4256 ;; *************** function _lcd_ecrireDonnees *****************
  4257 ;; Defined at:
  4258 ;;		line 107 in file "Lcd4Lignes.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  donnee          1    wreg     unsigned char 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  donnee          1    1[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4272 ;;      Params:         0       0       0       0       0       0       0
  4273 ;;      Locals:         0       1       0       0       0       0       0
  4274 ;;      Temps:          0       1       0       0       0       0       0
  4275 ;;      Totals:         0       2       0       0       0       0       0
  4276 ;;Total ram usage:        2 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_lcd_wrCom
  4282 ;;		_lcd_wrData
  4283 ;;		_lcd_resetSequence
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text28
  4288  006BBE                     __ptext28:
  4289                           	opt callstack 0
  4290  006BBE                     _lcd_ecrireDonnees:
  4291                           	opt callstack 28
  4292                           
  4293                           ;incstack = 0
  4294                           ;lcd_ecrireDonnees@donnee stored from wreg
  4295  006BBE  0100               	movlb	0	; force () banked
  4296  006BC0  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4297  006BC2                     
  4298                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4299  006BC2  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4300  006BC6  0EF0               	movlw	240
  4301  006BC8  0100               	movlb	0	; force () banked
  4302  006BCA  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4303  006BCC  0100               	movlb	0	; force () banked
  4304  006BCE  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4305  006BD0  0B0F               	andlw	15
  4306  006BD2  0100               	movlb	0	; force () banked
  4307  006BD4  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4308  006BD6  6E83               	movwf	131,c	;volatile
  4309  006BD8                     
  4310                           ; BSR set to: 0
  4311  006BD8  0012               	return		;funcret
  4312  006BDA                     __end_of_lcd_ecrireDonnees:
  4313                           	opt callstack 0
  4314                           
  4315 ;; *************** function _lcd_busy *****************
  4316 ;; Defined at:
  4317 ;;		line 124 in file "Lcd4Lignes.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  adresse         1    1[BANK0 ] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      unsigned char 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4331 ;;      Params:         0       0       0       0       0       0       0
  4332 ;;      Locals:         0       1       0       0       0       0       0
  4333 ;;      Temps:          0       1       0       0       0       0       0
  4334 ;;      Totals:         0       2       0       0       0       0       0
  4335 ;;Total ram usage:        2 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    1
  4338 ;; This function calls:
  4339 ;;		_lcd_lireDonnees
  4340 ;; This function is called by:
  4341 ;;		_lcd_wrCom
  4342 ;;		_lcd_wrData
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text29
  4347  006CFE                     __ptext29:
  4348                           	opt callstack 0
  4349  006CFE                     _lcd_busy:
  4350                           	opt callstack 27
  4351  006CFE                     
  4352                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4353  006CFE  9080               	bcf	128,0,c	;volatile
  4354                           
  4355                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4356  006D00  8280               	bsf	128,1,c	;volatile
  4357  006D02                     l214:
  4358                           
  4359                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4360  006D02  8480               	bsf	128,2,c	;volatile
  4361                           
  4362                           ;Lcd4Lignes.c: 134: __nop();
  4363  006D04  F000               	nop	
  4364  006D06                     
  4365                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4366  006D06  ECCC  F035         	call	_lcd_lireDonnees	;wreg free
  4367  006D0A  0100               	movlb	0	; force () banked
  4368  006D0C  6FB4               	movwf	??_lcd_busy& (0+255),b
  4369  006D0E  39B4               	swapf	??_lcd_busy& (0+255),w,b
  4370  006D10  0BF0               	andlw	240
  4371  006D12  0100               	movlb	0	; force () banked
  4372  006D14  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  4373  006D16                     
  4374                           ; BSR set to: 0
  4375                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4376  006D16  9480               	bcf	128,2,c	;volatile
  4377  006D18                     
  4378                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4379  006D18  8480               	bsf	128,2,c	;volatile
  4380  006D1A                     
  4381                           ;Lcd4Lignes.c: 139: __nop();
  4382  006D1A  F000               	nop	
  4383                           
  4384                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4385  006D1C  ECCC  F035         	call	_lcd_lireDonnees	;wreg free
  4386  006D20  0100               	movlb	0	; force () banked
  4387  006D22  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  4388  006D24                     
  4389                           ; BSR set to: 0
  4390                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4391  006D24  9480               	bcf	128,2,c	;volatile
  4392  006D26                     
  4393                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4394  006D26  0100               	movlb	0	; force () banked
  4395  006D28  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  4396  006D2A  EF99  F036         	goto	u781
  4397  006D2E  EF9B  F036         	goto	u780
  4398  006D32                     u781:
  4399  006D32  EF81  F036         	goto	l214
  4400  006D36                     u780:
  4401  006D36                     
  4402                           ; BSR set to: 0
  4403                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4404  006D36  9280               	bcf	128,1,c	;volatile
  4405  006D38                     
  4406                           ; BSR set to: 0
  4407                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4408  006D38  0100               	movlb	0	; force () banked
  4409  006D3A  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  4410  006D3C  0B7F               	andlw	127
  4411  006D3E                     
  4412                           ; BSR set to: 0
  4413  006D3E  0012               	return		;funcret
  4414  006D40                     __end_of_lcd_busy:
  4415                           	opt callstack 0
  4416                           
  4417 ;; *************** function _lcd_lireDonnees *****************
  4418 ;; Defined at:
  4419 ;;		line 93 in file "Lcd4Lignes.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4433 ;;      Params:         0       0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_lcd_busy
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text30
  4447  006B98                     __ptext30:
  4448                           	opt callstack 0
  4449  006B98                     _lcd_lireDonnees:
  4450                           	opt callstack 27
  4451  006B98                     
  4452                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4453  006B98  5083               	movf	131,w,c	;volatile
  4454  006B9A  0B0F               	andlw	15
  4455  006B9C  0012               	return		;funcret
  4456  006B9E                     __end_of_lcd_lireDonnees:
  4457                           	opt callstack 0
  4458  0000                     
  4459                           	psect	param0
  4460  0000                     tosu	equ	0xFFF
  4461                           tosh	equ	0xFFE
  4462                           tosl	equ	0xFFD
  4463                           stkptr	equ	0xFFC
  4464                           pclatu	equ	0xFFB
  4465                           pclath	equ	0xFFA
  4466                           pcl	equ	0xFF9
  4467                           tblptru	equ	0xFF8
  4468                           tblptrh	equ	0xFF7
  4469                           tblptrl	equ	0xFF6
  4470                           tablat	equ	0xFF5
  4471                           prodh	equ	0xFF4
  4472                           prodl	equ	0xFF3
  4473                           indf0	equ	0xFEF
  4474                           postinc0	equ	0xFEE
  4475                           postdec0	equ	0xFED
  4476                           preinc0	equ	0xFEC
  4477                           plusw0	equ	0xFEB
  4478                           fsr0h	equ	0xFEA
  4479                           fsr0l	equ	0xFE9
  4480                           wreg	equ	0xFE8
  4481                           indf1	equ	0xFE7
  4482                           postinc1	equ	0xFE6
  4483                           postdec1	equ	0xFE5
  4484                           preinc1	equ	0xFE4
  4485                           plusw1	equ	0xFE3
  4486                           fsr1h	equ	0xFE2
  4487                           fsr1l	equ	0xFE1
  4488                           bsr	equ	0xFE0
  4489                           indf2	equ	0xFDF
  4490                           postinc2	equ	0xFDE
  4491                           postdec2	equ	0xFDD
  4492                           preinc2	equ	0xFDC
  4493                           plusw2	equ	0xFDB
  4494                           fsr2h	equ	0xFDA
  4495                           fsr2l	equ	0xFD9
  4496                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     36     124
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMine(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    main@nbMine	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posY	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posX	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->_afficheTabVue
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   11411
                                             29 BANK0      7     7      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1219
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1493
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4    1181
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     711
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _gagne                                                9     7      2     280
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              7     3      4    1299
                                              5 BANK0      7     3      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                              10     9      1    3358
                                             18 BANK0     10     9      1
                      _afficheTabVue
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                   9     8      1    1771
                                              9 BANK0      9     8      1
                      _afficheTabVue
 ---------------------------------------------------------------------------------
 (3) _afficheTabVue                                        1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (4) _lcd_putMessage                                       3     1      2     555
                                              5 BANK0      3     1      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (5) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _afficheTabVue
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         _lcd_ecritChar
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
     _enleveTuilesAutour
       _afficheTabVue
         _lcd_gotoXY
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
         _lcd_putMessage
           _lcd_ecritChar
             _lcd_wrCom
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
             _lcd_wrData
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
   _initTabVue
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     24      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      14        0.0%
DATA                 0      0     110      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 03 14:56:48 2019

 __end_of_calculToucheCombien 7D40                            l91 724A                            l84 6CBC  
                          l76 73A0          ??_enleveTuilesAutour 00BE           ___wmul@multiplicand 00B6  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l102 7760  
                         l111 78BE                           l120 7C7E                           l211 6BD8  
                         l140 7B9C                           l214 6D02                           l222 701E  
                         l215 6D36                           l231 6C00                           l127 7D3E  
                         l208 6B9C                           l216 6D3E                           l144 7604  
                         l225 6C88                           l153 790C                           l170 745E  
                         l163 7A22                           l252 70FC                           l172 74CA  
                         l228 6FB2                           l237 6BAC                           l263 6DE0  
                         l335 6C28                           l184 6EEA                           l176 6C44  
                         l282 719E                           l346 707A                           l179 6C54  
                         l347 708A                           l285 6BA4                           l269 6D8C  
                         l189 6E90                           l579 72FC                           l999 6BBC  
                __CFG_CPB$OFF 000000                           u160 6C52                           u161 6C4E  
                __CFG_CPD$OFF 000000                           u800 700C                           u801 7008  
                         u810 6D8C                           u811 6D88                           u820 6EAA  
                         u900 7CDC                           u821 6EA6                           u901 7CD8  
                         u830 6EEA                           u910 7D1C                           u831 6EE6  
                         u911 7D18                           u920 7D3A                           u840 7040  
                         u921 7D36                           u841 703C                           u930 78E8  
                         u850 707A                           u931 78E4                           u851 7076  
                         u780 6D36                           u940 78FE                           u860 7BDC  
                         u781 6D32                           u941 78FA                           u861 7BD8  
                         u790 6FF8                           u950 7952                           u870 7BF6  
                         u791 6FF4                           u951 794E                           u871 7BF2  
                         u960 79D0                           u880 7C7A                           u961 79CC  
                         u881 7C76                           u970 79E6                           u890 7CBE  
                         u971 79E2                           u891 7CBA                           u980 7A08  
                         u981 7A04                           u990 7A1E                           u991 7A1A  
                __CFG_BORV$18 000000                  ___awmod@sign 00C7                           prod 000FF3  
                 lcd_gotoXY@x 00B8                           wreg 000FE8                   lcd_gotoXY@y 00B7  
                __CFG_LVP$OFF 000000                          l1002 6E36                          l2000 6F70  
                        l2010 6F90                          l2002 6F78                          l2100 6CB4  
                        l2020 6FAE                          l2012 6F94                          l2004 6F7E  
                        l2110 71A6                          l2102 6CB8                          l2030 7120  
                        l2022 70FE                          l2014 6F9C                          l2006 6F82  
                        l2200 7A7C                          l2120 71D8                          l2040 7172  
                        l2032 7126                          l2024 7104                          l2016 6FA2  
                        l2008 6F8A                          l2104 6BDA                          l1330 6C2E  
                        l2210 7AEE                          l2202 7A8C                          l2130 7238  
                        l2122 7208                          l2114 71BC                          l2042 7184  
                        l2026 710A                          l2018 6FA6                          l2106 6BFC  
                        l2050 7252                          l1332 6C42                          l2220 7B74  
                        l2212 7B08                          l2204 7A9E                          l2124 720C  
                        l2116 71C2                          l2108 71A0                          l2044 7188  
                        l2036 713C                          l2060 7282                          l2052 7260  
                        l2140 7628                          l2132 7606                          l1334 6C42  
                        l2214 7B20                          l2222 7B80                          l2206 7AD0  
                        l2126 721E                          l2038 716E                          l2046 719A  
                        l2070 72C8                          l2062 7294                          l2054 7268  
                        l2150 7684                          l2134 760C                          l2310 7328  
                        l2302 72FE                          l2240 7602                          l2232 7524  
                        l2224 74D0                          l1336 6C52                          l2216 7B30  
                        l2208 7ADC                          l2128 7234                          l2080 72F4  
                        l2072 72D0                          l2064 729C                          l2056 726C  
                        l2048 724C                          l2160 773C                          l2152 7688  
                        l2144 763E                          l2320 7362                          l2312 7334  
                        l2304 731C                          l2234 7572                          l2226 751E  
                        l2218 7B42                          l2250 7402                          l2090 6C9E  
                        l2170 777E                          l2074 72D6                          l2066 72A4  
                        l2058 727A                          l2154 769E                          l2146 766E  
                        l2162 7744                          l2138 7622                          l2322 737E  
                        l2314 7338                          l2306 7320                          l2236 7582  
                        l2260 7462                          l2252 7408                          l2244 73E0  
                        l2092 6CAA                          l2084 6C8A                          l2180 7824  
                        l2172 7784                          l2164 7762                          l2068 72B2  
                        l2076 72DC                          l2156 76CE                          l2148 7672  
                        l2324 739C                          l2316 733C                          l2308 7324  
                        l2238 75FE                          l2270 74C2                          l2262 7474  
                        l2246 73EC                          l2094 6CAC                          l2086 6C92  
                        l2190 78AC                          l2182 7862                          l2166 7768  
                        l2078 72EC                          l2158 770C                          l2326 73AE  
                        l2318 7354                          l1800 6FCE                          l2280 6E38  
                        l2192 7A24                          l2264 7478                          l2256 741E  
                        l2096 6CAE                          l2088 6C9C                          l2184 7892  
                        l2176 779A                          l2328 73C6                          l1810 6FE6  
                        l1802 6FD2                          l2290 6E7A                          l2282 6E3E  
                        l2194 7A38                          l2258 745A                          l2266 748A  
                        l2098 6CB2                          l2186 7896                          l2178 77D8  
                        l1820 701A                          l1812 6FF8                          l1804 6FD2  
                        l2292 6E7E                          l2196 7A4A                          l2268 74B4  
                        l2276 74C8                          l1900 6BA6                          l2188 78A8  
                        l1814 700C                          l1806 6FDA                          l1830 6C62  
                        l2286 6E54                          l2198 7A64                          l1902 6C02  
                        l1910 7032                          l1816 7016                          l1808 6FDE  
                        l1840 6C74                          l1832 6C64                          l1824 6C5A  
                        l2288 6E62                          l1904 6C20                          l1912 7040  
                        l1920 6DE2                          l1770 6D18                          l1762 6BC2  
                        l1818 701A                          l1842 6C7C                          l1834 6C66  
                        l1826 6C5E                          l1930 7BC6                          l1914 7050  
                        l1922 6E18                          l1780 6D26                          l1772 6D18  
                        l1764 6CFE                          l1844 6C80                          l1836 6C70  
                        l1828 6C62                          l1852 6D92                          l1940 7C04  
                        l1932 7BCC                          l1916 705A                          l1908 7020  
                        l1924 6E2A                          l1758 6B98                          l1782 6D38  
                        l1774 6D1A                          l1766 6D06                          l1790 6FBC  
                        l1870 70B4                          l1846 6C80                          l1838 6C74  
                        l1854 6DA2                          l1862 6DC0                          l1918 6BAE  
                        l1950 7CDC                          l1942 7C24                          l1934 7BDC  
                        l1776 6D24                          l1768 6D16                          l1792 6FC0  
                        l1872 70C4                          l1864 7090                          l1848 6C84  
                        l1856 6DAC                          l1880 6D4A                          l1960 78C4  
                        l1944 7C7A                          l1952 7CE2                          l1936 7BE6  
                        l1928 7B9E                          l1778 6D26                          l1786 6B9E  
                        l1794 6FC0                          l1866 7094                          l1858 6DB6  
                        l1882 6D64                          l1970 7914                          l1962 78E8  
                        l1954 7D1C                          l1946 7C84                          l1938 7BF6  
                        l1796 6FC2                          l1788 6FB8                          l1868 70A4  
                        l1876 70D4                          l1884 6D68                          l1892 6EAE  
                        l1980 79E6                          l1972 7952                          l1964 78EE  
                        l1956 7D3A                          l1948 7CBE                          l1798 6FC4  
                        l1878 6D40                          l1894 6EBC                          l1886 6E92  
                        l1974 79AE                          l1982 79EA                          l1966 78FE  
                        l1990 6F4E                          l1896 6ED4                          l1888 6E98  
                        l1984 7A08                          l1976 79B2                          l1968 7904  
                        l1992 6F62                          l1898 6ED8                          l1986 7A1E  
                        l1978 79D0                          l1994 6F64                          l1996 6F66  
                        l1988 6F4A                          l1998 6F6C                          u1000 711C  
                        u1001 7118                          u1010 7138                          u1011 7134  
                        u1100 71B8                          u1020 7184                          u1101 71B4  
                        u1021 7180                          u1110 71D4                          u1030 719A  
                        u1111 71D0                          u1031 7196                          u1120 721E  
                        u1200 777A                          u1040 7260                          u1121 721A  
                        u1201 7776                          u1041 725C                          u1130 724A  
                        u1210 7796                          u1050 727A                          u1131 7246  
                        u1211 7792                          u1051 7276                          u1300 7AEE  
                        u1220 77D8                          u1060 7294                          u1140 761E  
                        u1301 7AEA                          u1221 77D4                          u1061 7290  
                        u1141 761A                          u1310 7B20                          u1230 7862  
                        u1070 72B2                          u1150 763A                          u1311 7B1C  
                        u1231 785E                          u1071 72AE                          u1151 7636  
                        u1320 7B42                          u1400 748A                          u1240 78A8  
                        u1080 72C8                          u1160 7684                          u1321 7B3E  
                        u1401 7486                          u1241 78A4                          u1081 72C4  
                        u1161 7680                          u1330 7B74                          u1410 74B4  
                        u1250 78BE                          u1090 72EC                          u1170 769A  
                        u1331 7B70                          u1411 74B0                          u1251 78BA  
                        u1091 72E8                          u1171 7696                          u1420 6E50  
                        u1340 751E                          u1260 7A4A                          u1180 770C  
                        u1421 6E4C                          u1341 751A                          u1261 7A46  
                        u1181 7708                          u1430 6E90                          u1350 7572  
                        u1270 7A7C                          u1190 7760                          u1431 6E8C  
                        u1351 756E                          u1271 7A78                          u1191 775C  
                        u1280 7A9E                          u1360 73FE                          u1281 7A9A  
                        u1361 73FA                          u1290 7AD0                          u1370 741A  
                        u1450 7362                          u1291 7ACC                          u1371 7416  
                        u1507 6F56                          u1451 735E                          u1380 745A  
                        u1460 737E                          u1381 7456                          u1517 6F72  
                        u1461 737A                          u1390 7474                          u1470 739C  
                        u1391 7470                          u1527 6F84                          u1471 7398  
                        u1480 73AE                          u1537 6F96                          u1481 73AA  
                        u1547 6FA8                          u1557 6FE0                          u1567 700E  
                        u1497 73CE                          _RCIF 007CF5                          _TMR1 000FCE  
            ??_initialisation 00B6                          _main 72FE                          _rand 6DE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ?_lcd_putMessage 00B9  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             ??_lcd_ecritChar 00B7                         ?_main 00B4                         ?_rand 00C0  
             __end_of___awmod 72FE                         _ANSEL 000F7E                         _RCREG 000FAE  
                       _SPBRG 000FAF                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000               __end_of_deplace 7B9E           ___lmul@multiplicand 00B8  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7                         _gagne 73E0  
                       _randx 00D8                         _srand 6BAE                         tablat 000FF5  
                       status 000FD8                __CFG_HFOFST$ON 000000             ??_afficheTabMines 00BC  
              __CFG_PBADEN$ON 000000              _metToucheCombien 7762               __initialization 6EEC  
                __end_of_main 73E0                  __end_of_rand 6E38           enleveTuilesAutour@i 00C5  
         enleveTuilesAutour@j 00C4           enleveTuilesAutour@x 00C3           enleveTuilesAutour@y 00BD  
  calculToucheCombien@nbMines 00C1          lcd_putMessage@chaine 00B9    calculToucheCombien@colonne 00BC  
                      ??_main 00D1                        ??_rand 00C2                 __activetblptr 000003  
                      ?_gagne 00B4                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      ?_srand 00B4                        _ANSELH 000F7F                   initTabVue@i 00B7  
                 initTabVue@j 00B6                __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9  
              lcd_initCGRam@j 00BA                getAnalog@canal 00B5              __end_of_lcd_busy 6D40  
            __end_of_lcd_init 6C02                        ___lmul 7020                        ___wmul 6C02  
              __CFG_STVREN$ON 000000                     ??___awmod 00C6                        _demine 74CC  
                      gagne@i 00BB                        gagne@j 00BC                        clear_0 6F32  
                      clear_1 6F3E               ___awmod@divisor 00C4                     ??_deplace 00BD  
             ___awmod@counter 00C6                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        srand@x 00B4        __size_of_afficheTabVue 005A  
           _lcd_resetSequence 6F4A                    __accesstop 0060       __end_of__initialization 6F44  
         _lcd_strobeEnableBit 6B9E            ?_lcd_resetSequence 00B4                 ___rparam_used 000000  
              deplace@analogX 00BE                deplace@analogY 00BF                  __pidataBANK0 6B94  
                __pidataBANK1 6CBE           ??_lcd_resetSequence 00B6                 __end_of_gagne 74CC  
               __end_of_srand 6BBE          ?_lcd_strobeEnableBit 00B4            __size_of_getAnalog 002C  
          __size_of_lcd_wrCom 006C                       ??_gagne 00B6     __end_of_lcd_resetSequence 6FB4  
                     ??_srand 00B6      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 6BBE  
                  __pbssBANK0 0060                    __pbssBANK1 0100              ??_lcd_putMessage 00BB  
          ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4  
                     ?___lmul 00B4                       ?___wmul 00B4                       ?_demine 00C6  
               _afficheTabVue 6E92                ___lmul@product 00BC   __size_of_enleveTuilesAutour 0164  
       ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 01A2      __end_of_metToucheCombien 78C0  
                  _lcd_gotoXY 708C                    _lcd_wrData 6C56               _afficheTabMines 6E38  
   __end_of_lcd_ecrireDonnees 6BDA                     ?_lcd_busy 00B4                     ?_lcd_init 00B4  
     lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060             __end_of_getAnalog 6C56  
        __size_of_rempliMines 015C                       __Hparam 0000                       __Lparam 0000  
                  _initTabVue 71A0             __end_of_lcd_wrCom 7020                ?_afficheTabVue 00B4  
             __size_of___lmul 006C                       ___awmod 724C               __size_of___wmul 0028  
             __size_of_demine 013A                       __pcinit 6EEC                     _ANSELbits 000F7E  
                     __ramtop 0600                       _deplace 7A24                       __ptext0 72FE  
                     __ptext1 7606                       __ptext2 6DE2                       __ptext3 7020  
                     __ptext4 724C                       __ptext5 7762                       __ptext6 7B9E  
                     __ptext7 6C02                       __ptext8 6BDA                       __ptext9 6F4A  
       __end_of_lcd_ecritChar 6DE2               lcd_busy@adresse 00B5                     _T1CONbits 000FCD  
            ___awmod@dividend 00C2                       demine@x 00CF                       demine@y 00C6  
            lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4                    ??_lcd_init 00BB  
  __size_of_lcd_resetSequence 006A          end_of_initialization 6F44         __end_of_lcd_initCGRam 71A0  
           ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
     __size_of_initialisation 0034             ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8  
                   _PORTAbits 000F80                     _PORTBbits 000F81       __end_of_afficheTabMines 6E92  
                 ?_lcd_gotoXY 00B7                     _TRISCbits 000F94                   ?_lcd_wrData 00B4  
  __size_of_lcd_ecrireDonnees 001C                    main@nbMine 00D2                     _TXSTAbits 000FAC  
             ??_afficheTabVue 00BC                   ?_initTabVue 00B4                __end_of___lmul 708C  
              __end_of___wmul 6C2A                   _BAUDCONbits 000FB8                __end_of_demine 7606  
         start_initialization 6EEC         enleveTuilesAutour@mem 00C2           _calculToucheCombien 7B9E  
         __size_of_lcd_gotoXY 0072                      ??___lmul 00BC                      ??___wmul 00B8  
               rempliMines@nb 00C8           __size_of_lcd_wrData 0034                      ??_demine 00C7  
                 __pdataBANK0 00D8                   __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 00BA              ?_afficheTabMines 00B4                 __pcstackBANK0 00B4  
           ?_metToucheCombien 00B4              afficheTabMines@i 00BC           __size_of_initTabVue 00AC  
          ??_metToucheCombien 00C6             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 6C2A   __end_of_lcd_strobeEnableBit 6BA6  
              _initialisation 6C8A    __end_of_enleveTuilesAutour 7A24                      ?___awmod 00C2  
                    ?_deplace 00B9                     _lcd_wrCom 6FB4         ??_calculToucheCombien 00BE  
              __size_of_gagne 00EC               _lcd_lireDonnees 6B98           lcd_wrData@caractere 00B6  
              __size_of_srand 0010                 ??_rempliMines 00CA                  gagne@nbTuile 00BA  
             _lcd_curseurHome 6BA6                ___wmul@product 00B8        __end_of_initialisation 6CBE  
                  ?_getAnalog 00B4              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 004E  
                  ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 6F00  
                   copy_data1 6F20                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 7762  
                ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CF  
                rempliMines@j 00D0                  rempliMines@x 00CD                  rempliMines@y 00CE  
          __end_of_lcd_gotoXY 70FE            __end_of_lcd_wrData 6C8A              __size_of___awmod 00B2  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00BB              __size_of_deplace 017A  
     __end_of_lcd_lireDonnees 6B9E                      _matCGRAM 0154       __end_of_lcd_curseurHome 6BAE  
                    __ptext10 70FE                      __ptext11 6BA6                      __ptext20 6E92  
                    __ptext12 6C8A                      __ptext21 6E38                      __ptext13 6BAE  
                    __ptext30 6B98                      __ptext22 6D40                      __ptext14 71A0  
                    __ptext23 6D8E                      __ptext15 73E0                      __ptext24 6C56  
                    __ptext16 7A24                      __ptext25 708C                      __ptext17 6C2A  
                    __ptext26 6FB4                      __ptext18 74CC                      __ptext27 6B9E  
                    __ptext19 78C0                      __ptext28 6BBE                      __ptext29 6CFE  
           metToucheCombien@i 00C9             metToucheCombien@j 00CA                      _lcd_busy 6CFE  
                    _lcd_init 6BDA            __end_of_initTabVue 724C      calculToucheCombien@ligne 00BA  
                    _m_tabVue 0100                 __size_of_main 00E2                 __size_of_rand 0056  
                 gagne@pMines 00B4                      deplace@x 00B9                      deplace@y 00BB  
                 ??_getAnalog 00B4         __end_of_afficheTabVue 6EEC                      main@posX 00D4  
                    main@posY 00D6                   ??_lcd_wrCom 00B6                 _lcd_ecritChar 6D8E  
              afficheTabVue@i 00BC                 _lcd_initCGRam 70FE                   _rempliMines 7606  
        calculToucheCombien@i 00C2          calculToucheCombien@j 00C4     __size_of_metToucheCombien 015E  
              _lcd_putMessage 6D40                ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4  
          _enleveTuilesAutour 78C0              ?_lcd_curseurHome 00B4      __size_of_afficheTabMines 005A  
              ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BD             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 6D8E  
