

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 15:04:34 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 2.10
    42                           ; Generated 31/07/2019 GMT
    43                           ; 
    44                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataBANK0
    77  0011F8                     __pidataBANK0:
    78                           	opt callstack 0
    79                           
    80                           ;initializer for _randx
    81  0011F8  0001               	dw	1
    82  0011FA  0000               	dw	0
    83                           
    84                           	psect	idataBANK1
    85  0010BE                     __pidataBANK1:
    86                           	opt callstack 0
    87                           
    88                           ;initializer for _matCGRAM
    89  0010BE  08                 	db	8
    90  0010BF  04                 	db	4
    91  0010C0  04                 	db	4
    92  0010C1  0A                 	db	10
    93  0010C2  11                 	db	17
    94  0010C3  1F                 	db	31
    95  0010C4  11                 	db	17
    96  0010C5  00                 	db	0
    97  0010C6  1F                 	db	31
    98  0010C7  1B                 	db	27
    99  0010C8  11                 	db	17
   100  0010C9  11                 	db	17
   101  0010CA  11                 	db	17
   102  0010CB  11                 	db	17
   103  0010CC  1B                 	db	27
   104  0010CD  1F                 	db	31
   105  0010CE  00                 	db	0
   106  0010CF  15                 	db	21
   107  0010D0  0E                 	db	14
   108  0010D1  1F                 	db	31
   109  0010D2  1F                 	db	31
   110  0010D3  0E                 	db	14
   111  0010D4  15                 	db	21
   112  0010D5  00                 	db	0
   113  0010D6  0E                 	db	14
   114  0010D7  11                 	db	17
   115  0010D8  15                 	db	21
   116  0010D9  15                 	db	21
   117  0010DA  15                 	db	21
   118  0010DB  0E                 	db	14
   119  0010DC  15                 	db	21
   120  0010DD  04                 	db	4
   121  0010DE  04                 	db	4
   122  0010DF  04                 	db	4
   123  0010E0  04                 	db	4
   124  0010E1  04                 	db	4
   125  0010E2  0E                 	db	14
   126  0010E3  0E                 	db	14
   127  0010E4  1B                 	db	27
   128  0010E5  11                 	db	17
   129  0010E6  04                 	db	4
   130  0010E7  0A                 	db	10
   131  0010E8  0E                 	db	14
   132  0010E9  11                 	db	17
   133  0010EA  1F                 	db	31
   134  0010EB  10                 	db	16
   135  0010EC  0E                 	db	14
   136  0010ED  00                 	db	0
   137  0010EE  08                 	db	8
   138  0010EF  04                 	db	4
   139  0010F0  0E                 	db	14
   140  0010F1  01                 	db	1
   141  0010F2  0F                 	db	15
   142  0010F3  11                 	db	17
   143  0010F4  0F                 	db	15
   144  0010F5  00                 	db	0
   145  0010F6  04                 	db	4
   146  0010F7  0A                 	db	10
   147  0010F8  0E                 	db	14
   148  0010F9  01                 	db	1
   149  0010FA  0F                 	db	15
   150  0010FB  11                 	db	17
   151  0010FC  0F                 	db	15
   152  0010FD  00                 	db	0
   153  0000                     _TRISCbits	set	3988
   154  0000                     _PORTAbits	set	3968
   155  0000                     _PORTD	set	3971
   156  0000                     _ANSELbits	set	3966
   157  0000                     _TRISA	set	3986
   158  0000                     _ANSEL	set	3966
   159  0000                     _TRISB	set	3987
   160  0000                     _ANSELH	set	3967
   161  0000                     _TRISD	set	3989
   162  0000                     _TMR1	set	4046
   163  0000                     _RCREG	set	4014
   164  0000                     _TXREG	set	4013
   165  0000                     _RCSTAbits	set	4011
   166  0000                     _TXSTAbits	set	4012
   167  0000                     _BAUDCONbits	set	4024
   168  0000                     _SPBRG	set	4015
   169  0000                     _SPBRGH	set	4016
   170  0000                     _ADCON2bits	set	4032
   171  0000                     _ADCON1	set	4033
   172  0000                     _ADCON0bits	set	4034
   173  0000                     _T1CONbits	set	4045
   174  0000                     _RCIF	set	31989
   175                           
   176                           	psect	smallconst
   177  000600                     __psmallconst:
   178                           	opt callstack 0
   179  000600  00                 	db	0
   180  000601                     STR_1:
   181                           
   182                           ; BSR set to: 0
   183  000601  4C                 	db	76	;'L'
   184  000602  41                 	db	65	;'A'
   185  000603  42                 	db	66	;'B'
   186  000604  36                 	db	54	;'6'
   187  000605  20                 	db	32
   188  000606  49                 	db	73	;'I'
   189  000607  73                 	db	115	;'s'
   190  000608  61                 	db	97	;'a'
   191  000609  6B                 	db	107	;'k'
   192  00060A  20                 	db	32
   193  00060B  42                 	db	66	;'B'
   194  00060C  65                 	db	101	;'e'
   195  00060D  64                 	db	100	;'d'
   196  00060E  61                 	db	97	;'a'
   197  00060F  72                 	db	114	;'r'
   198  000610  64                 	db	100	;'d'
   199  000611  00                 	db	0
   200                           
   201                           ; #config settings
   202  000612  00                 	db	0	; dummy byte at the end
   203  0000                     
   204                           	psect	cinit
   205  000F74                     __pcinit:
   206                           	opt callstack 0
   207  000F74                     start_initialization:
   208                           	opt callstack 0
   209  000F74                     __initialization:
   210                           	opt callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK1 (64 bytes)
   213                           ; load TBLPTR registers with __pidataBANK1
   214  000F74  0EBE               	movlw	low __pidataBANK1
   215  000F76  6EF6               	movwf	tblptrl,c
   216  000F78  0E10               	movlw	high __pidataBANK1
   217  000F7A  6EF7               	movwf	tblptrh,c
   218  000F7C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   219  000F7E  6EF8               	movwf	tblptru,c
   220  000F80  EE01  F054         	lfsr	0,__pdataBANK1
   221  000F84  EE10 F040          	lfsr	1,64
   222  000F88                     copy_data0:
   223  000F88  0009               	tblrd		*+
   224  000F8A  CFF5 FFEE          	movff	tablat,postinc0
   225  000F8E  50E5               	movf	postdec1,w,c
   226  000F90  50E1               	movf	fsr1l,w,c
   227  000F92  E1FA               	bnz	copy_data0
   228                           
   229                           ; Initialize objects allocated to BANK0 (4 bytes)
   230                           ; load TBLPTR registers with __pidataBANK0
   231  000F94  0EF8               	movlw	low __pidataBANK0
   232  000F96  6EF6               	movwf	tblptrl,c
   233  000F98  0E11               	movlw	high __pidataBANK0
   234  000F9A  6EF7               	movwf	tblptrh,c
   235  000F9C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   236  000F9E  6EF8               	movwf	tblptru,c
   237  000FA0  EE00  F0D4         	lfsr	0,__pdataBANK0
   238  000FA4  EE10 F004          	lfsr	1,4
   239  000FA8                     copy_data1:
   240  000FA8  0009               	tblrd		*+
   241  000FAA  CFF5 FFEE          	movff	tablat,postinc0
   242  000FAE  50E5               	movf	postdec1,w,c
   243  000FB0  50E1               	movf	fsr1l,w,c
   244  000FB2  E1FA               	bnz	copy_data1
   245                           
   246                           ; Clear objects allocated to BANK1 (84 bytes)
   247  000FB4  EE01  F000         	lfsr	0,__pbssBANK1
   248  000FB8  0E54               	movlw	84
   249  000FBA                     clear_0:
   250  000FBA  6AEE               	clrf	postinc0,c
   251  000FBC  06E8               	decf	wreg,f,c
   252  000FBE  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (84 bytes)
   255  000FC0  EE00  F060         	lfsr	0,__pbssBANK0
   256  000FC4  0E54               	movlw	84
   257  000FC6                     clear_1:
   258  000FC6  6AEE               	clrf	postinc0,c
   259  000FC8  06E8               	decf	wreg,f,c
   260  000FCA  E1FD               	bnz	clear_1
   261  000FCC                     end_of_initialization:
   262                           	opt callstack 0
   263  000FCC                     __end_of__initialization:
   264                           	opt callstack 0
   265  000FCC  0100               	movlb	0
   266  000FCE  EF28  F005         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269  000060                     __pbssBANK0:
   270                           	opt callstack 0
   271  000060                     _m_tabMines:
   272                           	opt callstack 0
   273  000060                     	ds	84
   274                           
   275                           	psect	dataBANK0
   276  0000D4                     __pdataBANK0:
   277                           	opt callstack 0
   278  0000D4                     _randx:
   279                           	opt callstack 0
   280  0000D4                     	ds	4
   281                           
   282                           	psect	bssBANK1
   283  000100                     __pbssBANK1:
   284                           	opt callstack 0
   285  000100                     _m_tabVue:
   286                           	opt callstack 0
   287  000100                     	ds	84
   288                           
   289                           	psect	dataBANK1
   290  000154                     __pdataBANK1:
   291                           	opt callstack 0
   292  000154                     _matCGRAM:
   293                           	opt callstack 0
   294  000154                     	ds	64
   295                           
   296                           	psect	cstackBANK0
   297  0000B4                     __pcstackBANK0:
   298                           	opt callstack 0
   299  0000B4                     ??_initTabVue:
   300  0000B4                     ??_lcd_ecrireDonnees:
   301  0000B4                     ??_lcd_busy:
   302  0000B4                     ?___wmul:
   303                           	opt callstack 0
   304  0000B4                     ?___lmul:
   305                           	opt callstack 0
   306  0000B4                     ___wmul@multiplier:
   307                           	opt callstack 0
   308  0000B4                     srand@x:
   309                           	opt callstack 0
   310  0000B4                     ___lmul@multiplier:
   311                           	opt callstack 0
   312                           
   313                           ; 4 bytes @ 0x0
   314  0000B4                     	ds	1
   315  0000B5                     lcd_ecrireDonnees@donnee:
   316                           	opt callstack 0
   317  0000B5                     lcd_busy@adresse:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  0000B5                     	ds	1
   322  0000B6                     ??_lcd_resetSequence:
   323  0000B6                     initTabVue@j:
   324                           	opt callstack 0
   325  0000B6                     lcd_wrCom@commande:
   326                           	opt callstack 0
   327  0000B6                     lcd_wrData@caractere:
   328                           	opt callstack 0
   329  0000B6                     ___wmul@multiplicand:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333  0000B6                     	ds	1
   334  0000B7                     ??_lcd_initCGRam:
   335  0000B7                     initTabVue@i:
   336                           	opt callstack 0
   337  0000B7                     lcd_gotoXY@y:
   338                           	opt callstack 0
   339  0000B7                     lcd_ecritChar@car:
   340                           	opt callstack 0
   341                           
   342                           ; 1 bytes @ 0x3
   343  0000B7                     	ds	1
   344  0000B8                     lcd_gotoXY@x:
   345                           	opt callstack 0
   346  0000B8                     lcd_ecritChar@posRam:
   347                           	opt callstack 0
   348  0000B8                     ___wmul@product:
   349                           	opt callstack 0
   350  0000B8                     ___lmul@multiplicand:
   351                           	opt callstack 0
   352                           
   353                           ; 4 bytes @ 0x4
   354  0000B8                     	ds	1
   355  0000B9                     lcd_initCGRam@i:
   356                           	opt callstack 0
   357  0000B9                     lcd_putMessage@chaine:
   358                           	opt callstack 0
   359                           
   360                           ; 3 bytes @ 0x5
   361  0000B9                     	ds	1
   362  0000BA                     lcd_initCGRam@j:
   363                           	opt callstack 0
   364  0000BA                     calculToucheCombien@ligne:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x6
   368  0000BA                     	ds	1
   369  0000BB                     
   370                           ; 1 bytes @ 0x7
   371  0000BB                     	ds	1
   372  0000BC                     ??_lcd_putMessage:
   373  0000BC                     calculToucheCombien@colonne:
   374                           	opt callstack 0
   375  0000BC                     ___lmul@product:
   376                           	opt callstack 0
   377                           
   378                           ; 4 bytes @ 0x8
   379  0000BC                     	ds	2
   380  0000BE                     ??_calculToucheCombien:
   381                           
   382                           ; 1 bytes @ 0xA
   383  0000BE                     	ds	2
   384  0000C0                     ?_rand:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0xC
   388  0000C0                     	ds	1
   389  0000C1                     calculToucheCombien@nbMines:
   390                           	opt callstack 0
   391  0000C1                     lcd_putMessage@j:
   392                           	opt callstack 0
   393                           
   394                           ; 1 bytes @ 0xD
   395  0000C1                     	ds	1
   396  0000C2                     ?___awmod:
   397                           	opt callstack 0
   398  0000C2                     calculToucheCombien@i:
   399                           	opt callstack 0
   400  0000C2                     ___awmod@dividend:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0xE
   404  0000C2                     	ds	2
   405  0000C4                     calculToucheCombien@j:
   406                           	opt callstack 0
   407  0000C4                     ___awmod@divisor:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x10
   411  0000C4                     	ds	2
   412  0000C6                     ??_metToucheCombien:
   413  0000C6                     ___awmod@counter:
   414                           	opt callstack 0
   415                           
   416                           ; 1 bytes @ 0x12
   417  0000C6                     	ds	1
   418  0000C7                     ___awmod@sign:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x13
   422  0000C7                     	ds	1
   423  0000C8                     rempliMines@nb:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x14
   427  0000C8                     	ds	1
   428  0000C9                     metToucheCombien@i:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x15
   432  0000C9                     	ds	1
   433  0000CA                     ??_rempliMines:
   434  0000CA                     metToucheCombien@j:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x16
   438  0000CA                     	ds	3
   439  0000CD                     rempliMines@x:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x19
   443  0000CD                     	ds	1
   444  0000CE                     rempliMines@y:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x1A
   448  0000CE                     	ds	1
   449  0000CF                     rempliMines@i:
   450                           	opt callstack 0
   451                           
   452                           ; 1 bytes @ 0x1B
   453  0000CF                     	ds	1
   454  0000D0                     rempliMines@j:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0x1C
   458  0000D0                     	ds	1
   459  0000D1                     ??_main:
   460                           
   461                           ; 1 bytes @ 0x1D
   462  0000D1                     	ds	2
   463  0000D3                     main@i:
   464                           	opt callstack 0
   465                           
   466                           ; 1 bytes @ 0x1F
   467  0000D3                     	ds	1
   468                           
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 47 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  i               1   31[BANK0 ] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   488 ;;      Params:         0       0       0       0       0       0       0
   489 ;;      Locals:         0       1       0       0       0       0       0
   490 ;;      Temps:          0       2       0       0       0       0       0
   491 ;;      Totals:         0       3       0       0       0       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels required when called:    6
   494 ;; This function calls:
   495 ;;		_initTabVue
   496 ;;		_initialisation
   497 ;;		_lcd_gotoXY
   498 ;;		_lcd_init
   499 ;;		_lcd_putMessage
   500 ;;		_metToucheCombien
   501 ;;		_rempliMines
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text0
   508  000A50                     __ptext0:
   509                           	opt callstack 0
   510  000A50                     _main:
   511                           	opt callstack 25
   512  000A50                     
   513                           ;main.c: 49: initialisation();
   514  000A50  EC99  F008         	call	_initialisation	;wreg free
   515  000A54                     
   516                           ;main.c: 50: lcd_init();
   517  000A54  ECC7  F008         	call	_lcd_init	;wreg free
   518  000A58                     
   519                           ;main.c: 51: lcd_putMessage("LAB6 Isak Bedard");
   520  000A58  0E01               	movlw	low STR_1
   521  000A5A  0100               	movlb	0	; force () banked
   522  000A5C  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
   523  000A5E  0E06               	movlw	high STR_1
   524  000A60  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   525  000A62  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   526  000A64  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   527  000A66  A4D8               	btfss	status,2,c
   528  000A68  0E00               	movlw	low (__mediumconst shr (0+16))
   529  000A6A  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   530  000A6C  EC86  F005         	call	_lcd_putMessage	;wreg free
   531  000A70                     
   532                           ;main.c: 52: initTabVue();
   533  000A70  EC39  F006         	call	_initTabVue	;wreg free
   534  000A74                     
   535                           ;main.c: 53: rempliMines(5);
   536  000A74  0E00               	movlw	0
   537  000A76  0100               	movlb	0	; force () banked
   538  000A78  6FC9               	movwf	(rempliMines@nb+1)& (0+255),b
   539  000A7A  0E05               	movlw	5
   540  000A7C  6FC8               	movwf	rempliMines@nb& (0+255),b
   541  000A7E  EC7A  F004         	call	_rempliMines	;wreg free
   542  000A82                     
   543                           ;main.c: 54: metToucheCombien();
   544  000A82  ECCB  F003         	call	_metToucheCombien	;wreg free
   545  000A86                     
   546                           ;main.c: 55: for (char i = 0; i < 4; i++)
   547  000A86  0E00               	movlw	0
   548  000A88  0100               	movlb	0	; force () banked
   549  000A8A  6FD3               	movwf	main@i& (0+255),b
   550  000A8C                     
   551                           ; BSR set to: 0
   552  000A8C  0E03               	movlw	3
   553  000A8E  0100               	movlb	0	; force () banked
   554  000A90  65D3               	cpfsgt	main@i& (0+255),b
   555  000A92  EF4D  F005         	goto	u921
   556  000A96  EF4F  F005         	goto	u920
   557  000A9A                     u921:
   558  000A9A  EF51  F005         	goto	l1945
   559  000A9E                     u920:
   560  000A9E  EF79  F005         	goto	l1953
   561  000AA2                     l1945:
   562                           
   563                           ; BSR set to: 0
   564                           ;main.c: 56: {;main.c: 57: lcd_gotoXY(1,i+1);
   565  000AA2  0100               	movlb	0	; force () banked
   566  000AA4  29D3               	incf	main@i& (0+255),w,b
   567  000AA6  0100               	movlb	0	; force () banked
   568  000AA8  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
   569  000AAA  0E01               	movlw	1
   570  000AAC  ECE0  F006         	call	_lcd_gotoXY
   571  000AB0                     
   572                           ;main.c: 58: lcd_putMessage(m_tabMines[i]);
   573  000AB0  0100               	movlb	0	; force () banked
   574  000AB2  51D3               	movf	main@i& (0+255),w,b
   575  000AB4  0D15               	mullw	21
   576  000AB6  0E60               	movlw	low _m_tabMines
   577  000AB8  24F3               	addwf	243,w,c
   578  000ABA  0100               	movlb	0	; force () banked
   579  000ABC  6FD1               	movwf	??_main& (0+255),b
   580  000ABE  0E00               	movlw	high _m_tabMines
   581  000AC0  20F4               	addwfc	prodh,w,c
   582  000AC2  6FD2               	movwf	(??_main+1)& (0+255),b
   583  000AC4  C0D1  F0B9         	movff	??_main,lcd_putMessage@chaine
   584  000AC8  C0D2  F0BA         	movff	??_main+1,lcd_putMessage@chaine+1
   585  000ACC  0100               	movlb	0	; force () banked
   586  000ACE  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   587  000AD0  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   588  000AD2  A4D8               	btfss	status,2,c
   589  000AD4  0E20               	movlw	32
   590  000AD6  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   591  000AD8  EC86  F005         	call	_lcd_putMessage	;wreg free
   592  000ADC  0100               	movlb	0	; force () banked
   593  000ADE  2BD3               	incf	main@i& (0+255),f,b
   594  000AE0                     
   595                           ; BSR set to: 0
   596  000AE0  0E03               	movlw	3
   597  000AE2  0100               	movlb	0	; force () banked
   598  000AE4  65D3               	cpfsgt	main@i& (0+255),b
   599  000AE6  EF77  F005         	goto	u931
   600  000AEA  EF79  F005         	goto	u930
   601  000AEE                     u931:
   602  000AEE  EF51  F005         	goto	l1945
   603  000AF2                     u930:
   604  000AF2                     l1953:
   605                           
   606                           ;main.c: 61: {;main.c: 62: _delay((unsigned long)((100)*(1000000/4000.0)));
   607  000AF2  0E21               	movlw	33
   608  000AF4  0100               	movlb	0	; force () banked
   609  000AF6  6FD1               	movwf	??_main& (0+255),b
   610  000AF8  0E76               	movlw	118
   611  000AFA                     u947:
   612  000AFA  2EE8               	decfsz	wreg,f,c
   613  000AFC  D7FE               	bra	u947
   614  000AFE  2FD1               	decfsz	??_main& (0+255),f,b
   615  000B00  D7FC               	bra	u947
   616  000B02  F000               	nop	
   617  000B04  EF79  F005         	goto	l1953
   618  000B08  EF00  F000         	goto	start
   619  000B0C                     __end_of_main:
   620                           	opt callstack 0
   621                           
   622 ;; *************** function _rempliMines *****************
   623 ;; Defined at:
   624 ;;		line 118 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  nb              2   20[BANK0 ] int 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  j               1   28[BANK0 ] unsigned char 
   629 ;;  i               1   27[BANK0 ] unsigned char 
   630 ;;  y               1   26[BANK0 ] unsigned char 
   631 ;;  x               1   25[BANK0 ] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       2       0       0       0       0       0
   642 ;;      Locals:         0       4       0       0       0       0       0
   643 ;;      Temps:          0       3       0       0       0       0       0
   644 ;;      Totals:         0       9       0       0       0       0       0
   645 ;;Total ram usage:        9 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		___awmod
   650 ;;		_rand
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text1
   657  0008F4                     __ptext1:
   658                           	opt callstack 0
   659  0008F4                     _rempliMines:
   660                           	opt callstack 28
   661  0008F4                     
   662                           ;main.c: 120: char x,y;;main.c: 122: for (char i = 0; i < 4; i++)
   663  0008F4  0E00               	movlw	0
   664  0008F6  0100               	movlb	0	; force () banked
   665  0008F8  6FCF               	movwf	rempliMines@i& (0+255),b
   666  0008FA                     
   667                           ; BSR set to: 0
   668  0008FA  0E03               	movlw	3
   669  0008FC  0100               	movlb	0	; force () banked
   670  0008FE  65CF               	cpfsgt	rempliMines@i& (0+255),b
   671  000900  EF84  F004         	goto	u791
   672  000904  EF86  F004         	goto	u790
   673  000908                     u791:
   674  000908  EF88  F004         	goto	l1851
   675  00090C                     u790:
   676  00090C  EF19  F005         	goto	l1875
   677  000910                     l1851:
   678                           
   679                           ; BSR set to: 0
   680                           ;main.c: 123: {;main.c: 124: for(char j=0;j<20;j++)
   681  000910  0E00               	movlw	0
   682  000912  0100               	movlb	0	; force () banked
   683  000914  6FD0               	movwf	rempliMines@j& (0+255),b
   684  000916                     
   685                           ; BSR set to: 0
   686  000916  0E13               	movlw	19
   687  000918  0100               	movlb	0	; force () banked
   688  00091A  65D0               	cpfsgt	rempliMines@j& (0+255),b
   689  00091C  EF92  F004         	goto	u801
   690  000920  EF94  F004         	goto	u800
   691  000924                     u801:
   692  000924  EF96  F004         	goto	l1857
   693  000928                     u800:
   694  000928  EFB9  F004         	goto	l1863
   695  00092C                     l1857:
   696                           
   697                           ; BSR set to: 0
   698                           ;main.c: 125: {;main.c: 126: m_tabMines[i][j]=' ';
   699  00092C  0100               	movlb	0	; force () banked
   700  00092E  51CF               	movf	rempliMines@i& (0+255),w,b
   701  000930  0D15               	mullw	21
   702  000932  0E60               	movlw	low _m_tabMines
   703  000934  0100               	movlb	0	; force () banked
   704  000936  6FCA               	movwf	??_rempliMines& (0+255),b
   705  000938  0E00               	movlw	high _m_tabMines
   706  00093A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   707  00093C  50F3               	movf	243,w,c
   708  00093E  27CA               	addwf	??_rempliMines& (0+255),f,b
   709  000940  50F4               	movf	244,w,c
   710  000942  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   711  000944  0100               	movlb	0	; force () banked
   712  000946  51D0               	movf	rempliMines@j& (0+255),w,b
   713  000948  0100               	movlb	0	; force () banked
   714  00094A  25CA               	addwf	??_rempliMines& (0+255),w,b
   715  00094C  6ED9               	movwf	fsr2l,c
   716  00094E  0100               	movlb	0	; force () banked
   717  000950  0E00               	movlw	0
   718  000952  0100               	movlb	0	; force () banked
   719  000954  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   720  000956  6EDA               	movwf	fsr2h,c
   721  000958  0E20               	movlw	32
   722  00095A  6EDF               	movwf	indf2,c
   723  00095C                     
   724                           ; BSR set to: 0
   725  00095C  0100               	movlb	0	; force () banked
   726  00095E  2BD0               	incf	rempliMines@j& (0+255),f,b
   727  000960                     
   728                           ; BSR set to: 0
   729  000960  0E13               	movlw	19
   730  000962  0100               	movlb	0	; force () banked
   731  000964  65D0               	cpfsgt	rempliMines@j& (0+255),b
   732  000966  EFB7  F004         	goto	u811
   733  00096A  EFB9  F004         	goto	u810
   734  00096E                     u811:
   735  00096E  EF96  F004         	goto	l1857
   736  000972                     u810:
   737  000972                     l1863:
   738                           
   739                           ; BSR set to: 0
   740  000972  0100               	movlb	0	; force () banked
   741  000974  2BCF               	incf	rempliMines@i& (0+255),f,b
   742  000976                     
   743                           ; BSR set to: 0
   744  000976  0E03               	movlw	3
   745  000978  0100               	movlb	0	; force () banked
   746  00097A  65CF               	cpfsgt	rempliMines@i& (0+255),b
   747  00097C  EFC2  F004         	goto	u821
   748  000980  EFC4  F004         	goto	u820
   749  000984                     u821:
   750  000984  EF88  F004         	goto	l1851
   751  000988                     u820:
   752  000988  EF19  F005         	goto	l1875
   753  00098C                     l1867:
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 130: {;main.c: 131: x=rand()%20;
   757  00098C  ECE9  F007         	call	_rand	;wreg free
   758  000990  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   759  000994  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   760  000998  0E00               	movlw	0
   761  00099A  0100               	movlb	0	; force () banked
   762  00099C  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   763  00099E  0E14               	movlw	20
   764  0009A0  6FC4               	movwf	___awmod@divisor& (0+255),b
   765  0009A2  ECE0  F005         	call	___awmod	;wreg free
   766  0009A6  0100               	movlb	0	; force () banked
   767  0009A8  51C2               	movf	?___awmod& (0+255),w,b
   768  0009AA  0100               	movlb	0	; force () banked
   769  0009AC  6FCD               	movwf	rempliMines@x& (0+255),b
   770                           
   771                           ;main.c: 132: y=rand()%4;
   772  0009AE  ECE9  F007         	call	_rand	;wreg free
   773  0009B2  0100               	movlb	0	; force () banked
   774  0009B4  51C0               	movf	?_rand& (0+255),w,b
   775  0009B6  0B03               	andlw	3
   776  0009B8  0100               	movlb	0	; force () banked
   777  0009BA  6FCE               	movwf	rempliMines@y& (0+255),b
   778  0009BC                     
   779                           ; BSR set to: 0
   780                           ;main.c: 133: if (m_tabMines[y][x]!=2)
   781  0009BC  0100               	movlb	0	; force () banked
   782  0009BE  51CE               	movf	rempliMines@y& (0+255),w,b
   783  0009C0  0D15               	mullw	21
   784  0009C2  0E60               	movlw	low _m_tabMines
   785  0009C4  0100               	movlb	0	; force () banked
   786  0009C6  6FCA               	movwf	??_rempliMines& (0+255),b
   787  0009C8  0E00               	movlw	high _m_tabMines
   788  0009CA  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   789  0009CC  50F3               	movf	243,w,c
   790  0009CE  27CA               	addwf	??_rempliMines& (0+255),f,b
   791  0009D0  50F4               	movf	244,w,c
   792  0009D2  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   793  0009D4  0100               	movlb	0	; force () banked
   794  0009D6  51CD               	movf	rempliMines@x& (0+255),w,b
   795  0009D8  0100               	movlb	0	; force () banked
   796  0009DA  25CA               	addwf	??_rempliMines& (0+255),w,b
   797  0009DC  6ED9               	movwf	fsr2l,c
   798  0009DE  0100               	movlb	0	; force () banked
   799  0009E0  0E00               	movlw	0
   800  0009E2  0100               	movlb	0	; force () banked
   801  0009E4  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   802  0009E6  6EDA               	movwf	fsr2h,c
   803  0009E8  0E02               	movlw	2
   804  0009EA  18DE               	xorwf	postinc2,w,c
   805  0009EC  B4D8               	btfsc	status,2,c
   806  0009EE  EFFB  F004         	goto	u831
   807  0009F2  EFFD  F004         	goto	u830
   808  0009F6                     u831:
   809  0009F6  EF19  F005         	goto	l1875
   810  0009FA                     u830:
   811  0009FA                     
   812                           ; BSR set to: 0
   813                           ;main.c: 134: {;main.c: 135: m_tabMines[y][x]=2;
   814  0009FA  0100               	movlb	0	; force () banked
   815  0009FC  51CE               	movf	rempliMines@y& (0+255),w,b
   816  0009FE  0D15               	mullw	21
   817  000A00  0E60               	movlw	low _m_tabMines
   818  000A02  0100               	movlb	0	; force () banked
   819  000A04  6FCA               	movwf	??_rempliMines& (0+255),b
   820  000A06  0E00               	movlw	high _m_tabMines
   821  000A08  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   822  000A0A  50F3               	movf	243,w,c
   823  000A0C  27CA               	addwf	??_rempliMines& (0+255),f,b
   824  000A0E  50F4               	movf	244,w,c
   825  000A10  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   826  000A12  0100               	movlb	0	; force () banked
   827  000A14  51CD               	movf	rempliMines@x& (0+255),w,b
   828  000A16  0100               	movlb	0	; force () banked
   829  000A18  25CA               	addwf	??_rempliMines& (0+255),w,b
   830  000A1A  6ED9               	movwf	fsr2l,c
   831  000A1C  0100               	movlb	0	; force () banked
   832  000A1E  0E00               	movlw	0
   833  000A20  0100               	movlb	0	; force () banked
   834  000A22  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   835  000A24  6EDA               	movwf	fsr2h,c
   836  000A26  0E02               	movlw	2
   837  000A28  6EDF               	movwf	indf2,c
   838  000A2A                     
   839                           ; BSR set to: 0
   840                           ;main.c: 136: nb--;
   841  000A2A  0100               	movlb	0	; force () banked
   842  000A2C  07C8               	decf	rempliMines@nb& (0+255),f,b
   843  000A2E  A0D8               	btfss	status,0,c
   844  000A30  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   845  000A32                     l1875:
   846                           
   847                           ; BSR set to: 0
   848  000A32  0100               	movlb	0	; force () banked
   849  000A34  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   850  000A36  EF27  F005         	goto	u840
   851  000A3A  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   852  000A3C  E106               	bnz	u841
   853  000A3E  05C8               	decf	rempliMines@nb& (0+255),w,b
   854  000A40  B0D8               	btfsc	status,0,c
   855  000A42  EF25  F005         	goto	u841
   856  000A46  EF27  F005         	goto	u840
   857  000A4A                     u841:
   858  000A4A  EFC6  F004         	goto	l1867
   859  000A4E                     u840:
   860  000A4E                     
   861                           ; BSR set to: 0
   862  000A4E  0012               	return		;funcret
   863  000A50                     __end_of_rempliMines:
   864                           	opt callstack 0
   865                           
   866 ;; *************** function _rand *****************
   867 ;; Defined at:
   868 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  2   12[BANK0 ] int 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         0       2       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0
   885 ;;      Totals:         0       2       0       0       0       0       0
   886 ;;Total ram usage:        2 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    1
   889 ;; This function calls:
   890 ;;		___lmul
   891 ;; This function is called by:
   892 ;;		_rempliMines
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text2
   897  000FD2                     __ptext2:
   898                           	opt callstack 0
   899  000FD2                     _rand:
   900                           	opt callstack 28
   901  000FD2  C0D4  F0B4         	movff	_randx,___lmul@multiplier
   902  000FD6  C0D5  F0B5         	movff	_randx+1,___lmul@multiplier+1
   903  000FDA  C0D6  F0B6         	movff	_randx+2,___lmul@multiplier+2
   904  000FDE  C0D7  F0B7         	movff	_randx+3,___lmul@multiplier+3
   905  000FE2  0E6D               	movlw	109
   906  000FE4  0100               	movlb	0	; () banked
   907  000FE6  6FB8               	movwf	___lmul@multiplicand& (0+255),b
   908  000FE8  0E4E               	movlw	78
   909  000FEA  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   910  000FEC  0EC6               	movlw	198
   911  000FEE  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   912  000FF0  0E41               	movlw	65
   913  000FF2  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   914  000FF4  EC19  F007         	call	___lmul	;wreg free
   915  000FF8  C0B4  F0D4         	movff	?___lmul,_randx
   916  000FFC  C0B5  F0D5         	movff	?___lmul+1,_randx+1
   917  001000  C0B6  F0D6         	movff	?___lmul+2,_randx+2
   918  001004  C0B7  F0D7         	movff	?___lmul+3,_randx+3
   919  001008  0E39               	movlw	57
   920  00100A  0100               	movlb	0	; () banked
   921  00100C  27D4               	addwf	_randx& (0+255),f,b
   922  00100E  0E30               	movlw	48
   923  001010  23D5               	addwfc	(_randx+1)& (0+255),f,b
   924  001012  0E00               	movlw	0
   925  001014  23D6               	addwfc	(_randx+2)& (0+255),f,b
   926  001016  0E00               	movlw	0
   927  001018  23D7               	addwfc	(_randx+3)& (0+255),f,b
   928  00101A                     
   929                           ; BSR set to: 0
   930  00101A  0EFF               	movlw	255
   931  00101C  15D6               	andwf	(_randx+2)& (0+255),w,b
   932  00101E  6FC0               	movwf	?_rand& (0+255),b
   933  001020  0E7F               	movlw	127
   934  001022  15D7               	andwf	(_randx+3)& (0+255),w,b
   935  001024  6FC1               	movwf	(?_rand+1)& (0+255),b
   936  001026                     
   937                           ; BSR set to: 0
   938  001026  0012               	return		;funcret
   939  001028                     __end_of_rand:
   940                           	opt callstack 0
   941                           
   942 ;; *************** function ___lmul *****************
   943 ;; Defined at:
   944 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  multiplier      4    0[BANK0 ] unsigned long 
   947 ;;  multiplicand    4    4[BANK0 ] unsigned long 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  product         4    8[BANK0 ] unsigned long 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  4    0[BANK0 ] unsigned long 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   959 ;;      Params:         0       8       0       0       0       0       0
   960 ;;      Locals:         0       4       0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0
   962 ;;      Totals:         0      12       0       0       0       0       0
   963 ;;Total ram usage:       12 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_rand
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text3
   973  000E32                     __ptext3:
   974                           	opt callstack 0
   975  000E32                     ___lmul:
   976                           	opt callstack 28
   977  000E32  0E00               	movlw	0
   978  000E34  0100               	movlb	0	; () banked
   979  000E36  6FBC               	movwf	___lmul@product& (0+255),b
   980  000E38  0E00               	movlw	0
   981  000E3A  6FBD               	movwf	(___lmul@product+1)& (0+255),b
   982  000E3C  0E00               	movlw	0
   983  000E3E  6FBE               	movwf	(___lmul@product+2)& (0+255),b
   984  000E40  0E00               	movlw	0
   985  000E42  6FBF               	movwf	(___lmul@product+3)& (0+255),b
   986  000E44                     l1633:
   987                           
   988                           ; BSR set to: 0
   989  000E44  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
   990  000E46  EF27  F007         	goto	u531
   991  000E4A  EF29  F007         	goto	u530
   992  000E4E                     u531:
   993  000E4E  EF31  F007         	goto	l1637
   994  000E52                     u530:
   995  000E52                     
   996                           ; BSR set to: 0
   997  000E52  51B8               	movf	___lmul@multiplicand& (0+255),w,b
   998  000E54  27BC               	addwf	___lmul@product& (0+255),f,b
   999  000E56  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1000  000E58  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1001  000E5A  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1002  000E5C  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1003  000E5E  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1004  000E60  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1005  000E62                     l1637:
  1006                           
  1007                           ; BSR set to: 0
  1008  000E62  90D8               	bcf	status,0,c
  1009  000E64  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1010  000E66  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1011  000E68  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1012  000E6A  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1013  000E6C                     
  1014                           ; BSR set to: 0
  1015  000E6C  90D8               	bcf	status,0,c
  1016  000E6E  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1017  000E70  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1018  000E72  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1019  000E74  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1020  000E76  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1021  000E78  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1022  000E7A  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1023  000E7C  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1024  000E7E  A4D8               	btfss	status,2,c
  1025  000E80  EF44  F007         	goto	u541
  1026  000E84  EF46  F007         	goto	u540
  1027  000E88                     u541:
  1028  000E88  EF22  F007         	goto	l1633
  1029  000E8C                     u540:
  1030  000E8C                     
  1031                           ; BSR set to: 0
  1032  000E8C  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1033  000E90  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1034  000E94  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1035  000E98  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1036  000E9C                     
  1037                           ; BSR set to: 0
  1038  000E9C  0012               	return		;funcret
  1039  000E9E                     __end_of___lmul:
  1040                           	opt callstack 0
  1041                           
  1042 ;; *************** function ___awmod *****************
  1043 ;; Defined at:
  1044 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  dividend        2   14[BANK0 ] int 
  1047 ;;  divisor         2   16[BANK0 ] int 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  sign            1   19[BANK0 ] unsigned char 
  1050 ;;  counter         1   18[BANK0 ] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2   14[BANK0 ] int 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1060 ;;      Params:         0       4       0       0       0       0       0
  1061 ;;      Locals:         0       2       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0
  1063 ;;      Totals:         0       6       0       0       0       0       0
  1064 ;;Total ram usage:        6 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_rempliMines
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text4
  1074  000BC0                     __ptext4:
  1075                           	opt callstack 0
  1076  000BC0                     ___awmod:
  1077                           	opt callstack 29
  1078  000BC0  0E00               	movlw	0
  1079  000BC2  0100               	movlb	0	; () banked
  1080  000BC4  6FC7               	movwf	___awmod@sign& (0+255),b
  1081  000BC6                     
  1082                           ; BSR set to: 0
  1083  000BC6  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1084  000BC8  EFEA  F005         	goto	u660
  1085  000BCC  EFE8  F005         	goto	u661
  1086  000BD0                     u661:
  1087  000BD0  EFF0  F005         	goto	l1761
  1088  000BD4                     u660:
  1089  000BD4                     
  1090                           ; BSR set to: 0
  1091  000BD4  6DC2               	negf	___awmod@dividend& (0+255),b
  1092  000BD6  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1093  000BD8  B0D8               	btfsc	status,0,c
  1094  000BDA  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1095  000BDC                     
  1096                           ; BSR set to: 0
  1097  000BDC  0E01               	movlw	1
  1098  000BDE  6FC7               	movwf	___awmod@sign& (0+255),b
  1099  000BE0                     l1761:
  1100                           
  1101                           ; BSR set to: 0
  1102  000BE0  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1103  000BE2  EFF7  F005         	goto	u670
  1104  000BE6  EFF5  F005         	goto	u671
  1105  000BEA                     u671:
  1106  000BEA  EFFB  F005         	goto	l1765
  1107  000BEE                     u670:
  1108  000BEE                     
  1109                           ; BSR set to: 0
  1110  000BEE  6DC4               	negf	___awmod@divisor& (0+255),b
  1111  000BF0  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1112  000BF2  B0D8               	btfsc	status,0,c
  1113  000BF4  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1114  000BF6                     l1765:
  1115                           
  1116                           ; BSR set to: 0
  1117  000BF6  51C4               	movf	___awmod@divisor& (0+255),w,b
  1118  000BF8  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1119  000BFA  B4D8               	btfsc	status,2,c
  1120  000BFC  EF02  F006         	goto	u681
  1121  000C00  EF04  F006         	goto	u680
  1122  000C04                     u681:
  1123  000C04  EF28  F006         	goto	l1781
  1124  000C08                     u680:
  1125  000C08                     
  1126                           ; BSR set to: 0
  1127  000C08  0E01               	movlw	1
  1128  000C0A  6FC6               	movwf	___awmod@counter& (0+255),b
  1129  000C0C  EF0C  F006         	goto	l1771
  1130  000C10                     l1769:
  1131                           
  1132                           ; BSR set to: 0
  1133  000C10  90D8               	bcf	status,0,c
  1134  000C12  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1135  000C14  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1136  000C16  2BC6               	incf	___awmod@counter& (0+255),f,b
  1137  000C18                     l1771:
  1138                           
  1139                           ; BSR set to: 0
  1140  000C18  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1141  000C1A  EF11  F006         	goto	u691
  1142  000C1E  EF13  F006         	goto	u690
  1143  000C22                     u691:
  1144  000C22  EF08  F006         	goto	l1769
  1145  000C26                     u690:
  1146  000C26                     l1773:
  1147                           
  1148                           ; BSR set to: 0
  1149  000C26  51C4               	movf	___awmod@divisor& (0+255),w,b
  1150  000C28  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1151  000C2A  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1152  000C2C  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1153  000C2E  A0D8               	btfss	status,0,c
  1154  000C30  EF1C  F006         	goto	u701
  1155  000C34  EF1E  F006         	goto	u700
  1156  000C38                     u701:
  1157  000C38  EF22  F006         	goto	l1777
  1158  000C3C                     u700:
  1159  000C3C                     
  1160                           ; BSR set to: 0
  1161  000C3C  51C4               	movf	___awmod@divisor& (0+255),w,b
  1162  000C3E  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1163  000C40  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1164  000C42  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1165  000C44                     l1777:
  1166                           
  1167                           ; BSR set to: 0
  1168  000C44  90D8               	bcf	status,0,c
  1169  000C46  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1170  000C48  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1171  000C4A                     
  1172                           ; BSR set to: 0
  1173  000C4A  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1174  000C4C  EF13  F006         	goto	l1773
  1175  000C50                     l1781:
  1176                           
  1177                           ; BSR set to: 0
  1178  000C50  51C7               	movf	___awmod@sign& (0+255),w,b
  1179  000C52  B4D8               	btfsc	status,2,c
  1180  000C54  EF2E  F006         	goto	u711
  1181  000C58  EF30  F006         	goto	u710
  1182  000C5C                     u711:
  1183  000C5C  EF34  F006         	goto	l1785
  1184  000C60                     u710:
  1185  000C60                     
  1186                           ; BSR set to: 0
  1187  000C60  6DC2               	negf	___awmod@dividend& (0+255),b
  1188  000C62  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1189  000C64  B0D8               	btfsc	status,0,c
  1190  000C66  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1191  000C68                     l1785:
  1192                           
  1193                           ; BSR set to: 0
  1194  000C68  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1195  000C6C  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1196  000C70                     
  1197                           ; BSR set to: 0
  1198  000C70  0012               	return		;funcret
  1199  000C72                     __end_of___awmod:
  1200                           	opt callstack 0
  1201                           
  1202 ;; *************** function _metToucheCombien *****************
  1203 ;; Defined at:
  1204 ;;		line 150 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  j               1   22[BANK0 ] unsigned char 
  1209 ;;  i               1   21[BANK0 ] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1219 ;;      Params:         0       0       0       0       0       0       0
  1220 ;;      Locals:         0       2       0       0       0       0       0
  1221 ;;      Temps:          0       3       0       0       0       0       0
  1222 ;;      Totals:         0       5       0       0       0       0       0
  1223 ;;Total ram usage:        5 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    2
  1226 ;; This function calls:
  1227 ;;		_calculToucheCombien
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text5
  1234  000796                     __ptext5:
  1235                           	opt callstack 0
  1236  000796                     _metToucheCombien:
  1237                           	opt callstack 28
  1238  000796                     
  1239                           ;main.c: 152: for (char i = 0; i < 4; i++)
  1240  000796  0E00               	movlw	0
  1241  000798  0100               	movlb	0	; force () banked
  1242  00079A  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1243  00079C                     
  1244                           ; BSR set to: 0
  1245  00079C  0E03               	movlw	3
  1246  00079E  0100               	movlb	0	; force () banked
  1247  0007A0  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1248  0007A2  EFD5  F003         	goto	u851
  1249  0007A6  EFD7  F003         	goto	u850
  1250  0007AA                     u851:
  1251  0007AA  EFD9  F003         	goto	l1883
  1252  0007AE                     u850:
  1253  0007AE  EF79  F004         	goto	l88
  1254  0007B2                     l1883:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;main.c: 153: {;main.c: 154: for(char j=0;j<20;j++)
  1258  0007B2  0E00               	movlw	0
  1259  0007B4  0100               	movlb	0	; force () banked
  1260  0007B6  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1261  0007B8                     
  1262                           ; BSR set to: 0
  1263  0007B8  0E13               	movlw	19
  1264  0007BA  0100               	movlb	0	; force () banked
  1265  0007BC  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1266  0007BE  EFE3  F003         	goto	u861
  1267  0007C2  EFE5  F003         	goto	u860
  1268  0007C6                     u861:
  1269  0007C6  EFE7  F003         	goto	l1889
  1270  0007CA                     u860:
  1271  0007CA  EF6E  F004         	goto	l1901
  1272  0007CE                     l1889:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 155: {;main.c: 156: if(m_tabMines[i][j]!=2)
  1276  0007CE  0100               	movlb	0	; force () banked
  1277  0007D0  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1278  0007D2  0D15               	mullw	21
  1279  0007D4  0E60               	movlw	low _m_tabMines
  1280  0007D6  0100               	movlb	0	; force () banked
  1281  0007D8  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1282  0007DA  0E00               	movlw	high _m_tabMines
  1283  0007DC  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1284  0007DE  50F3               	movf	243,w,c
  1285  0007E0  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1286  0007E2  50F4               	movf	244,w,c
  1287  0007E4  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1288  0007E6  0100               	movlb	0	; force () banked
  1289  0007E8  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1290  0007EA  0100               	movlb	0	; force () banked
  1291  0007EC  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1292  0007EE  6ED9               	movwf	fsr2l,c
  1293  0007F0  0100               	movlb	0	; force () banked
  1294  0007F2  0E00               	movlw	0
  1295  0007F4  0100               	movlb	0	; force () banked
  1296  0007F6  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1297  0007F8  6EDA               	movwf	fsr2h,c
  1298  0007FA  0E02               	movlw	2
  1299  0007FC  18DE               	xorwf	postinc2,w,c
  1300  0007FE  B4D8               	btfsc	status,2,c
  1301  000800  EF04  F004         	goto	u871
  1302  000804  EF06  F004         	goto	u870
  1303  000808                     u871:
  1304  000808  EF2C  F004         	goto	l1893
  1305  00080C                     u870:
  1306  00080C                     
  1307                           ; BSR set to: 0
  1308                           ;main.c: 157: m_tabMines[i][j]=calculToucheCombien(i,j)+48;
  1309  00080C  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1310  000810  0100               	movlb	0	; force () banked
  1311  000812  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1312  000814  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1313  000818  0100               	movlb	0	; force () banked
  1314  00081A  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1315  00081C  EC0A  F003         	call	_calculToucheCombien	;wreg free
  1316  000820  0100               	movlb	0	; force () banked
  1317  000822  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1318  000824  0E30               	movlw	48
  1319  000826  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1320  000828  0100               	movlb	0	; force () banked
  1321  00082A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1322  00082C  0D15               	mullw	21
  1323  00082E  0E60               	movlw	low _m_tabMines
  1324  000830  0100               	movlb	0	; force () banked
  1325  000832  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1326  000834  0E00               	movlw	high _m_tabMines
  1327  000836  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1328  000838  50F3               	movf	243,w,c
  1329  00083A  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1330  00083C  50F4               	movf	244,w,c
  1331  00083E  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1332  000840  0100               	movlb	0	; force () banked
  1333  000842  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1334  000844  0100               	movlb	0	; force () banked
  1335  000846  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1336  000848  6ED9               	movwf	fsr2l,c
  1337  00084A  0100               	movlb	0	; force () banked
  1338  00084C  0E00               	movlw	0
  1339  00084E  0100               	movlb	0	; force () banked
  1340  000850  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1341  000852  6EDA               	movwf	fsr2h,c
  1342  000854  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1343  000858                     l1893:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 158: if(m_tabMines[i][j]=='0')
  1347  000858  0100               	movlb	0	; force () banked
  1348  00085A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1349  00085C  0D15               	mullw	21
  1350  00085E  0E60               	movlw	low _m_tabMines
  1351  000860  0100               	movlb	0	; force () banked
  1352  000862  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1353  000864  0E00               	movlw	high _m_tabMines
  1354  000866  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1355  000868  50F3               	movf	243,w,c
  1356  00086A  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1357  00086C  50F4               	movf	244,w,c
  1358  00086E  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1359  000870  0100               	movlb	0	; force () banked
  1360  000872  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1361  000874  0100               	movlb	0	; force () banked
  1362  000876  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1363  000878  6ED9               	movwf	fsr2l,c
  1364  00087A  0100               	movlb	0	; force () banked
  1365  00087C  0E00               	movlw	0
  1366  00087E  0100               	movlb	0	; force () banked
  1367  000880  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1368  000882  6EDA               	movwf	fsr2h,c
  1369  000884  0E30               	movlw	48
  1370  000886  18DE               	xorwf	postinc2,w,c
  1371  000888  A4D8               	btfss	status,2,c
  1372  00088A  EF49  F004         	goto	u881
  1373  00088E  EF4B  F004         	goto	u880
  1374  000892                     u881:
  1375  000892  EF63  F004         	goto	l1897
  1376  000896                     u880:
  1377  000896                     
  1378                           ; BSR set to: 0
  1379                           ;main.c: 159: m_tabMines[i][j]=' ';
  1380  000896  0100               	movlb	0	; force () banked
  1381  000898  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1382  00089A  0D15               	mullw	21
  1383  00089C  0E60               	movlw	low _m_tabMines
  1384  00089E  0100               	movlb	0	; force () banked
  1385  0008A0  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1386  0008A2  0E00               	movlw	high _m_tabMines
  1387  0008A4  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1388  0008A6  50F3               	movf	243,w,c
  1389  0008A8  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1390  0008AA  50F4               	movf	244,w,c
  1391  0008AC  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1392  0008AE  0100               	movlb	0	; force () banked
  1393  0008B0  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1394  0008B2  0100               	movlb	0	; force () banked
  1395  0008B4  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1396  0008B6  6ED9               	movwf	fsr2l,c
  1397  0008B8  0100               	movlb	0	; force () banked
  1398  0008BA  0E00               	movlw	0
  1399  0008BC  0100               	movlb	0	; force () banked
  1400  0008BE  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1401  0008C0  6EDA               	movwf	fsr2h,c
  1402  0008C2  0E20               	movlw	32
  1403  0008C4  6EDF               	movwf	indf2,c
  1404  0008C6                     l1897:
  1405                           
  1406                           ; BSR set to: 0
  1407  0008C6  0100               	movlb	0	; force () banked
  1408  0008C8  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1409  0008CA                     
  1410                           ; BSR set to: 0
  1411  0008CA  0E13               	movlw	19
  1412  0008CC  0100               	movlb	0	; force () banked
  1413  0008CE  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1414  0008D0  EF6C  F004         	goto	u891
  1415  0008D4  EF6E  F004         	goto	u890
  1416  0008D8                     u891:
  1417  0008D8  EFE7  F003         	goto	l1889
  1418  0008DC                     u890:
  1419  0008DC                     l1901:
  1420                           
  1421                           ; BSR set to: 0
  1422  0008DC  0100               	movlb	0	; force () banked
  1423  0008DE  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1424  0008E0                     
  1425                           ; BSR set to: 0
  1426  0008E0  0E03               	movlw	3
  1427  0008E2  0100               	movlb	0	; force () banked
  1428  0008E4  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1429  0008E6  EF77  F004         	goto	u901
  1430  0008EA  EF79  F004         	goto	u900
  1431  0008EE                     u901:
  1432  0008EE  EFD9  F003         	goto	l1883
  1433  0008F2                     u900:
  1434  0008F2                     l88:
  1435                           
  1436                           ; BSR set to: 0
  1437  0008F2  0012               	return		;funcret
  1438  0008F4                     __end_of_metToucheCombien:
  1439                           	opt callstack 0
  1440                           
  1441 ;; *************** function _calculToucheCombien *****************
  1442 ;; Defined at:
  1443 ;;		line 168 in file "main.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  ligne           2    6[BANK0 ] int 
  1446 ;;  colonne         2    8[BANK0 ] int 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  j               2   16[BANK0 ] int 
  1449 ;;  i               2   14[BANK0 ] int 
  1450 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      unsigned char 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1460 ;;      Params:         0       4       0       0       0       0       0
  1461 ;;      Locals:         0       5       0       0       0       0       0
  1462 ;;      Temps:          0       3       0       0       0       0       0
  1463 ;;      Totals:         0      12       0       0       0       0       0
  1464 ;;Total ram usage:       12 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    1
  1467 ;; This function calls:
  1468 ;;		___wmul
  1469 ;; This function is called by:
  1470 ;;		_metToucheCombien
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text6
  1475  000614                     __ptext6:
  1476                           	opt callstack 0
  1477  000614                     _calculToucheCombien:
  1478                           	opt callstack 28
  1479  000614                     
  1480                           ;main.c: 170: int i=ligne-1;
  1481  000614  0EFF               	movlw	255
  1482  000616  0100               	movlb	0	; force () banked
  1483  000618  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1484  00061A  0100               	movlb	0	; force () banked
  1485  00061C  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1486  00061E  0EFF               	movlw	255
  1487  000620  0100               	movlb	0	; force () banked
  1488  000622  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1489  000624  0100               	movlb	0	; force () banked
  1490  000626  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1491                           
  1492                           ;main.c: 171: int j=colonne-1;
  1493  000628  0EFF               	movlw	255
  1494  00062A  0100               	movlb	0	; force () banked
  1495  00062C  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1496  00062E  0100               	movlb	0	; force () banked
  1497  000630  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1498  000632  0EFF               	movlw	255
  1499  000634  0100               	movlb	0	; force () banked
  1500  000636  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1501  000638  0100               	movlb	0	; force () banked
  1502  00063A  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1503  00063C                     
  1504                           ; BSR set to: 0
  1505                           ;main.c: 172: char nbMines=0;
  1506  00063C  0E00               	movlw	0
  1507  00063E  0100               	movlb	0	; force () banked
  1508  000640  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1509  000642                     
  1510                           ; BSR set to: 0
  1511                           ;main.c: 174: if(i<0)
  1512  000642  0100               	movlb	0	; force () banked
  1513  000644  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1514  000646  EF29  F003         	goto	u550
  1515  00064A  EF27  F003         	goto	u551
  1516  00064E                     u551:
  1517  00064E  EF2E  F003         	goto	l1659
  1518  000652                     u550:
  1519  000652                     
  1520                           ; BSR set to: 0
  1521                           ;main.c: 175: i=0;
  1522  000652  0E00               	movlw	0
  1523  000654  0100               	movlb	0	; force () banked
  1524  000656  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1525  000658  0E00               	movlw	0
  1526  00065A  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1527  00065C                     l1659:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main.c: 176: if(j<0)
  1531  00065C  0100               	movlb	0	; force () banked
  1532  00065E  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1533  000660  EF36  F003         	goto	u560
  1534  000664  EF34  F003         	goto	u561
  1535  000668                     u561:
  1536  000668  EF9C  F003         	goto	l1673
  1537  00066C                     u560:
  1538  00066C                     
  1539                           ; BSR set to: 0
  1540                           ;main.c: 177: j=0;
  1541  00066C  0E00               	movlw	0
  1542  00066E  0100               	movlb	0	; force () banked
  1543  000670  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1544  000672  0E00               	movlw	0
  1545  000674  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1546  000676  EF9C  F003         	goto	l1673
  1547  00067A                     l1663:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 182: {;main.c: 183: if (m_tabMines[i][j]==2)
  1551  00067A  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1552  00067E  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1553  000682  0E00               	movlw	0
  1554  000684  0100               	movlb	0	; force () banked
  1555  000686  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1556  000688  0E15               	movlw	21
  1557  00068A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1558  00068C  ECB3  F008         	call	___wmul	;wreg free
  1559  000690  0E60               	movlw	low _m_tabMines
  1560  000692  0100               	movlb	0	; force () banked
  1561  000694  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1562  000696  0E00               	movlw	high _m_tabMines
  1563  000698  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1564  00069A  0100               	movlb	0	; force () banked
  1565  00069C  51B4               	movf	?___wmul& (0+255),w,b
  1566  00069E  0100               	movlb	0	; force () banked
  1567  0006A0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1568  0006A2  0100               	movlb	0	; force () banked
  1569  0006A4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1570  0006A6  0100               	movlb	0	; force () banked
  1571  0006A8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1572  0006AA  0100               	movlb	0	; force () banked
  1573  0006AC  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1574  0006AE  0100               	movlb	0	; force () banked
  1575  0006B0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1576  0006B2  6ED9               	movwf	fsr2l,c
  1577  0006B4  0100               	movlb	0	; force () banked
  1578  0006B6  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1579  0006B8  0100               	movlb	0	; force () banked
  1580  0006BA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1581  0006BC  6EDA               	movwf	fsr2h,c
  1582  0006BE  0E02               	movlw	2
  1583  0006C0  18DE               	xorwf	postinc2,w,c
  1584  0006C2  A4D8               	btfss	status,2,c
  1585  0006C4  EF66  F003         	goto	u571
  1586  0006C8  EF68  F003         	goto	u570
  1587  0006CC                     u571:
  1588  0006CC  EF6A  F003         	goto	l97
  1589  0006D0                     u570:
  1590  0006D0                     
  1591                           ; BSR set to: 0
  1592                           ;main.c: 184: nbMines++;
  1593  0006D0  0100               	movlb	0	; force () banked
  1594  0006D2  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1595  0006D4                     l97:
  1596                           
  1597                           ; BSR set to: 0
  1598  0006D4  0100               	movlb	0	; force () banked
  1599  0006D6  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1600  0006D8  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1601  0006DA                     l1667:
  1602                           
  1603                           ; BSR set to: 0
  1604  0006DA  0E01               	movlw	1
  1605  0006DC  0100               	movlb	0	; force () banked
  1606  0006DE  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1607  0006E0  0100               	movlb	0	; force () banked
  1608  0006E2  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1609  0006E4  0E00               	movlw	0
  1610  0006E6  0100               	movlb	0	; force () banked
  1611  0006E8  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1612  0006EA  0100               	movlb	0	; force () banked
  1613  0006EC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1614  0006EE  0100               	movlb	0	; force () banked
  1615  0006F0  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1616  0006F2  0100               	movlb	0	; force () banked
  1617  0006F4  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1618  0006F6  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1619  0006F8  0A80               	xorlw	128
  1620  0006FA  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1621  0006FC  0100               	movlb	0	; force () banked
  1622  0006FE  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1623  000700  0A80               	xorlw	128
  1624  000702  0100               	movlb	0	; force () banked
  1625  000704  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1626  000706  A0D8               	btfss	status,0,c
  1627  000708  EF88  F003         	goto	u581
  1628  00070C  EF8A  F003         	goto	u580
  1629  000710                     u581:
  1630  000710  EF99  F003         	goto	l1671
  1631  000714                     u580:
  1632  000714                     
  1633                           ; BSR set to: 0
  1634  000714  0100               	movlb	0	; force () banked
  1635  000716  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1636  000718  EF97  F003         	goto	u591
  1637  00071C  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1638  00071E  E109               	bnz	u590
  1639  000720  0E14               	movlw	20
  1640  000722  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1641  000724  A0D8               	btfss	status,0,c
  1642  000726  EF97  F003         	goto	u591
  1643  00072A  EF99  F003         	goto	u590
  1644  00072E                     u591:
  1645  00072E  EF3D  F003         	goto	l1663
  1646  000732                     u590:
  1647  000732                     l1671:
  1648                           
  1649                           ; BSR set to: 0
  1650  000732  0100               	movlb	0	; force () banked
  1651  000734  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1652  000736  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1653  000738                     l1673:
  1654                           
  1655                           ; BSR set to: 0
  1656  000738  0E01               	movlw	1
  1657  00073A  0100               	movlb	0	; force () banked
  1658  00073C  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1659  00073E  0100               	movlb	0	; force () banked
  1660  000740  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1661  000742  0E00               	movlw	0
  1662  000744  0100               	movlb	0	; force () banked
  1663  000746  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1664  000748  0100               	movlb	0	; force () banked
  1665  00074A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1666  00074C  0100               	movlb	0	; force () banked
  1667  00074E  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1668  000750  0100               	movlb	0	; force () banked
  1669  000752  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1670  000754  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1671  000756  0A80               	xorlw	128
  1672  000758  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1673  00075A  0100               	movlb	0	; force () banked
  1674  00075C  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1675  00075E  0A80               	xorlw	128
  1676  000760  0100               	movlb	0	; force () banked
  1677  000762  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1678  000764  A0D8               	btfss	status,0,c
  1679  000766  EFB7  F003         	goto	u601
  1680  00076A  EFB9  F003         	goto	u600
  1681  00076E                     u601:
  1682  00076E  EFC8  F003         	goto	l1677
  1683  000772                     u600:
  1684  000772                     
  1685                           ; BSR set to: 0
  1686  000772  0100               	movlb	0	; force () banked
  1687  000774  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1688  000776  EFC6  F003         	goto	u611
  1689  00077A  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1690  00077C  E109               	bnz	u610
  1691  00077E  0E04               	movlw	4
  1692  000780  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1693  000782  A0D8               	btfss	status,0,c
  1694  000784  EFC6  F003         	goto	u611
  1695  000788  EFC8  F003         	goto	u610
  1696  00078C                     u611:
  1697  00078C  EF6D  F003         	goto	l1667
  1698  000790                     u610:
  1699  000790                     l1677:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;main.c: 185: };main.c: 186: };main.c: 187: return nbMines;
  1703  000790  0100               	movlb	0	; force () banked
  1704  000792  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1705  000794                     
  1706                           ; BSR set to: 0
  1707  000794  0012               	return		;funcret
  1708  000796                     __end_of_calculToucheCombien:
  1709                           	opt callstack 0
  1710                           
  1711 ;; *************** function ___wmul *****************
  1712 ;; Defined at:
  1713 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1716 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  product         2    4[BANK0 ] unsigned int 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2    0[BANK0 ] unsigned int 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, prodl, prodh
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1728 ;;      Params:         0       4       0       0       0       0       0
  1729 ;;      Locals:         0       2       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0
  1731 ;;      Totals:         0       6       0       0       0       0       0
  1732 ;;Total ram usage:        6 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_calculToucheCombien
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text7
  1742  001166                     __ptext7:
  1743                           	opt callstack 0
  1744  001166                     ___wmul:
  1745                           	opt callstack 28
  1746  001166  0100               	movlb	0	; () banked
  1747  001168  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1748  00116A  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1749  00116C  CFF3 F0B8          	movff	prodl,___wmul@product
  1750  001170  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1751  001174  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1752  001176  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1753  001178  50F3               	movf	243,w,c
  1754  00117A  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1755  00117C  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1756  00117E  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1757  001180  50F3               	movf	243,w,c
  1758  001182  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1759  001184                     
  1760                           ; BSR set to: 0
  1761  001184  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1762  001188  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1763  00118C                     
  1764                           ; BSR set to: 0
  1765  00118C  0012               	return		;funcret
  1766  00118E                     __end_of___wmul:
  1767                           	opt callstack 0
  1768                           
  1769 ;; *************** function _lcd_putMessage *****************
  1770 ;; Defined at:
  1771 ;;		line 387 in file "Lcd4Lignes.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  1774 ;;		 -> m_tabMines(84), STR_1(17), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  j               1   13[BANK0 ] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1786 ;;      Params:         0       3       0       0       0       0       0
  1787 ;;      Locals:         0       1       0       0       0       0       0
  1788 ;;      Temps:          0       5       0       0       0       0       0
  1789 ;;      Totals:         0       9       0       0       0       0       0
  1790 ;;Total ram usage:        9 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    4
  1793 ;; This function calls:
  1794 ;;		_lcd_ecritChar
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text8
  1801  000B0C                     __ptext8:
  1802                           	opt callstack 0
  1803  000B0C                     _lcd_putMessage:
  1804                           	opt callstack 26
  1805  000B0C                     
  1806                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  1807  000B0C  0E00               	movlw	0
  1808  000B0E  0100               	movlb	0	; force () banked
  1809  000B10  6FC1               	movwf	lcd_putMessage@j& (0+255),b
  1810  000B12  EFB3  F005         	goto	l1819
  1811  000B16                     l1815:
  1812                           
  1813                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  1814  000B16  0100               	movlb	0	; force () banked
  1815  000B18  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  1816  000B1A  0100               	movlb	0	; force () banked
  1817  000B1C  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  1818  000B1E  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  1819  000B20  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  1820  000B22  0100               	movlb	0	; force () banked
  1821  000B24  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1822  000B26  0100               	movlb	0	; force () banked
  1823  000B28  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  1824  000B2A  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  1825  000B2C  0100               	movlb	0	; force () banked
  1826  000B2E  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1827  000B30  0100               	movlb	0	; force () banked
  1828  000B32  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  1829  000B34  0E00               	movlw	0
  1830  000B36  0100               	movlb	0	; force () banked
  1831  000B38  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  1832  000B3A  0100               	movlb	0	; force () banked
  1833  000B3C  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  1834  000B3E  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  1835  000B42  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  1836  000B46  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  1837  000B4A  BAF8               	btfsc	tblptru,5,c
  1838  000B4C  D003               	bra	u727
  1839  000B4E  0008               	tblrd		*
  1840  000B50  50F5               	movf	tablat,w,c
  1841  000B52  D005               	bra	u720
  1842  000B54                     u727:
  1843  000B54  CFF6 FFD9          	movff	tblptrl,fsr2l
  1844  000B58  CFF7 FFDA          	movff	tblptrh,fsr2h
  1845  000B5C  50DF               	movf	indf2,w,c
  1846  000B5E                     u720:
  1847  000B5E  EC14  F008         	call	_lcd_ecritChar
  1848  000B62  0100               	movlb	0	; force () banked
  1849  000B64  2BC1               	incf	lcd_putMessage@j& (0+255),f,b
  1850  000B66                     l1819:
  1851                           
  1852                           ; BSR set to: 0
  1853  000B66  0100               	movlb	0	; force () banked
  1854  000B68  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  1855  000B6A  0100               	movlb	0	; force () banked
  1856  000B6C  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  1857  000B6E  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  1858  000B70  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  1859  000B72  0100               	movlb	0	; force () banked
  1860  000B74  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1861  000B76  0100               	movlb	0	; force () banked
  1862  000B78  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  1863  000B7A  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  1864  000B7C  0100               	movlb	0	; force () banked
  1865  000B7E  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1866  000B80  0100               	movlb	0	; force () banked
  1867  000B82  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  1868  000B84  0E00               	movlw	0
  1869  000B86  0100               	movlb	0	; force () banked
  1870  000B88  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  1871  000B8A  0100               	movlb	0	; force () banked
  1872  000B8C  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  1873  000B8E  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  1874  000B92  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  1875  000B96  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  1876  000B9A  BAF8               	btfsc	tblptru,5,c
  1877  000B9C  D003               	bra	u737
  1878  000B9E  0008               	tblrd		*
  1879  000BA0  50F5               	movf	tablat,w,c
  1880  000BA2  D005               	bra	u730
  1881  000BA4                     u737:
  1882  000BA4  CFF6 FFD9          	movff	tblptrl,fsr2l
  1883  000BA8  CFF7 FFDA          	movff	tblptrh,fsr2h
  1884  000BAC  50DF               	movf	indf2,w,c
  1885  000BAE                     u730:
  1886  000BAE  0900               	iorlw	0
  1887  000BB0  A4D8               	btfss	status,2,c
  1888  000BB2  EFDD  F005         	goto	u741
  1889  000BB6  EFDF  F005         	goto	u740
  1890  000BBA                     u741:
  1891  000BBA  EF8B  F005         	goto	l1815
  1892  000BBE                     u740:
  1893  000BBE  0012               	return		;funcret
  1894  000BC0                     __end_of_lcd_putMessage:
  1895                           	opt callstack 0
  1896                           
  1897 ;; *************** function _lcd_ecritChar *****************
  1898 ;; Defined at:
  1899 ;;		line 359 in file "Lcd4Lignes.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  car             1    wreg     unsigned char 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  car             1    3[BANK0 ] unsigned char 
  1904 ;;  posRam          1    4[BANK0 ] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         0       0       0       0       0       0       0
  1915 ;;      Locals:         0       2       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0
  1917 ;;      Totals:         0       2       0       0       0       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    3
  1921 ;; This function calls:
  1922 ;;		_lcd_wrCom
  1923 ;;		_lcd_wrData
  1924 ;; This function is called by:
  1925 ;;		_lcd_putMessage
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text9
  1930  001028                     __ptext9:
  1931                           	opt callstack 0
  1932  001028                     _lcd_ecritChar:
  1933                           	opt callstack 26
  1934                           
  1935                           ;incstack = 0
  1936                           ;lcd_ecritChar@car stored from wreg
  1937  001028  0100               	movlb	0	; force () banked
  1938  00102A  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  1939  00102C                     
  1940                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  1941  00102C  0100               	movlb	0	; force () banked
  1942  00102E  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  1943  001030  EC7F  F008         	call	_lcd_wrData
  1944  001034  0100               	movlb	0	; force () banked
  1945  001036  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  1946                           
  1947                           ;Lcd4Lignes.c: 364: switch(posRam)
  1948  001038  EF2D  F008         	goto	l1751
  1949  00103C                     l1743:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  1953  00103C  0EC0               	movlw	192
  1954  00103E  EC4F  F007         	call	_lcd_wrCom
  1955                           
  1956                           ;Lcd4Lignes.c: 368: break;
  1957  001042  EF3D  F008         	goto	l190
  1958  001046                     l1745:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  1962  001046  0E94               	movlw	148
  1963  001048  EC4F  F007         	call	_lcd_wrCom
  1964                           
  1965                           ;Lcd4Lignes.c: 371: break;
  1966  00104C  EF3D  F008         	goto	l190
  1967  001050                     l1747:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  1971  001050  0ED4               	movlw	212
  1972  001052  EC4F  F007         	call	_lcd_wrCom
  1973                           
  1974                           ;Lcd4Lignes.c: 374: break;
  1975  001056  EF3D  F008         	goto	l190
  1976  00105A                     l1751:
  1977                           
  1978                           ; BSR set to: 0
  1979  00105A  0100               	movlb	0	; force () banked
  1980  00105C  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  1981                           
  1982                           ; Switch size 1, requested type "simple"
  1983                           ; Number of cases is 3, Range of values is 148 to 212
  1984                           ; switch strategies available:
  1985                           ; Name         Instructions Cycles
  1986                           ; simple_byte           10     6 (average)
  1987                           ;	Chosen strategy is simple_byte
  1988  00105E  0A94               	xorlw	148	; case 148
  1989  001060  B4D8               	btfsc	status,2,c
  1990  001062  EF1E  F008         	goto	l1743
  1991  001066  0A54               	xorlw	84	; case 192
  1992  001068  B4D8               	btfsc	status,2,c
  1993  00106A  EF28  F008         	goto	l1747
  1994  00106E  0A14               	xorlw	20	; case 212
  1995  001070  B4D8               	btfsc	status,2,c
  1996  001072  EF23  F008         	goto	l1745
  1997  001076  EF3D  F008         	goto	l190
  1998  00107A                     l190:
  1999  00107A  0012               	return		;funcret
  2000  00107C                     __end_of_lcd_ecritChar:
  2001                           	opt callstack 0
  2002                           
  2003 ;; *************** function _lcd_init *****************
  2004 ;; Defined at:
  2005 ;;		line 258 in file "Lcd4Lignes.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2019 ;;      Params:         0       0       0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    5
  2026 ;; This function calls:
  2027 ;;		_lcd_initCGRam
  2028 ;;		_lcd_resetSequence
  2029 ;;		_lcd_wrCom
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text10
  2036  00118E                     __ptext10:
  2037                           	opt callstack 0
  2038  00118E                     _lcd_init:
  2039                           	opt callstack 25
  2040  00118E                     
  2041                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2042  00118E  EC85  F007         	call	_lcd_resetSequence	;wreg free
  2043                           
  2044                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2045  001192  0E28               	movlw	40
  2046  001194  EC4F  F007         	call	_lcd_wrCom
  2047                           
  2048                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2049  001198  0E0F               	movlw	15
  2050  00119A  EC4F  F007         	call	_lcd_wrCom
  2051                           
  2052                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2053  00119E  0E01               	movlw	1
  2054  0011A0  EC4F  F007         	call	_lcd_wrCom
  2055                           
  2056                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2057  0011A4  0E06               	movlw	6
  2058  0011A6  EC4F  F007         	call	_lcd_wrCom
  2059                           
  2060                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2061  0011AA  0E80               	movlw	128
  2062  0011AC  EC4F  F007         	call	_lcd_wrCom
  2063  0011B0                     
  2064                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2065  0011B0  EC8F  F006         	call	_lcd_initCGRam	;wreg free
  2066  0011B4  0012               	return		;funcret
  2067  0011B6                     __end_of_lcd_init:
  2068                           	opt callstack 0
  2069                           
  2070 ;; *************** function _lcd_resetSequence *****************
  2071 ;; Defined at:
  2072 ;;		line 221 in file "Lcd4Lignes.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2086 ;;      Params:         0       0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0
  2088 ;;      Temps:          0       1       0       0       0       0       0
  2089 ;;      Totals:         0       1       0       0       0       0       0
  2090 ;;Total ram usage:        1 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		_lcd_ecrireDonnees
  2095 ;;		_lcd_strobeEnableBit
  2096 ;; This function is called by:
  2097 ;;		_lcd_init
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text11
  2102  000F0A                     __ptext11:
  2103                           	opt callstack 0
  2104  000F0A                     _lcd_resetSequence:
  2105                           	opt callstack 28
  2106  000F0A                     
  2107                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2108  000F0A  0E00               	movlw	0
  2109  000F0C  6E95               	movwf	149,c	;volatile
  2110  000F0E                     
  2111                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2112  000F0E  0E0D               	movlw	13
  2113  000F10  0100               	movlb	0	; force () banked
  2114  000F12  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2115  000F14  0EFB               	movlw	251
  2116  000F16                     u957:
  2117  000F16  2EE8               	decfsz	wreg,f,c
  2118  000F18  D7FE               	bra	u957
  2119  000F1A  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2120  000F1C  D7FC               	bra	u957
  2121  000F1E  F000 F000          	nop2	
  2122  000F22                     
  2123                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2124  000F22  9080               	bcf	128,0,c	;volatile
  2125  000F24                     
  2126                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2127  000F24  9280               	bcf	128,1,c	;volatile
  2128  000F26                     
  2129                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2130  000F26  0E03               	movlw	3
  2131  000F28  ECDB  F008         	call	_lcd_ecrireDonnees
  2132  000F2C                     
  2133                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2134  000F2C  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2135  000F30                     
  2136                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2137  000F30  0E03               	movlw	3
  2138  000F32                     u967:
  2139  000F32  2EE8               	decfsz	wreg,f,c
  2140  000F34  D7FE               	bra	u967
  2141  000F36  F000               	nop	
  2142  000F38                     
  2143                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2144  000F38  0E03               	movlw	3
  2145  000F3A  ECDB  F008         	call	_lcd_ecrireDonnees
  2146  000F3E                     
  2147                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2148  000F3E  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2149  000F42                     
  2150                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2151  000F42  0E03               	movlw	3
  2152  000F44                     u977:
  2153  000F44  2EE8               	decfsz	wreg,f,c
  2154  000F46  D7FE               	bra	u977
  2155  000F48  F000               	nop	
  2156  000F4A                     
  2157                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2158  000F4A  0E03               	movlw	3
  2159  000F4C  ECDB  F008         	call	_lcd_ecrireDonnees
  2160  000F50                     
  2161                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2162  000F50  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2163  000F54                     
  2164                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2165  000F54  0E03               	movlw	3
  2166  000F56                     u987:
  2167  000F56  2EE8               	decfsz	wreg,f,c
  2168  000F58  D7FE               	bra	u987
  2169  000F5A  F000               	nop	
  2170  000F5C                     
  2171                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2172  000F5C  0E02               	movlw	2
  2173  000F5E  ECDB  F008         	call	_lcd_ecrireDonnees
  2174  000F62                     
  2175                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2176  000F62  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2177  000F66                     
  2178                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2179  000F66  0E03               	movlw	3
  2180  000F68                     u997:
  2181  000F68  2EE8               	decfsz	wreg,f,c
  2182  000F6A  D7FE               	bra	u997
  2183  000F6C  F000               	nop	
  2184  000F6E                     
  2185                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2186  000F6E  0E0F               	movlw	15
  2187  000F70  6E95               	movwf	149,c	;volatile
  2188  000F72  0012               	return		;funcret
  2189  000F74                     __end_of_lcd_resetSequence:
  2190                           	opt callstack 0
  2191                           
  2192 ;; *************** function _lcd_initCGRam *****************
  2193 ;; Defined at:
  2194 ;;		line 417 in file "Lcd4Lignes.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  j               1    6[BANK0 ] unsigned char 
  2199 ;;  i               1    5[BANK0 ] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2209 ;;      Params:         0       0       0       0       0       0       0
  2210 ;;      Locals:         0       2       0       0       0       0       0
  2211 ;;      Temps:          0       2       0       0       0       0       0
  2212 ;;      Totals:         0       4       0       0       0       0       0
  2213 ;;Total ram usage:        4 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    4
  2216 ;; This function calls:
  2217 ;;		_lcd_curseurHome
  2218 ;;		_lcd_wrCom
  2219 ;;		_lcd_wrData
  2220 ;; This function is called by:
  2221 ;;		_lcd_init
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text12
  2226  000D1E                     __ptext12:
  2227                           	opt callstack 0
  2228  000D1E                     _lcd_initCGRam:
  2229                           	opt callstack 25
  2230  000D1E                     
  2231                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2232  000D1E  0E40               	movlw	64
  2233  000D20  EC4F  F007         	call	_lcd_wrCom
  2234  000D24                     
  2235                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2236  000D24  0E00               	movlw	0
  2237  000D26  0100               	movlb	0	; force () banked
  2238  000D28  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2239  000D2A                     
  2240                           ; BSR set to: 0
  2241  000D2A  0E07               	movlw	7
  2242  000D2C  0100               	movlb	0	; force () banked
  2243  000D2E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2244  000D30  EF9C  F006         	goto	u621
  2245  000D34  EF9E  F006         	goto	u620
  2246  000D38                     u621:
  2247  000D38  EFA0  F006         	goto	l1723
  2248  000D3C                     u620:
  2249  000D3C  EFDD  F006         	goto	l1739
  2250  000D40                     l1723:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2254  000D40  0E00               	movlw	0
  2255  000D42  0100               	movlb	0	; force () banked
  2256  000D44  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2257  000D46                     
  2258                           ; BSR set to: 0
  2259  000D46  0E07               	movlw	7
  2260  000D48  0100               	movlb	0	; force () banked
  2261  000D4A  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2262  000D4C  EFAA  F006         	goto	u631
  2263  000D50  EFAC  F006         	goto	u630
  2264  000D54                     u631:
  2265  000D54  EFAE  F006         	goto	l1729
  2266  000D58                     u630:
  2267  000D58  EFD2  F006         	goto	l1735
  2268  000D5C                     l1729:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2272  000D5C  0100               	movlb	0	; force () banked
  2273  000D5E  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2274  000D60  0D08               	mullw	8
  2275  000D62  0E54               	movlw	low _matCGRAM
  2276  000D64  0100               	movlb	0	; force () banked
  2277  000D66  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2278  000D68  0E01               	movlw	high _matCGRAM
  2279  000D6A  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2280  000D6C  50F3               	movf	243,w,c
  2281  000D6E  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2282  000D70  50F4               	movf	244,w,c
  2283  000D72  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2284  000D74  0100               	movlb	0	; force () banked
  2285  000D76  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2286  000D78  0100               	movlb	0	; force () banked
  2287  000D7A  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2288  000D7C  6ED9               	movwf	fsr2l,c
  2289  000D7E  0100               	movlb	0	; force () banked
  2290  000D80  0E00               	movlw	0
  2291  000D82  0100               	movlb	0	; force () banked
  2292  000D84  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2293  000D86  6EDA               	movwf	fsr2h,c
  2294  000D88  50DF               	movf	indf2,w,c
  2295  000D8A  EC7F  F008         	call	_lcd_wrData
  2296  000D8E  0100               	movlb	0	; force () banked
  2297  000D90  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2298  000D92                     
  2299                           ; BSR set to: 0
  2300  000D92  0E07               	movlw	7
  2301  000D94  0100               	movlb	0	; force () banked
  2302  000D96  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2303  000D98  EFD0  F006         	goto	u641
  2304  000D9C  EFD2  F006         	goto	u640
  2305  000DA0                     u641:
  2306  000DA0  EFAE  F006         	goto	l1729
  2307  000DA4                     u640:
  2308  000DA4                     l1735:
  2309                           
  2310                           ; BSR set to: 0
  2311  000DA4  0100               	movlb	0	; force () banked
  2312  000DA6  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2313  000DA8                     
  2314                           ; BSR set to: 0
  2315  000DA8  0E07               	movlw	7
  2316  000DAA  0100               	movlb	0	; force () banked
  2317  000DAC  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2318  000DAE  EFDB  F006         	goto	u651
  2319  000DB2  EFDD  F006         	goto	u650
  2320  000DB6                     u651:
  2321  000DB6  EFA0  F006         	goto	l1723
  2322  000DBA                     u650:
  2323  000DBA                     l1739:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2327  000DBA  ECF1  F008         	call	_lcd_curseurHome	;wreg free
  2328  000DBE  0012               	return		;funcret
  2329  000DC0                     __end_of_lcd_initCGRam:
  2330                           	opt callstack 0
  2331                           
  2332 ;; *************** function _lcd_wrData *****************
  2333 ;; Defined at:
  2334 ;;		line 188 in file "Lcd4Lignes.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  caractere       1    wreg     unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  caractere       1    2[BANK0 ] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      unsigned char 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:         0       0       0       0       0       0       0
  2349 ;;      Locals:         0       1       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0
  2351 ;;      Totals:         0       1       0       0       0       0       0
  2352 ;;Total ram usage:        1 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    2
  2355 ;; This function calls:
  2356 ;;		_lcd_busy
  2357 ;;		_lcd_ecrireDonnees
  2358 ;;		_lcd_strobeEnableBit
  2359 ;; This function is called by:
  2360 ;;		_lcd_ecritChar
  2361 ;;		_lcd_initCGRam
  2362 ;;		_lcd_effaceChar
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text13
  2367  0010FE                     __ptext13:
  2368                           	opt callstack 0
  2369  0010FE                     _lcd_wrData:
  2370                           	opt callstack 26
  2371                           
  2372                           ;incstack = 0
  2373                           ;lcd_wrData@caractere stored from wreg
  2374  0010FE  0100               	movlb	0	; force () banked
  2375  001100  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  2376  001102                     
  2377                           ;Lcd4Lignes.c: 190: lcd_busy();
  2378  001102  EC3E  F008         	call	_lcd_busy	;wreg free
  2379  001106                     
  2380                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  2381  001106  0E00               	movlw	0
  2382  001108  6E95               	movwf	149,c	;volatile
  2383  00110A                     
  2384                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  2385  00110A  8080               	bsf	128,0,c	;volatile
  2386  00110C                     
  2387                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  2388  00110C  9280               	bcf	128,1,c	;volatile
  2389  00110E                     
  2390                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  2391  00110E  0100               	movlb	0	; force () banked
  2392  001110  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  2393  001112  0B0F               	andlw	15
  2394  001114  ECDB  F008         	call	_lcd_ecrireDonnees
  2395  001118                     
  2396                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  2397  001118  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2398  00111C                     
  2399                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  2400  00111C  0100               	movlb	0	; force () banked
  2401  00111E  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  2402  001120  ECDB  F008         	call	_lcd_ecrireDonnees
  2403  001124                     
  2404                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  2405  001124  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2406  001128                     
  2407                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  2408  001128  0E0F               	movlw	15
  2409  00112A  6E95               	movwf	149,c	;volatile
  2410  00112C                     
  2411                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  2412                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  2413  00112C  EC3E  F008         	call	_lcd_busy	;wreg free
  2414  001130  0012               	return		;funcret
  2415  001132                     __end_of_lcd_wrData:
  2416                           	opt callstack 0
  2417                           
  2418 ;; *************** function _lcd_curseurHome *****************
  2419 ;; Defined at:
  2420 ;;		line 288 in file "Lcd4Lignes.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2434 ;;      Params:         0       0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    3
  2441 ;; This function calls:
  2442 ;;		_lcd_wrCom
  2443 ;; This function is called by:
  2444 ;;		_lcd_initCGRam
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text14
  2449  0011E2                     __ptext14:
  2450                           	opt callstack 0
  2451  0011E2                     _lcd_curseurHome:
  2452                           	opt callstack 25
  2453  0011E2                     
  2454                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2455  0011E2  0E02               	movlw	2
  2456  0011E4  EC4F  F007         	call	_lcd_wrCom
  2457  0011E8  0012               	return		;funcret
  2458  0011EA                     __end_of_lcd_curseurHome:
  2459                           	opt callstack 0
  2460                           
  2461 ;; *************** function _lcd_gotoXY *****************
  2462 ;; Defined at:
  2463 ;;		line 314 in file "Lcd4Lignes.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  x               1    wreg     unsigned char 
  2466 ;;  y               1    3[BANK0 ] unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  x               1    4[BANK0 ] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2478 ;;      Params:         0       1       0       0       0       0       0
  2479 ;;      Locals:         0       1       0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0
  2481 ;;      Totals:         0       2       0       0       0       0       0
  2482 ;;Total ram usage:        2 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    3
  2485 ;; This function calls:
  2486 ;;		_lcd_wrCom
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;;		_lcd_effaceLigne
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text15
  2494  000DC0                     __ptext15:
  2495                           	opt callstack 0
  2496  000DC0                     _lcd_gotoXY:
  2497                           	opt callstack 27
  2498                           
  2499                           ;incstack = 0
  2500                           ;lcd_gotoXY@x stored from wreg
  2501  000DC0  0100               	movlb	0	; force () banked
  2502  000DC2  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  2503  000DC4                     
  2504                           ;Lcd4Lignes.c: 316: switch(y)
  2505  000DC4  EF04  F007         	goto	l1917
  2506  000DC8                     l1907:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  2510  000DC8  0100               	movlb	0	; force () banked
  2511  000DCA  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2512  000DCC  0F7F               	addlw	127
  2513  000DCE  0980               	iorlw	128
  2514  000DD0  EC4F  F007         	call	_lcd_wrCom
  2515                           
  2516                           ;Lcd4Lignes.c: 320: break;
  2517  000DD4  EF18  F007         	goto	l179
  2518  000DD8                     l1909:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  2522  000DD8  0100               	movlb	0	; force () banked
  2523  000DDA  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2524  000DDC  0FBF               	addlw	191
  2525  000DDE  0980               	iorlw	128
  2526  000DE0  EC4F  F007         	call	_lcd_wrCom
  2527                           
  2528                           ;Lcd4Lignes.c: 323: break;
  2529  000DE4  EF18  F007         	goto	l179
  2530  000DE8                     l1911:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  2534  000DE8  0100               	movlb	0	; force () banked
  2535  000DEA  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2536  000DEC  0F93               	addlw	147
  2537  000DEE  0980               	iorlw	128
  2538  000DF0  EC4F  F007         	call	_lcd_wrCom
  2539                           
  2540                           ;Lcd4Lignes.c: 326: break;
  2541  000DF4  EF18  F007         	goto	l179
  2542  000DF8                     l1913:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  2546  000DF8  0100               	movlb	0	; force () banked
  2547  000DFA  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2548  000DFC  0FD3               	addlw	211
  2549  000DFE  0980               	iorlw	128
  2550  000E00  EC4F  F007         	call	_lcd_wrCom
  2551                           
  2552                           ;Lcd4Lignes.c: 329: break;
  2553  000E04  EF18  F007         	goto	l179
  2554  000E08                     l1917:
  2555  000E08  0100               	movlb	0	; force () banked
  2556  000E0A  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  2557                           
  2558                           ; Switch size 1, requested type "simple"
  2559                           ; Number of cases is 4, Range of values is 1 to 4
  2560                           ; switch strategies available:
  2561                           ; Name         Instructions Cycles
  2562                           ; simple_byte           13     7 (average)
  2563                           ;	Chosen strategy is simple_byte
  2564  000E0C  0A01               	xorlw	1	; case 1
  2565  000E0E  B4D8               	btfsc	status,2,c
  2566  000E10  EFE4  F006         	goto	l1907
  2567  000E14  0A03               	xorlw	3	; case 2
  2568  000E16  B4D8               	btfsc	status,2,c
  2569  000E18  EFEC  F006         	goto	l1909
  2570  000E1C  0A01               	xorlw	1	; case 3
  2571  000E1E  B4D8               	btfsc	status,2,c
  2572  000E20  EFF4  F006         	goto	l1911
  2573  000E24  0A07               	xorlw	7	; case 4
  2574  000E26  B4D8               	btfsc	status,2,c
  2575  000E28  EFFC  F006         	goto	l1913
  2576  000E2C  EF18  F007         	goto	l179
  2577  000E30                     l179:
  2578  000E30  0012               	return		;funcret
  2579  000E32                     __end_of_lcd_gotoXY:
  2580                           	opt callstack 0
  2581                           
  2582 ;; *************** function _lcd_wrCom *****************
  2583 ;; Defined at:
  2584 ;;		line 156 in file "Lcd4Lignes.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  commande        1    wreg     unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  commande        1    2[BANK0 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2598 ;;      Params:         0       0       0       0       0       0       0
  2599 ;;      Locals:         0       1       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0
  2601 ;;      Totals:         0       1       0       0       0       0       0
  2602 ;;Total ram usage:        1 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    2
  2605 ;; This function calls:
  2606 ;;		_lcd_busy
  2607 ;;		_lcd_ecrireDonnees
  2608 ;;		_lcd_strobeEnableBit
  2609 ;; This function is called by:
  2610 ;;		_lcd_init
  2611 ;;		_lcd_curseurHome
  2612 ;;		_lcd_gotoXY
  2613 ;;		_lcd_ecritChar
  2614 ;;		_lcd_initCGRam
  2615 ;;		_lcd_effaceAffichage
  2616 ;;		_lcd_cacheCurseur
  2617 ;;		_lcd_montreCurseur
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text16
  2622  000E9E                     __ptext16:
  2623                           	opt callstack 0
  2624  000E9E                     _lcd_wrCom:
  2625                           	opt callstack 26
  2626                           
  2627                           ;incstack = 0
  2628                           ;lcd_wrCom@commande stored from wreg
  2629  000E9E  0100               	movlb	0	; force () banked
  2630  000EA0  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  2631  000EA2                     
  2632                           ;Lcd4Lignes.c: 158: lcd_busy();
  2633  000EA2  EC3E  F008         	call	_lcd_busy	;wreg free
  2634  000EA6                     
  2635                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  2636  000EA6  0E00               	movlw	0
  2637  000EA8  6E95               	movwf	149,c	;volatile
  2638  000EAA                     
  2639                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  2640  000EAA  9080               	bcf	128,0,c	;volatile
  2641  000EAC                     
  2642                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  2643  000EAC  9280               	bcf	128,1,c	;volatile
  2644  000EAE                     
  2645                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  2646  000EAE  0100               	movlb	0	; force () banked
  2647  000EB0  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  2648  000EB2  0B0F               	andlw	15
  2649  000EB4  ECDB  F008         	call	_lcd_ecrireDonnees
  2650  000EB8                     
  2651                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  2652  000EB8  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2653  000EBC                     
  2654                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  2655  000EBC  0100               	movlb	0	; force () banked
  2656  000EBE  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  2657  000EC0  ECDB  F008         	call	_lcd_ecrireDonnees
  2658  000EC4                     
  2659                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  2660  000EC4  ECF5  F008         	call	_lcd_strobeEnableBit	;wreg free
  2661  000EC8                     
  2662                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2663  000EC8  0E03               	movlw	3
  2664  000ECA                     u1007:
  2665  000ECA  2EE8               	decfsz	wreg,f,c
  2666  000ECC  D7FE               	bra	u1007
  2667  000ECE  F000               	nop	
  2668  000ED0                     
  2669                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  2670  000ED0  0100               	movlb	0	; force () banked
  2671  000ED2  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  2672  000ED4  B4D8               	btfsc	status,2,c
  2673  000ED6  EF6F  F007         	goto	u511
  2674  000EDA  EF71  F007         	goto	u510
  2675  000EDE                     u511:
  2676  000EDE  EF7B  F007         	goto	l1585
  2677  000EE2                     u510:
  2678  000EE2                     
  2679                           ; BSR set to: 0
  2680  000EE2  0E02               	movlw	2
  2681  000EE4  0100               	movlb	0	; force () banked
  2682  000EE6  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  2683  000EE8  A4D8               	btfss	status,2,c
  2684  000EEA  EF79  F007         	goto	u521
  2685  000EEE  EF7B  F007         	goto	u520
  2686  000EF2                     u521:
  2687  000EF2  EF80  F007         	goto	l1587
  2688  000EF6                     u520:
  2689  000EF6                     l1585:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  2693  000EF6  0EA6               	movlw	166
  2694  000EF8                     u1017:
  2695  000EF8  2EE8               	decfsz	wreg,f,c
  2696  000EFA  D7FE               	bra	u1017
  2697  000EFC  F000 F000          	nop2	
  2698  000F00                     l1587:
  2699                           
  2700                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  2701  000F00  0E0F               	movlw	15
  2702  000F02  6E95               	movwf	149,c	;volatile
  2703  000F04                     
  2704                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  2705  000F04  EC3E  F008         	call	_lcd_busy	;wreg free
  2706  000F08  0012               	return		;funcret
  2707  000F0A                     __end_of_lcd_wrCom:
  2708                           	opt callstack 0
  2709                           
  2710 ;; *************** function _lcd_strobeEnableBit *****************
  2711 ;; Defined at:
  2712 ;;		line 431 in file "Lcd4Lignes.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		None
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2726 ;;      Params:         0       0       0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0
  2729 ;;      Totals:         0       0       0       0       0       0       0
  2730 ;;Total ram usage:        0 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_lcd_wrCom
  2736 ;;		_lcd_wrData
  2737 ;;		_lcd_resetSequence
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text17
  2742  0011EA                     __ptext17:
  2743                           	opt callstack 0
  2744  0011EA                     _lcd_strobeEnableBit:
  2745                           	opt callstack 27
  2746  0011EA                     
  2747                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  2748  0011EA  8480               	bsf	128,2,c	;volatile
  2749                           
  2750                           ;Lcd4Lignes.c: 434: __nop();
  2751  0011EC  F000               	nop	
  2752                           
  2753                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  2754  0011EE  9480               	bcf	128,2,c	;volatile
  2755  0011F0  0012               	return		;funcret
  2756  0011F2                     __end_of_lcd_strobeEnableBit:
  2757                           	opt callstack 0
  2758                           
  2759 ;; *************** function _lcd_ecrireDonnees *****************
  2760 ;; Defined at:
  2761 ;;		line 107 in file "Lcd4Lignes.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  donnee          1    wreg     unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  donnee          1    1[BANK0 ] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2775 ;;      Params:         0       0       0       0       0       0       0
  2776 ;;      Locals:         0       1       0       0       0       0       0
  2777 ;;      Temps:          0       1       0       0       0       0       0
  2778 ;;      Totals:         0       2       0       0       0       0       0
  2779 ;;Total ram usage:        2 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_lcd_wrCom
  2785 ;;		_lcd_wrData
  2786 ;;		_lcd_resetSequence
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text18
  2791  0011B6                     __ptext18:
  2792                           	opt callstack 0
  2793  0011B6                     _lcd_ecrireDonnees:
  2794                           	opt callstack 27
  2795                           
  2796                           ;incstack = 0
  2797                           ;lcd_ecrireDonnees@donnee stored from wreg
  2798  0011B6  0100               	movlb	0	; force () banked
  2799  0011B8  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  2800  0011BA                     
  2801                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  2802  0011BA  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  2803  0011BE  0EF0               	movlw	240
  2804  0011C0  0100               	movlb	0	; force () banked
  2805  0011C2  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  2806  0011C4  0100               	movlb	0	; force () banked
  2807  0011C6  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  2808  0011C8  0B0F               	andlw	15
  2809  0011CA  0100               	movlb	0	; force () banked
  2810  0011CC  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  2811  0011CE  6E83               	movwf	131,c	;volatile
  2812  0011D0                     
  2813                           ; BSR set to: 0
  2814  0011D0  0012               	return		;funcret
  2815  0011D2                     __end_of_lcd_ecrireDonnees:
  2816                           	opt callstack 0
  2817                           
  2818 ;; *************** function _lcd_busy *****************
  2819 ;; Defined at:
  2820 ;;		line 124 in file "Lcd4Lignes.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  adresse         1    1[BANK0 ] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      unsigned char 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2834 ;;      Params:         0       0       0       0       0       0       0
  2835 ;;      Locals:         0       1       0       0       0       0       0
  2836 ;;      Temps:          0       1       0       0       0       0       0
  2837 ;;      Totals:         0       2       0       0       0       0       0
  2838 ;;Total ram usage:        2 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    1
  2841 ;; This function calls:
  2842 ;;		_lcd_lireDonnees
  2843 ;; This function is called by:
  2844 ;;		_lcd_wrCom
  2845 ;;		_lcd_wrData
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text19
  2850  00107C                     __ptext19:
  2851                           	opt callstack 0
  2852  00107C                     _lcd_busy:
  2853                           	opt callstack 26
  2854  00107C                     
  2855                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  2856  00107C  9080               	bcf	128,0,c	;volatile
  2857                           
  2858                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  2859  00107E  8280               	bsf	128,1,c	;volatile
  2860  001080                     l141:
  2861                           
  2862                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  2863  001080  8480               	bsf	128,2,c	;volatile
  2864                           
  2865                           ;Lcd4Lignes.c: 134: __nop();
  2866  001082  F000               	nop	
  2867  001084                     
  2868                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  2869  001084  ECF9  F008         	call	_lcd_lireDonnees	;wreg free
  2870  001088  0100               	movlb	0	; force () banked
  2871  00108A  6FB4               	movwf	??_lcd_busy& (0+255),b
  2872  00108C  39B4               	swapf	??_lcd_busy& (0+255),w,b
  2873  00108E  0BF0               	andlw	240
  2874  001090  0100               	movlb	0	; force () banked
  2875  001092  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  2876  001094                     
  2877                           ; BSR set to: 0
  2878                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  2879  001094  9480               	bcf	128,2,c	;volatile
  2880  001096                     
  2881                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  2882  001096  8480               	bsf	128,2,c	;volatile
  2883  001098                     
  2884                           ;Lcd4Lignes.c: 139: __nop();
  2885  001098  F000               	nop	
  2886                           
  2887                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  2888  00109A  ECF9  F008         	call	_lcd_lireDonnees	;wreg free
  2889  00109E  0100               	movlb	0	; force () banked
  2890  0010A0  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  2891  0010A2                     
  2892                           ; BSR set to: 0
  2893                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  2894  0010A2  9480               	bcf	128,2,c	;volatile
  2895  0010A4                     
  2896                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  2897  0010A4  0100               	movlb	0	; force () banked
  2898  0010A6  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  2899  0010A8  EF58  F008         	goto	u501
  2900  0010AC  EF5A  F008         	goto	u500
  2901  0010B0                     u501:
  2902  0010B0  EF40  F008         	goto	l141
  2903  0010B4                     u500:
  2904  0010B4                     
  2905                           ; BSR set to: 0
  2906                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  2907  0010B4  9280               	bcf	128,1,c	;volatile
  2908  0010B6                     
  2909                           ; BSR set to: 0
  2910                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  2911  0010B6  0100               	movlb	0	; force () banked
  2912  0010B8  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  2913  0010BA  0B7F               	andlw	127
  2914  0010BC                     
  2915                           ; BSR set to: 0
  2916  0010BC  0012               	return		;funcret
  2917  0010BE                     __end_of_lcd_busy:
  2918                           	opt callstack 0
  2919                           
  2920 ;; *************** function _lcd_lireDonnees *****************
  2921 ;; Defined at:
  2922 ;;		line 93 in file "Lcd4Lignes.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      unsigned char 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2936 ;;      Params:         0       0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_lcd_busy
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text20
  2950  0011F2                     __ptext20:
  2951                           	opt callstack 0
  2952  0011F2                     _lcd_lireDonnees:
  2953                           	opt callstack 26
  2954  0011F2                     
  2955                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  2956  0011F2  5083               	movf	131,w,c	;volatile
  2957  0011F4  0B0F               	andlw	15
  2958  0011F6  0012               	return		;funcret
  2959  0011F8                     __end_of_lcd_lireDonnees:
  2960                           	opt callstack 0
  2961                           
  2962 ;; *************** function _initialisation *****************
  2963 ;; Defined at:
  2964 ;;		line 71 in file "main.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2978 ;;      Params:         0       0       0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    1
  2985 ;; This function calls:
  2986 ;;		_srand
  2987 ;; This function is called by:
  2988 ;;		_main
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text21
  2993  001132                     __ptext21:
  2994                           	opt callstack 0
  2995  001132                     _initialisation:
  2996                           	opt callstack 29
  2997  001132                     
  2998                           ;main.c: 73: TRISD = 0;
  2999  001132  0E00               	movlw	0
  3000  001134  6E95               	movwf	149,c	;volatile
  3001                           
  3002                           ;main.c: 74: ANSELH = 0;
  3003  001136  0E00               	movlw	0
  3004  001138  6E7F               	movwf	127,c	;volatile
  3005  00113A                     
  3006                           ;main.c: 75: TRISB = 0xFF;
  3007  00113A  6893               	setf	147,c	;volatile
  3008                           
  3009                           ;main.c: 76: ANSEL = 0;
  3010  00113C  0E00               	movlw	0
  3011  00113E  6E7E               	movwf	126,c	;volatile
  3012                           
  3013                           ;main.c: 77: TRISA = 0;
  3014  001140  0E00               	movlw	0
  3015  001142  6E92               	movwf	146,c	;volatile
  3016  001144                     
  3017                           ;main.c: 81: T1CONbits.TMR1ON = 1;
  3018  001144  80CD               	bsf	205,0,c	;volatile
  3019  001146                     
  3020                           ;main.c: 82: srand(TMR1);
  3021  001146  CFCE F0B4          	movff	4046,srand@x	;volatile
  3022  00114A  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  3023  00114E  ECE9  F008         	call	_srand	;wreg free
  3024  001152                     
  3025                           ;main.c: 84: ANSELbits.ANS7 = 1;
  3026  001152  8E7E               	bsf	126,7,c	;volatile
  3027  001154                     
  3028                           ;main.c: 85: ADCON0bits.ADON = 1;
  3029  001154  80C2               	bsf	194,0,c	;volatile
  3030  001156                     
  3031                           ;main.c: 86: ADCON1 = 0;
  3032  001156  0E00               	movlw	0
  3033  001158  6EC1               	movwf	193,c	;volatile
  3034  00115A                     
  3035                           ;main.c: 87: ADCON2bits.ADFM = 0;
  3036  00115A  9EC0               	bcf	192,7,c	;volatile
  3037  00115C                     
  3038                           ;main.c: 88: ADCON2bits.ACQT = 0;
  3039  00115C  0EC7               	movlw	-57
  3040  00115E  16C0               	andwf	192,f,c	;volatile
  3041  001160                     
  3042                           ;main.c: 89: ADCON2bits.ADCS = 0;
  3043  001160  0EF8               	movlw	-8
  3044  001162  16C0               	andwf	192,f,c	;volatile
  3045  001164  0012               	return		;funcret
  3046  001166                     __end_of_initialisation:
  3047                           	opt callstack 0
  3048                           
  3049 ;; *************** function _srand *****************
  3050 ;; Defined at:
  3051 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  x               2    0[BANK0 ] unsigned int 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		status,2
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3065 ;;      Params:         0       2       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0
  3068 ;;      Totals:         0       2       0       0       0       0       0
  3069 ;;Total ram usage:        2 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_initialisation
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text22
  3079  0011D2                     __ptext22:
  3080                           	opt callstack 0
  3081  0011D2                     _srand:
  3082                           	opt callstack 29
  3083  0011D2  C0B4  F0D4         	movff	srand@x,_randx
  3084  0011D6  C0B5  F0D5         	movff	srand@x+1,_randx+1
  3085  0011DA  0100               	movlb	0	; () banked
  3086  0011DC  6BD6               	clrf	(_randx+2)& (0+255),b
  3087  0011DE  6BD7               	clrf	(_randx+3)& (0+255),b
  3088  0011E0                     
  3089                           ; BSR set to: 0
  3090  0011E0  0012               	return		;funcret
  3091  0011E2                     __end_of_srand:
  3092                           	opt callstack 0
  3093                           
  3094 ;; *************** function _initTabVue *****************
  3095 ;; Defined at:
  3096 ;;		line 99 in file "main.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  j               1    2[BANK0 ] unsigned char 
  3101 ;;  i               1    3[BANK0 ] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         0       0       0       0       0       0       0
  3112 ;;      Locals:         0       2       0       0       0       0       0
  3113 ;;      Temps:          0       2       0       0       0       0       0
  3114 ;;      Totals:         0       4       0       0       0       0       0
  3115 ;;Total ram usage:        4 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text23
  3125  000C72                     __ptext23:
  3126                           	opt callstack 0
  3127  000C72                     _initTabVue:
  3128                           	opt callstack 30
  3129  000C72                     
  3130                           ;main.c: 101: for (char i = 0; i < 4; i++)
  3131  000C72  0E00               	movlw	0
  3132  000C74  0100               	movlb	0	; force () banked
  3133  000C76  6FB7               	movwf	initTabVue@i& (0+255),b
  3134  000C78                     
  3135                           ; BSR set to: 0
  3136  000C78  0E03               	movlw	3
  3137  000C7A  0100               	movlb	0	; force () banked
  3138  000C7C  65B7               	cpfsgt	initTabVue@i& (0+255),b
  3139  000C7E  EF43  F006         	goto	u751
  3140  000C82  EF45  F006         	goto	u750
  3141  000C86                     u751:
  3142  000C86  EF47  F006         	goto	l1827
  3143  000C8A                     u750:
  3144  000C8A  EF8E  F006         	goto	l68
  3145  000C8E                     l1827:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;main.c: 102: {;main.c: 103: for(char j=0;j<20;j++)
  3149  000C8E  0E00               	movlw	0
  3150  000C90  0100               	movlb	0	; force () banked
  3151  000C92  6FB6               	movwf	initTabVue@j& (0+255),b
  3152  000C94                     
  3153                           ; BSR set to: 0
  3154  000C94  0E13               	movlw	19
  3155  000C96  0100               	movlb	0	; force () banked
  3156  000C98  65B6               	cpfsgt	initTabVue@j& (0+255),b
  3157  000C9A  EF51  F006         	goto	u761
  3158  000C9E  EF53  F006         	goto	u760
  3159  000CA2                     u761:
  3160  000CA2  EF55  F006         	goto	l1833
  3161  000CA6                     u760:
  3162  000CA6  EF78  F006         	goto	l1839
  3163  000CAA                     l1833:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;main.c: 104: {;main.c: 105: m_tabVue[i][j]=1;
  3167  000CAA  0100               	movlb	0	; force () banked
  3168  000CAC  51B7               	movf	initTabVue@i& (0+255),w,b
  3169  000CAE  0D15               	mullw	21
  3170  000CB0  0E00               	movlw	low _m_tabVue
  3171  000CB2  0100               	movlb	0	; force () banked
  3172  000CB4  6FB4               	movwf	??_initTabVue& (0+255),b
  3173  000CB6  0E01               	movlw	high _m_tabVue
  3174  000CB8  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  3175  000CBA  50F3               	movf	243,w,c
  3176  000CBC  27B4               	addwf	??_initTabVue& (0+255),f,b
  3177  000CBE  50F4               	movf	244,w,c
  3178  000CC0  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3179  000CC2  0100               	movlb	0	; force () banked
  3180  000CC4  51B6               	movf	initTabVue@j& (0+255),w,b
  3181  000CC6  0100               	movlb	0	; force () banked
  3182  000CC8  25B4               	addwf	??_initTabVue& (0+255),w,b
  3183  000CCA  6ED9               	movwf	fsr2l,c
  3184  000CCC  0100               	movlb	0	; force () banked
  3185  000CCE  0E00               	movlw	0
  3186  000CD0  0100               	movlb	0	; force () banked
  3187  000CD2  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3188  000CD4  6EDA               	movwf	fsr2h,c
  3189  000CD6  0E01               	movlw	1
  3190  000CD8  6EDF               	movwf	indf2,c
  3191  000CDA                     
  3192                           ; BSR set to: 0
  3193  000CDA  0100               	movlb	0	; force () banked
  3194  000CDC  2BB6               	incf	initTabVue@j& (0+255),f,b
  3195  000CDE                     
  3196                           ; BSR set to: 0
  3197  000CDE  0E13               	movlw	19
  3198  000CE0  0100               	movlb	0	; force () banked
  3199  000CE2  65B6               	cpfsgt	initTabVue@j& (0+255),b
  3200  000CE4  EF76  F006         	goto	u771
  3201  000CE8  EF78  F006         	goto	u770
  3202  000CEC                     u771:
  3203  000CEC  EF55  F006         	goto	l1833
  3204  000CF0                     u770:
  3205  000CF0                     l1839:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;main.c: 106: };main.c: 107: m_tabVue[i][20]=0;
  3209  000CF0  0100               	movlb	0	; force () banked
  3210  000CF2  51B7               	movf	initTabVue@i& (0+255),w,b
  3211  000CF4  0D15               	mullw	21
  3212  000CF6  0E14               	movlw	low (_m_tabVue+20)
  3213  000CF8  24F3               	addwf	243,w,c
  3214  000CFA  6ED9               	movwf	fsr2l,c
  3215  000CFC  0E01               	movlw	high (_m_tabVue+20)
  3216  000CFE  20F4               	addwfc	prodh,w,c
  3217  000D00  6EDA               	movwf	fsr2h,c
  3218  000D02  0E00               	movlw	0
  3219  000D04  6EDF               	movwf	indf2,c
  3220  000D06                     
  3221                           ; BSR set to: 0
  3222  000D06  0100               	movlb	0	; force () banked
  3223  000D08  2BB7               	incf	initTabVue@i& (0+255),f,b
  3224  000D0A                     
  3225                           ; BSR set to: 0
  3226  000D0A  0E03               	movlw	3
  3227  000D0C  0100               	movlb	0	; force () banked
  3228  000D0E  65B7               	cpfsgt	initTabVue@i& (0+255),b
  3229  000D10  EF8C  F006         	goto	u781
  3230  000D14  EF8E  F006         	goto	u780
  3231  000D18                     u781:
  3232  000D18  EF47  F006         	goto	l1827
  3233  000D1C                     u780:
  3234  000D1C                     l68:
  3235                           
  3236                           ; BSR set to: 0
  3237  000D1C  0012               	return		;funcret
  3238  000D1E                     __end_of_initTabVue:
  3239                           	opt callstack 0
  3240                           
  3241                           	psect	param0
  3242  0000                     tosu	equ	0xFFF
  3243                           tosh	equ	0xFFE
  3244                           tosl	equ	0xFFD
  3245                           stkptr	equ	0xFFC
  3246                           pclatu	equ	0xFFB
  3247                           pclath	equ	0xFFA
  3248                           pcl	equ	0xFF9
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           indf0	equ	0xFEF
  3256                           postinc0	equ	0xFEE
  3257                           postdec0	equ	0xFED
  3258                           preinc0	equ	0xFEC
  3259                           plusw0	equ	0xFEB
  3260                           fsr0h	equ	0xFEA
  3261                           fsr0l	equ	0xFE9
  3262                           wreg	equ	0xFE8
  3263                           indf1	equ	0xFE7
  3264                           postinc1	equ	0xFE6
  3265                           postdec1	equ	0xFE5
  3266                           preinc1	equ	0xFE4
  3267                           plusw1	equ	0xFE3
  3268                           fsr1h	equ	0xFE2
  3269                           fsr1l	equ	0xFE1
  3270                           bsr	equ	0xFE0
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           postdec2	equ	0xFDD
  3274                           preinc2	equ	0xFDC
  3275                           plusw2	equ	0xFDB
  3276                           fsr2h	equ	0xFDA
  3277                           fsr2l	equ	0xFD9
  3278                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     32     120
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabMines(BANK0[84]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    _initialisation->_srand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4345
                                             29 BANK0      3     3      0
                         _initTabVue
                     _initialisation
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1143
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1069
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4     757
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1     494
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initTabVue
   _initialisation
     _srand
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     20      78       4       75.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      14        0.0%
DATA                 0      0     10C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 15:04:34 2019

 __end_of_calculToucheCombien 0796                            l61 1164                            l68 0D1C  
                          l79 0A4E                            l88 08F2                            l97 06D4  
         ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l104 0794                           l212 11F0                           l141 1080  
                         l142 10B4                           l135 11F6                           l143 10BC  
                         l152 1130                           l209 0DBE                           l138 11D0  
                         l155 0F72                           l164 11E8                           l149 0F08  
                         l158 11B4                           l190 107A                           l262 118C  
                         l273 0E8C                           l506 0C70                           l274 0E9C  
                         l179 0E30                           l196 0BBE                           l926 11E0  
                         l929 1026                  __CFG_CPB$OFF 000000                           u500 10B4  
                         u501 10B0                           u510 0EE2                           u511 0EDE  
                         u520 0EF6                           u600 0772                           u521 0EF2  
                         u601 076E                           u610 0790                           u530 0E52  
                __CFG_CPD$OFF 000000                           u611 078C                           u531 0E4E  
                         u620 0D3C                           u700 0C3C                           u540 0E8C  
                         u621 0D38                           u701 0C38                           u541 0E88  
                         u630 0D58                           u550 0652                           u710 0C60  
                         u631 0D54                           u551 064E                           u711 0C5C  
                         u640 0DA4                           u720 0B5E                           u560 066C  
                         u800 0928                           u641 0DA0                           u561 0668  
                         u801 0924                           u650 0DBA                           u730 0BAE  
                         u570 06D0                           u810 0972                           u651 0DB6  
                         u571 06CC                           u811 096E                           u740 0BBE  
                         u580 0714                           u900 08F2                           u660 0BD4  
                         u820 0988                           u741 0BBA                           u581 0710  
                         u901 08EE                           u661 0BD0                           u821 0984  
                         u750 0C8A                           u590 0732                           u670 0BEE  
                         u830 09FA                           u751 0C86                           u727 0B54  
                         u591 072E                           u671 0BEA                           u831 09F6  
                         u760 0CA6                           u680 0C08                           u840 0A4E  
                         u920 0A9E                           u761 0CA2                           u737 0BA4  
                         u681 0C04                           u841 0A4A                           u921 0A9A  
                         u770 0CF0                           u850 07AE                           u690 0C26  
                         u930 0AF2                           u771 0CEC                           u851 07AA  
                         u691 0C22                           u931 0AEE                           u780 0D1C  
                         u860 07CA                           u781 0D18                           u861 07C6  
                         u870 080C                           u790 090C                           u871 0808  
                         u791 0908                           u880 0896                           u881 0892  
                         u890 08DC                           u891 08D8                           u947 0AFA  
                         u957 0F16                           u967 0F32                           u977 0F44  
                         u987 0F56                           u997 0F68                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                           prod 000FF3                   lcd_gotoXY@x 00B8  
                         wreg 000FE8                   lcd_gotoXY@y 00B7                  __CFG_LVP$OFF 000000  
                        l1601 110A                          l1611 111C                          l1603 110C  
                        l1541 1096                          l1533 11BA                          l1613 1124  
                        l1605 110E                          l1701 0F4A                          l1551 10A4  
                        l1543 1096                          l1535 107C                          l1623 11E2  
                        l1615 1128                          l1607 1118                          l1711 0F66  
                        l1703 0F50                          l1631 0E32                          l1641 11D2  
                        l1801 1156                          l1529 11F2                          l1553 10B6  
                        l1545 1098                          l1537 1084                          l1561 0EA6  
                        l1617 1128                          l1609 111C                          l1713 0F6E  
                        l1705 0F54                          l1625 1166                          l1633 0E44  
                        l1803 115A                          l1547 10A2                          l1539 1094  
                        l1571 0EB8                          l1563 0EAA                          l1619 112C  
                        l1731 0D8E                          l1723 0D40                          l1715 0D1E  
                        l1707 0F5C                          l1811 11B0                          l1627 1184  
                        l1651 0614                          l1635 0E52                          l1643 0FD2  
                        l1821 0C72                          l1805 115C                          l1549 10A4  
                        l1557 11EA                          l1581 0ED0                          l1573 0EBC  
                        l1565 0EAA                          l1733 0D92                          l1725 0D46  
                        l1717 0D24                          l1709 0F62                          l1741 102C  
                        l1813 0B0C                          l1661 066C                          l1653 063C  
                        l1901 08DC                          l1637 0E62                          l1645 1008  
                        l1823 0C78                          l1807 1160                          l1591 0F04  
                        l1583 0EE2                          l1575 0EBC                          l1567 0EAC  
                        l1559 0EA2                          l1911 0DE8                          l1735 0DA4  
                        l1719 0D2A                          l1743 103C                          l1751 105A  
                        l1815 0B16                          l1671 0732                          l1663 067A  
                        l1655 0642                          l1903 08E0                          l1639 0E6C  
                        l1647 101A                          l1841 0D06                          l1833 0CAA  
                        l1585 0EF6                          l1577 0EC4                          l1569 0EAE  
                        l1913 0DF8                          l1905 0DC4                          l1737 0DA8  
                        l1729 0D5C                          l1681 0F0A                          l1809 118E  
                        l1745 1046                          l1817 0B62                          l1665 06D0  
                        l1673 0738                          l1657 0652                          l1761 0BE0  
                        l1753 0BC0                          l1843 0D0A                          l1835 0CDA  
                        l1827 0C8E                          l1587 0F00                          l1579 0EC8  
                        l1907 0DC8                          l1595 1102                          l1739 0DBA  
                        l1691 0F2C                          l1683 0F0E                          l1747 1050  
                        l1819 0B66                          l1675 0772                          l1667 06DA  
                        l1659 065C                          l1771 0C18                          l1763 0BEE  
                        l1755 0BC6                          l1851 0910                          l1931 0A58  
                        l1837 0CDE                          l1829 0C94                          l1589 0F04  
                        l1909 0DD8                          l1917 0E08                          l1597 1106  
                        l1693 0F30                          l1685 0F22                          l1677 0790  
                        l1669 0714                          l1773 0C26                          l1781 0C50  
                        l1765 0BF6                          l1757 0BD4                          l1861 0960  
                        l1853 0916                          l1845 08F4                          l1941 0A8C  
                        l1933 0A70                          l1839 0CF0                          l1791 113A  
                        l1599 110A                          l1695 0F38                          l1687 0F24  
                        l1783 0C60                          l1775 0C3C                          l1767 0C08  
                        l1759 0BDC                          l1871 09FA                          l1863 0972  
                        l1847 08FA                          l1951 0AE0                          l1935 0A74  
                        l1927 0A50                          l1793 1144                          l1697 0F3E  
                        l1689 0F26                          l1785 0C68                          l1777 0C44  
                        l1769 0C10                          l1873 0A2A                          l1865 0976  
                        l1857 092C                          l1953 0AF2                          l1945 0AA2  
                        l1937 0A82                          l1929 0A54                          l1795 1146  
                        l1699 0F42                          l1891 080C                          l1883 07B2  
                        l1779 0C4A                          l1867 098C                          l1859 095C  
                        l1875 0A32                          l1947 0AB0                          l1939 0A86  
                        l1797 1152                          l1789 1132                          l1893 0858  
                        l1885 07B8                          l1877 0796                          l1869 09BC  
                        l1949 0ADC                          l1799 1154                          l1895 0896  
                        l1879 079C                          l1897 08C6                          l1889 07CE  
                        l1899 08CA                          STR_1 0601                          u1007 0ECA  
                        u1017 0EF8                          _RCIF 007CF5                          _TMR1 000FCE  
            ??_initialisation 00B6                          _main 0A50                          _rand 0FD2  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00B9                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 00B7  
                       ?_main 00B4                         ?_rand 00C0               __end_of___awmod 0C72  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
         ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7  
                       _randx 00D4                         _srand 11D2                         main@i 00D3  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
              __CFG_PBADEN$ON 000000              _metToucheCombien 0796               __initialization 0F74  
                __end_of_main 0B0C                  __end_of_rand 1028    calculToucheCombien@nbMines 00C1  
        lcd_putMessage@chaine 00B9    calculToucheCombien@colonne 00BC                        ??_main 00D1  
                      ??_rand 00C2                 __activetblptr 000003                        _ADCON1 000FC1  
                      ?_srand 00B4                        _ANSELH 000F7F                   initTabVue@i 00B7  
                 initTabVue@j 00B6                __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9  
              lcd_initCGRam@j 00BA              __end_of_lcd_busy 10BE              __end_of_lcd_init 11B6  
                      ___lmul 0E32                        ___wmul 1166                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        clear_0 0FBA                        clear_1 0FC6  
             ___awmod@divisor 00C4               ___awmod@counter 00C6                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00B4             _lcd_resetSequence 0F0A                    __accesstop 0060  
     __end_of__initialization 0FCC           _lcd_strobeEnableBit 11EA            ?_lcd_resetSequence 00B4  
               ___rparam_used 000000                  __pidataBANK0 11F8                  __pidataBANK1 10BE  
         ??_lcd_resetSequence 00B6                 __end_of_srand 11E2          ?_lcd_strobeEnableBit 00B4  
          __size_of_lcd_wrCom 006C     __end_of_lcd_resetSequence 0F74                       ??_srand 00B6  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 11B6                    __pbssBANK0 0060  
                  __pbssBANK1 0100              ??_lcd_putMessage 00BC            ?_lcd_ecrireDonnees 00B4  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4  
                     ?___wmul 00B4                ___lmul@product 00BC         ??_lcd_strobeEnableBit 00B4  
__size_of_calculToucheCombien 0182      __end_of_metToucheCombien 08F4                    _lcd_gotoXY 0DC0  
                  _lcd_wrData 10FE     __end_of_lcd_ecrireDonnees 11D2                     ?_lcd_busy 00B4  
                   ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060  
        __size_of_rempliMines 015C                       __Hparam 0000                       __Lparam 0000  
                  _initTabVue 0C72             __end_of_lcd_wrCom 0F0A               __size_of___lmul 006C  
                     ___awmod 0BC0               __size_of___wmul 0028                  __psmallconst 0600  
                     __pcinit 0F74                     _ANSELbits 000F7E                       __ramtop 0600  
                     __ptext0 0A50                       __ptext1 08F4                       __ptext2 0FD2  
                     __ptext3 0E32                       __ptext4 0BC0                       __ptext5 0796  
                     __ptext6 0614                       __ptext7 1166                       __ptext8 0B0C  
                     __ptext9 1028         __end_of_lcd_ecritChar 107C               lcd_busy@adresse 00B5  
                   _T1CONbits 000FCD              ___awmod@dividend 00C2              lcd_ecritChar@car 00B7  
                  ??_lcd_busy 00B4                    ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A  
        end_of_initialization 0FCC         __end_of_lcd_initCGRam 0DC0             ??_lcd_lireDonnees 00B4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0034             ??_lcd_curseurHome 00B7  
         lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80                   ?_lcd_gotoXY 00B7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC                   ?_initTabVue 00B4                __end_of___lmul 0E9E  
              __end_of___wmul 118E                   _BAUDCONbits 000FB8           start_initialization 0F74  
         _calculToucheCombien 0614           __size_of_lcd_gotoXY 0072                      ??___lmul 00BC  
                    ??___wmul 00B8                 rempliMines@nb 00C8           __size_of_lcd_wrData 0034  
                 __pdataBANK0 00D4                   __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 00BA                 __pcstackBANK0 00B4             ?_metToucheCombien 00B4  
         __size_of_initTabVue 00AC            ??_metToucheCombien 00C6             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000   __end_of_lcd_strobeEnableBit 11F2  
              _initialisation 1132                      ?___awmod 00C2                     _lcd_wrCom 0E9E  
       ??_calculToucheCombien 00BE                   __smallconst 0600               _lcd_lireDonnees 11F2  
         lcd_wrData@caractere 00B6                __size_of_srand 0010                 ??_rempliMines 00CA  
             _lcd_curseurHome 11E2                ___wmul@product 00B8        __end_of_initialisation 1166  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4                    ?_lcd_wrCom 00B4  
                  _ADCON0bits 000FC2                    _ADCON2bits 000FC0             ___wmul@multiplier 00B4  
                ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6  
           ___lmul@multiplier 00B4                     copy_data0 0F88                     copy_data1 0FA8  
                    __Hparam0 0000        __size_of_lcd_ecritChar 0054                      __Lparam0 0000  
             ?_initialisation 00B4           __end_of_rempliMines 0A50                  ??_initTabVue 00B4  
          __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CF                  rempliMines@j 00D0  
                rempliMines@x 00CD                  rempliMines@y 00CE            __end_of_lcd_gotoXY 0E32  
          __end_of_lcd_wrData 1132              __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2  
             lcd_putMessage@j 00C1       __end_of_lcd_lireDonnees 11F8                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 11EA                      __ptext10 118E                      __ptext11 0F0A  
                    __ptext20 11F2                      __ptext12 0D1E                      __ptext21 1132  
                    __ptext13 10FE                      __ptext22 11D2                      __ptext14 11E2  
                    __ptext23 0C72                      __ptext15 0DC0                      __ptext16 0E9E  
                    __ptext17 11EA                      __ptext18 11B6                      __ptext19 107C  
           metToucheCombien@i 00C9             metToucheCombien@j 00CA                      _lcd_busy 107C  
                    _lcd_init 118E            __end_of_initTabVue 0D1E      calculToucheCombien@ligne 00BA  
                    _m_tabVue 0100                 __size_of_main 00BC                 __size_of_rand 0056  
                 ??_lcd_wrCom 00B6                 _lcd_ecritChar 1028                 _lcd_initCGRam 0D1E  
                 _rempliMines 08F4          calculToucheCombien@i 00C2          calculToucheCombien@j 00C4  
   __size_of_metToucheCombien 015E                _lcd_putMessage 0B0C                ?_lcd_ecritChar 00B4  
            ?_lcd_lireDonnees 00B4              ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4  
           __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 0BC0  
