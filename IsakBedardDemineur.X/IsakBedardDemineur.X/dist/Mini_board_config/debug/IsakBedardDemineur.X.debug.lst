

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 06 13:44:15 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  00696C                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  00696C  0001               	dw	1
    89  00696E  0000               	dw	0
    90                           
    91                           	psect	idataBANK1
    92  006A96                     __pidataBANK1:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  006A96  08                 	db	8
    97  006A97  04                 	db	4
    98  006A98  04                 	db	4
    99  006A99  0A                 	db	10
   100  006A9A  11                 	db	17
   101  006A9B  1F                 	db	31
   102  006A9C  11                 	db	17
   103  006A9D  00                 	db	0
   104  006A9E  1F                 	db	31
   105  006A9F  1B                 	db	27
   106  006AA0  11                 	db	17
   107  006AA1  11                 	db	17
   108  006AA2  11                 	db	17
   109  006AA3  11                 	db	17
   110  006AA4  1B                 	db	27
   111  006AA5  1F                 	db	31
   112  006AA6  00                 	db	0
   113  006AA7  15                 	db	21
   114  006AA8  0E                 	db	14
   115  006AA9  1F                 	db	31
   116  006AAA  1F                 	db	31
   117  006AAB  0E                 	db	14
   118  006AAC  15                 	db	21
   119  006AAD  00                 	db	0
   120  006AAE  08                 	db	8
   121  006AAF  0C                 	db	12
   122  006AB0  0E                 	db	14
   123  006AB1  0F                 	db	15
   124  006AB2  0C                 	db	12
   125  006AB3  08                 	db	8
   126  006AB4  08                 	db	8
   127  006AB5  1C                 	db	28
   128  006AB6  04                 	db	4
   129  006AB7  04                 	db	4
   130  006AB8  04                 	db	4
   131  006AB9  04                 	db	4
   132  006ABA  0E                 	db	14
   133  006ABB  0E                 	db	14
   134  006ABC  1B                 	db	27
   135  006ABD  11                 	db	17
   136  006ABE  04                 	db	4
   137  006ABF  0A                 	db	10
   138  006AC0  0E                 	db	14
   139  006AC1  11                 	db	17
   140  006AC2  1F                 	db	31
   141  006AC3  10                 	db	16
   142  006AC4  0E                 	db	14
   143  006AC5  00                 	db	0
   144  006AC6  08                 	db	8
   145  006AC7  04                 	db	4
   146  006AC8  0E                 	db	14
   147  006AC9  01                 	db	1
   148  006ACA  0F                 	db	15
   149  006ACB  11                 	db	17
   150  006ACC  0F                 	db	15
   151  006ACD  00                 	db	0
   152  006ACE  04                 	db	4
   153  006ACF  0A                 	db	10
   154  006AD0  0E                 	db	14
   155  006AD1  01                 	db	1
   156  006AD2  0F                 	db	15
   157  006AD3  11                 	db	17
   158  006AD4  0F                 	db	15
   159  006AD5  00                 	db	0
   160  0000                     _TRISCbits	set	3988
   161  0000                     _PORTAbits	set	3968
   162  0000                     _PORTD	set	3971
   163  0000                     _ANSELbits	set	3966
   164  0000                     _TRISA	set	3986
   165  0000                     _ANSEL	set	3966
   166  0000                     _TRISB	set	3987
   167  0000                     _ANSELH	set	3967
   168  0000                     _TRISD	set	3989
   169  0000                     _PORTBbits	set	3969
   170  0000                     _TMR1	set	4046
   171  0000                     _RCREG	set	4014
   172  0000                     _TXREG	set	4013
   173  0000                     _RCSTAbits	set	4011
   174  0000                     _TXSTAbits	set	4012
   175  0000                     _BAUDCONbits	set	4024
   176  0000                     _SPBRG	set	4015
   177  0000                     _SPBRGH	set	4016
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1	set	4033
   181  0000                     _ADCON0bits	set	4034
   182  0000                     _T1CONbits	set	4045
   183  0000                     _RCIF	set	31989
   184                           
   185                           ; #config settings
   186  0000                     
   187                           	psect	cinit
   188  006CC4                     __pcinit:
   189                           	opt callstack 0
   190  006CC4                     start_initialization:
   191                           	opt callstack 0
   192  006CC4                     __initialization:
   193                           	opt callstack 0
   194                           
   195                           ; Initialize objects allocated to BANK1 (64 bytes)
   196                           ; load TBLPTR registers with __pidataBANK1
   197  006CC4  0E96               	movlw	low __pidataBANK1
   198  006CC6  6EF6               	movwf	tblptrl,c
   199  006CC8  0E6A               	movlw	high __pidataBANK1
   200  006CCA  6EF7               	movwf	tblptrh,c
   201  006CCC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   202  006CCE  6EF8               	movwf	tblptru,c
   203  006CD0  EE01  F054         	lfsr	0,__pdataBANK1
   204  006CD4  EE10 F040          	lfsr	1,64
   205  006CD8                     copy_data0:
   206  006CD8  0009               	tblrd		*+
   207  006CDA  CFF5 FFEE          	movff	tablat,postinc0
   208  006CDE  50E5               	movf	postdec1,w,c
   209  006CE0  50E1               	movf	fsr1l,w,c
   210  006CE2  E1FA               	bnz	copy_data0
   211                           
   212                           ; Initialize objects allocated to BANK0 (4 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214  006CE4  0E6C               	movlw	low __pidataBANK0
   215  006CE6  6EF6               	movwf	tblptrl,c
   216  006CE8  0E69               	movlw	high __pidataBANK0
   217  006CEA  6EF7               	movwf	tblptrh,c
   218  006CEC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219  006CEE  6EF8               	movwf	tblptru,c
   220  006CF0  EE00  F0D8         	lfsr	0,__pdataBANK0
   221  006CF4  EE10 F004          	lfsr	1,4
   222  006CF8                     copy_data1:
   223  006CF8  0009               	tblrd		*+
   224  006CFA  CFF5 FFEE          	movff	tablat,postinc0
   225  006CFE  50E5               	movf	postdec1,w,c
   226  006D00  50E1               	movf	fsr1l,w,c
   227  006D02  E1FA               	bnz	copy_data1
   228                           
   229                           ; Clear objects allocated to BANK1 (84 bytes)
   230  006D04  EE01  F000         	lfsr	0,__pbssBANK1
   231  006D08  0E54               	movlw	84
   232  006D0A                     clear_0:
   233  006D0A  6AEE               	clrf	postinc0,c
   234  006D0C  06E8               	decf	wreg,f,c
   235  006D0E  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to BANK0 (84 bytes)
   238  006D10  EE00  F060         	lfsr	0,__pbssBANK0
   239  006D14  0E54               	movlw	84
   240  006D16                     clear_1:
   241  006D16  6AEE               	clrf	postinc0,c
   242  006D18  06E8               	decf	wreg,f,c
   243  006D1A  E1FD               	bnz	clear_1
   244  006D1C                     end_of_initialization:
   245                           	opt callstack 0
   246  006D1C                     __end_of__initialization:
   247                           	opt callstack 0
   248  006D1C  0100               	movlb	0
   249  006D1E  EF6B  F038         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssBANK0
   252  000060                     __pbssBANK0:
   253                           	opt callstack 0
   254  000060                     _m_tabMines:
   255                           	opt callstack 0
   256  000060                     	ds	84
   257                           
   258                           	psect	dataBANK0
   259  0000D8                     __pdataBANK0:
   260                           	opt callstack 0
   261  0000D8                     _randx:
   262                           	opt callstack 0
   263  0000D8                     	ds	4
   264                           
   265                           	psect	bssBANK1
   266  000100                     __pbssBANK1:
   267                           	opt callstack 0
   268  000100                     _m_tabVue:
   269                           	opt callstack 0
   270  000100                     	ds	84
   271                           
   272                           	psect	dataBANK1
   273  000154                     __pdataBANK1:
   274                           	opt callstack 0
   275  000154                     _matCGRAM:
   276                           	opt callstack 0
   277  000154                     	ds	64
   278                           
   279                           	psect	cstackBANK0
   280  0000B4                     __pcstackBANK0:
   281                           	opt callstack 0
   282  0000B4                     ??_initTabVue:
   283  0000B4                     ??_getAnalog:
   284  0000B4                     ??_lcd_ecrireDonnees:
   285  0000B4                     ??_lcd_busy:
   286  0000B4                     ?___wmul:
   287                           	opt callstack 0
   288  0000B4                     ?___lmul:
   289                           	opt callstack 0
   290  0000B4                     gagne@pMines:
   291                           	opt callstack 0
   292  0000B4                     ___wmul@multiplier:
   293                           	opt callstack 0
   294  0000B4                     srand@x:
   295                           	opt callstack 0
   296  0000B4                     ___lmul@multiplier:
   297                           	opt callstack 0
   298                           
   299                           ; 4 bytes @ 0x0
   300  0000B4                     	ds	1
   301  0000B5                     getAnalog@canal:
   302                           	opt callstack 0
   303  0000B5                     lcd_ecrireDonnees@donnee:
   304                           	opt callstack 0
   305  0000B5                     lcd_busy@adresse:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x1
   309  0000B5                     	ds	1
   310  0000B6                     ??_gagne:
   311  0000B6                     ??_lcd_resetSequence:
   312  0000B6                     initTabVue@j:
   313                           	opt callstack 0
   314  0000B6                     lcd_wrCom@commande:
   315                           	opt callstack 0
   316  0000B6                     lcd_wrData@caractere:
   317                           	opt callstack 0
   318  0000B6                     ___wmul@multiplicand:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x2
   322  0000B6                     	ds	1
   323  0000B7                     ??_lcd_initCGRam:
   324  0000B7                     initTabVue@i:
   325                           	opt callstack 0
   326  0000B7                     lcd_gotoXY@y:
   327                           	opt callstack 0
   328  0000B7                     lcd_ecritChar@car:
   329                           	opt callstack 0
   330                           
   331                           ; 1 bytes @ 0x3
   332  0000B7                     	ds	1
   333  0000B8                     lcd_gotoXY@x:
   334                           	opt callstack 0
   335  0000B8                     lcd_ecritChar@posRam:
   336                           	opt callstack 0
   337  0000B8                     ___wmul@product:
   338                           	opt callstack 0
   339  0000B8                     ___lmul@multiplicand:
   340                           	opt callstack 0
   341                           
   342                           ; 4 bytes @ 0x4
   343  0000B8                     	ds	1
   344  0000B9                     lcd_initCGRam@i:
   345                           	opt callstack 0
   346  0000B9                     deplace@x:
   347                           	opt callstack 0
   348  0000B9                     lcd_putMessage@chaine:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x5
   352  0000B9                     	ds	1
   353  0000BA                     gagne@nbTuileEtDrapeau:
   354                           	opt callstack 0
   355  0000BA                     lcd_initCGRam@j:
   356                           	opt callstack 0
   357  0000BA                     calculToucheCombien@ligne:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x6
   361  0000BA                     	ds	1
   362  0000BB                     gagne@i:
   363                           	opt callstack 0
   364  0000BB                     lcd_putMessage@j:
   365                           	opt callstack 0
   366  0000BB                     deplace@y:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0x7
   370  0000BB                     	ds	1
   371  0000BC                     gagne@j:
   372                           	opt callstack 0
   373  0000BC                     afficheTabVue@i:
   374                           	opt callstack 0
   375  0000BC                     afficheTabMines@i:
   376                           	opt callstack 0
   377  0000BC                     calculToucheCombien@colonne:
   378                           	opt callstack 0
   379  0000BC                     ___lmul@product:
   380                           	opt callstack 0
   381                           
   382                           ; 4 bytes @ 0x8
   383  0000BC                     	ds	1
   384  0000BD                     ??_deplace:
   385  0000BD                     enleveTuilesAutour@y:
   386                           	opt callstack 0
   387  0000BD                     metOuEnleveDrapeau@y:
   388                           	opt callstack 0
   389                           
   390                           ; 1 bytes @ 0x9
   391  0000BD                     	ds	1
   392  0000BE                     ??_metOuEnleveDrapeau:
   393  0000BE                     ??_calculToucheCombien:
   394  0000BE                     ??_enleveTuilesAutour:
   395  0000BE                     deplace@analogX:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0xA
   399  0000BE                     	ds	1
   400  0000BF                     deplace@analogY:
   401                           	opt callstack 0
   402                           
   403                           ; 1 bytes @ 0xB
   404  0000BF                     	ds	1
   405  0000C0                     ?_rand:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0xC
   409  0000C0                     	ds	1
   410  0000C1                     calculToucheCombien@nbMines:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0xD
   414  0000C1                     	ds	1
   415  0000C2                     ?___awmod:
   416                           	opt callstack 0
   417  0000C2                     enleveTuilesAutour@mem:
   418                           	opt callstack 0
   419  0000C2                     calculToucheCombien@i:
   420                           	opt callstack 0
   421  0000C2                     ___awmod@dividend:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0xE
   425  0000C2                     	ds	1
   426  0000C3                     enleveTuilesAutour@x:
   427                           	opt callstack 0
   428  0000C3                     metOuEnleveDrapeau@x:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0xF
   432  0000C3                     	ds	1
   433  0000C4                     enleveTuilesAutour@j:
   434                           	opt callstack 0
   435  0000C4                     calculToucheCombien@j:
   436                           	opt callstack 0
   437  0000C4                     ___awmod@divisor:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x10
   441  0000C4                     	ds	1
   442  0000C5                     enleveTuilesAutour@i:
   443                           	opt callstack 0
   444                           
   445                           ; 1 bytes @ 0x11
   446  0000C5                     	ds	1
   447  0000C6                     ??_metToucheCombien:
   448  0000C6                     demine@y:
   449                           	opt callstack 0
   450  0000C6                     ___awmod@counter:
   451                           	opt callstack 0
   452                           
   453                           ; 1 bytes @ 0x12
   454  0000C6                     	ds	1
   455  0000C7                     ??_demine:
   456  0000C7                     ___awmod@sign:
   457                           	opt callstack 0
   458                           
   459                           ; 1 bytes @ 0x13
   460  0000C7                     	ds	1
   461  0000C8                     rempliMines@nb:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x14
   465  0000C8                     	ds	1
   466  0000C9                     metToucheCombien@i:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0x15
   470  0000C9                     	ds	1
   471  0000CA                     ??_rempliMines:
   472  0000CA                     metToucheCombien@j:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0x16
   476  0000CA                     	ds	3
   477  0000CD                     rempliMines@x:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x19
   481  0000CD                     	ds	1
   482  0000CE                     rempliMines@y:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0x1A
   486  0000CE                     	ds	1
   487  0000CF                     rempliMines@i:
   488                           	opt callstack 0
   489  0000CF                     demine@x:
   490                           	opt callstack 0
   491                           
   492                           ; 1 bytes @ 0x1B
   493  0000CF                     	ds	1
   494  0000D0                     rempliMines@j:
   495                           	opt callstack 0
   496                           
   497                           ; 1 bytes @ 0x1C
   498  0000D0                     	ds	1
   499  0000D1                     ??_main:
   500                           
   501                           ; 1 bytes @ 0x1D
   502  0000D1                     	ds	1
   503  0000D2                     main@nbMine:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x1E
   507  0000D2                     	ds	2
   508  0000D4                     main@posX:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x20
   512  0000D4                     	ds	2
   513  0000D6                     main@posY:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x22
   517  0000D6                     	ds	2
   518                           
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 55 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  posY            2   34[BANK0 ] PTR unsigned char 
   529 ;;		 -> RAM(1535), 
   530 ;;  posX            2   32[BANK0 ] PTR unsigned char 
   531 ;;		 -> RAM(1535), 
   532 ;;  nbMine          2   30[BANK0 ] PTR int 
   533 ;;		 -> RAM(1535), 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   543 ;;      Params:         0       0       0       0       0       0       0
   544 ;;      Locals:         0       6       0       0       0       0       0
   545 ;;      Temps:          0       1       0       0       0       0       0
   546 ;;      Totals:         0       7       0       0       0       0       0
   547 ;;Total ram usage:        7 bytes
   548 ;; Hardware stack levels required when called:    8
   549 ;; This function calls:
   550 ;;		_afficheTabMines
   551 ;;		_afficheTabVue
   552 ;;		_demine
   553 ;;		_deplace
   554 ;;		_gagne
   555 ;;		_initTabVue
   556 ;;		_initialisation
   557 ;;		_lcd_init
   558 ;;		_metOuEnleveDrapeau
   559 ;;		_metToucheCombien
   560 ;;		_rempliMines
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text0
   567  0070D6                     __ptext0:
   568                           	opt callstack 0
   569  0070D6                     _main:
   570                           	opt callstack 23
   571  0070D6                     
   572                           ;main.c: 57: char* posX = 10;
   573  0070D6  0E0A               	movlw	10
   574  0070D8  0100               	movlb	0	; force () banked
   575  0070DA  6FD4               	movwf	main@posX& (0+255),b
   576  0070DC  0E00               	movlw	0
   577  0070DE  6FD5               	movwf	(main@posX+1)& (0+255),b
   578                           
   579                           ;main.c: 58: char* posY = 2;
   580  0070E0  0E02               	movlw	2
   581  0070E2  0100               	movlb	0	; force () banked
   582  0070E4  6FD6               	movwf	main@posY& (0+255),b
   583  0070E6  0E00               	movlw	0
   584  0070E8  6FD7               	movwf	(main@posY+1)& (0+255),b
   585                           
   586                           ;main.c: 59: int* nbMine = 9;
   587  0070EA  0E09               	movlw	9
   588  0070EC  0100               	movlb	0	; force () banked
   589  0070EE  6FD2               	movwf	main@nbMine& (0+255),b
   590  0070F0  0E00               	movlw	0
   591  0070F2  6FD3               	movwf	(main@nbMine+1)& (0+255),b
   592  0070F4                     
   593                           ; BSR set to: 0
   594                           ;main.c: 61: initialisation();
   595  0070F4  EC31  F035         	call	_initialisation	;wreg free
   596  0070F8                     
   597                           ;main.c: 62: lcd_init();
   598  0070F8  ECD9  F034         	call	_lcd_init	;wreg free
   599  0070FC                     
   600                           ;main.c: 63: initTabVue();
   601  0070FC  ECBC  F037         	call	_initTabVue	;wreg free
   602  007100                     
   603                           ;main.c: 64: rempliMines(nbMine);
   604  007100  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   605  007104  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   606  007108  EC19  F03A         	call	_rempliMines	;wreg free
   607  00710C                     
   608                           ;main.c: 65: metToucheCombien();
   609  00710C  ECC7  F03A         	call	_metToucheCombien	;wreg free
   610  007110                     
   611                           ;main.c: 66: afficheTabVue();
   612  007110  EC35  F036         	call	_afficheTabVue	;wreg free
   613  007114                     l2374:
   614                           
   615                           ;main.c: 70: {;main.c: 71: deplace(&posX, &posY);
   616  007114  0ED4               	movlw	low main@posX
   617  007116  0100               	movlb	0	; force () banked
   618  007118  6FB9               	movwf	deplace@x& (0+255),b
   619  00711A  0E00               	movlw	high main@posX
   620  00711C  6FBA               	movwf	(deplace@x+1)& (0+255),b
   621  00711E  0ED6               	movlw	low main@posY
   622  007120  0100               	movlb	0	; force () banked
   623  007122  6FBB               	movwf	deplace@y& (0+255),b
   624  007124  0E00               	movlw	high main@posY
   625  007126  6FBC               	movwf	(deplace@y+1)& (0+255),b
   626  007128  EC76  F03B         	call	_deplace	;wreg free
   627  00712C                     
   628                           ;main.c: 72: if(PORTBbits.RB1==0)
   629  00712C  B281               	btfsc	129,1,c	;volatile
   630  00712E  EF9B  F038         	goto	u1601
   631  007132  EF9D  F038         	goto	u1600
   632  007136                     u1601:
   633  007136  EFCF  F038         	goto	l2386
   634  00713A                     u1600:
   635  00713A                     
   636                           ;main.c: 73: if(demine(posX,posY)==0 || gagne(&nbMine))
   637  00713A  C0D6  F0C6         	movff	main@posY,demine@y
   638  00713E  0100               	movlb	0	; force () banked
   639  007140  51D4               	movf	main@posX& (0+255),w,b
   640  007142  EC33  F03C         	call	_demine
   641  007146  0900               	iorlw	0
   642  007148  B4D8               	btfsc	status,2,c
   643  00714A  EFA9  F038         	goto	u1611
   644  00714E  EFAB  F038         	goto	u1610
   645  007152                     u1611:
   646  007152  EFBA  F038         	goto	l2382
   647  007156                     u1610:
   648  007156  0ED2               	movlw	low main@nbMine
   649  007158  0100               	movlb	0	; force () banked
   650  00715A  6FB4               	movwf	gagne@pMines& (0+255),b
   651  00715C  0E00               	movlw	high main@nbMine
   652  00715E  6FB5               	movwf	(gagne@pMines+1)& (0+255),b
   653  007160  ECE9  F038         	call	_gagne	;wreg free
   654  007164  0900               	iorlw	0
   655  007166  B4D8               	btfsc	status,2,c
   656  007168  EFB8  F038         	goto	u1621
   657  00716C  EFBA  F038         	goto	u1620
   658  007170                     u1621:
   659  007170  EFCF  F038         	goto	l2386
   660  007174                     u1620:
   661  007174                     l2382:
   662                           
   663                           ;main.c: 74: {;main.c: 75: afficheTabMines();
   664  007174  EC08  F036         	call	_afficheTabMines	;wreg free
   665  007178                     l78:
   666  007178  B281               	btfsc	129,1,c	;volatile
   667  00717A  EFC1  F038         	goto	u1631
   668  00717E  EFC3  F038         	goto	u1630
   669  007182                     u1631:
   670  007182  EFBC  F038         	goto	l78
   671  007186                     u1630:
   672  007186                     
   673                           ;main.c: 77: initTabVue();
   674  007186  ECBC  F037         	call	_initTabVue	;wreg free
   675                           
   676                           ;main.c: 78: rempliMines(nbMine);
   677  00718A  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   678  00718E  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   679  007192  EC19  F03A         	call	_rempliMines	;wreg free
   680                           
   681                           ;main.c: 79: metToucheCombien();
   682  007196  ECC7  F03A         	call	_metToucheCombien	;wreg free
   683                           
   684                           ;main.c: 80: afficheTabVue();
   685  00719A  EC35  F036         	call	_afficheTabVue	;wreg free
   686  00719E                     l2386:
   687                           
   688                           ;main.c: 81: };main.c: 82: if(PORTBbits.RB0==0)
   689  00719E  B081               	btfsc	129,0,c	;volatile
   690  0071A0  EFD4  F038         	goto	u1641
   691  0071A4  EFD6  F038         	goto	u1640
   692  0071A8                     u1641:
   693  0071A8  EFDC  F038         	goto	l2390
   694  0071AC                     u1640:
   695  0071AC                     
   696                           ;main.c: 83: metOuEnleveDrapeau(posX,posY);
   697  0071AC  C0D6  F0BD         	movff	main@posY,metOuEnleveDrapeau@y
   698  0071B0  0100               	movlb	0	; force () banked
   699  0071B2  51D4               	movf	main@posX& (0+255),w,b
   700  0071B4  EC7E  F039         	call	_metOuEnleveDrapeau
   701  0071B8                     l2390:
   702                           
   703                           ;main.c: 84: _delay((unsigned long)((100)*(1000000/4000.0)));
   704  0071B8  0E21               	movlw	33
   705  0071BA  0100               	movlb	0	; force () banked
   706  0071BC  6FD1               	movwf	??_main& (0+255),b
   707  0071BE  0E76               	movlw	118
   708  0071C0                     u1657:
   709  0071C0  2EE8               	decfsz	wreg,f,c
   710  0071C2  D7FE               	bra	u1657
   711  0071C4  2FD1               	decfsz	??_main& (0+255),f,b
   712  0071C6  D7FC               	bra	u1657
   713  0071C8  F000               	nop	
   714  0071CA  EF8A  F038         	goto	l2374
   715  0071CE  EF00  F000         	goto	start
   716  0071D2                     __end_of_main:
   717                           	opt callstack 0
   718                           
   719 ;; *************** function _rempliMines *****************
   720 ;; Defined at:
   721 ;;		line 138 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  nb              2   20[BANK0 ] int 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  j               1   28[BANK0 ] unsigned char 
   726 ;;  i               1   27[BANK0 ] unsigned char 
   727 ;;  y               1   26[BANK0 ] unsigned char 
   728 ;;  x               1   25[BANK0 ] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         0       2       0       0       0       0       0
   739 ;;      Locals:         0       4       0       0       0       0       0
   740 ;;      Temps:          0       3       0       0       0       0       0
   741 ;;      Totals:         0       9       0       0       0       0       0
   742 ;;Total ram usage:        9 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    2
   745 ;; This function calls:
   746 ;;		___awmod
   747 ;;		_rand
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text1
   754  007432                     __ptext1:
   755                           	opt callstack 0
   756  007432                     _rempliMines:
   757                           	opt callstack 28
   758  007432                     
   759                           ;main.c: 140: char x, y;;main.c: 142: for (char i = 0; i < 4; i++) {
   760  007432  0E00               	movlw	0
   761  007434  0100               	movlb	0	; force () banked
   762  007436  6FCF               	movwf	rempliMines@i& (0+255),b
   763  007438                     
   764                           ; BSR set to: 0
   765  007438  0E03               	movlw	3
   766  00743A  0100               	movlb	0	; force () banked
   767  00743C  65CF               	cpfsgt	rempliMines@i& (0+255),b
   768  00743E  EF23  F03A         	goto	u1231
   769  007442  EF25  F03A         	goto	u1230
   770  007446                     u1231:
   771  007446  EF27  F03A         	goto	l2180
   772  00744A                     u1230:
   773  00744A  EFB8  F03A         	goto	l2204
   774  00744E                     l2180:
   775                           
   776                           ; BSR set to: 0
   777                           ;main.c: 143: for (char j = 0; j < 20; j++) {
   778  00744E  0E00               	movlw	0
   779  007450  0100               	movlb	0	; force () banked
   780  007452  6FD0               	movwf	rempliMines@j& (0+255),b
   781  007454                     
   782                           ; BSR set to: 0
   783  007454  0E13               	movlw	19
   784  007456  0100               	movlb	0	; force () banked
   785  007458  65D0               	cpfsgt	rempliMines@j& (0+255),b
   786  00745A  EF31  F03A         	goto	u1241
   787  00745E  EF33  F03A         	goto	u1240
   788  007462                     u1241:
   789  007462  EF35  F03A         	goto	l2186
   790  007466                     u1240:
   791  007466  EF58  F03A         	goto	l2192
   792  00746A                     l2186:
   793                           
   794                           ; BSR set to: 0
   795                           ;main.c: 144: m_tabMines[i][j] = ' ';
   796  00746A  0100               	movlb	0	; force () banked
   797  00746C  51CF               	movf	rempliMines@i& (0+255),w,b
   798  00746E  0D15               	mullw	21
   799  007470  0E60               	movlw	low _m_tabMines
   800  007472  0100               	movlb	0	; force () banked
   801  007474  6FCA               	movwf	??_rempliMines& (0+255),b
   802  007476  0E00               	movlw	high _m_tabMines
   803  007478  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   804  00747A  50F3               	movf	243,w,c
   805  00747C  27CA               	addwf	??_rempliMines& (0+255),f,b
   806  00747E  50F4               	movf	244,w,c
   807  007480  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   808  007482  0100               	movlb	0	; force () banked
   809  007484  51D0               	movf	rempliMines@j& (0+255),w,b
   810  007486  0100               	movlb	0	; force () banked
   811  007488  25CA               	addwf	??_rempliMines& (0+255),w,b
   812  00748A  6ED9               	movwf	fsr2l,c
   813  00748C  0100               	movlb	0	; force () banked
   814  00748E  0E00               	movlw	0
   815  007490  0100               	movlb	0	; force () banked
   816  007492  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   817  007494  6EDA               	movwf	fsr2h,c
   818  007496  0E20               	movlw	32
   819  007498  6EDF               	movwf	indf2,c
   820  00749A                     
   821                           ; BSR set to: 0
   822  00749A  0100               	movlb	0	; force () banked
   823  00749C  2BD0               	incf	rempliMines@j& (0+255),f,b
   824  00749E                     
   825                           ; BSR set to: 0
   826  00749E  0E13               	movlw	19
   827  0074A0  0100               	movlb	0	; force () banked
   828  0074A2  65D0               	cpfsgt	rempliMines@j& (0+255),b
   829  0074A4  EF56  F03A         	goto	u1251
   830  0074A8  EF58  F03A         	goto	u1250
   831  0074AC                     u1251:
   832  0074AC  EF35  F03A         	goto	l2186
   833  0074B0                     u1250:
   834  0074B0                     l2192:
   835                           
   836                           ; BSR set to: 0
   837  0074B0  0100               	movlb	0	; force () banked
   838  0074B2  2BCF               	incf	rempliMines@i& (0+255),f,b
   839  0074B4                     
   840                           ; BSR set to: 0
   841  0074B4  0E03               	movlw	3
   842  0074B6  0100               	movlb	0	; force () banked
   843  0074B8  65CF               	cpfsgt	rempliMines@i& (0+255),b
   844  0074BA  EF61  F03A         	goto	u1261
   845  0074BE  EF63  F03A         	goto	u1260
   846  0074C2                     u1261:
   847  0074C2  EF27  F03A         	goto	l2180
   848  0074C6                     u1260:
   849  0074C6  EFB8  F03A         	goto	l2204
   850  0074CA                     l2196:
   851                           
   852                           ; BSR set to: 0
   853                           ;main.c: 148: x = rand() % 20;
   854  0074CA  ECDD  F035         	call	_rand	;wreg free
   855  0074CE  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   856  0074D2  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   857  0074D6  0E00               	movlw	0
   858  0074D8  0100               	movlb	0	; force () banked
   859  0074DA  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   860  0074DC  0E14               	movlw	20
   861  0074DE  6FC4               	movwf	___awmod@divisor& (0+255),b
   862  0074E0  EC12  F038         	call	___awmod	;wreg free
   863  0074E4  0100               	movlb	0	; force () banked
   864  0074E6  51C2               	movf	?___awmod& (0+255),w,b
   865  0074E8  0100               	movlb	0	; force () banked
   866  0074EA  6FCD               	movwf	rempliMines@x& (0+255),b
   867                           
   868                           ;main.c: 149: y = rand() % 4;
   869  0074EC  ECDD  F035         	call	_rand	;wreg free
   870  0074F0  0100               	movlb	0	; force () banked
   871  0074F2  51C0               	movf	?_rand& (0+255),w,b
   872  0074F4  0B03               	andlw	3
   873  0074F6  0100               	movlb	0	; force () banked
   874  0074F8  6FCE               	movwf	rempliMines@y& (0+255),b
   875  0074FA                     
   876                           ; BSR set to: 0
   877                           ;main.c: 150: if (m_tabMines[y][x] != 2) {
   878  0074FA  0100               	movlb	0	; force () banked
   879  0074FC  51CE               	movf	rempliMines@y& (0+255),w,b
   880  0074FE  0D15               	mullw	21
   881  007500  0E60               	movlw	low _m_tabMines
   882  007502  0100               	movlb	0	; force () banked
   883  007504  6FCA               	movwf	??_rempliMines& (0+255),b
   884  007506  0E00               	movlw	high _m_tabMines
   885  007508  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   886  00750A  50F3               	movf	243,w,c
   887  00750C  27CA               	addwf	??_rempliMines& (0+255),f,b
   888  00750E  50F4               	movf	244,w,c
   889  007510  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   890  007512  0100               	movlb	0	; force () banked
   891  007514  51CD               	movf	rempliMines@x& (0+255),w,b
   892  007516  0100               	movlb	0	; force () banked
   893  007518  25CA               	addwf	??_rempliMines& (0+255),w,b
   894  00751A  6ED9               	movwf	fsr2l,c
   895  00751C  0100               	movlb	0	; force () banked
   896  00751E  0E00               	movlw	0
   897  007520  0100               	movlb	0	; force () banked
   898  007522  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   899  007524  6EDA               	movwf	fsr2h,c
   900  007526  0E02               	movlw	2
   901  007528  18DE               	xorwf	postinc2,w,c
   902  00752A  B4D8               	btfsc	status,2,c
   903  00752C  EF9A  F03A         	goto	u1271
   904  007530  EF9C  F03A         	goto	u1270
   905  007534                     u1271:
   906  007534  EFB8  F03A         	goto	l2204
   907  007538                     u1270:
   908  007538                     
   909                           ; BSR set to: 0
   910                           ;main.c: 151: m_tabMines[y][x] = 2;
   911  007538  0100               	movlb	0	; force () banked
   912  00753A  51CE               	movf	rempliMines@y& (0+255),w,b
   913  00753C  0D15               	mullw	21
   914  00753E  0E60               	movlw	low _m_tabMines
   915  007540  0100               	movlb	0	; force () banked
   916  007542  6FCA               	movwf	??_rempliMines& (0+255),b
   917  007544  0E00               	movlw	high _m_tabMines
   918  007546  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   919  007548  50F3               	movf	243,w,c
   920  00754A  27CA               	addwf	??_rempliMines& (0+255),f,b
   921  00754C  50F4               	movf	244,w,c
   922  00754E  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   923  007550  0100               	movlb	0	; force () banked
   924  007552  51CD               	movf	rempliMines@x& (0+255),w,b
   925  007554  0100               	movlb	0	; force () banked
   926  007556  25CA               	addwf	??_rempliMines& (0+255),w,b
   927  007558  6ED9               	movwf	fsr2l,c
   928  00755A  0100               	movlb	0	; force () banked
   929  00755C  0E00               	movlw	0
   930  00755E  0100               	movlb	0	; force () banked
   931  007560  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   932  007562  6EDA               	movwf	fsr2h,c
   933  007564  0E02               	movlw	2
   934  007566  6EDF               	movwf	indf2,c
   935  007568                     
   936                           ; BSR set to: 0
   937                           ;main.c: 152: nb--;
   938  007568  0100               	movlb	0	; force () banked
   939  00756A  07C8               	decf	rempliMines@nb& (0+255),f,b
   940  00756C  A0D8               	btfss	status,0,c
   941  00756E  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   942  007570                     l2204:
   943                           
   944                           ; BSR set to: 0
   945  007570  0100               	movlb	0	; force () banked
   946  007572  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   947  007574  EFC6  F03A         	goto	u1280
   948  007578  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   949  00757A  E106               	bnz	u1281
   950  00757C  05C8               	decf	rempliMines@nb& (0+255),w,b
   951  00757E  B0D8               	btfsc	status,0,c
   952  007580  EFC4  F03A         	goto	u1281
   953  007584  EFC6  F03A         	goto	u1280
   954  007588                     u1281:
   955  007588  EF65  F03A         	goto	l2196
   956  00758C                     u1280:
   957  00758C                     
   958                           ; BSR set to: 0
   959  00758C  0012               	return		;funcret
   960  00758E                     __end_of_rempliMines:
   961                           	opt callstack 0
   962                           
   963 ;; *************** function _rand *****************
   964 ;; Defined at:
   965 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  2   12[BANK0 ] int 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   979 ;;      Params:         0       2       0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0
   982 ;;      Totals:         0       2       0       0       0       0       0
   983 ;;Total ram usage:        2 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    1
   986 ;; This function calls:
   987 ;;		___lmul
   988 ;; This function is called by:
   989 ;;		_rempliMines
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text2
   994  006BBA                     __ptext2:
   995                           	opt callstack 0
   996  006BBA                     _rand:
   997                           	opt callstack 28
   998  006BBA  C0D8  F0B4         	movff	_randx,___lmul@multiplier
   999  006BBE  C0D9  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1000  006BC2  C0DA  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1001  006BC6  C0DB  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1002  006BCA  0E6D               	movlw	109
  1003  006BCC  0100               	movlb	0	; () banked
  1004  006BCE  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1005  006BD0  0E4E               	movlw	78
  1006  006BD2  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1007  006BD4  0EC6               	movlw	198
  1008  006BD6  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1009  006BD8  0E41               	movlw	65
  1010  006BDA  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1011  006BDC  ECFC  F036         	call	___lmul	;wreg free
  1012  006BE0  C0B4  F0D8         	movff	?___lmul,_randx
  1013  006BE4  C0B5  F0D9         	movff	?___lmul+1,_randx+1
  1014  006BE8  C0B6  F0DA         	movff	?___lmul+2,_randx+2
  1015  006BEC  C0B7  F0DB         	movff	?___lmul+3,_randx+3
  1016  006BF0  0E39               	movlw	57
  1017  006BF2  0100               	movlb	0	; () banked
  1018  006BF4  27D8               	addwf	_randx& (0+255),f,b
  1019  006BF6  0E30               	movlw	48
  1020  006BF8  23D9               	addwfc	(_randx+1)& (0+255),f,b
  1021  006BFA  0E00               	movlw	0
  1022  006BFC  23DA               	addwfc	(_randx+2)& (0+255),f,b
  1023  006BFE  0E00               	movlw	0
  1024  006C00  23DB               	addwfc	(_randx+3)& (0+255),f,b
  1025  006C02                     
  1026                           ; BSR set to: 0
  1027  006C02  0EFF               	movlw	255
  1028  006C04  15DA               	andwf	(_randx+2)& (0+255),w,b
  1029  006C06  6FC0               	movwf	?_rand& (0+255),b
  1030  006C08  0E7F               	movlw	127
  1031  006C0A  15DB               	andwf	(_randx+3)& (0+255),w,b
  1032  006C0C  6FC1               	movwf	(?_rand+1)& (0+255),b
  1033  006C0E                     
  1034                           ; BSR set to: 0
  1035  006C0E  0012               	return		;funcret
  1036  006C10                     __end_of_rand:
  1037                           	opt callstack 0
  1038                           
  1039 ;; *************** function ___lmul *****************
  1040 ;; Defined at:
  1041 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1044 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  product         4    8[BANK0 ] unsigned long 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  4    0[BANK0 ] unsigned long 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1056 ;;      Params:         0       8       0       0       0       0       0
  1057 ;;      Locals:         0       4       0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0
  1059 ;;      Totals:         0      12       0       0       0       0       0
  1060 ;;Total ram usage:       12 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_rand
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070  006DF8                     __ptext3:
  1071                           	opt callstack 0
  1072  006DF8                     ___lmul:
  1073                           	opt callstack 28
  1074  006DF8  0E00               	movlw	0
  1075  006DFA  0100               	movlb	0	; () banked
  1076  006DFC  6FBC               	movwf	___lmul@product& (0+255),b
  1077  006DFE  0E00               	movlw	0
  1078  006E00  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1079  006E02  0E00               	movlw	0
  1080  006E04  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1081  006E06  0E00               	movlw	0
  1082  006E08  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1083  006E0A                     l1950:
  1084                           
  1085                           ; BSR set to: 0
  1086  006E0A  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1087  006E0C  EF0A  F037         	goto	u921
  1088  006E10  EF0C  F037         	goto	u920
  1089  006E14                     u921:
  1090  006E14  EF14  F037         	goto	l1954
  1091  006E18                     u920:
  1092  006E18                     
  1093                           ; BSR set to: 0
  1094  006E18  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1095  006E1A  27BC               	addwf	___lmul@product& (0+255),f,b
  1096  006E1C  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1097  006E1E  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1098  006E20  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1099  006E22  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1100  006E24  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1101  006E26  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1102  006E28                     l1954:
  1103                           
  1104                           ; BSR set to: 0
  1105  006E28  90D8               	bcf	status,0,c
  1106  006E2A  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1107  006E2C  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1108  006E2E  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1109  006E30  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1110  006E32                     
  1111                           ; BSR set to: 0
  1112  006E32  90D8               	bcf	status,0,c
  1113  006E34  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1114  006E36  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1115  006E38  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1116  006E3A  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1117  006E3C  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1118  006E3E  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1119  006E40  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1120  006E42  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1121  006E44  A4D8               	btfss	status,2,c
  1122  006E46  EF27  F037         	goto	u931
  1123  006E4A  EF29  F037         	goto	u930
  1124  006E4E                     u931:
  1125  006E4E  EF05  F037         	goto	l1950
  1126  006E52                     u930:
  1127  006E52                     
  1128                           ; BSR set to: 0
  1129  006E52  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1130  006E56  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1131  006E5A  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1132  006E5E  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1133  006E62                     
  1134                           ; BSR set to: 0
  1135  006E62  0012               	return		;funcret
  1136  006E64                     __end_of___lmul:
  1137                           	opt callstack 0
  1138                           
  1139 ;; *************** function ___awmod *****************
  1140 ;; Defined at:
  1141 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  dividend        2   14[BANK0 ] int 
  1144 ;;  divisor         2   16[BANK0 ] int 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  sign            1   19[BANK0 ] unsigned char 
  1147 ;;  counter         1   18[BANK0 ] unsigned char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  2   14[BANK0 ] int 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1157 ;;      Params:         0       4       0       0       0       0       0
  1158 ;;      Locals:         0       2       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0
  1160 ;;      Totals:         0       6       0       0       0       0       0
  1161 ;;Total ram usage:        6 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_rempliMines
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text4
  1171  007024                     __ptext4:
  1172                           	opt callstack 0
  1173  007024                     ___awmod:
  1174                           	opt callstack 29
  1175  007024  0E00               	movlw	0
  1176  007026  0100               	movlb	0	; () banked
  1177  007028  6FC7               	movwf	___awmod@sign& (0+255),b
  1178  00702A                     
  1179                           ; BSR set to: 0
  1180  00702A  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1181  00702C  EF1C  F038         	goto	u1130
  1182  007030  EF1A  F038         	goto	u1131
  1183  007034                     u1131:
  1184  007034  EF22  F038         	goto	l2098
  1185  007038                     u1130:
  1186  007038                     
  1187                           ; BSR set to: 0
  1188  007038  6DC2               	negf	___awmod@dividend& (0+255),b
  1189  00703A  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1190  00703C  B0D8               	btfsc	status,0,c
  1191  00703E  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1192  007040                     
  1193                           ; BSR set to: 0
  1194  007040  0E01               	movlw	1
  1195  007042  6FC7               	movwf	___awmod@sign& (0+255),b
  1196  007044                     l2098:
  1197                           
  1198                           ; BSR set to: 0
  1199  007044  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1200  007046  EF29  F038         	goto	u1140
  1201  00704A  EF27  F038         	goto	u1141
  1202  00704E                     u1141:
  1203  00704E  EF2D  F038         	goto	l2102
  1204  007052                     u1140:
  1205  007052                     
  1206                           ; BSR set to: 0
  1207  007052  6DC4               	negf	___awmod@divisor& (0+255),b
  1208  007054  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1209  007056  B0D8               	btfsc	status,0,c
  1210  007058  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1211  00705A                     l2102:
  1212                           
  1213                           ; BSR set to: 0
  1214  00705A  51C4               	movf	___awmod@divisor& (0+255),w,b
  1215  00705C  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1216  00705E  B4D8               	btfsc	status,2,c
  1217  007060  EF34  F038         	goto	u1151
  1218  007064  EF36  F038         	goto	u1150
  1219  007068                     u1151:
  1220  007068  EF5A  F038         	goto	l2118
  1221  00706C                     u1150:
  1222  00706C                     
  1223                           ; BSR set to: 0
  1224  00706C  0E01               	movlw	1
  1225  00706E  6FC6               	movwf	___awmod@counter& (0+255),b
  1226  007070  EF3E  F038         	goto	l2108
  1227  007074                     l2106:
  1228                           
  1229                           ; BSR set to: 0
  1230  007074  90D8               	bcf	status,0,c
  1231  007076  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1232  007078  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1233  00707A  2BC6               	incf	___awmod@counter& (0+255),f,b
  1234  00707C                     l2108:
  1235                           
  1236                           ; BSR set to: 0
  1237  00707C  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1238  00707E  EF43  F038         	goto	u1161
  1239  007082  EF45  F038         	goto	u1160
  1240  007086                     u1161:
  1241  007086  EF3A  F038         	goto	l2106
  1242  00708A                     u1160:
  1243  00708A                     l2110:
  1244                           
  1245                           ; BSR set to: 0
  1246  00708A  51C4               	movf	___awmod@divisor& (0+255),w,b
  1247  00708C  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1248  00708E  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1249  007090  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1250  007092  A0D8               	btfss	status,0,c
  1251  007094  EF4E  F038         	goto	u1171
  1252  007098  EF50  F038         	goto	u1170
  1253  00709C                     u1171:
  1254  00709C  EF54  F038         	goto	l2114
  1255  0070A0                     u1170:
  1256  0070A0                     
  1257                           ; BSR set to: 0
  1258  0070A0  51C4               	movf	___awmod@divisor& (0+255),w,b
  1259  0070A2  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1260  0070A4  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1261  0070A6  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1262  0070A8                     l2114:
  1263                           
  1264                           ; BSR set to: 0
  1265  0070A8  90D8               	bcf	status,0,c
  1266  0070AA  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1267  0070AC  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1268  0070AE                     
  1269                           ; BSR set to: 0
  1270  0070AE  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1271  0070B0  EF45  F038         	goto	l2110
  1272  0070B4                     l2118:
  1273                           
  1274                           ; BSR set to: 0
  1275  0070B4  51C7               	movf	___awmod@sign& (0+255),w,b
  1276  0070B6  B4D8               	btfsc	status,2,c
  1277  0070B8  EF60  F038         	goto	u1181
  1278  0070BC  EF62  F038         	goto	u1180
  1279  0070C0                     u1181:
  1280  0070C0  EF66  F038         	goto	l2122
  1281  0070C4                     u1180:
  1282  0070C4                     
  1283                           ; BSR set to: 0
  1284  0070C4  6DC2               	negf	___awmod@dividend& (0+255),b
  1285  0070C6  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1286  0070C8  B0D8               	btfsc	status,0,c
  1287  0070CA  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1288  0070CC                     l2122:
  1289                           
  1290                           ; BSR set to: 0
  1291  0070CC  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1292  0070D0  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1293  0070D4                     
  1294                           ; BSR set to: 0
  1295  0070D4  0012               	return		;funcret
  1296  0070D6                     __end_of___awmod:
  1297                           	opt callstack 0
  1298                           
  1299 ;; *************** function _metToucheCombien *****************
  1300 ;; Defined at:
  1301 ;;		line 166 in file "main.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  j               1   22[BANK0 ] unsigned char 
  1306 ;;  i               1   21[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1316 ;;      Params:         0       0       0       0       0       0       0
  1317 ;;      Locals:         0       2       0       0       0       0       0
  1318 ;;      Temps:          0       3       0       0       0       0       0
  1319 ;;      Totals:         0       5       0       0       0       0       0
  1320 ;;Total ram usage:        5 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    2
  1323 ;; This function calls:
  1324 ;;		_calculToucheCombien
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text5
  1331  00758E                     __ptext5:
  1332                           	opt callstack 0
  1333  00758E                     _metToucheCombien:
  1334                           	opt callstack 28
  1335  00758E                     
  1336                           ;main.c: 168: for (char i = 0; i < 4; i++) {
  1337  00758E  0E00               	movlw	0
  1338  007590  0100               	movlb	0	; force () banked
  1339  007592  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1340  007594                     
  1341                           ; BSR set to: 0
  1342  007594  0E03               	movlw	3
  1343  007596  0100               	movlb	0	; force () banked
  1344  007598  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1345  00759A  EFD1  F03A         	goto	u1291
  1346  00759E  EFD3  F03A         	goto	u1290
  1347  0075A2                     u1291:
  1348  0075A2  EFD5  F03A         	goto	l2212
  1349  0075A6                     u1290:
  1350  0075A6  EF75  F03B         	goto	l114
  1351  0075AA                     l2212:
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;main.c: 169: for (char j = 0; j < 20; j++) {
  1355  0075AA  0E00               	movlw	0
  1356  0075AC  0100               	movlb	0	; force () banked
  1357  0075AE  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1358  0075B0                     
  1359                           ; BSR set to: 0
  1360  0075B0  0E13               	movlw	19
  1361  0075B2  0100               	movlb	0	; force () banked
  1362  0075B4  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1363  0075B6  EFDF  F03A         	goto	u1301
  1364  0075BA  EFE1  F03A         	goto	u1300
  1365  0075BE                     u1301:
  1366  0075BE  EFE3  F03A         	goto	l2218
  1367  0075C2                     u1300:
  1368  0075C2  EF6A  F03B         	goto	l2230
  1369  0075C6                     l2218:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main.c: 170: if (m_tabMines[i][j] != 2)
  1373  0075C6  0100               	movlb	0	; force () banked
  1374  0075C8  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1375  0075CA  0D15               	mullw	21
  1376  0075CC  0E60               	movlw	low _m_tabMines
  1377  0075CE  0100               	movlb	0	; force () banked
  1378  0075D0  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1379  0075D2  0E00               	movlw	high _m_tabMines
  1380  0075D4  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1381  0075D6  50F3               	movf	243,w,c
  1382  0075D8  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1383  0075DA  50F4               	movf	244,w,c
  1384  0075DC  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1385  0075DE  0100               	movlb	0	; force () banked
  1386  0075E0  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1387  0075E2  0100               	movlb	0	; force () banked
  1388  0075E4  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1389  0075E6  6ED9               	movwf	fsr2l,c
  1390  0075E8  0100               	movlb	0	; force () banked
  1391  0075EA  0E00               	movlw	0
  1392  0075EC  0100               	movlb	0	; force () banked
  1393  0075EE  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1394  0075F0  6EDA               	movwf	fsr2h,c
  1395  0075F2  0E02               	movlw	2
  1396  0075F4  18DE               	xorwf	postinc2,w,c
  1397  0075F6  B4D8               	btfsc	status,2,c
  1398  0075F8  EF00  F03B         	goto	u1311
  1399  0075FC  EF02  F03B         	goto	u1310
  1400  007600                     u1311:
  1401  007600  EF28  F03B         	goto	l2222
  1402  007604                     u1310:
  1403  007604                     
  1404                           ; BSR set to: 0
  1405                           ;main.c: 171: m_tabMines[i][j] = calculToucheCombien(i, j) + 48;
  1406  007604  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1407  007608  0100               	movlb	0	; force () banked
  1408  00760A  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1409  00760C  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1410  007610  0100               	movlb	0	; force () banked
  1411  007612  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1412  007614  ECCF  F03D         	call	_calculToucheCombien	;wreg free
  1413  007618  0100               	movlb	0	; force () banked
  1414  00761A  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1415  00761C  0E30               	movlw	48
  1416  00761E  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1417  007620  0100               	movlb	0	; force () banked
  1418  007622  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1419  007624  0D15               	mullw	21
  1420  007626  0E60               	movlw	low _m_tabMines
  1421  007628  0100               	movlb	0	; force () banked
  1422  00762A  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1423  00762C  0E00               	movlw	high _m_tabMines
  1424  00762E  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1425  007630  50F3               	movf	243,w,c
  1426  007632  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1427  007634  50F4               	movf	244,w,c
  1428  007636  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1429  007638  0100               	movlb	0	; force () banked
  1430  00763A  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1431  00763C  0100               	movlb	0	; force () banked
  1432  00763E  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1433  007640  6ED9               	movwf	fsr2l,c
  1434  007642  0100               	movlb	0	; force () banked
  1435  007644  0E00               	movlw	0
  1436  007646  0100               	movlb	0	; force () banked
  1437  007648  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1438  00764A  6EDA               	movwf	fsr2h,c
  1439  00764C  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1440  007650                     l2222:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;main.c: 172: if (m_tabMines[i][j] == '0')
  1444  007650  0100               	movlb	0	; force () banked
  1445  007652  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1446  007654  0D15               	mullw	21
  1447  007656  0E60               	movlw	low _m_tabMines
  1448  007658  0100               	movlb	0	; force () banked
  1449  00765A  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1450  00765C  0E00               	movlw	high _m_tabMines
  1451  00765E  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1452  007660  50F3               	movf	243,w,c
  1453  007662  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1454  007664  50F4               	movf	244,w,c
  1455  007666  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1456  007668  0100               	movlb	0	; force () banked
  1457  00766A  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1458  00766C  0100               	movlb	0	; force () banked
  1459  00766E  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1460  007670  6ED9               	movwf	fsr2l,c
  1461  007672  0100               	movlb	0	; force () banked
  1462  007674  0E00               	movlw	0
  1463  007676  0100               	movlb	0	; force () banked
  1464  007678  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1465  00767A  6EDA               	movwf	fsr2h,c
  1466  00767C  0E30               	movlw	48
  1467  00767E  18DE               	xorwf	postinc2,w,c
  1468  007680  A4D8               	btfss	status,2,c
  1469  007682  EF45  F03B         	goto	u1321
  1470  007686  EF47  F03B         	goto	u1320
  1471  00768A                     u1321:
  1472  00768A  EF5F  F03B         	goto	l2226
  1473  00768E                     u1320:
  1474  00768E                     
  1475                           ; BSR set to: 0
  1476                           ;main.c: 173: m_tabMines[i][j] = ' ';
  1477  00768E  0100               	movlb	0	; force () banked
  1478  007690  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1479  007692  0D15               	mullw	21
  1480  007694  0E60               	movlw	low _m_tabMines
  1481  007696  0100               	movlb	0	; force () banked
  1482  007698  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1483  00769A  0E00               	movlw	high _m_tabMines
  1484  00769C  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1485  00769E  50F3               	movf	243,w,c
  1486  0076A0  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1487  0076A2  50F4               	movf	244,w,c
  1488  0076A4  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1489  0076A6  0100               	movlb	0	; force () banked
  1490  0076A8  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1491  0076AA  0100               	movlb	0	; force () banked
  1492  0076AC  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1493  0076AE  6ED9               	movwf	fsr2l,c
  1494  0076B0  0100               	movlb	0	; force () banked
  1495  0076B2  0E00               	movlw	0
  1496  0076B4  0100               	movlb	0	; force () banked
  1497  0076B6  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1498  0076B8  6EDA               	movwf	fsr2h,c
  1499  0076BA  0E20               	movlw	32
  1500  0076BC  6EDF               	movwf	indf2,c
  1501  0076BE                     l2226:
  1502                           
  1503                           ; BSR set to: 0
  1504  0076BE  0100               	movlb	0	; force () banked
  1505  0076C0  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1506  0076C2                     
  1507                           ; BSR set to: 0
  1508  0076C2  0E13               	movlw	19
  1509  0076C4  0100               	movlb	0	; force () banked
  1510  0076C6  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1511  0076C8  EF68  F03B         	goto	u1331
  1512  0076CC  EF6A  F03B         	goto	u1330
  1513  0076D0                     u1331:
  1514  0076D0  EFE3  F03A         	goto	l2218
  1515  0076D4                     u1330:
  1516  0076D4                     l2230:
  1517                           
  1518                           ; BSR set to: 0
  1519  0076D4  0100               	movlb	0	; force () banked
  1520  0076D6  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1521  0076D8                     
  1522                           ; BSR set to: 0
  1523  0076D8  0E03               	movlw	3
  1524  0076DA  0100               	movlb	0	; force () banked
  1525  0076DC  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1526  0076DE  EF73  F03B         	goto	u1341
  1527  0076E2  EF75  F03B         	goto	u1340
  1528  0076E6                     u1341:
  1529  0076E6  EFD5  F03A         	goto	l2212
  1530  0076EA                     u1340:
  1531  0076EA                     l114:
  1532                           
  1533                           ; BSR set to: 0
  1534  0076EA  0012               	return		;funcret
  1535  0076EC                     __end_of_metToucheCombien:
  1536                           	opt callstack 0
  1537                           
  1538 ;; *************** function _calculToucheCombien *****************
  1539 ;; Defined at:
  1540 ;;		line 183 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  ligne           2    6[BANK0 ] int 
  1543 ;;  colonne         2    8[BANK0 ] int 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  j               2   16[BANK0 ] int 
  1546 ;;  i               2   14[BANK0 ] int 
  1547 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1557 ;;      Params:         0       4       0       0       0       0       0
  1558 ;;      Locals:         0       5       0       0       0       0       0
  1559 ;;      Temps:          0       3       0       0       0       0       0
  1560 ;;      Totals:         0      12       0       0       0       0       0
  1561 ;;Total ram usage:       12 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    1
  1564 ;; This function calls:
  1565 ;;		___wmul
  1566 ;; This function is called by:
  1567 ;;		_metToucheCombien
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text6
  1572  007B9E                     __ptext6:
  1573                           	opt callstack 0
  1574  007B9E                     _calculToucheCombien:
  1575                           	opt callstack 28
  1576  007B9E                     
  1577                           ;main.c: 185: int i = ligne - 1;
  1578  007B9E  0EFF               	movlw	255
  1579  007BA0  0100               	movlb	0	; force () banked
  1580  007BA2  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1581  007BA4  0100               	movlb	0	; force () banked
  1582  007BA6  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1583  007BA8  0EFF               	movlw	255
  1584  007BAA  0100               	movlb	0	; force () banked
  1585  007BAC  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1586  007BAE  0100               	movlb	0	; force () banked
  1587  007BB0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1588                           
  1589                           ;main.c: 186: int j = colonne - 1;
  1590  007BB2  0EFF               	movlw	255
  1591  007BB4  0100               	movlb	0	; force () banked
  1592  007BB6  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1593  007BB8  0100               	movlb	0	; force () banked
  1594  007BBA  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1595  007BBC  0EFF               	movlw	255
  1596  007BBE  0100               	movlb	0	; force () banked
  1597  007BC0  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1598  007BC2  0100               	movlb	0	; force () banked
  1599  007BC4  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1600  007BC6                     
  1601                           ; BSR set to: 0
  1602                           ;main.c: 187: char nbMines = 0;
  1603  007BC6  0E00               	movlw	0
  1604  007BC8  0100               	movlb	0	; force () banked
  1605  007BCA  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1606  007BCC                     
  1607                           ; BSR set to: 0
  1608                           ;main.c: 189: if (i < 0)
  1609  007BCC  0100               	movlb	0	; force () banked
  1610  007BCE  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1611  007BD0  EFEE  F03D         	goto	u940
  1612  007BD4  EFEC  F03D         	goto	u941
  1613  007BD8                     u941:
  1614  007BD8  EFF3  F03D         	goto	l1976
  1615  007BDC                     u940:
  1616  007BDC                     
  1617                           ; BSR set to: 0
  1618                           ;main.c: 190: i = 0;
  1619  007BDC  0E00               	movlw	0
  1620  007BDE  0100               	movlb	0	; force () banked
  1621  007BE0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1622  007BE2  0E00               	movlw	0
  1623  007BE4  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1624  007BE6                     l1976:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 191: if (j < 0)
  1628  007BE6  0100               	movlb	0	; force () banked
  1629  007BE8  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1630  007BEA  EFFB  F03D         	goto	u950
  1631  007BEE  EFF9  F03D         	goto	u951
  1632  007BF2                     u951:
  1633  007BF2  EF71  F03E         	goto	l1992
  1634  007BF6                     u950:
  1635  007BF6                     
  1636                           ; BSR set to: 0
  1637                           ;main.c: 192: j = 0;
  1638  007BF6  0E00               	movlw	0
  1639  007BF8  0100               	movlb	0	; force () banked
  1640  007BFA  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1641  007BFC  0E00               	movlw	0
  1642  007BFE  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1643  007C00  EF71  F03E         	goto	l1992
  1644  007C04                     l1980:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 195: for (j = j = colonne - 1; (j <= (colonne + 1))&&(j < 20); j++) {
  1648  007C04  0EFF               	movlw	255
  1649  007C06  0100               	movlb	0	; force () banked
  1650  007C08  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1651  007C0A  0100               	movlb	0	; force () banked
  1652  007C0C  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1653  007C0E  0EFF               	movlw	255
  1654  007C10  0100               	movlb	0	; force () banked
  1655  007C12  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1656  007C14  0100               	movlb	0	; force () banked
  1657  007C16  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1658  007C18  C0C4  F0C4         	movff	calculToucheCombien@j,calculToucheCombien@j
  1659  007C1C  C0C5  F0C5         	movff	calculToucheCombien@j+1,calculToucheCombien@j+1
  1660  007C20  EF42  F03E         	goto	l1986
  1661  007C24                     l1982:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;main.c: 196: if (m_tabMines[i][j] == 2)
  1665  007C24  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1666  007C28  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1667  007C2C  0E00               	movlw	0
  1668  007C2E  0100               	movlb	0	; force () banked
  1669  007C30  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1670  007C32  0E15               	movlw	21
  1671  007C34  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1672  007C36  ECED  F034         	call	___wmul	;wreg free
  1673  007C3A  0E60               	movlw	low _m_tabMines
  1674  007C3C  0100               	movlb	0	; force () banked
  1675  007C3E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1676  007C40  0E00               	movlw	high _m_tabMines
  1677  007C42  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1678  007C44  0100               	movlb	0	; force () banked
  1679  007C46  51B4               	movf	?___wmul& (0+255),w,b
  1680  007C48  0100               	movlb	0	; force () banked
  1681  007C4A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1682  007C4C  0100               	movlb	0	; force () banked
  1683  007C4E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1684  007C50  0100               	movlb	0	; force () banked
  1685  007C52  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1686  007C54  0100               	movlb	0	; force () banked
  1687  007C56  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1688  007C58  0100               	movlb	0	; force () banked
  1689  007C5A  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1690  007C5C  6ED9               	movwf	fsr2l,c
  1691  007C5E  0100               	movlb	0	; force () banked
  1692  007C60  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1693  007C62  0100               	movlb	0	; force () banked
  1694  007C64  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1695  007C66  6EDA               	movwf	fsr2h,c
  1696  007C68  0E02               	movlw	2
  1697  007C6A  18DE               	xorwf	postinc2,w,c
  1698  007C6C  A4D8               	btfss	status,2,c
  1699  007C6E  EF3B  F03E         	goto	u961
  1700  007C72  EF3D  F03E         	goto	u960
  1701  007C76                     u961:
  1702  007C76  EF3F  F03E         	goto	l123
  1703  007C7A                     u960:
  1704  007C7A                     
  1705                           ; BSR set to: 0
  1706                           ;main.c: 197: nbMines++;
  1707  007C7A  0100               	movlb	0	; force () banked
  1708  007C7C  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1709  007C7E                     l123:
  1710                           
  1711                           ; BSR set to: 0
  1712  007C7E  0100               	movlb	0	; force () banked
  1713  007C80  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1714  007C82  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1715  007C84                     l1986:
  1716                           
  1717                           ; BSR set to: 0
  1718  007C84  0E01               	movlw	1
  1719  007C86  0100               	movlb	0	; force () banked
  1720  007C88  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1721  007C8A  0100               	movlb	0	; force () banked
  1722  007C8C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1723  007C8E  0E00               	movlw	0
  1724  007C90  0100               	movlb	0	; force () banked
  1725  007C92  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1726  007C94  0100               	movlb	0	; force () banked
  1727  007C96  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1728  007C98  0100               	movlb	0	; force () banked
  1729  007C9A  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1730  007C9C  0100               	movlb	0	; force () banked
  1731  007C9E  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1732  007CA0  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1733  007CA2  0A80               	xorlw	128
  1734  007CA4  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1735  007CA6  0100               	movlb	0	; force () banked
  1736  007CA8  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1737  007CAA  0A80               	xorlw	128
  1738  007CAC  0100               	movlb	0	; force () banked
  1739  007CAE  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1740  007CB0  A0D8               	btfss	status,0,c
  1741  007CB2  EF5D  F03E         	goto	u971
  1742  007CB6  EF5F  F03E         	goto	u970
  1743  007CBA                     u971:
  1744  007CBA  EF6E  F03E         	goto	l1990
  1745  007CBE                     u970:
  1746  007CBE                     
  1747                           ; BSR set to: 0
  1748  007CBE  0100               	movlb	0	; force () banked
  1749  007CC0  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1750  007CC2  EF6C  F03E         	goto	u981
  1751  007CC6  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1752  007CC8  E109               	bnz	u980
  1753  007CCA  0E14               	movlw	20
  1754  007CCC  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1755  007CCE  A0D8               	btfss	status,0,c
  1756  007CD0  EF6C  F03E         	goto	u981
  1757  007CD4  EF6E  F03E         	goto	u980
  1758  007CD8                     u981:
  1759  007CD8  EF12  F03E         	goto	l1982
  1760  007CDC                     u980:
  1761  007CDC                     l1990:
  1762                           
  1763                           ; BSR set to: 0
  1764  007CDC  0100               	movlb	0	; force () banked
  1765  007CDE  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1766  007CE0  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1767  007CE2                     l1992:
  1768                           
  1769                           ; BSR set to: 0
  1770  007CE2  0E01               	movlw	1
  1771  007CE4  0100               	movlb	0	; force () banked
  1772  007CE6  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1773  007CE8  0100               	movlb	0	; force () banked
  1774  007CEA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1775  007CEC  0E00               	movlw	0
  1776  007CEE  0100               	movlb	0	; force () banked
  1777  007CF0  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1778  007CF2  0100               	movlb	0	; force () banked
  1779  007CF4  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1780  007CF6  0100               	movlb	0	; force () banked
  1781  007CF8  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1782  007CFA  0100               	movlb	0	; force () banked
  1783  007CFC  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1784  007CFE  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1785  007D00  0A80               	xorlw	128
  1786  007D02  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1787  007D04  0100               	movlb	0	; force () banked
  1788  007D06  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1789  007D08  0A80               	xorlw	128
  1790  007D0A  0100               	movlb	0	; force () banked
  1791  007D0C  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1792  007D0E  A0D8               	btfss	status,0,c
  1793  007D10  EF8C  F03E         	goto	u991
  1794  007D14  EF8E  F03E         	goto	u990
  1795  007D18                     u991:
  1796  007D18  EF9D  F03E         	goto	l1996
  1797  007D1C                     u990:
  1798  007D1C                     
  1799                           ; BSR set to: 0
  1800  007D1C  0100               	movlb	0	; force () banked
  1801  007D1E  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1802  007D20  EF9B  F03E         	goto	u1001
  1803  007D24  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1804  007D26  E109               	bnz	u1000
  1805  007D28  0E04               	movlw	4
  1806  007D2A  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1807  007D2C  A0D8               	btfss	status,0,c
  1808  007D2E  EF9B  F03E         	goto	u1001
  1809  007D32  EF9D  F03E         	goto	u1000
  1810  007D36                     u1001:
  1811  007D36  EF02  F03E         	goto	l1980
  1812  007D3A                     u1000:
  1813  007D3A                     l1996:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 198: };main.c: 199: };main.c: 200: return nbMines;
  1817  007D3A  0100               	movlb	0	; force () banked
  1818  007D3C  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1819  007D3E                     
  1820                           ; BSR set to: 0
  1821  007D3E  0012               	return		;funcret
  1822  007D40                     __end_of_calculToucheCombien:
  1823                           	opt callstack 0
  1824                           
  1825 ;; *************** function ___wmul *****************
  1826 ;; Defined at:
  1827 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1830 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  product         2    4[BANK0 ] unsigned int 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2    0[BANK0 ] unsigned int 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, prodl, prodh
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1842 ;;      Params:         0       4       0       0       0       0       0
  1843 ;;      Locals:         0       2       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0
  1845 ;;      Totals:         0       6       0       0       0       0       0
  1846 ;;Total ram usage:        6 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_calculToucheCombien
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text7
  1856  0069DA                     __ptext7:
  1857                           	opt callstack 0
  1858  0069DA                     ___wmul:
  1859                           	opt callstack 28
  1860  0069DA  0100               	movlb	0	; () banked
  1861  0069DC  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1862  0069DE  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1863  0069E0  CFF3 F0B8          	movff	prodl,___wmul@product
  1864  0069E4  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1865  0069E8  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1866  0069EA  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1867  0069EC  50F3               	movf	243,w,c
  1868  0069EE  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1869  0069F0  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1870  0069F2  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1871  0069F4  50F3               	movf	243,w,c
  1872  0069F6  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1873  0069F8                     
  1874                           ; BSR set to: 0
  1875  0069F8  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1876  0069FC  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1877  006A00                     
  1878                           ; BSR set to: 0
  1879  006A00  0012               	return		;funcret
  1880  006A02                     __end_of___wmul:
  1881                           	opt callstack 0
  1882                           
  1883 ;; *************** function _metOuEnleveDrapeau *****************
  1884 ;; Defined at:
  1885 ;;		line 374 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  x               1    wreg     unsigned char 
  1888 ;;  y               1    9[BANK0 ] unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  x               1   15[BANK0 ] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1900 ;;      Params:         0       1       0       0       0       0       0
  1901 ;;      Locals:         0       1       0       0       0       0       0
  1902 ;;      Temps:          0       5       0       0       0       0       0
  1903 ;;      Totals:         0       7       0       0       0       0       0
  1904 ;;Total ram usage:        7 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    6
  1907 ;; This function calls:
  1908 ;;		_afficheTabVue
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text8
  1915  0072FC                     __ptext8:
  1916                           	opt callstack 0
  1917  0072FC                     _metOuEnleveDrapeau:
  1918                           	opt callstack 24
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;incstack = 0
  1922                           ;metOuEnleveDrapeau@x stored from wreg
  1923  0072FC  0100               	movlb	0	; force () banked
  1924  0072FE  6FC3               	movwf	metOuEnleveDrapeau@x& (0+255),b
  1925  007300                     
  1926                           ;main.c: 376: if (m_tabVue[y-1][x-1]==1)
  1927  007300  0100               	movlb	0	; force () banked
  1928  007302  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  1929  007304  0D15               	mullw	21
  1930  007306  0EEA               	movlw	234
  1931  007308  0100               	movlb	0	; force () banked
  1932  00730A  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  1933  00730C  0EFF               	movlw	255
  1934  00730E  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  1935  007310  0E00               	movlw	low _m_tabVue
  1936  007312  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  1937  007314  0E01               	movlw	high _m_tabVue
  1938  007316  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  1939  007318  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  1940  00731A  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1941  00731C  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  1942  00731E  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1943  007320  50F3               	movf	243,w,c
  1944  007322  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1945  007324  50F4               	movf	244,w,c
  1946  007326  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1947  007328  0100               	movlb	0	; force () banked
  1948  00732A  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  1949  00732C  0100               	movlb	0	; force () banked
  1950  00732E  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  1951  007330  6ED9               	movwf	fsr2l,c
  1952  007332  0100               	movlb	0	; force () banked
  1953  007334  0E00               	movlw	0
  1954  007336  0100               	movlb	0	; force () banked
  1955  007338  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  1956  00733A  6EDA               	movwf	fsr2h,c
  1957  00733C  04DE               	decf	postinc2,w,c
  1958  00733E  A4D8               	btfss	status,2,c
  1959  007340  EFA4  F039         	goto	u1561
  1960  007344  EFA6  F039         	goto	u1560
  1961  007348                     u1561:
  1962  007348  EFC8  F039         	goto	l2346
  1963  00734C                     u1560:
  1964  00734C                     
  1965                           ; BSR set to: 0
  1966                           ;main.c: 377: m_tabVue[y-1][x-1]=3;
  1967  00734C  0100               	movlb	0	; force () banked
  1968  00734E  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  1969  007350  0D15               	mullw	21
  1970  007352  0EEA               	movlw	234
  1971  007354  0100               	movlb	0	; force () banked
  1972  007356  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  1973  007358  0EFF               	movlw	255
  1974  00735A  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  1975  00735C  0E00               	movlw	low _m_tabVue
  1976  00735E  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  1977  007360  0E01               	movlw	high _m_tabVue
  1978  007362  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  1979  007364  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  1980  007366  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1981  007368  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  1982  00736A  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1983  00736C  50F3               	movf	243,w,c
  1984  00736E  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1985  007370  50F4               	movf	244,w,c
  1986  007372  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1987  007374  0100               	movlb	0	; force () banked
  1988  007376  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  1989  007378  0100               	movlb	0	; force () banked
  1990  00737A  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  1991  00737C  6ED9               	movwf	fsr2l,c
  1992  00737E  0100               	movlb	0	; force () banked
  1993  007380  0E00               	movlw	0
  1994  007382  0100               	movlb	0	; force () banked
  1995  007384  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  1996  007386  6EDA               	movwf	fsr2h,c
  1997  007388  0E03               	movlw	3
  1998  00738A  6EDF               	movwf	indf2,c
  1999  00738C  EF0F  F03A         	goto	l2350
  2000  007390                     l2346:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;main.c: 378: else if (m_tabVue[y-1][x-1]==3)
  2004  007390  0100               	movlb	0	; force () banked
  2005  007392  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  2006  007394  0D15               	mullw	21
  2007  007396  0EEA               	movlw	234
  2008  007398  0100               	movlb	0	; force () banked
  2009  00739A  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  2010  00739C  0EFF               	movlw	255
  2011  00739E  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  2012  0073A0  0E00               	movlw	low _m_tabVue
  2013  0073A2  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  2014  0073A4  0E01               	movlw	high _m_tabVue
  2015  0073A6  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  2016  0073A8  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  2017  0073AA  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2018  0073AC  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  2019  0073AE  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2020  0073B0  50F3               	movf	243,w,c
  2021  0073B2  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2022  0073B4  50F4               	movf	244,w,c
  2023  0073B6  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2024  0073B8  0100               	movlb	0	; force () banked
  2025  0073BA  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  2026  0073BC  0100               	movlb	0	; force () banked
  2027  0073BE  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  2028  0073C0  6ED9               	movwf	fsr2l,c
  2029  0073C2  0100               	movlb	0	; force () banked
  2030  0073C4  0E00               	movlw	0
  2031  0073C6  0100               	movlb	0	; force () banked
  2032  0073C8  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  2033  0073CA  6EDA               	movwf	fsr2h,c
  2034  0073CC  0E03               	movlw	3
  2035  0073CE  18DE               	xorwf	postinc2,w,c
  2036  0073D0  A4D8               	btfss	status,2,c
  2037  0073D2  EFED  F039         	goto	u1571
  2038  0073D6  EFEF  F039         	goto	u1570
  2039  0073DA                     u1571:
  2040  0073DA  EF0F  F03A         	goto	l2350
  2041  0073DE                     u1570:
  2042  0073DE                     
  2043                           ; BSR set to: 0
  2044                           ;main.c: 379: m_tabVue[y-1][x-1]=1;
  2045  0073DE  0100               	movlb	0	; force () banked
  2046  0073E0  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  2047  0073E2  0D15               	mullw	21
  2048  0073E4  0EEA               	movlw	234
  2049  0073E6  0100               	movlb	0	; force () banked
  2050  0073E8  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  2051  0073EA  0EFF               	movlw	255
  2052  0073EC  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  2053  0073EE  0E00               	movlw	low _m_tabVue
  2054  0073F0  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  2055  0073F2  0E01               	movlw	high _m_tabVue
  2056  0073F4  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  2057  0073F6  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  2058  0073F8  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2059  0073FA  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  2060  0073FC  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2061  0073FE  50F3               	movf	243,w,c
  2062  007400  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2063  007402  50F4               	movf	244,w,c
  2064  007404  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2065  007406  0100               	movlb	0	; force () banked
  2066  007408  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  2067  00740A  0100               	movlb	0	; force () banked
  2068  00740C  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  2069  00740E  6ED9               	movwf	fsr2l,c
  2070  007410  0100               	movlb	0	; force () banked
  2071  007412  0E00               	movlw	0
  2072  007414  0100               	movlb	0	; force () banked
  2073  007416  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  2074  007418  6EDA               	movwf	fsr2h,c
  2075  00741A  0E01               	movlw	1
  2076  00741C  6EDF               	movwf	indf2,c
  2077  00741E                     l2350:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 380: afficheTabVue();
  2081  00741E  EC35  F036         	call	_afficheTabVue	;wreg free
  2082  007422                     l204:
  2083  007422  A081               	btfss	129,0,c	;volatile
  2084  007424  EF16  F03A         	goto	u1581
  2085  007428  EF18  F03A         	goto	u1580
  2086  00742C                     u1581:
  2087  00742C  EF11  F03A         	goto	l204
  2088  007430                     u1580:
  2089  007430  0012               	return		;funcret
  2090  007432                     __end_of_metOuEnleveDrapeau:
  2091                           	opt callstack 0
  2092                           
  2093 ;; *************** function _lcd_init *****************
  2094 ;; Defined at:
  2095 ;;		line 258 in file "Lcd4Lignes.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2109 ;;      Params:         0       0       0       0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0
  2112 ;;      Totals:         0       0       0       0       0       0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    5
  2116 ;; This function calls:
  2117 ;;		_lcd_initCGRam
  2118 ;;		_lcd_resetSequence
  2119 ;;		_lcd_wrCom
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text9
  2126  0069B2                     __ptext9:
  2127                           	opt callstack 0
  2128  0069B2                     _lcd_init:
  2129                           	opt callstack 25
  2130  0069B2                     
  2131                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2132  0069B2  EC91  F036         	call	_lcd_resetSequence	;wreg free
  2133                           
  2134                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2135  0069B6  0E28               	movlw	40
  2136  0069B8  ECC6  F036         	call	_lcd_wrCom
  2137                           
  2138                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2139  0069BC  0E0F               	movlw	15
  2140  0069BE  ECC6  F036         	call	_lcd_wrCom
  2141                           
  2142                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2143  0069C2  0E01               	movlw	1
  2144  0069C4  ECC6  F036         	call	_lcd_wrCom
  2145                           
  2146                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2147  0069C8  0E06               	movlw	6
  2148  0069CA  ECC6  F036         	call	_lcd_wrCom
  2149                           
  2150                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2151  0069CE  0E80               	movlw	128
  2152  0069D0  ECC6  F036         	call	_lcd_wrCom
  2153  0069D4                     
  2154                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2155  0069D4  EC6B  F037         	call	_lcd_initCGRam	;wreg free
  2156  0069D8  0012               	return		;funcret
  2157  0069DA                     __end_of_lcd_init:
  2158                           	opt callstack 0
  2159                           
  2160 ;; *************** function _lcd_resetSequence *****************
  2161 ;; Defined at:
  2162 ;;		line 221 in file "Lcd4Lignes.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2176 ;;      Params:         0       0       0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0
  2178 ;;      Temps:          0       1       0       0       0       0       0
  2179 ;;      Totals:         0       1       0       0       0       0       0
  2180 ;;Total ram usage:        1 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    1
  2183 ;; This function calls:
  2184 ;;		_lcd_ecrireDonnees
  2185 ;;		_lcd_strobeEnableBit
  2186 ;; This function is called by:
  2187 ;;		_lcd_init
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text10
  2192  006D22                     __ptext10:
  2193                           	opt callstack 0
  2194  006D22                     _lcd_resetSequence:
  2195                           	opt callstack 28
  2196  006D22                     
  2197                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2198  006D22  0E00               	movlw	0
  2199  006D24  6E95               	movwf	149,c	;volatile
  2200  006D26                     
  2201                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2202  006D26  0E0D               	movlw	13
  2203  006D28  0100               	movlb	0	; force () banked
  2204  006D2A  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2205  006D2C  0EFB               	movlw	251
  2206  006D2E                     u1667:
  2207  006D2E  2EE8               	decfsz	wreg,f,c
  2208  006D30  D7FE               	bra	u1667
  2209  006D32  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2210  006D34  D7FC               	bra	u1667
  2211  006D36  F000 F000          	nop2	
  2212  006D3A                     
  2213                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2214  006D3A  9080               	bcf	128,0,c	;volatile
  2215  006D3C                     
  2216                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2217  006D3C  9280               	bcf	128,1,c	;volatile
  2218  006D3E                     
  2219                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2220  006D3E  0E03               	movlw	3
  2221  006D40  ECCB  F034         	call	_lcd_ecrireDonnees
  2222  006D44                     
  2223                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2224  006D44  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  2225  006D48                     
  2226                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2227  006D48  0E03               	movlw	3
  2228  006D4A                     u1677:
  2229  006D4A  2EE8               	decfsz	wreg,f,c
  2230  006D4C  D7FE               	bra	u1677
  2231  006D4E  F000               	nop	
  2232  006D50                     
  2233                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2234  006D50  0E03               	movlw	3
  2235  006D52  ECCB  F034         	call	_lcd_ecrireDonnees
  2236  006D56                     
  2237                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2238  006D56  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  2239  006D5A                     
  2240                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2241  006D5A  0E03               	movlw	3
  2242  006D5C                     u1687:
  2243  006D5C  2EE8               	decfsz	wreg,f,c
  2244  006D5E  D7FE               	bra	u1687
  2245  006D60  F000               	nop	
  2246  006D62                     
  2247                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2248  006D62  0E03               	movlw	3
  2249  006D64  ECCB  F034         	call	_lcd_ecrireDonnees
  2250  006D68                     
  2251                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2252  006D68  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  2253  006D6C                     
  2254                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2255  006D6C  0E03               	movlw	3
  2256  006D6E                     u1697:
  2257  006D6E  2EE8               	decfsz	wreg,f,c
  2258  006D70  D7FE               	bra	u1697
  2259  006D72  F000               	nop	
  2260  006D74                     
  2261                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2262  006D74  0E02               	movlw	2
  2263  006D76  ECCB  F034         	call	_lcd_ecrireDonnees
  2264  006D7A                     
  2265                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2266  006D7A  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  2267  006D7E                     
  2268                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2269  006D7E  0E03               	movlw	3
  2270  006D80                     u1707:
  2271  006D80  2EE8               	decfsz	wreg,f,c
  2272  006D82  D7FE               	bra	u1707
  2273  006D84  F000               	nop	
  2274  006D86                     
  2275                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2276  006D86  0E0F               	movlw	15
  2277  006D88  6E95               	movwf	149,c	;volatile
  2278  006D8A  0012               	return		;funcret
  2279  006D8C                     __end_of_lcd_resetSequence:
  2280                           	opt callstack 0
  2281                           
  2282 ;; *************** function _lcd_initCGRam *****************
  2283 ;; Defined at:
  2284 ;;		line 417 in file "Lcd4Lignes.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  j               1    6[BANK0 ] unsigned char 
  2289 ;;  i               1    5[BANK0 ] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2299 ;;      Params:         0       0       0       0       0       0       0
  2300 ;;      Locals:         0       2       0       0       0       0       0
  2301 ;;      Temps:          0       2       0       0       0       0       0
  2302 ;;      Totals:         0       4       0       0       0       0       0
  2303 ;;Total ram usage:        4 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    4
  2306 ;; This function calls:
  2307 ;;		_lcd_curseurHome
  2308 ;;		_lcd_wrCom
  2309 ;;		_lcd_wrData
  2310 ;; This function is called by:
  2311 ;;		_lcd_init
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text11
  2316  006ED6                     __ptext11:
  2317                           	opt callstack 0
  2318  006ED6                     _lcd_initCGRam:
  2319                           	opt callstack 25
  2320  006ED6                     
  2321                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2322  006ED6  0E40               	movlw	64
  2323  006ED8  ECC6  F036         	call	_lcd_wrCom
  2324  006EDC                     
  2325                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2326  006EDC  0E00               	movlw	0
  2327  006EDE  0100               	movlb	0	; force () banked
  2328  006EE0  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2329  006EE2                     
  2330                           ; BSR set to: 0
  2331  006EE2  0E07               	movlw	7
  2332  006EE4  0100               	movlb	0	; force () banked
  2333  006EE6  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2334  006EE8  EF78  F037         	goto	u1091
  2335  006EEC  EF7A  F037         	goto	u1090
  2336  006EF0                     u1091:
  2337  006EF0  EF7C  F037         	goto	l2072
  2338  006EF4                     u1090:
  2339  006EF4  EFB9  F037         	goto	l2088
  2340  006EF8                     l2072:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2344  006EF8  0E00               	movlw	0
  2345  006EFA  0100               	movlb	0	; force () banked
  2346  006EFC  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2347  006EFE                     
  2348                           ; BSR set to: 0
  2349  006EFE  0E07               	movlw	7
  2350  006F00  0100               	movlb	0	; force () banked
  2351  006F02  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2352  006F04  EF86  F037         	goto	u1101
  2353  006F08  EF88  F037         	goto	u1100
  2354  006F0C                     u1101:
  2355  006F0C  EF8A  F037         	goto	l2078
  2356  006F10                     u1100:
  2357  006F10  EFAE  F037         	goto	l2084
  2358  006F14                     l2078:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2362  006F14  0100               	movlb	0	; force () banked
  2363  006F16  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2364  006F18  0D08               	mullw	8
  2365  006F1A  0E54               	movlw	low _matCGRAM
  2366  006F1C  0100               	movlb	0	; force () banked
  2367  006F1E  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2368  006F20  0E01               	movlw	high _matCGRAM
  2369  006F22  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2370  006F24  50F3               	movf	243,w,c
  2371  006F26  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2372  006F28  50F4               	movf	244,w,c
  2373  006F2A  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2374  006F2C  0100               	movlb	0	; force () banked
  2375  006F2E  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2376  006F30  0100               	movlb	0	; force () banked
  2377  006F32  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2378  006F34  6ED9               	movwf	fsr2l,c
  2379  006F36  0100               	movlb	0	; force () banked
  2380  006F38  0E00               	movlw	0
  2381  006F3A  0100               	movlb	0	; force () banked
  2382  006F3C  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2383  006F3E  6EDA               	movwf	fsr2h,c
  2384  006F40  50DF               	movf	indf2,w,c
  2385  006F42  EC17  F035         	call	_lcd_wrData
  2386  006F46  0100               	movlb	0	; force () banked
  2387  006F48  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2388  006F4A                     
  2389                           ; BSR set to: 0
  2390  006F4A  0E07               	movlw	7
  2391  006F4C  0100               	movlb	0	; force () banked
  2392  006F4E  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2393  006F50  EFAC  F037         	goto	u1111
  2394  006F54  EFAE  F037         	goto	u1110
  2395  006F58                     u1111:
  2396  006F58  EF8A  F037         	goto	l2078
  2397  006F5C                     u1110:
  2398  006F5C                     l2084:
  2399                           
  2400                           ; BSR set to: 0
  2401  006F5C  0100               	movlb	0	; force () banked
  2402  006F5E  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2403  006F60                     
  2404                           ; BSR set to: 0
  2405  006F60  0E07               	movlw	7
  2406  006F62  0100               	movlb	0	; force () banked
  2407  006F64  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2408  006F66  EFB7  F037         	goto	u1121
  2409  006F6A  EFB9  F037         	goto	u1120
  2410  006F6E                     u1121:
  2411  006F6E  EF7C  F037         	goto	l2072
  2412  006F72                     u1120:
  2413  006F72                     l2088:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2417  006F72  ECBF  F034         	call	_lcd_curseurHome	;wreg free
  2418  006F76  0012               	return		;funcret
  2419  006F78                     __end_of_lcd_initCGRam:
  2420                           	opt callstack 0
  2421                           
  2422 ;; *************** function _lcd_curseurHome *****************
  2423 ;; Defined at:
  2424 ;;		line 288 in file "Lcd4Lignes.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2438 ;;      Params:         0       0       0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    3
  2445 ;; This function calls:
  2446 ;;		_lcd_wrCom
  2447 ;; This function is called by:
  2448 ;;		_lcd_initCGRam
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text12
  2453  00697E                     __ptext12:
  2454                           	opt callstack 0
  2455  00697E                     _lcd_curseurHome:
  2456                           	opt callstack 25
  2457  00697E                     
  2458                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2459  00697E  0E02               	movlw	2
  2460  006980  ECC6  F036         	call	_lcd_wrCom
  2461  006984  0012               	return		;funcret
  2462  006986                     __end_of_lcd_curseurHome:
  2463                           	opt callstack 0
  2464                           
  2465 ;; *************** function _initialisation *****************
  2466 ;; Defined at:
  2467 ;;		line 93 in file "main.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2481 ;;      Params:         0       0       0       0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0
  2484 ;;      Totals:         0       0       0       0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    1
  2488 ;; This function calls:
  2489 ;;		_srand
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text13
  2496  006A62                     __ptext13:
  2497                           	opt callstack 0
  2498  006A62                     _initialisation:
  2499                           	opt callstack 29
  2500  006A62                     
  2501                           ;main.c: 95: TRISD = 0;
  2502  006A62  0E00               	movlw	0
  2503  006A64  6E95               	movwf	149,c	;volatile
  2504                           
  2505                           ;main.c: 96: ANSELH = 0;
  2506  006A66  0E00               	movlw	0
  2507  006A68  6E7F               	movwf	127,c	;volatile
  2508  006A6A                     
  2509                           ;main.c: 97: TRISB = 0xFF;
  2510  006A6A  6893               	setf	147,c	;volatile
  2511                           
  2512                           ;main.c: 98: ANSEL = 0;
  2513  006A6C  0E00               	movlw	0
  2514  006A6E  6E7E               	movwf	126,c	;volatile
  2515                           
  2516                           ;main.c: 99: TRISA = 0;
  2517  006A70  0E00               	movlw	0
  2518  006A72  6E92               	movwf	146,c	;volatile
  2519  006A74                     
  2520                           ;main.c: 103: T1CONbits.TMR1ON = 1;
  2521  006A74  80CD               	bsf	205,0,c	;volatile
  2522  006A76                     
  2523                           ;main.c: 104: srand(TMR1);
  2524  006A76  CFCE F0B4          	movff	4046,srand@x	;volatile
  2525  006A7A  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2526  006A7E  ECC3  F034         	call	_srand	;wreg free
  2527  006A82                     
  2528                           ;main.c: 106: ANSELbits.ANS7 = 1;
  2529  006A82  8E7E               	bsf	126,7,c	;volatile
  2530  006A84                     
  2531                           ;main.c: 107: ADCON0bits.ADON = 1;
  2532  006A84  80C2               	bsf	194,0,c	;volatile
  2533  006A86                     
  2534                           ;main.c: 108: ADCON1 = 0;
  2535  006A86  0E00               	movlw	0
  2536  006A88  6EC1               	movwf	193,c	;volatile
  2537  006A8A                     
  2538                           ;main.c: 109: ADCON2bits.ADFM = 0;
  2539  006A8A  9EC0               	bcf	192,7,c	;volatile
  2540  006A8C                     
  2541                           ;main.c: 110: ADCON2bits.ACQT = 0;
  2542  006A8C  0EC7               	movlw	-57
  2543  006A8E  16C0               	andwf	192,f,c	;volatile
  2544  006A90                     
  2545                           ;main.c: 111: ADCON2bits.ADCS = 0;
  2546  006A90  0EF8               	movlw	-8
  2547  006A92  16C0               	andwf	192,f,c	;volatile
  2548  006A94  0012               	return		;funcret
  2549  006A96                     __end_of_initialisation:
  2550                           	opt callstack 0
  2551                           
  2552 ;; *************** function _srand *****************
  2553 ;; Defined at:
  2554 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  x               2    0[BANK0 ] unsigned int 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		status,2
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         0       2       0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0
  2571 ;;      Totals:         0       2       0       0       0       0       0
  2572 ;;Total ram usage:        2 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_initialisation
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text14
  2582  006986                     __ptext14:
  2583                           	opt callstack 0
  2584  006986                     _srand:
  2585                           	opt callstack 29
  2586  006986  C0B4  F0D8         	movff	srand@x,_randx
  2587  00698A  C0B5  F0D9         	movff	srand@x+1,_randx+1
  2588  00698E  0100               	movlb	0	; () banked
  2589  006990  6BDA               	clrf	(_randx+2)& (0+255),b
  2590  006992  6BDB               	clrf	(_randx+3)& (0+255),b
  2591  006994                     
  2592                           ; BSR set to: 0
  2593  006994  0012               	return		;funcret
  2594  006996                     __end_of_srand:
  2595                           	opt callstack 0
  2596                           
  2597 ;; *************** function _initTabVue *****************
  2598 ;; Defined at:
  2599 ;;		line 121 in file "main.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  j               1    2[BANK0 ] unsigned char 
  2604 ;;  i               1    3[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2614 ;;      Params:         0       0       0       0       0       0       0
  2615 ;;      Locals:         0       2       0       0       0       0       0
  2616 ;;      Temps:          0       2       0       0       0       0       0
  2617 ;;      Totals:         0       4       0       0       0       0       0
  2618 ;;Total ram usage:        4 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text15
  2628  006F78                     __ptext15:
  2629                           	opt callstack 0
  2630  006F78                     _initTabVue:
  2631                           	opt callstack 30
  2632  006F78                     
  2633                           ;main.c: 123: for (char i = 0; i < 4; i++) {
  2634  006F78  0E00               	movlw	0
  2635  006F7A  0100               	movlb	0	; force () banked
  2636  006F7C  6FB7               	movwf	initTabVue@i& (0+255),b
  2637  006F7E                     
  2638                           ; BSR set to: 0
  2639  006F7E  0E03               	movlw	3
  2640  006F80  0100               	movlb	0	; force () banked
  2641  006F82  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2642  006F84  EFC6  F037         	goto	u1191
  2643  006F88  EFC8  F037         	goto	u1190
  2644  006F8C                     u1191:
  2645  006F8C  EFCA  F037         	goto	l2156
  2646  006F90                     u1190:
  2647  006F90  EF11  F038         	goto	l94
  2648  006F94                     l2156:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;main.c: 124: for (char j = 0; j < 20; j++) {
  2652  006F94  0E00               	movlw	0
  2653  006F96  0100               	movlb	0	; force () banked
  2654  006F98  6FB6               	movwf	initTabVue@j& (0+255),b
  2655  006F9A                     
  2656                           ; BSR set to: 0
  2657  006F9A  0E13               	movlw	19
  2658  006F9C  0100               	movlb	0	; force () banked
  2659  006F9E  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2660  006FA0  EFD4  F037         	goto	u1201
  2661  006FA4  EFD6  F037         	goto	u1200
  2662  006FA8                     u1201:
  2663  006FA8  EFD8  F037         	goto	l2162
  2664  006FAC                     u1200:
  2665  006FAC  EFFB  F037         	goto	l2168
  2666  006FB0                     l2162:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;main.c: 125: m_tabVue[i][j] = 1;
  2670  006FB0  0100               	movlb	0	; force () banked
  2671  006FB2  51B7               	movf	initTabVue@i& (0+255),w,b
  2672  006FB4  0D15               	mullw	21
  2673  006FB6  0E00               	movlw	low _m_tabVue
  2674  006FB8  0100               	movlb	0	; force () banked
  2675  006FBA  6FB4               	movwf	??_initTabVue& (0+255),b
  2676  006FBC  0E01               	movlw	high _m_tabVue
  2677  006FBE  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  2678  006FC0  50F3               	movf	243,w,c
  2679  006FC2  27B4               	addwf	??_initTabVue& (0+255),f,b
  2680  006FC4  50F4               	movf	244,w,c
  2681  006FC6  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2682  006FC8  0100               	movlb	0	; force () banked
  2683  006FCA  51B6               	movf	initTabVue@j& (0+255),w,b
  2684  006FCC  0100               	movlb	0	; force () banked
  2685  006FCE  25B4               	addwf	??_initTabVue& (0+255),w,b
  2686  006FD0  6ED9               	movwf	fsr2l,c
  2687  006FD2  0100               	movlb	0	; force () banked
  2688  006FD4  0E00               	movlw	0
  2689  006FD6  0100               	movlb	0	; force () banked
  2690  006FD8  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2691  006FDA  6EDA               	movwf	fsr2h,c
  2692  006FDC  0E01               	movlw	1
  2693  006FDE  6EDF               	movwf	indf2,c
  2694  006FE0                     
  2695                           ; BSR set to: 0
  2696  006FE0  0100               	movlb	0	; force () banked
  2697  006FE2  2BB6               	incf	initTabVue@j& (0+255),f,b
  2698  006FE4                     
  2699                           ; BSR set to: 0
  2700  006FE4  0E13               	movlw	19
  2701  006FE6  0100               	movlb	0	; force () banked
  2702  006FE8  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2703  006FEA  EFF9  F037         	goto	u1211
  2704  006FEE  EFFB  F037         	goto	u1210
  2705  006FF2                     u1211:
  2706  006FF2  EFD8  F037         	goto	l2162
  2707  006FF6                     u1210:
  2708  006FF6                     l2168:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;main.c: 126: };main.c: 127: m_tabVue[i][20] = 0;
  2712  006FF6  0100               	movlb	0	; force () banked
  2713  006FF8  51B7               	movf	initTabVue@i& (0+255),w,b
  2714  006FFA  0D15               	mullw	21
  2715  006FFC  0E14               	movlw	low (_m_tabVue+20)
  2716  006FFE  24F3               	addwf	243,w,c
  2717  007000  6ED9               	movwf	fsr2l,c
  2718  007002  0E01               	movlw	high (_m_tabVue+20)
  2719  007004  20F4               	addwfc	prodh,w,c
  2720  007006  6EDA               	movwf	fsr2h,c
  2721  007008  0E00               	movlw	0
  2722  00700A  6EDF               	movwf	indf2,c
  2723  00700C                     
  2724                           ; BSR set to: 0
  2725  00700C  0100               	movlb	0	; force () banked
  2726  00700E  2BB7               	incf	initTabVue@i& (0+255),f,b
  2727  007010                     
  2728                           ; BSR set to: 0
  2729  007010  0E03               	movlw	3
  2730  007012  0100               	movlb	0	; force () banked
  2731  007014  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2732  007016  EF0F  F038         	goto	u1221
  2733  00701A  EF11  F038         	goto	u1220
  2734  00701E                     u1221:
  2735  00701E  EFCA  F037         	goto	l2156
  2736  007022                     u1220:
  2737  007022                     l94:
  2738                           
  2739                           ; BSR set to: 0
  2740  007022  0012               	return		;funcret
  2741  007024                     __end_of_initTabVue:
  2742                           	opt callstack 0
  2743                           
  2744 ;; *************** function _gagne *****************
  2745 ;; Defined at:
  2746 ;;		line 307 in file "main.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  pMines          2    0[BANK0 ] PTR int 
  2749 ;;		 -> main@nbMine(2), 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  j               1    8[BANK0 ] unsigned char 
  2752 ;;  i               1    7[BANK0 ] unsigned char 
  2753 ;;  nbTuileEtDra    1    6[BANK0 ] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      unsigned char 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2763 ;;      Params:         0       2       0       0       0       0       0
  2764 ;;      Locals:         0       3       0       0       0       0       0
  2765 ;;      Temps:          0       4       0       0       0       0       0
  2766 ;;      Totals:         0       9       0       0       0       0       0
  2767 ;;Total ram usage:        9 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text16
  2777  0071D2                     __ptext16:
  2778                           	opt callstack 0
  2779  0071D2                     _gagne:
  2780                           	opt callstack 30
  2781  0071D2                     
  2782                           ;main.c: 309: char nbTuileEtDrapeau=0;
  2783  0071D2  0E00               	movlw	0
  2784  0071D4  0100               	movlb	0	; force () banked
  2785  0071D6  6FBA               	movwf	gagne@nbTuileEtDrapeau& (0+255),b
  2786                           
  2787                           ;main.c: 311: for (char i = 0; i < 4; i++) {
  2788  0071D8  0E00               	movlw	0
  2789  0071DA  0100               	movlb	0	; force () banked
  2790  0071DC  6FBB               	movwf	gagne@i& (0+255),b
  2791  0071DE                     
  2792                           ; BSR set to: 0
  2793  0071DE  0E03               	movlw	3
  2794  0071E0  0100               	movlb	0	; force () banked
  2795  0071E2  65BB               	cpfsgt	gagne@i& (0+255),b
  2796  0071E4  EFF6  F038         	goto	u1471
  2797  0071E8  EFF8  F038         	goto	u1470
  2798  0071EC                     u1471:
  2799  0071EC  EFFA  F038         	goto	l2296
  2800  0071F0                     u1470:
  2801  0071F0  EF5D  F039         	goto	l2314
  2802  0071F4                     l2296:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;main.c: 312: for (char j = 0; j < 20; j++) {
  2806  0071F4  0E00               	movlw	0
  2807  0071F6  0100               	movlb	0	; force () banked
  2808  0071F8  6FBC               	movwf	gagne@j& (0+255),b
  2809  0071FA                     
  2810                           ; BSR set to: 0
  2811  0071FA  0E13               	movlw	19
  2812  0071FC  0100               	movlb	0	; force () banked
  2813  0071FE  65BC               	cpfsgt	gagne@j& (0+255),b
  2814  007200  EF04  F039         	goto	u1481
  2815  007204  EF06  F039         	goto	u1480
  2816  007208                     u1481:
  2817  007208  EF08  F039         	goto	l2302
  2818  00720C                     u1480:
  2819  00720C  EF52  F039         	goto	l2310
  2820  007210                     l2302:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;main.c: 313: if(m_tabVue[i][j]==1||m_tabVue[i][j]==3)
  2824  007210  0100               	movlb	0	; force () banked
  2825  007212  51BB               	movf	gagne@i& (0+255),w,b
  2826  007214  0D15               	mullw	21
  2827  007216  0E00               	movlw	low _m_tabVue
  2828  007218  0100               	movlb	0	; force () banked
  2829  00721A  6FB6               	movwf	??_gagne& (0+255),b
  2830  00721C  0E01               	movlw	high _m_tabVue
  2831  00721E  6FB7               	movwf	(??_gagne+1)& (0+255),b
  2832  007220  50F3               	movf	243,w,c
  2833  007222  27B6               	addwf	??_gagne& (0+255),f,b
  2834  007224  50F4               	movf	244,w,c
  2835  007226  23B7               	addwfc	(??_gagne+1)& (0+255),f,b
  2836  007228  0100               	movlb	0	; force () banked
  2837  00722A  51BC               	movf	gagne@j& (0+255),w,b
  2838  00722C  0100               	movlb	0	; force () banked
  2839  00722E  25B6               	addwf	??_gagne& (0+255),w,b
  2840  007230  6ED9               	movwf	fsr2l,c
  2841  007232  0100               	movlb	0	; force () banked
  2842  007234  0E00               	movlw	0
  2843  007236  0100               	movlb	0	; force () banked
  2844  007238  21B7               	addwfc	(??_gagne+1)& (0+255),w,b
  2845  00723A  6EDA               	movwf	fsr2h,c
  2846  00723C  04DE               	decf	postinc2,w,c
  2847  00723E  B4D8               	btfsc	status,2,c
  2848  007240  EF24  F039         	goto	u1491
  2849  007244  EF26  F039         	goto	u1490
  2850  007248                     u1491:
  2851  007248  EF45  F039         	goto	l2306
  2852  00724C                     u1490:
  2853  00724C                     
  2854                           ; BSR set to: 0
  2855  00724C  0100               	movlb	0	; force () banked
  2856  00724E  51BB               	movf	gagne@i& (0+255),w,b
  2857  007250  0D15               	mullw	21
  2858  007252  0E00               	movlw	low _m_tabVue
  2859  007254  0100               	movlb	0	; force () banked
  2860  007256  6FB6               	movwf	??_gagne& (0+255),b
  2861  007258  0E01               	movlw	high _m_tabVue
  2862  00725A  6FB7               	movwf	(??_gagne+1)& (0+255),b
  2863  00725C  50F3               	movf	243,w,c
  2864  00725E  27B6               	addwf	??_gagne& (0+255),f,b
  2865  007260  50F4               	movf	244,w,c
  2866  007262  23B7               	addwfc	(??_gagne+1)& (0+255),f,b
  2867  007264  0100               	movlb	0	; force () banked
  2868  007266  51BC               	movf	gagne@j& (0+255),w,b
  2869  007268  0100               	movlb	0	; force () banked
  2870  00726A  25B6               	addwf	??_gagne& (0+255),w,b
  2871  00726C  6ED9               	movwf	fsr2l,c
  2872  00726E  0100               	movlb	0	; force () banked
  2873  007270  0E00               	movlw	0
  2874  007272  0100               	movlb	0	; force () banked
  2875  007274  21B7               	addwfc	(??_gagne+1)& (0+255),w,b
  2876  007276  6EDA               	movwf	fsr2h,c
  2877  007278  0E03               	movlw	3
  2878  00727A  18DE               	xorwf	postinc2,w,c
  2879  00727C  A4D8               	btfss	status,2,c
  2880  00727E  EF43  F039         	goto	u1501
  2881  007282  EF45  F039         	goto	u1500
  2882  007286                     u1501:
  2883  007286  EF47  F039         	goto	l177
  2884  00728A                     u1500:
  2885  00728A                     l2306:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;main.c: 314: nbTuileEtDrapeau++;
  2889  00728A  0100               	movlb	0	; force () banked
  2890  00728C  2BBA               	incf	gagne@nbTuileEtDrapeau& (0+255),f,b
  2891  00728E                     l177:
  2892                           
  2893                           ; BSR set to: 0
  2894  00728E  0100               	movlb	0	; force () banked
  2895  007290  2BBC               	incf	gagne@j& (0+255),f,b
  2896  007292                     
  2897                           ; BSR set to: 0
  2898  007292  0E13               	movlw	19
  2899  007294  0100               	movlb	0	; force () banked
  2900  007296  65BC               	cpfsgt	gagne@j& (0+255),b
  2901  007298  EF50  F039         	goto	u1511
  2902  00729C  EF52  F039         	goto	u1510
  2903  0072A0                     u1511:
  2904  0072A0  EF08  F039         	goto	l2302
  2905  0072A4                     u1510:
  2906  0072A4                     l2310:
  2907                           
  2908                           ; BSR set to: 0
  2909  0072A4  0100               	movlb	0	; force () banked
  2910  0072A6  2BBB               	incf	gagne@i& (0+255),f,b
  2911  0072A8                     
  2912                           ; BSR set to: 0
  2913  0072A8  0E03               	movlw	3
  2914  0072AA  0100               	movlb	0	; force () banked
  2915  0072AC  65BB               	cpfsgt	gagne@i& (0+255),b
  2916  0072AE  EF5B  F039         	goto	u1521
  2917  0072B2  EF5D  F039         	goto	u1520
  2918  0072B6                     u1521:
  2919  0072B6  EFFA  F038         	goto	l2296
  2920  0072BA                     u1520:
  2921  0072BA                     l2314:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;main.c: 315: };main.c: 316: };main.c: 317: if (nbTuileEtDrapeau == *pMines)
  2925  0072BA  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2926  0072BE  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2927  0072C2  0100               	movlb	0	; force () banked
  2928  0072C4  51BA               	movf	gagne@nbTuileEtDrapeau& (0+255),w,b
  2929  0072C6  0100               	movlb	0	; force () banked
  2930  0072C8  6FB8               	movwf	(??_gagne+2)& (0+255),b
  2931  0072CA  6BB9               	clrf	(??_gagne+3)& (0+255),b
  2932  0072CC  50DE               	movf	postinc2,w,c
  2933  0072CE  19B8               	xorwf	(??_gagne+2)& (0+255),w,b
  2934  0072D0  E107               	bnz	u1531
  2935  0072D2  50DE               	movf	postinc2,w,c
  2936  0072D4  19B9               	xorwf	(??_gagne+3)& (0+255),w,b
  2937  0072D6  A4D8               	btfss	status,2,c
  2938  0072D8  EF70  F039         	goto	u1531
  2939  0072DC  EF72  F039         	goto	u1530
  2940  0072E0                     u1531:
  2941  0072E0  EF7C  F039         	goto	l2324
  2942  0072E4                     u1530:
  2943  0072E4                     
  2944                           ; BSR set to: 0
  2945                           ;main.c: 318: {;main.c: 319: (*pMines)++;
  2946  0072E4  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2947  0072E8  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2948  0072EC  2ADE               	incf	postinc2,f,c
  2949  0072EE  0E00               	movlw	0
  2950  0072F0  22DD               	addwfc	postdec2,f,c
  2951  0072F2                     
  2952                           ; BSR set to: 0
  2953                           ;main.c: 320: return 1;
  2954  0072F2  0E01               	movlw	1
  2955  0072F4  EF7D  F039         	goto	l181
  2956  0072F8                     l2324:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;main.c: 322: else;main.c: 323: return 0;
  2960  0072F8  0E00               	movlw	0
  2961  0072FA                     l181:
  2962                           
  2963                           ; BSR set to: 0
  2964  0072FA  0012               	return		;funcret
  2965  0072FC                     __end_of_gagne:
  2966                           	opt callstack 0
  2967                           
  2968 ;; *************** function _deplace *****************
  2969 ;; Defined at:
  2970 ;;		line 209 in file "main.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2973 ;;		 -> main@posX(2), 
  2974 ;;  y               2    7[BANK0 ] PTR unsigned char 
  2975 ;;		 -> main@posY(2), 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  analogY         1   11[BANK0 ] unsigned char 
  2978 ;;  analogX         1   10[BANK0 ] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2988 ;;      Params:         0       4       0       0       0       0       0
  2989 ;;      Locals:         0       2       0       0       0       0       0
  2990 ;;      Temps:          0       1       0       0       0       0       0
  2991 ;;      Totals:         0       7       0       0       0       0       0
  2992 ;;Total ram usage:        7 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    4
  2995 ;; This function calls:
  2996 ;;		_getAnalog
  2997 ;;		_lcd_gotoXY
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text17
  3004  0076EC                     __ptext17:
  3005                           	opt callstack 0
  3006  0076EC                     _deplace:
  3007                           	opt callstack 26
  3008  0076EC                     
  3009                           ;main.c: 211: unsigned char analogX = getAnalog(7);
  3010  0076EC  0E07               	movlw	7
  3011  0076EE  EC01  F035         	call	_getAnalog
  3012  0076F2  0100               	movlb	0	; force () banked
  3013  0076F4  6FBE               	movwf	deplace@analogX& (0+255),b
  3014                           
  3015                           ;main.c: 214: if (0 <= analogX && analogX <= 80)
  3016  0076F6  0E06               	movlw	6
  3017  0076F8  EC01  F035         	call	_getAnalog
  3018  0076FC  0100               	movlb	0	; force () banked
  3019  0076FE  6FBF               	movwf	deplace@analogY& (0+255),b
  3020  007700                     
  3021                           ; BSR set to: 0
  3022  007700  0E51               	movlw	81
  3023  007702  0100               	movlb	0	; force () banked
  3024  007704  61BE               	cpfslt	deplace@analogX& (0+255),b
  3025  007706  EF87  F03B         	goto	u1351
  3026  00770A  EF89  F03B         	goto	u1350
  3027  00770E                     u1351:
  3028  00770E  EFAA  F03B         	goto	l2244
  3029  007712                     u1350:
  3030  007712                     
  3031                           ; BSR set to: 0
  3032                           ;main.c: 215: {;main.c: 216: *x = (*x) - 1;
  3033  007712  C0B9  FFD9         	movff	deplace@x,fsr2l
  3034  007716  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3035  00771A  50DF               	movf	indf2,w,c
  3036  00771C  0100               	movlb	0	; force () banked
  3037  00771E  6FBD               	movwf	??_deplace& (0+255),b
  3038  007720  05BD               	decf	??_deplace& (0+255),w,b
  3039  007722  C0B9  FFD9         	movff	deplace@x,fsr2l
  3040  007726  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3041  00772A  6EDF               	movwf	indf2,c
  3042  00772C                     
  3043                           ; BSR set to: 0
  3044                           ;main.c: 217: if ((*x) <= 0)
  3045  00772C  C0B9  FFD9         	movff	deplace@x,fsr2l
  3046  007730  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3047  007734  50DF               	movf	indf2,w,c
  3048  007736  A4D8               	btfss	status,2,c
  3049  007738  EFA0  F03B         	goto	u1361
  3050  00773C  EFA2  F03B         	goto	u1360
  3051  007740                     u1361:
  3052  007740  EFD2  F03B         	goto	l2250
  3053  007744                     u1360:
  3054  007744                     
  3055                           ; BSR set to: 0
  3056                           ;main.c: 218: *x = 20;
  3057  007744  C0B9  FFD9         	movff	deplace@x,fsr2l
  3058  007748  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3059  00774C  0E14               	movlw	20
  3060  00774E  6EDF               	movwf	indf2,c
  3061  007750  EFD2  F03B         	goto	l2250
  3062  007754                     l2244:
  3063                           
  3064                           ; BSR set to: 0
  3065  007754  0EAE               	movlw	174
  3066  007756  0100               	movlb	0	; force () banked
  3067  007758  65BE               	cpfsgt	deplace@analogX& (0+255),b
  3068  00775A  EFB1  F03B         	goto	u1371
  3069  00775E  EFB3  F03B         	goto	u1370
  3070  007762                     u1371:
  3071  007762  EFD2  F03B         	goto	l2250
  3072  007766                     u1370:
  3073  007766                     
  3074                           ; BSR set to: 0
  3075                           ;main.c: 220: {;main.c: 221: *x = (*x) + 1;
  3076  007766  C0B9  FFD9         	movff	deplace@x,fsr2l
  3077  00776A  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3078  00776E  50DF               	movf	indf2,w,c
  3079  007770  0100               	movlb	0	; force () banked
  3080  007772  6FBD               	movwf	??_deplace& (0+255),b
  3081  007774  29BD               	incf	??_deplace& (0+255),w,b
  3082  007776  C0B9  FFD9         	movff	deplace@x,fsr2l
  3083  00777A  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3084  00777E  6EDF               	movwf	indf2,c
  3085                           
  3086                           ;main.c: 222: if ((*x) >= 21)
  3087  007780  C0B9  FFD9         	movff	deplace@x,fsr2l
  3088  007784  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3089  007788  0E14               	movlw	20
  3090  00778A  64DF               	cpfsgt	indf2,c
  3091  00778C  EFCA  F03B         	goto	u1381
  3092  007790  EFCC  F03B         	goto	u1380
  3093  007794                     u1381:
  3094  007794  EFD2  F03B         	goto	l2250
  3095  007798                     u1380:
  3096  007798                     
  3097                           ; BSR set to: 0
  3098                           ;main.c: 223: *x = 1;
  3099  007798  C0B9  FFD9         	movff	deplace@x,fsr2l
  3100  00779C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3101  0077A0  0E01               	movlw	1
  3102  0077A2  6EDF               	movwf	indf2,c
  3103  0077A4                     l2250:
  3104                           
  3105                           ; BSR set to: 0
  3106  0077A4  0E51               	movlw	81
  3107  0077A6  0100               	movlb	0	; force () banked
  3108  0077A8  61BF               	cpfslt	deplace@analogY& (0+255),b
  3109  0077AA  EFD9  F03B         	goto	u1391
  3110  0077AE  EFDB  F03B         	goto	u1390
  3111  0077B2                     u1391:
  3112  0077B2  EFFC  F03B         	goto	l2258
  3113  0077B6                     u1390:
  3114  0077B6                     
  3115                           ; BSR set to: 0
  3116                           ;main.c: 227: {;main.c: 228: *y = (*y) - 1;
  3117  0077B6  C0BB  FFD9         	movff	deplace@y,fsr2l
  3118  0077BA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3119  0077BE  50DF               	movf	indf2,w,c
  3120  0077C0  0100               	movlb	0	; force () banked
  3121  0077C2  6FBD               	movwf	??_deplace& (0+255),b
  3122  0077C4  05BD               	decf	??_deplace& (0+255),w,b
  3123  0077C6  C0BB  FFD9         	movff	deplace@y,fsr2l
  3124  0077CA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3125  0077CE  6EDF               	movwf	indf2,c
  3126  0077D0                     
  3127                           ; BSR set to: 0
  3128                           ;main.c: 229: if ((*y) <= 0)
  3129  0077D0  C0BB  FFD9         	movff	deplace@y,fsr2l
  3130  0077D4  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3131  0077D8  50DF               	movf	indf2,w,c
  3132  0077DA  A4D8               	btfss	status,2,c
  3133  0077DC  EFF2  F03B         	goto	u1401
  3134  0077E0  EFF4  F03B         	goto	u1400
  3135  0077E4                     u1401:
  3136  0077E4  EF24  F03C         	goto	l2264
  3137  0077E8                     u1400:
  3138  0077E8                     
  3139                           ; BSR set to: 0
  3140                           ;main.c: 230: *y = 4;
  3141  0077E8  C0BB  FFD9         	movff	deplace@y,fsr2l
  3142  0077EC  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3143  0077F0  0E04               	movlw	4
  3144  0077F2  6EDF               	movwf	indf2,c
  3145  0077F4  EF24  F03C         	goto	l2264
  3146  0077F8                     l2258:
  3147                           
  3148                           ; BSR set to: 0
  3149  0077F8  0EAE               	movlw	174
  3150  0077FA  0100               	movlb	0	; force () banked
  3151  0077FC  65BF               	cpfsgt	deplace@analogY& (0+255),b
  3152  0077FE  EF03  F03C         	goto	u1411
  3153  007802  EF05  F03C         	goto	u1410
  3154  007806                     u1411:
  3155  007806  EF24  F03C         	goto	l2264
  3156  00780A                     u1410:
  3157  00780A                     
  3158                           ; BSR set to: 0
  3159                           ;main.c: 232: {;main.c: 233: *y = (*y) + 1;
  3160  00780A  C0BB  FFD9         	movff	deplace@y,fsr2l
  3161  00780E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3162  007812  50DF               	movf	indf2,w,c
  3163  007814  0100               	movlb	0	; force () banked
  3164  007816  6FBD               	movwf	??_deplace& (0+255),b
  3165  007818  29BD               	incf	??_deplace& (0+255),w,b
  3166  00781A  C0BB  FFD9         	movff	deplace@y,fsr2l
  3167  00781E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3168  007822  6EDF               	movwf	indf2,c
  3169                           
  3170                           ;main.c: 234: if ((*y) >= 5)
  3171  007824  C0BB  FFD9         	movff	deplace@y,fsr2l
  3172  007828  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3173  00782C  0E04               	movlw	4
  3174  00782E  64DF               	cpfsgt	indf2,c
  3175  007830  EF1C  F03C         	goto	u1421
  3176  007834  EF1E  F03C         	goto	u1420
  3177  007838                     u1421:
  3178  007838  EF24  F03C         	goto	l2264
  3179  00783C                     u1420:
  3180  00783C                     
  3181                           ; BSR set to: 0
  3182                           ;main.c: 235: *y = 1;
  3183  00783C  C0BB  FFD9         	movff	deplace@y,fsr2l
  3184  007840  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3185  007844  0E01               	movlw	1
  3186  007846  6EDF               	movwf	indf2,c
  3187  007848                     l2264:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;main.c: 236: };main.c: 237: lcd_gotoXY(*x, *y);
  3191  007848  C0BB  FFD9         	movff	deplace@y,fsr2l
  3192  00784C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3193  007850  50DF               	movf	indf2,w,c
  3194  007852  0100               	movlb	0	; force () banked
  3195  007854  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3196  007856  C0B9  FFD9         	movff	deplace@x,fsr2l
  3197  00785A  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3198  00785E  50DF               	movf	indf2,w,c
  3199  007860  EC32  F037         	call	_lcd_gotoXY
  3200  007864  0012               	return		;funcret
  3201  007866                     __end_of_deplace:
  3202                           	opt callstack 0
  3203                           
  3204 ;; *************** function _getAnalog *****************
  3205 ;; Defined at:
  3206 ;;		line 331 in file "main.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  canal           1    wreg     unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  canal           1    1[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3220 ;;      Params:         0       0       0       0       0       0       0
  3221 ;;      Locals:         0       1       0       0       0       0       0
  3222 ;;      Temps:          0       1       0       0       0       0       0
  3223 ;;      Totals:         0       2       0       0       0       0       0
  3224 ;;Total ram usage:        2 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_deplace
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text18
  3234  006A02                     __ptext18:
  3235                           	opt callstack 0
  3236  006A02                     _getAnalog:
  3237                           	opt callstack 29
  3238                           
  3239                           ;incstack = 0
  3240                           ;getAnalog@canal stored from wreg
  3241  006A02  0100               	movlb	0	; force () banked
  3242  006A04  6FB5               	movwf	getAnalog@canal& (0+255),b
  3243  006A06                     
  3244                           ;main.c: 333: ADCON0bits.CHS = canal;
  3245  006A06  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  3246  006A0A  0100               	movlb	0	; force () banked
  3247  006A0C  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3248  006A0E  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3249  006A10  50C2               	movf	194,w,c	;volatile
  3250  006A12  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3251  006A14  0BC3               	andlw	-61
  3252  006A16  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3253  006A18  6EC2               	movwf	194,c	;volatile
  3254  006A1A                     
  3255                           ;main.c: 335: ADCON0bits.GO_DONE = 1;
  3256  006A1A  82C2               	bsf	194,1,c	;volatile
  3257  006A1C                     l185:
  3258  006A1C  B2C2               	btfsc	194,1,c	;volatile
  3259  006A1E  EF13  F035         	goto	u161
  3260  006A22  EF15  F035         	goto	u160
  3261  006A26                     u161:
  3262  006A26  EF0E  F035         	goto	l185
  3263  006A2A                     u160:
  3264  006A2A                     
  3265                           ;main.c: 337: return ADRESH;
  3266  006A2A  50C4               	movf	196,w,c	;volatile
  3267  006A2C  0012               	return		;funcret
  3268  006A2E                     __end_of_getAnalog:
  3269                           	opt callstack 0
  3270                           
  3271 ;; *************** function _demine *****************
  3272 ;; Defined at:
  3273 ;;		line 248 in file "main.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  x               1    wreg     unsigned char 
  3276 ;;  y               1   18[BANK0 ] unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  x               1   27[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      unsigned char 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         0       1       0       0       0       0       0
  3289 ;;      Locals:         0       1       0       0       0       0       0
  3290 ;;      Temps:          0       8       0       0       0       0       0
  3291 ;;      Totals:         0      10       0       0       0       0       0
  3292 ;;Total ram usage:       10 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    7
  3295 ;; This function calls:
  3296 ;;		_afficheTabVue
  3297 ;;		_enleveTuilesAutour
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text19
  3304  007866                     __ptext19:
  3305                           	opt callstack 0
  3306  007866                     _demine:
  3307                           	opt callstack 23
  3308                           
  3309                           ;incstack = 0
  3310                           ;demine@x stored from wreg
  3311  007866  0100               	movlb	0	; force () banked
  3312  007868  6FCF               	movwf	demine@x& (0+255),b
  3313  00786A                     l146:
  3314  00786A  B281               	btfsc	129,1,c	;volatile
  3315  00786C  EF3A  F03C         	goto	u1431
  3316  007870  EF3C  F03C         	goto	u1430
  3317  007874                     u1431:
  3318  007874  EF35  F03C         	goto	l146
  3319  007878                     u1430:
  3320  007878                     
  3321                           ;main.c: 251: if (m_tabMines[y - 1][x - 1] == 2)
  3322  007878  0100               	movlb	0	; force () banked
  3323  00787A  51C6               	movf	demine@y& (0+255),w,b
  3324  00787C  0D15               	mullw	21
  3325  00787E  0EEA               	movlw	234
  3326  007880  0100               	movlb	0	; force () banked
  3327  007882  6FC7               	movwf	??_demine& (0+255),b
  3328  007884  0EFF               	movlw	255
  3329  007886  6FC8               	movwf	(??_demine+1)& (0+255),b
  3330  007888  0E60               	movlw	low _m_tabMines
  3331  00788A  6FC9               	movwf	(??_demine+2)& (0+255),b
  3332  00788C  0E00               	movlw	high _m_tabMines
  3333  00788E  6FCA               	movwf	(??_demine+3)& (0+255),b
  3334  007890  51C7               	movf	??_demine& (0+255),w,b
  3335  007892  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3336  007894  51C8               	movf	(??_demine+1)& (0+255),w,b
  3337  007896  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3338  007898  50F3               	movf	243,w,c
  3339  00789A  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3340  00789C  50F4               	movf	244,w,c
  3341  00789E  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3342  0078A0  0100               	movlb	0	; force () banked
  3343  0078A2  51CF               	movf	demine@x& (0+255),w,b
  3344  0078A4  0100               	movlb	0	; force () banked
  3345  0078A6  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3346  0078A8  6ED9               	movwf	fsr2l,c
  3347  0078AA  0100               	movlb	0	; force () banked
  3348  0078AC  0E00               	movlw	0
  3349  0078AE  0100               	movlb	0	; force () banked
  3350  0078B0  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3351  0078B2  6EDA               	movwf	fsr2h,c
  3352  0078B4  0E02               	movlw	2
  3353  0078B6  18DE               	xorwf	postinc2,w,c
  3354  0078B8  A4D8               	btfss	status,2,c
  3355  0078BA  EF61  F03C         	goto	u1441
  3356  0078BE  EF63  F03C         	goto	u1440
  3357  0078C2                     u1441:
  3358  0078C2  EF66  F03C         	goto	l2276
  3359  0078C6                     u1440:
  3360  0078C6                     
  3361                           ; BSR set to: 0
  3362                           ;main.c: 252: return 0;
  3363  0078C6  0E00               	movlw	0
  3364  0078C8  EFFD  F03C         	goto	l150
  3365  0078CC                     l2276:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;main.c: 253: else;main.c: 254: {;main.c: 255: if (m_tabMines[y-1][x-1]==' ')
  3369  0078CC  0100               	movlb	0	; force () banked
  3370  0078CE  51C6               	movf	demine@y& (0+255),w,b
  3371  0078D0  0D15               	mullw	21
  3372  0078D2  0EEA               	movlw	234
  3373  0078D4  0100               	movlb	0	; force () banked
  3374  0078D6  6FC7               	movwf	??_demine& (0+255),b
  3375  0078D8  0EFF               	movlw	255
  3376  0078DA  6FC8               	movwf	(??_demine+1)& (0+255),b
  3377  0078DC  0E60               	movlw	low _m_tabMines
  3378  0078DE  6FC9               	movwf	(??_demine+2)& (0+255),b
  3379  0078E0  0E00               	movlw	high _m_tabMines
  3380  0078E2  6FCA               	movwf	(??_demine+3)& (0+255),b
  3381  0078E4  51C7               	movf	??_demine& (0+255),w,b
  3382  0078E6  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3383  0078E8  51C8               	movf	(??_demine+1)& (0+255),w,b
  3384  0078EA  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3385  0078EC  50F3               	movf	243,w,c
  3386  0078EE  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3387  0078F0  50F4               	movf	244,w,c
  3388  0078F2  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3389  0078F4  0100               	movlb	0	; force () banked
  3390  0078F6  51CF               	movf	demine@x& (0+255),w,b
  3391  0078F8  0100               	movlb	0	; force () banked
  3392  0078FA  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3393  0078FC  6ED9               	movwf	fsr2l,c
  3394  0078FE  0100               	movlb	0	; force () banked
  3395  007900  0E00               	movlw	0
  3396  007902  0100               	movlb	0	; force () banked
  3397  007904  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3398  007906  6EDA               	movwf	fsr2h,c
  3399  007908  0E20               	movlw	32
  3400  00790A  18DE               	xorwf	postinc2,w,c
  3401  00790C  A4D8               	btfss	status,2,c
  3402  00790E  EF8B  F03C         	goto	u1451
  3403  007912  EF8D  F03C         	goto	u1450
  3404  007916                     u1451:
  3405  007916  EF95  F03C         	goto	l2280
  3406  00791A                     u1450:
  3407  00791A                     
  3408                           ; BSR set to: 0
  3409                           ;main.c: 256: enleveTuilesAutour(x, y);
  3410  00791A  C0C6  F0BD         	movff	demine@y,enleveTuilesAutour@y
  3411  00791E  0100               	movlb	0	; force () banked
  3412  007920  51CF               	movf	demine@x& (0+255),w,b
  3413  007922  ECFE  F03C         	call	_enleveTuilesAutour
  3414  007926  EFFC  F03C         	goto	l2286
  3415  00792A                     l2280:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;main.c: 257: else if (m_tabVue[y-1][x-1]!=3)
  3419  00792A  0100               	movlb	0	; force () banked
  3420  00792C  51C6               	movf	demine@y& (0+255),w,b
  3421  00792E  0D15               	mullw	21
  3422  007930  0EEA               	movlw	234
  3423  007932  0100               	movlb	0	; force () banked
  3424  007934  6FC7               	movwf	??_demine& (0+255),b
  3425  007936  0EFF               	movlw	255
  3426  007938  6FC8               	movwf	(??_demine+1)& (0+255),b
  3427  00793A  0E00               	movlw	low _m_tabVue
  3428  00793C  6FC9               	movwf	(??_demine+2)& (0+255),b
  3429  00793E  0E01               	movlw	high _m_tabVue
  3430  007940  6FCA               	movwf	(??_demine+3)& (0+255),b
  3431  007942  51C7               	movf	??_demine& (0+255),w,b
  3432  007944  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3433  007946  51C8               	movf	(??_demine+1)& (0+255),w,b
  3434  007948  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3435  00794A  50F3               	movf	243,w,c
  3436  00794C  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3437  00794E  50F4               	movf	244,w,c
  3438  007950  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3439  007952  0100               	movlb	0	; force () banked
  3440  007954  51CF               	movf	demine@x& (0+255),w,b
  3441  007956  0100               	movlb	0	; force () banked
  3442  007958  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3443  00795A  6ED9               	movwf	fsr2l,c
  3444  00795C  0100               	movlb	0	; force () banked
  3445  00795E  0E00               	movlw	0
  3446  007960  0100               	movlb	0	; force () banked
  3447  007962  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3448  007964  6EDA               	movwf	fsr2h,c
  3449  007966  0E03               	movlw	3
  3450  007968  18DE               	xorwf	postinc2,w,c
  3451  00796A  B4D8               	btfsc	status,2,c
  3452  00796C  EFBA  F03C         	goto	u1461
  3453  007970  EFBC  F03C         	goto	u1460
  3454  007974                     u1461:
  3455  007974  EFFC  F03C         	goto	l2286
  3456  007978                     u1460:
  3457  007978                     
  3458                           ; BSR set to: 0
  3459                           ;main.c: 258: {;main.c: 259: m_tabVue[y-1][x-1]=m_tabMines[y-1][x-1];
  3460  007978  0100               	movlb	0	; force () banked
  3461  00797A  51C6               	movf	demine@y& (0+255),w,b
  3462  00797C  0D15               	mullw	21
  3463  00797E  0EEA               	movlw	234
  3464  007980  0100               	movlb	0	; force () banked
  3465  007982  6FC7               	movwf	??_demine& (0+255),b
  3466  007984  0EFF               	movlw	255
  3467  007986  6FC8               	movwf	(??_demine+1)& (0+255),b
  3468  007988  0E60               	movlw	low _m_tabMines
  3469  00798A  6FC9               	movwf	(??_demine+2)& (0+255),b
  3470  00798C  0E00               	movlw	high _m_tabMines
  3471  00798E  6FCA               	movwf	(??_demine+3)& (0+255),b
  3472  007990  51C7               	movf	??_demine& (0+255),w,b
  3473  007992  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3474  007994  51C8               	movf	(??_demine+1)& (0+255),w,b
  3475  007996  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3476  007998  50F3               	movf	243,w,c
  3477  00799A  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3478  00799C  50F4               	movf	244,w,c
  3479  00799E  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3480  0079A0  0100               	movlb	0	; force () banked
  3481  0079A2  51CF               	movf	demine@x& (0+255),w,b
  3482  0079A4  0100               	movlb	0	; force () banked
  3483  0079A6  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3484  0079A8  6ED9               	movwf	fsr2l,c
  3485  0079AA  0100               	movlb	0	; force () banked
  3486  0079AC  0E00               	movlw	0
  3487  0079AE  0100               	movlb	0	; force () banked
  3488  0079B0  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3489  0079B2  6EDA               	movwf	fsr2h,c
  3490  0079B4  0100               	movlb	0	; force () banked
  3491  0079B6  51C6               	movf	demine@y& (0+255),w,b
  3492  0079B8  0D15               	mullw	21
  3493  0079BA  0EEA               	movlw	234
  3494  0079BC  0100               	movlb	0	; force () banked
  3495  0079BE  6FCB               	movwf	(??_demine+4)& (0+255),b
  3496  0079C0  0EFF               	movlw	255
  3497  0079C2  6FCC               	movwf	(??_demine+5)& (0+255),b
  3498  0079C4  0E00               	movlw	low _m_tabVue
  3499  0079C6  6FCD               	movwf	(??_demine+6)& (0+255),b
  3500  0079C8  0E01               	movlw	high _m_tabVue
  3501  0079CA  6FCE               	movwf	(??_demine+7)& (0+255),b
  3502  0079CC  51CB               	movf	(??_demine+4)& (0+255),w,b
  3503  0079CE  27CD               	addwf	(??_demine+6)& (0+255),f,b
  3504  0079D0  51CC               	movf	(??_demine+5)& (0+255),w,b
  3505  0079D2  23CE               	addwfc	(??_demine+7)& (0+255),f,b
  3506  0079D4  50F3               	movf	243,w,c
  3507  0079D6  27CD               	addwf	(??_demine+6)& (0+255),f,b
  3508  0079D8  50F4               	movf	244,w,c
  3509  0079DA  23CE               	addwfc	(??_demine+7)& (0+255),f,b
  3510  0079DC  0100               	movlb	0	; force () banked
  3511  0079DE  51CF               	movf	demine@x& (0+255),w,b
  3512  0079E0  0100               	movlb	0	; force () banked
  3513  0079E2  25CD               	addwf	(??_demine+6)& (0+255),w,b
  3514  0079E4  6EE1               	movwf	fsr1l,c
  3515  0079E6  0100               	movlb	0	; force () banked
  3516  0079E8  0E00               	movlw	0
  3517  0079EA  0100               	movlb	0	; force () banked
  3518  0079EC  21CE               	addwfc	(??_demine+7)& (0+255),w,b
  3519  0079EE  6EE2               	movwf	fsr1h,c
  3520  0079F0  CFDF FFE7          	movff	indf2,indf1
  3521  0079F4                     
  3522                           ; BSR set to: 0
  3523                           ;main.c: 260: afficheTabVue();
  3524  0079F4  EC35  F036         	call	_afficheTabVue	;wreg free
  3525  0079F8                     l2286:
  3526                           
  3527                           ;main.c: 261: };main.c: 262: return 1;
  3528  0079F8  0E01               	movlw	1
  3529  0079FA                     l150:
  3530  0079FA  0012               	return		;funcret
  3531  0079FC                     __end_of_demine:
  3532                           	opt callstack 0
  3533                           
  3534 ;; *************** function _enleveTuilesAutour *****************
  3535 ;; Defined at:
  3536 ;;		line 273 in file "main.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  x               1    wreg     unsigned char 
  3539 ;;  y               1    9[BANK0 ] unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  x               1   15[BANK0 ] unsigned char 
  3542 ;;  i               1   17[BANK0 ] char 
  3543 ;;  j               1   16[BANK0 ] char 
  3544 ;;  mem             1   14[BANK0 ] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         0       1       0       0       0       0       0
  3555 ;;      Locals:         0       4       0       0       0       0       0
  3556 ;;      Temps:          0       4       0       0       0       0       0
  3557 ;;      Totals:         0       9       0       0       0       0       0
  3558 ;;Total ram usage:        9 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    6
  3561 ;; This function calls:
  3562 ;;		_afficheTabVue
  3563 ;; This function is called by:
  3564 ;;		_demine
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text20
  3569  0079FC                     __ptext20:
  3570                           	opt callstack 0
  3571  0079FC                     _enleveTuilesAutour:
  3572                           	opt callstack 23
  3573                           
  3574                           ;incstack = 0
  3575                           ;enleveTuilesAutour@x stored from wreg
  3576  0079FC  0100               	movlb	0	; force () banked
  3577  0079FE  6FC3               	movwf	enleveTuilesAutour@x& (0+255),b
  3578  007A00                     
  3579                           ;main.c: 275: signed char i = x - 2;
  3580  007A00  0100               	movlb	0	; force () banked
  3581  007A02  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3582  007A04  0FFE               	addlw	254
  3583  007A06  0100               	movlb	0	; force () banked
  3584  007A08  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3585                           
  3586                           ;main.c: 276: signed char j = y - 2;
  3587  007A0A  0100               	movlb	0	; force () banked
  3588  007A0C  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3589  007A0E  0FFE               	addlw	254
  3590  007A10  0100               	movlb	0	; force () banked
  3591  007A12  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3592                           
  3593                           ;main.c: 277: char mem;;main.c: 279: if (i < 0)
  3594  007A14  0100               	movlb	0	; force () banked
  3595  007A16  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3596  007A18  EF12  F03D         	goto	u1010
  3597  007A1C  EF10  F03D         	goto	u1011
  3598  007A20                     u1011:
  3599  007A20  EF15  F03D         	goto	l2004
  3600  007A24                     u1010:
  3601  007A24                     
  3602                           ; BSR set to: 0
  3603                           ;main.c: 280: i = 0;
  3604  007A24  0E00               	movlw	0
  3605  007A26  0100               	movlb	0	; force () banked
  3606  007A28  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3607  007A2A                     l2004:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;main.c: 281: if (j < 0)
  3611  007A2A  0100               	movlb	0	; force () banked
  3612  007A2C  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3613  007A2E  EF1D  F03D         	goto	u1020
  3614  007A32  EF1B  F03D         	goto	u1021
  3615  007A36                     u1021:
  3616  007A36  EF20  F03D         	goto	l2008
  3617  007A3A                     u1020:
  3618  007A3A                     
  3619                           ; BSR set to: 0
  3620                           ;main.c: 282: j = 0;
  3621  007A3A  0E00               	movlw	0
  3622  007A3C  0100               	movlb	0	; force () banked
  3623  007A3E  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3624  007A40                     l2008:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;main.c: 283: mem=i;
  3628  007A40  C0C5  F0C2         	movff	enleveTuilesAutour@i,enleveTuilesAutour@mem
  3629                           
  3630                           ;main.c: 286: while(j <= y && j<4)
  3631  007A44  EFB2  F03D         	goto	l2024
  3632  007A48                     l160:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;main.c: 287: {;main.c: 288: i=mem;
  3636  007A48  C0C2  F0C5         	movff	enleveTuilesAutour@mem,enleveTuilesAutour@i
  3637                           
  3638                           ;main.c: 289: while(i<=x && i<20)
  3639  007A4C  EF96  F03D         	goto	l2018
  3640  007A50                     l2010:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 290: {;main.c: 291: if(m_tabMines[j][i]!=2 && m_tabVue[j][i]!=3)
  3644  007A50  0100               	movlb	0	; force () banked
  3645  007A52  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3646  007A54  0D15               	mullw	21
  3647  007A56  0E60               	movlw	low _m_tabMines
  3648  007A58  0100               	movlb	0	; force () banked
  3649  007A5A  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3650  007A5C  0E00               	movlw	high _m_tabMines
  3651  007A5E  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3652  007A60  50F3               	movf	243,w,c
  3653  007A62  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3654  007A64  50F4               	movf	244,w,c
  3655  007A66  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3656  007A68  0100               	movlb	0	; force () banked
  3657  007A6A  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3658  007A6C  0100               	movlb	0	; force () banked
  3659  007A6E  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3660  007A70  6ED9               	movwf	fsr2l,c
  3661  007A72  0100               	movlb	0	; force () banked
  3662  007A74  0E00               	movlw	0
  3663  007A76  0100               	movlb	0	; force () banked
  3664  007A78  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3665  007A7A  6EDA               	movwf	fsr2h,c
  3666  007A7C  0E02               	movlw	2
  3667  007A7E  18DE               	xorwf	postinc2,w,c
  3668  007A80  B4D8               	btfsc	status,2,c
  3669  007A82  EF45  F03D         	goto	u1031
  3670  007A86  EF47  F03D         	goto	u1030
  3671  007A8A                     u1031:
  3672  007A8A  EF94  F03D         	goto	l2016
  3673  007A8E                     u1030:
  3674  007A8E                     
  3675                           ; BSR set to: 0
  3676  007A8E  0100               	movlb	0	; force () banked
  3677  007A90  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3678  007A92  0D15               	mullw	21
  3679  007A94  0E00               	movlw	low _m_tabVue
  3680  007A96  0100               	movlb	0	; force () banked
  3681  007A98  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3682  007A9A  0E01               	movlw	high _m_tabVue
  3683  007A9C  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3684  007A9E  50F3               	movf	243,w,c
  3685  007AA0  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3686  007AA2  50F4               	movf	244,w,c
  3687  007AA4  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3688  007AA6  0100               	movlb	0	; force () banked
  3689  007AA8  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3690  007AAA  0100               	movlb	0	; force () banked
  3691  007AAC  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3692  007AAE  6ED9               	movwf	fsr2l,c
  3693  007AB0  0100               	movlb	0	; force () banked
  3694  007AB2  0E00               	movlw	0
  3695  007AB4  0100               	movlb	0	; force () banked
  3696  007AB6  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3697  007AB8  6EDA               	movwf	fsr2h,c
  3698  007ABA  0E03               	movlw	3
  3699  007ABC  18DE               	xorwf	postinc2,w,c
  3700  007ABE  B4D8               	btfsc	status,2,c
  3701  007AC0  EF64  F03D         	goto	u1041
  3702  007AC4  EF66  F03D         	goto	u1040
  3703  007AC8                     u1041:
  3704  007AC8  EF94  F03D         	goto	l2016
  3705  007ACC                     u1040:
  3706  007ACC                     
  3707                           ; BSR set to: 0
  3708                           ;main.c: 292: m_tabVue[j][i]=m_tabMines[j][i];
  3709  007ACC  0100               	movlb	0	; force () banked
  3710  007ACE  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3711  007AD0  0D15               	mullw	21
  3712  007AD2  0E60               	movlw	low _m_tabMines
  3713  007AD4  0100               	movlb	0	; force () banked
  3714  007AD6  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3715  007AD8  0E00               	movlw	high _m_tabMines
  3716  007ADA  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3717  007ADC  50F3               	movf	243,w,c
  3718  007ADE  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3719  007AE0  50F4               	movf	244,w,c
  3720  007AE2  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3721  007AE4  0100               	movlb	0	; force () banked
  3722  007AE6  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3723  007AE8  0100               	movlb	0	; force () banked
  3724  007AEA  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3725  007AEC  6ED9               	movwf	fsr2l,c
  3726  007AEE  0100               	movlb	0	; force () banked
  3727  007AF0  0E00               	movlw	0
  3728  007AF2  0100               	movlb	0	; force () banked
  3729  007AF4  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3730  007AF6  6EDA               	movwf	fsr2h,c
  3731  007AF8  0100               	movlb	0	; force () banked
  3732  007AFA  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3733  007AFC  0D15               	mullw	21
  3734  007AFE  0E00               	movlw	low _m_tabVue
  3735  007B00  0100               	movlb	0	; force () banked
  3736  007B02  6FC0               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3737  007B04  0E01               	movlw	high _m_tabVue
  3738  007B06  6FC1               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3739  007B08  50F3               	movf	243,w,c
  3740  007B0A  27C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3741  007B0C  50F4               	movf	244,w,c
  3742  007B0E  23C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3743  007B10  0100               	movlb	0	; force () banked
  3744  007B12  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3745  007B14  0100               	movlb	0	; force () banked
  3746  007B16  25C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3747  007B18  6EE1               	movwf	fsr1l,c
  3748  007B1A  0100               	movlb	0	; force () banked
  3749  007B1C  0E00               	movlw	0
  3750  007B1E  0100               	movlb	0	; force () banked
  3751  007B20  21C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3752  007B22  6EE2               	movwf	fsr1h,c
  3753  007B24  CFDF FFE7          	movff	indf2,indf1
  3754  007B28                     l2016:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;main.c: 293: i++;
  3758  007B28  0100               	movlb	0	; force () banked
  3759  007B2A  2BC5               	incf	enleveTuilesAutour@i& (0+255),f,b
  3760  007B2C                     l2018:
  3761                           
  3762                           ; BSR set to: 0
  3763  007B2C  0100               	movlb	0	; force () banked
  3764  007B2E  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3765  007B30  0100               	movlb	0	; force () banked
  3766  007B32  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3767  007B34  EFA5  F03D         	goto	u1050
  3768  007B38  0AFF               	xorlw	255
  3769  007B3A  25C5               	addwf	enleveTuilesAutour@i& (0+255),w,b
  3770  007B3C  B0D8               	btfsc	status,0,c
  3771  007B3E  EFA3  F03D         	goto	u1051
  3772  007B42  EFA5  F03D         	goto	u1050
  3773  007B46                     u1051:
  3774  007B46  EFB0  F03D         	goto	l2022
  3775  007B4A                     u1050:
  3776  007B4A                     
  3777                           ; BSR set to: 0
  3778  007B4A  0100               	movlb	0	; force () banked
  3779  007B4C  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3780  007B4E  0A80               	xorlw	128
  3781  007B50  0F6C               	addlw	-148
  3782  007B52  A0D8               	btfss	status,0,c
  3783  007B54  EFAE  F03D         	goto	u1061
  3784  007B58  EFB0  F03D         	goto	u1060
  3785  007B5C                     u1061:
  3786  007B5C  EF28  F03D         	goto	l2010
  3787  007B60                     u1060:
  3788  007B60                     l2022:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;main.c: 294: };main.c: 295: j++;
  3792  007B60  0100               	movlb	0	; force () banked
  3793  007B62  2BC4               	incf	enleveTuilesAutour@j& (0+255),f,b
  3794  007B64                     l2024:
  3795                           
  3796                           ; BSR set to: 0
  3797  007B64  0100               	movlb	0	; force () banked
  3798  007B66  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3799  007B68  0100               	movlb	0	; force () banked
  3800  007B6A  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3801  007B6C  EFC1  F03D         	goto	u1070
  3802  007B70  0AFF               	xorlw	255
  3803  007B72  25C4               	addwf	enleveTuilesAutour@j& (0+255),w,b
  3804  007B74  B0D8               	btfsc	status,0,c
  3805  007B76  EFBF  F03D         	goto	u1071
  3806  007B7A  EFC1  F03D         	goto	u1070
  3807  007B7E                     u1071:
  3808  007B7E  EFCC  F03D         	goto	l2028
  3809  007B82                     u1070:
  3810  007B82                     
  3811                           ; BSR set to: 0
  3812  007B82  0100               	movlb	0	; force () banked
  3813  007B84  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3814  007B86  0A80               	xorlw	128
  3815  007B88  0F7C               	addlw	-132
  3816  007B8A  A0D8               	btfss	status,0,c
  3817  007B8C  EFCA  F03D         	goto	u1081
  3818  007B90  EFCC  F03D         	goto	u1080
  3819  007B94                     u1081:
  3820  007B94  EF24  F03D         	goto	l160
  3821  007B98                     u1080:
  3822  007B98                     l2028:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;main.c: 296: };main.c: 297: afficheTabVue();
  3826  007B98  EC35  F036         	call	_afficheTabVue	;wreg free
  3827  007B9C  0012               	return		;funcret
  3828  007B9E                     __end_of_enleveTuilesAutour:
  3829                           	opt callstack 0
  3830                           
  3831 ;; *************** function _afficheTabVue *****************
  3832 ;; Defined at:
  3833 ;;		line 346 in file "main.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  i               1    8[BANK0 ] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3847 ;;      Params:         0       0       0       0       0       0       0
  3848 ;;      Locals:         0       1       0       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0
  3850 ;;      Totals:         0       1       0       0       0       0       0
  3851 ;;Total ram usage:        1 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    5
  3854 ;; This function calls:
  3855 ;;		_lcd_gotoXY
  3856 ;;		_lcd_putMessage
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;;		_demine
  3860 ;;		_enleveTuilesAutour
  3861 ;;		_metOuEnleveDrapeau
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text21
  3866  006C6A                     __ptext21:
  3867                           	opt callstack 0
  3868  006C6A                     _afficheTabVue:
  3869                           	opt callstack 24
  3870  006C6A                     
  3871                           ;main.c: 348: for (char i = 0; i < 4; i++) {
  3872  006C6A  0E00               	movlw	0
  3873  006C6C  0100               	movlb	0	; force () banked
  3874  006C6E  6FBC               	movwf	afficheTabVue@i& (0+255),b
  3875  006C70                     
  3876                           ; BSR set to: 0
  3877  006C70  0E03               	movlw	3
  3878  006C72  0100               	movlb	0	; force () banked
  3879  006C74  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3880  006C76  EF3F  F036         	goto	u901
  3881  006C7A  EF41  F036         	goto	u900
  3882  006C7E                     u901:
  3883  006C7E  EF43  F036         	goto	l1932
  3884  006C82                     u900:
  3885  006C82  EF61  F036         	goto	l193
  3886  006C86                     l1932:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;main.c: 349: lcd_gotoXY(1, i + 1);
  3890  006C86  0100               	movlb	0	; force () banked
  3891  006C88  29BC               	incf	afficheTabVue@i& (0+255),w,b
  3892  006C8A  0100               	movlb	0	; force () banked
  3893  006C8C  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3894  006C8E  0E01               	movlw	1
  3895  006C90  EC32  F037         	call	_lcd_gotoXY
  3896  006C94                     
  3897                           ;main.c: 350: lcd_putMessage(m_tabVue[i]);
  3898  006C94  0100               	movlb	0	; force () banked
  3899  006C96  51BC               	movf	afficheTabVue@i& (0+255),w,b
  3900  006C98  0D15               	mullw	21
  3901  006C9A  0E00               	movlw	low _m_tabVue
  3902  006C9C  24F3               	addwf	243,w,c
  3903  006C9E  0100               	movlb	0	; force () banked
  3904  006CA0  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3905  006CA2  0E01               	movlw	high _m_tabVue
  3906  006CA4  20F4               	addwfc	prodh,w,c
  3907  006CA6  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3908  006CA8  EC8C  F035         	call	_lcd_putMessage	;wreg free
  3909  006CAC  0100               	movlb	0	; force () banked
  3910  006CAE  2BBC               	incf	afficheTabVue@i& (0+255),f,b
  3911  006CB0                     
  3912                           ; BSR set to: 0
  3913  006CB0  0E03               	movlw	3
  3914  006CB2  0100               	movlb	0	; force () banked
  3915  006CB4  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3916  006CB6  EF5F  F036         	goto	u911
  3917  006CBA  EF61  F036         	goto	u910
  3918  006CBE                     u911:
  3919  006CBE  EF43  F036         	goto	l1932
  3920  006CC2                     u910:
  3921  006CC2                     l193:
  3922                           
  3923                           ; BSR set to: 0
  3924  006CC2  0012               	return		;funcret
  3925  006CC4                     __end_of_afficheTabVue:
  3926                           	opt callstack 0
  3927                           
  3928 ;; *************** function _afficheTabMines *****************
  3929 ;; Defined at:
  3930 ;;		line 359 in file "main.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  i               1    8[BANK0 ] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3944 ;;      Params:         0       0       0       0       0       0       0
  3945 ;;      Locals:         0       1       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0
  3947 ;;      Totals:         0       1       0       0       0       0       0
  3948 ;;Total ram usage:        1 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    5
  3951 ;; This function calls:
  3952 ;;		_lcd_gotoXY
  3953 ;;		_lcd_putMessage
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text22
  3960  006C10                     __ptext22:
  3961                           	opt callstack 0
  3962  006C10                     _afficheTabMines:
  3963                           	opt callstack 25
  3964  006C10                     
  3965                           ;main.c: 361: for (char i = 0; i < 4; i++) {
  3966  006C10  0E00               	movlw	0
  3967  006C12  0100               	movlb	0	; force () banked
  3968  006C14  6FBC               	movwf	afficheTabMines@i& (0+255),b
  3969  006C16                     
  3970                           ; BSR set to: 0
  3971  006C16  0E03               	movlw	3
  3972  006C18  0100               	movlb	0	; force () banked
  3973  006C1A  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3974  006C1C  EF12  F036         	goto	u1541
  3975  006C20  EF14  F036         	goto	u1540
  3976  006C24                     u1541:
  3977  006C24  EF16  F036         	goto	l2334
  3978  006C28                     u1540:
  3979  006C28  EF34  F036         	goto	l198
  3980  006C2C                     l2334:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;main.c: 362: lcd_gotoXY(1, i + 1);
  3984  006C2C  0100               	movlb	0	; force () banked
  3985  006C2E  29BC               	incf	afficheTabMines@i& (0+255),w,b
  3986  006C30  0100               	movlb	0	; force () banked
  3987  006C32  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3988  006C34  0E01               	movlw	1
  3989  006C36  EC32  F037         	call	_lcd_gotoXY
  3990  006C3A                     
  3991                           ;main.c: 363: lcd_putMessage(m_tabMines[i]);
  3992  006C3A  0100               	movlb	0	; force () banked
  3993  006C3C  51BC               	movf	afficheTabMines@i& (0+255),w,b
  3994  006C3E  0D15               	mullw	21
  3995  006C40  0E60               	movlw	low _m_tabMines
  3996  006C42  24F3               	addwf	243,w,c
  3997  006C44  0100               	movlb	0	; force () banked
  3998  006C46  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3999  006C48  0E00               	movlw	high _m_tabMines
  4000  006C4A  20F4               	addwfc	prodh,w,c
  4001  006C4C  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4002  006C4E  EC8C  F035         	call	_lcd_putMessage	;wreg free
  4003  006C52  0100               	movlb	0	; force () banked
  4004  006C54  2BBC               	incf	afficheTabMines@i& (0+255),f,b
  4005  006C56                     
  4006                           ; BSR set to: 0
  4007  006C56  0E03               	movlw	3
  4008  006C58  0100               	movlb	0	; force () banked
  4009  006C5A  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  4010  006C5C  EF32  F036         	goto	u1551
  4011  006C60  EF34  F036         	goto	u1550
  4012  006C64                     u1551:
  4013  006C64  EF16  F036         	goto	l2334
  4014  006C68                     u1550:
  4015  006C68                     l198:
  4016                           
  4017                           ; BSR set to: 0
  4018  006C68  0012               	return		;funcret
  4019  006C6A                     __end_of_afficheTabMines:
  4020                           	opt callstack 0
  4021                           
  4022 ;; *************** function _lcd_putMessage *****************
  4023 ;; Defined at:
  4024 ;;		line 387 in file "Lcd4Lignes.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
  4027 ;;		 -> m_tabMines(84), m_tabVue(84), 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  j               1    7[BANK0 ] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4039 ;;      Params:         0       2       0       0       0       0       0
  4040 ;;      Locals:         0       1       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0
  4042 ;;      Totals:         0       3       0       0       0       0       0
  4043 ;;Total ram usage:        3 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    4
  4046 ;; This function calls:
  4047 ;;		_lcd_ecritChar
  4048 ;; This function is called by:
  4049 ;;		_afficheTabVue
  4050 ;;		_afficheTabMines
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text23
  4055  006B18                     __ptext23:
  4056                           	opt callstack 0
  4057  006B18                     _lcd_putMessage:
  4058                           	opt callstack 24
  4059  006B18                     
  4060                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  4061  006B18  0E00               	movlw	0
  4062  006B1A  0100               	movlb	0	; force () banked
  4063  006B1C  6FBB               	movwf	lcd_putMessage@j& (0+255),b
  4064  006B1E  EFA0  F035         	goto	l1924
  4065  006B22                     l1920:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  4069  006B22  0100               	movlb	0	; force () banked
  4070  006B24  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  4071  006B26  0100               	movlb	0	; force () banked
  4072  006B28  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4073  006B2A  6ED9               	movwf	fsr2l,c
  4074  006B2C  0100               	movlb	0	; force () banked
  4075  006B2E  0E00               	movlw	0
  4076  006B30  0100               	movlb	0	; force () banked
  4077  006B32  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4078  006B34  6EDA               	movwf	fsr2h,c
  4079  006B36  50DF               	movf	indf2,w,c
  4080  006B38  ECB3  F035         	call	_lcd_ecritChar
  4081  006B3C  0100               	movlb	0	; force () banked
  4082  006B3E  2BBB               	incf	lcd_putMessage@j& (0+255),f,b
  4083  006B40                     l1924:
  4084                           
  4085                           ; BSR set to: 0
  4086  006B40  0100               	movlb	0	; force () banked
  4087  006B42  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  4088  006B44  0100               	movlb	0	; force () banked
  4089  006B46  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4090  006B48  6ED9               	movwf	fsr2l,c
  4091  006B4A  0100               	movlb	0	; force () banked
  4092  006B4C  0E00               	movlw	0
  4093  006B4E  0100               	movlb	0	; force () banked
  4094  006B50  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4095  006B52  6EDA               	movwf	fsr2h,c
  4096  006B54  50DF               	movf	indf2,w,c
  4097  006B56  A4D8               	btfss	status,2,c
  4098  006B58  EFB0  F035         	goto	u891
  4099  006B5C  EFB2  F035         	goto	u890
  4100  006B60                     u891:
  4101  006B60  EF91  F035         	goto	l1920
  4102  006B64                     u890:
  4103  006B64                     
  4104                           ; BSR set to: 0
  4105  006B64  0012               	return		;funcret
  4106  006B66                     __end_of_lcd_putMessage:
  4107                           	opt callstack 0
  4108                           
  4109 ;; *************** function _lcd_ecritChar *****************
  4110 ;; Defined at:
  4111 ;;		line 359 in file "Lcd4Lignes.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  car             1    wreg     unsigned char 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  car             1    3[BANK0 ] unsigned char 
  4116 ;;  posRam          1    4[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4126 ;;      Params:         0       0       0       0       0       0       0
  4127 ;;      Locals:         0       2       0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0
  4129 ;;      Totals:         0       2       0       0       0       0       0
  4130 ;;Total ram usage:        2 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    3
  4133 ;; This function calls:
  4134 ;;		_lcd_wrCom
  4135 ;;		_lcd_wrData
  4136 ;; This function is called by:
  4137 ;;		_lcd_putMessage
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text24
  4142  006B66                     __ptext24:
  4143                           	opt callstack 0
  4144  006B66                     _lcd_ecritChar:
  4145                           	opt callstack 24
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;incstack = 0
  4149                           ;lcd_ecritChar@car stored from wreg
  4150  006B66  0100               	movlb	0	; force () banked
  4151  006B68  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  4152  006B6A                     
  4153                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  4154  006B6A  0100               	movlb	0	; force () banked
  4155  006B6C  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  4156  006B6E  EC17  F035         	call	_lcd_wrData
  4157  006B72  0100               	movlb	0	; force () banked
  4158  006B74  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  4159                           
  4160                           ;Lcd4Lignes.c: 364: switch(posRam)
  4161  006B76  EFCC  F035         	goto	l1902
  4162  006B7A                     l1894:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  4166  006B7A  0EC0               	movlw	192
  4167  006B7C  ECC6  F036         	call	_lcd_wrCom
  4168                           
  4169                           ;Lcd4Lignes.c: 368: break;
  4170  006B80  EFDC  F035         	goto	l281
  4171  006B84                     l1896:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  4175  006B84  0E94               	movlw	148
  4176  006B86  ECC6  F036         	call	_lcd_wrCom
  4177                           
  4178                           ;Lcd4Lignes.c: 371: break;
  4179  006B8A  EFDC  F035         	goto	l281
  4180  006B8E                     l1898:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  4184  006B8E  0ED4               	movlw	212
  4185  006B90  ECC6  F036         	call	_lcd_wrCom
  4186                           
  4187                           ;Lcd4Lignes.c: 374: break;
  4188  006B94  EFDC  F035         	goto	l281
  4189  006B98                     l1902:
  4190                           
  4191                           ; BSR set to: 0
  4192  006B98  0100               	movlb	0	; force () banked
  4193  006B9A  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  4194                           
  4195                           ; Switch size 1, requested type "simple"
  4196                           ; Number of cases is 3, Range of values is 148 to 212
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte           10     6 (average)
  4200                           ;	Chosen strategy is simple_byte
  4201  006B9C  0A94               	xorlw	148	; case 148
  4202  006B9E  B4D8               	btfsc	status,2,c
  4203  006BA0  EFBD  F035         	goto	l1894
  4204  006BA4  0A54               	xorlw	84	; case 192
  4205  006BA6  B4D8               	btfsc	status,2,c
  4206  006BA8  EFC7  F035         	goto	l1898
  4207  006BAC  0A14               	xorlw	20	; case 212
  4208  006BAE  B4D8               	btfsc	status,2,c
  4209  006BB0  EFC2  F035         	goto	l1896
  4210  006BB4  EFDC  F035         	goto	l281
  4211  006BB8                     l281:
  4212  006BB8  0012               	return		;funcret
  4213  006BBA                     __end_of_lcd_ecritChar:
  4214                           	opt callstack 0
  4215                           
  4216 ;; *************** function _lcd_wrData *****************
  4217 ;; Defined at:
  4218 ;;		line 188 in file "Lcd4Lignes.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  caractere       1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  caractere       1    2[BANK0 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4232 ;;      Params:         0       0       0       0       0       0       0
  4233 ;;      Locals:         0       1       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0
  4235 ;;      Totals:         0       1       0       0       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    2
  4239 ;; This function calls:
  4240 ;;		_lcd_busy
  4241 ;;		_lcd_ecrireDonnees
  4242 ;;		_lcd_strobeEnableBit
  4243 ;; This function is called by:
  4244 ;;		_lcd_ecritChar
  4245 ;;		_lcd_initCGRam
  4246 ;;		_lcd_effaceChar
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text25
  4251  006A2E                     __ptext25:
  4252                           	opt callstack 0
  4253  006A2E                     _lcd_wrData:
  4254                           	opt callstack 24
  4255                           
  4256                           ;incstack = 0
  4257                           ;lcd_wrData@caractere stored from wreg
  4258  006A2E  0100               	movlb	0	; force () banked
  4259  006A30  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  4260  006A32                     
  4261                           ;Lcd4Lignes.c: 190: lcd_busy();
  4262  006A32  EC6B  F035         	call	_lcd_busy	;wreg free
  4263  006A36                     
  4264                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  4265  006A36  0E00               	movlw	0
  4266  006A38  6E95               	movwf	149,c	;volatile
  4267  006A3A                     
  4268                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  4269  006A3A  8080               	bsf	128,0,c	;volatile
  4270  006A3C                     
  4271                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  4272  006A3C  9280               	bcf	128,1,c	;volatile
  4273  006A3E                     
  4274                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  4275  006A3E  0100               	movlb	0	; force () banked
  4276  006A40  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  4277  006A42  0B0F               	andlw	15
  4278  006A44  ECCB  F034         	call	_lcd_ecrireDonnees
  4279  006A48                     
  4280                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4281  006A48  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  4282  006A4C                     
  4283                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4284  006A4C  0100               	movlb	0	; force () banked
  4285  006A4E  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  4286  006A50  ECCB  F034         	call	_lcd_ecrireDonnees
  4287  006A54                     
  4288                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4289  006A54  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  4290  006A58                     
  4291                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4292  006A58  0E0F               	movlw	15
  4293  006A5A  6E95               	movwf	149,c	;volatile
  4294  006A5C                     
  4295                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4296                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4297  006A5C  EC6B  F035         	call	_lcd_busy	;wreg free
  4298  006A60  0012               	return		;funcret
  4299  006A62                     __end_of_lcd_wrData:
  4300                           	opt callstack 0
  4301                           
  4302 ;; *************** function _lcd_gotoXY *****************
  4303 ;; Defined at:
  4304 ;;		line 314 in file "Lcd4Lignes.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  x               1    wreg     unsigned char 
  4307 ;;  y               1    3[BANK0 ] unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  x               1    4[BANK0 ] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4319 ;;      Params:         0       1       0       0       0       0       0
  4320 ;;      Locals:         0       1       0       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0
  4322 ;;      Totals:         0       2       0       0       0       0       0
  4323 ;;Total ram usage:        2 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    3
  4326 ;; This function calls:
  4327 ;;		_lcd_wrCom
  4328 ;; This function is called by:
  4329 ;;		_deplace
  4330 ;;		_afficheTabVue
  4331 ;;		_afficheTabMines
  4332 ;;		_lcd_effaceLigne
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text26
  4337  006E64                     __ptext26:
  4338                           	opt callstack 0
  4339  006E64                     _lcd_gotoXY:
  4340                           	opt callstack 25
  4341                           
  4342                           ;incstack = 0
  4343                           ;lcd_gotoXY@x stored from wreg
  4344  006E64  0100               	movlb	0	; force () banked
  4345  006E66  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  4346  006E68                     
  4347                           ;Lcd4Lignes.c: 316: switch(y)
  4348  006E68  EF56  F037         	goto	l1916
  4349  006E6C                     l1906:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4353  006E6C  0100               	movlb	0	; force () banked
  4354  006E6E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4355  006E70  0F7F               	addlw	127
  4356  006E72  0980               	iorlw	128
  4357  006E74  ECC6  F036         	call	_lcd_wrCom
  4358                           
  4359                           ;Lcd4Lignes.c: 320: break;
  4360  006E78  EF6A  F037         	goto	l270
  4361  006E7C                     l1908:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4365  006E7C  0100               	movlb	0	; force () banked
  4366  006E7E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4367  006E80  0FBF               	addlw	191
  4368  006E82  0980               	iorlw	128
  4369  006E84  ECC6  F036         	call	_lcd_wrCom
  4370                           
  4371                           ;Lcd4Lignes.c: 323: break;
  4372  006E88  EF6A  F037         	goto	l270
  4373  006E8C                     l1910:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4377  006E8C  0100               	movlb	0	; force () banked
  4378  006E8E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4379  006E90  0F93               	addlw	147
  4380  006E92  0980               	iorlw	128
  4381  006E94  ECC6  F036         	call	_lcd_wrCom
  4382                           
  4383                           ;Lcd4Lignes.c: 326: break;
  4384  006E98  EF6A  F037         	goto	l270
  4385  006E9C                     l1912:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4389  006E9C  0100               	movlb	0	; force () banked
  4390  006E9E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4391  006EA0  0FD3               	addlw	211
  4392  006EA2  0980               	iorlw	128
  4393  006EA4  ECC6  F036         	call	_lcd_wrCom
  4394                           
  4395                           ;Lcd4Lignes.c: 329: break;
  4396  006EA8  EF6A  F037         	goto	l270
  4397  006EAC                     l1916:
  4398  006EAC  0100               	movlb	0	; force () banked
  4399  006EAE  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  4400                           
  4401                           ; Switch size 1, requested type "simple"
  4402                           ; Number of cases is 4, Range of values is 1 to 4
  4403                           ; switch strategies available:
  4404                           ; Name         Instructions Cycles
  4405                           ; simple_byte           13     7 (average)
  4406                           ;	Chosen strategy is simple_byte
  4407  006EB0  0A01               	xorlw	1	; case 1
  4408  006EB2  B4D8               	btfsc	status,2,c
  4409  006EB4  EF36  F037         	goto	l1906
  4410  006EB8  0A03               	xorlw	3	; case 2
  4411  006EBA  B4D8               	btfsc	status,2,c
  4412  006EBC  EF3E  F037         	goto	l1908
  4413  006EC0  0A01               	xorlw	1	; case 3
  4414  006EC2  B4D8               	btfsc	status,2,c
  4415  006EC4  EF46  F037         	goto	l1910
  4416  006EC8  0A07               	xorlw	7	; case 4
  4417  006ECA  B4D8               	btfsc	status,2,c
  4418  006ECC  EF4E  F037         	goto	l1912
  4419  006ED0  EF6A  F037         	goto	l270
  4420  006ED4                     l270:
  4421  006ED4  0012               	return		;funcret
  4422  006ED6                     __end_of_lcd_gotoXY:
  4423                           	opt callstack 0
  4424                           
  4425 ;; *************** function _lcd_wrCom *****************
  4426 ;; Defined at:
  4427 ;;		line 156 in file "Lcd4Lignes.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  commande        1    wreg     unsigned char 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  commande        1    2[BANK0 ] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      unsigned char 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4441 ;;      Params:         0       0       0       0       0       0       0
  4442 ;;      Locals:         0       1       0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0
  4444 ;;      Totals:         0       1       0       0       0       0       0
  4445 ;;Total ram usage:        1 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    2
  4448 ;; This function calls:
  4449 ;;		_lcd_busy
  4450 ;;		_lcd_ecrireDonnees
  4451 ;;		_lcd_strobeEnableBit
  4452 ;; This function is called by:
  4453 ;;		_lcd_init
  4454 ;;		_lcd_curseurHome
  4455 ;;		_lcd_gotoXY
  4456 ;;		_lcd_ecritChar
  4457 ;;		_lcd_initCGRam
  4458 ;;		_lcd_effaceAffichage
  4459 ;;		_lcd_cacheCurseur
  4460 ;;		_lcd_montreCurseur
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text27
  4465  006D8C                     __ptext27:
  4466                           	opt callstack 0
  4467  006D8C                     _lcd_wrCom:
  4468                           	opt callstack 24
  4469                           
  4470                           ;incstack = 0
  4471                           ;lcd_wrCom@commande stored from wreg
  4472  006D8C  0100               	movlb	0	; force () banked
  4473  006D8E  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  4474  006D90                     
  4475                           ;Lcd4Lignes.c: 158: lcd_busy();
  4476  006D90  EC6B  F035         	call	_lcd_busy	;wreg free
  4477  006D94                     
  4478                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4479  006D94  0E00               	movlw	0
  4480  006D96  6E95               	movwf	149,c	;volatile
  4481  006D98                     
  4482                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4483  006D98  9080               	bcf	128,0,c	;volatile
  4484  006D9A                     
  4485                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4486  006D9A  9280               	bcf	128,1,c	;volatile
  4487  006D9C                     
  4488                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4489  006D9C  0100               	movlb	0	; force () banked
  4490  006D9E  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  4491  006DA0  0B0F               	andlw	15
  4492  006DA2  ECCB  F034         	call	_lcd_ecrireDonnees
  4493  006DA6                     
  4494                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4495  006DA6  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  4496  006DAA                     
  4497                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4498  006DAA  0100               	movlb	0	; force () banked
  4499  006DAC  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  4500  006DAE  ECCB  F034         	call	_lcd_ecrireDonnees
  4501  006DB2                     
  4502                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4503  006DB2  ECBB  F034         	call	_lcd_strobeEnableBit	;wreg free
  4504  006DB6                     
  4505                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4506  006DB6  0E03               	movlw	3
  4507  006DB8                     u1717:
  4508  006DB8  2EE8               	decfsz	wreg,f,c
  4509  006DBA  D7FE               	bra	u1717
  4510  006DBC  F000               	nop	
  4511  006DBE                     
  4512                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4513  006DBE  0100               	movlb	0	; force () banked
  4514  006DC0  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  4515  006DC2  B4D8               	btfsc	status,2,c
  4516  006DC4  EFE6  F036         	goto	u871
  4517  006DC8  EFE8  F036         	goto	u870
  4518  006DCC                     u871:
  4519  006DCC  EFF2  F036         	goto	l1854
  4520  006DD0                     u870:
  4521  006DD0                     
  4522                           ; BSR set to: 0
  4523  006DD0  0E02               	movlw	2
  4524  006DD2  0100               	movlb	0	; force () banked
  4525  006DD4  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4526  006DD6  A4D8               	btfss	status,2,c
  4527  006DD8  EFF0  F036         	goto	u881
  4528  006DDC  EFF2  F036         	goto	u880
  4529  006DE0                     u881:
  4530  006DE0  EFF7  F036         	goto	l1856
  4531  006DE4                     u880:
  4532  006DE4                     l1854:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4536  006DE4  0EA6               	movlw	166
  4537  006DE6                     u1727:
  4538  006DE6  2EE8               	decfsz	wreg,f,c
  4539  006DE8  D7FE               	bra	u1727
  4540  006DEA  F000 F000          	nop2	
  4541  006DEE                     l1856:
  4542                           
  4543                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4544  006DEE  0E0F               	movlw	15
  4545  006DF0  6E95               	movwf	149,c	;volatile
  4546  006DF2                     
  4547                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4548  006DF2  EC6B  F035         	call	_lcd_busy	;wreg free
  4549  006DF6  0012               	return		;funcret
  4550  006DF8                     __end_of_lcd_wrCom:
  4551                           	opt callstack 0
  4552                           
  4553 ;; *************** function _lcd_strobeEnableBit *****************
  4554 ;; Defined at:
  4555 ;;		line 431 in file "Lcd4Lignes.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		None
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4569 ;;      Params:         0       0       0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0
  4572 ;;      Totals:         0       0       0       0       0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_lcd_wrCom
  4579 ;;		_lcd_wrData
  4580 ;;		_lcd_resetSequence
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text28
  4585  006976                     __ptext28:
  4586                           	opt callstack 0
  4587  006976                     _lcd_strobeEnableBit:
  4588                           	opt callstack 25
  4589  006976                     
  4590                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4591  006976  8480               	bsf	128,2,c	;volatile
  4592                           
  4593                           ;Lcd4Lignes.c: 434: __nop();
  4594  006978  F000               	nop	
  4595                           
  4596                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4597  00697A  9480               	bcf	128,2,c	;volatile
  4598  00697C  0012               	return		;funcret
  4599  00697E                     __end_of_lcd_strobeEnableBit:
  4600                           	opt callstack 0
  4601                           
  4602 ;; *************** function _lcd_ecrireDonnees *****************
  4603 ;; Defined at:
  4604 ;;		line 107 in file "Lcd4Lignes.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  donnee          1    wreg     unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  donnee          1    1[BANK0 ] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4618 ;;      Params:         0       0       0       0       0       0       0
  4619 ;;      Locals:         0       1       0       0       0       0       0
  4620 ;;      Temps:          0       1       0       0       0       0       0
  4621 ;;      Totals:         0       2       0       0       0       0       0
  4622 ;;Total ram usage:        2 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_lcd_wrCom
  4628 ;;		_lcd_wrData
  4629 ;;		_lcd_resetSequence
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text29
  4634  006996                     __ptext29:
  4635                           	opt callstack 0
  4636  006996                     _lcd_ecrireDonnees:
  4637                           	opt callstack 25
  4638                           
  4639                           ;incstack = 0
  4640                           ;lcd_ecrireDonnees@donnee stored from wreg
  4641  006996  0100               	movlb	0	; force () banked
  4642  006998  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4643  00699A                     
  4644                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4645  00699A  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4646  00699E  0EF0               	movlw	240
  4647  0069A0  0100               	movlb	0	; force () banked
  4648  0069A2  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4649  0069A4  0100               	movlb	0	; force () banked
  4650  0069A6  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4651  0069A8  0B0F               	andlw	15
  4652  0069AA  0100               	movlb	0	; force () banked
  4653  0069AC  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4654  0069AE  6E83               	movwf	131,c	;volatile
  4655  0069B0                     
  4656                           ; BSR set to: 0
  4657  0069B0  0012               	return		;funcret
  4658  0069B2                     __end_of_lcd_ecrireDonnees:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _lcd_busy *****************
  4662 ;; Defined at:
  4663 ;;		line 124 in file "Lcd4Lignes.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  adresse         1    1[BANK0 ] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      unsigned char 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4677 ;;      Params:         0       0       0       0       0       0       0
  4678 ;;      Locals:         0       1       0       0       0       0       0
  4679 ;;      Temps:          0       1       0       0       0       0       0
  4680 ;;      Totals:         0       2       0       0       0       0       0
  4681 ;;Total ram usage:        2 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    1
  4684 ;; This function calls:
  4685 ;;		_lcd_lireDonnees
  4686 ;; This function is called by:
  4687 ;;		_lcd_wrCom
  4688 ;;		_lcd_wrData
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text30
  4693  006AD6                     __ptext30:
  4694                           	opt callstack 0
  4695  006AD6                     _lcd_busy:
  4696                           	opt callstack 24
  4697  006AD6                     
  4698                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4699  006AD6  9080               	bcf	128,0,c	;volatile
  4700                           
  4701                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4702  006AD8  8280               	bsf	128,1,c	;volatile
  4703  006ADA                     l232:
  4704                           
  4705                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4706  006ADA  8480               	bsf	128,2,c	;volatile
  4707                           
  4708                           ;Lcd4Lignes.c: 134: __nop();
  4709  006ADC  F000               	nop	
  4710  006ADE                     
  4711                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4712  006ADE  ECB8  F034         	call	_lcd_lireDonnees	;wreg free
  4713  006AE2  0100               	movlb	0	; force () banked
  4714  006AE4  6FB4               	movwf	??_lcd_busy& (0+255),b
  4715  006AE6  39B4               	swapf	??_lcd_busy& (0+255),w,b
  4716  006AE8  0BF0               	andlw	240
  4717  006AEA  0100               	movlb	0	; force () banked
  4718  006AEC  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  4719  006AEE                     
  4720                           ; BSR set to: 0
  4721                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4722  006AEE  9480               	bcf	128,2,c	;volatile
  4723  006AF0                     
  4724                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4725  006AF0  8480               	bsf	128,2,c	;volatile
  4726  006AF2                     
  4727                           ;Lcd4Lignes.c: 139: __nop();
  4728  006AF2  F000               	nop	
  4729                           
  4730                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4731  006AF4  ECB8  F034         	call	_lcd_lireDonnees	;wreg free
  4732  006AF8  0100               	movlb	0	; force () banked
  4733  006AFA  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  4734  006AFC                     
  4735                           ; BSR set to: 0
  4736                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4737  006AFC  9480               	bcf	128,2,c	;volatile
  4738  006AFE                     
  4739                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4740  006AFE  0100               	movlb	0	; force () banked
  4741  006B00  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  4742  006B02  EF85  F035         	goto	u861
  4743  006B06  EF87  F035         	goto	u860
  4744  006B0A                     u861:
  4745  006B0A  EF6D  F035         	goto	l232
  4746  006B0E                     u860:
  4747  006B0E                     
  4748                           ; BSR set to: 0
  4749                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4750  006B0E  9280               	bcf	128,1,c	;volatile
  4751  006B10                     
  4752                           ; BSR set to: 0
  4753                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4754  006B10  0100               	movlb	0	; force () banked
  4755  006B12  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  4756  006B14  0B7F               	andlw	127
  4757  006B16                     
  4758                           ; BSR set to: 0
  4759  006B16  0012               	return		;funcret
  4760  006B18                     __end_of_lcd_busy:
  4761                           	opt callstack 0
  4762                           
  4763 ;; *************** function _lcd_lireDonnees *****************
  4764 ;; Defined at:
  4765 ;;		line 93 in file "Lcd4Lignes.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      unsigned char 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4779 ;;      Params:         0       0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0
  4782 ;;      Totals:         0       0       0       0       0       0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_lcd_busy
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text31
  4793  006970                     __ptext31:
  4794                           	opt callstack 0
  4795  006970                     _lcd_lireDonnees:
  4796                           	opt callstack 24
  4797  006970                     
  4798                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4799  006970  5083               	movf	131,w,c	;volatile
  4800  006972  0B0F               	andlw	15
  4801  006974  0012               	return		;funcret
  4802  006976                     __end_of_lcd_lireDonnees:
  4803                           	opt callstack 0
  4804  0000                     
  4805                           	psect	param0
  4806  0000                     tosu	equ	0xFFF
  4807                           tosh	equ	0xFFE
  4808                           tosl	equ	0xFFD
  4809                           stkptr	equ	0xFFC
  4810                           pclatu	equ	0xFFB
  4811                           pclath	equ	0xFFA
  4812                           pcl	equ	0xFF9
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           indf0	equ	0xFEF
  4820                           postinc0	equ	0xFEE
  4821                           postdec0	equ	0xFED
  4822                           preinc0	equ	0xFEC
  4823                           plusw0	equ	0xFEB
  4824                           fsr0h	equ	0xFEA
  4825                           fsr0l	equ	0xFE9
  4826                           wreg	equ	0xFE8
  4827                           indf1	equ	0xFE7
  4828                           postinc1	equ	0xFE6
  4829                           postdec1	equ	0xFE5
  4830                           preinc1	equ	0xFE4
  4831                           plusw1	equ	0xFE3
  4832                           fsr1h	equ	0xFE2
  4833                           fsr1l	equ	0xFE1
  4834                           bsr	equ	0xFE0
  4835                           indf2	equ	0xFDF
  4836                           postinc2	equ	0xFDE
  4837                           postdec2	equ	0xFDD
  4838                           preinc2	equ	0xFDC
  4839                           plusw2	equ	0xFDB
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     36     124
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMine(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    main@nbMine	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posY	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posX	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _metOuEnleveDrapeau->_afficheTabVue
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->_afficheTabVue
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   13630
                                             29 BANK0      7     7      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                           _lcd_init
                 _metOuEnleveDrapeau
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1219
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1993
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4    1681
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1211
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _metOuEnleveDrapeau                                   7     6      1    1543
                                              9 BANK0      7     6      1
                      _afficheTabVue
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _gagne                                                9     7      2     324
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              7     3      4    1299
                                              5 BANK0      7     3      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                              10     9      1    3446
                                             18 BANK0     10     9      1
                      _afficheTabVue
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                   9     8      1    1815
                                              9 BANK0      9     8      1
                      _afficheTabVue
 ---------------------------------------------------------------------------------
 (2) _afficheTabVue                                        1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (3) _lcd_putMessage                                       3     1      2     555
                                              5 BANK0      3     1      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (4) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (5) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (5) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (6) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (7) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _afficheTabVue
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         _lcd_ecritChar
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
     _enleveTuilesAutour
       _afficheTabVue
         _lcd_gotoXY
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
         _lcd_putMessage
           _lcd_ecritChar
             _lcd_wrCom
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
             _lcd_wrData
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
   _initTabVue
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metOuEnleveDrapeau
     _afficheTabVue
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         _lcd_ecritChar
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     24      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      14        0.0%
DATA                 0      0     110      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 06 13:44:15 2019

 __end_of_calculToucheCombien 7D40                            l94 7022                            l78 7178  
                          l87 6A94          ??_enleveTuilesAutour 00BE           ___wmul@multiplicand 00B6  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l105 758C  
                         l130 7D3E                           l114 76EA                           l123 7C7E  
                         l300 6F76                           l204 7422                           l150 79FA  
                         l303 697C                           l143 7864                           l207 7430  
                         l232 6ADA                           l240 6DF6                           l160 7A48  
                         l233 6B0E                           l226 6974                           l234 6B16  
                         l170 7B9C                           l146 786A                           l243 6A60  
                         l229 69B0                           l181 72FA                           l270 6ED4  
                         l246 6D8A                           l255 6984                           l281 6BB8  
                         l193 6CC2                           l185 6A1C                           l177 728E  
                         l249 69D8                           l353 6A00                           l188 6A2C  
                         l364 6E52                           l365 6E62                           l198 6C68  
                         l287 6B64                           l597 70D4                  __CFG_CPB$OFF 000000  
                         u160 6A2A                           u161 6A26                  __CFG_CPD$OFF 000000  
                         u900 6C82                           u901 6C7E                           u910 6CC2  
                         u911 6CBE                           u920 6E18                           u921 6E14  
                         u930 6E52                           u931 6E4E                           u860 6B0E  
                         u940 7BDC                           u861 6B0A                           u941 7BD8  
                         u870 6DD0                           u950 7BF6                           u871 6DCC  
                         u951 7BF2                           u880 6DE4                           u960 7C7A  
                         u881 6DE0                           u961 7C76                           u890 6B64  
                         u970 7CBE                           u891 6B60                           u971 7CBA  
                         u980 7CDC                           u981 7CD8                           u990 7D1C  
                         u991 7D18                  __CFG_BORV$18 000000                  ___awmod@sign 00C7  
                         prod 000FF3                   lcd_gotoXY@x 00B8                           wreg 000FE8  
                 lcd_gotoXY@y 00B7    __end_of_metOuEnleveDrapeau 7432                  __CFG_LVP$OFF 000000  
                        l1020 6C0E                          l2000 7A00                          l1017 6994  
                        l2010 7A50                          l2002 7A24                          l2020 7B4A  
                        l2012 7A8E                          l2004 7A2A                          l2100 7052  
                        l2022 7B60                          l2014 7ACC                          l2006 7A3A  
                        l2030 6D22                          l2110 708A                          l2102 705A  
                        l2016 7B28                          l2024 7B64                          l2008 7A40  
                        l2040 6D44                          l2032 6D26                          l2120 70C4  
                        l2112 70A0                          l2104 706C                          l2200 7538  
                        l2026 7B82                          l2018 7B2C                          l2130 6A74  
                        l2050 6D62                          l2042 6D48                          l2034 6D3A  
                        l2122 70CC                          l2114 70A8                          l2106 7074  
                        l2202 7568                          l2028 7B98                          l2140 6A8A  
                        l2132 6A76                          l2060 6D7E                          l2052 6D68  
                        l2044 6D50                          l2036 6D3C                          l2220 7604  
                        l2212 75AA                          l2116 70AE                          l2108 707C  
                        l2204 7570                          l1350 6A1A                          l2310 72A4  
                        l2302 7210                          l2150 6F78                          l2142 6A8C  
                        l2134 6A82                          l2126 6A62                          l2062 6D86  
                        l2054 6D6C                          l2046 6D56                          l2038 6D3E  
                        l2222 7650                          l2230 76D4                          l2214 75B0  
                        l2206 758E                          l2118 70B4                          l1352 6A1A  
                        l2240 772C                          l2312 72A8                          l2304 724C  
                        l2152 6F7E                          l2144 6A90                          l2136 6A84  
                        l2128 6A6A                          l2080 6F46                          l2072 6EF8  
                        l2064 6ED6                          l2056 6D74                          l2048 6D5A  
                        l2232 76D8                          l2224 768E                          l2208 7594  
                        l2330 6C16                          l1354 6A2A                          l2242 7744  
                        l2250 77A4                          l2234 76EC                          l2306 728A  
                        l2314 72BA                          l2170 700C                          l2162 6FB0  
                        l2138 6A86                          l2082 6F4A                          l2074 6EFE  
                        l2066 6EDC                          l2058 6D7A                          l2146 69B2  
                        l2226 76BE                          l2218 75C6                          l2090 7024  
                        l2340 6C56                          l1348 6A06                          l2260 780A  
                        l2252 77B6                          l2244 7754                          l2236 7700  
                        l2316 72E4                          l2324 72F8                          l2308 7292  
                        l2172 7010                          l2164 6FE0                          l2156 6F94  
                        l2084 6F5C                          l2068 6EE2                          l2148 69D4  
                        l2228 76C2                          l2092 702A                          l2180 744E  
                        l2334 6C2C                          l2270 78C6                          l2262 783C  
                        l2254 77D0                          l2246 7766                          l2238 7712  
                        l2318 72F2                          l2166 6FE4                          l2158 6F9A  
                        l2086 6F60                          l2078 6F14                          l2350 741E  
                        l2342 7300                          l2094 7038                          l2190 749E  
                        l2182 7454                          l2174 7432                          l2336 6C3A  
                        l2328 6C10                          l2280 792A                          l2256 77E8  
                        l2264 7848                          l2248 7798                          l2168 6FF6  
                        l2088 6F72                          l2344 734C                          l2096 7040  
                        l2192 74B0                          l2176 7438                          l2360 70D6  
                        l1810 6AF0                          l1802 699A                          l2338 6C52  
                        l2282 7978                          l2266 786A                          l2258 77F8  
                        l2290 71D2                          l2346 7390                          l2098 7044  
                        l2194 74B4                          l2186 746A                          l2370 710C  
                        l2362 70F4                          l1820 6AFE                          l1812 6AF0  
                        l1804 6AD6                          l2284 79F4                          l2276 78CC  
                        l2268 7878                          l2292 71DE                          l2348 73DE  
                        l2196 74CA                          l2188 749A                          l2380 7156  
                        l2372 7110                          l2364 70F8                          l1822 6B10  
                        l1814 6AF2                          l1806 6ADE                          l1830 6D94  
                        l1910 6E8C                          l1902 6B98                          l2286 79F8  
                        l2278 791A                          l2198 74FA                          l2390 71B8  
                        l2382 7174                          l2374 7114                          l2366 70FC  
                        l1816 6AFC                          l1808 6AEE                          l1840 6DA6  
                        l1832 6D98                          l1912 6E9C                          l1904 6E68  
                        l1920 6B22                          l2296 71F4                          l2384 7186  
                        l2376 712C                          l2368 7100                          l1818 6AFE  
                        l1826 6976                          l1850 6DBE                          l1842 6DAA  
                        l1834 6D98                          l1906 6E6C                          l1922 6B3C  
                        l2298 71FA                          l2378 713A                          l2386 719E  
                        l1860 6DF2                          l1852 6DD0                          l1844 6DAA  
                        l1836 6D9A                          l1828 6D90                          l1908 6E7C  
                        l1916 6EAC                          l1924 6B40                          l1932 6C86  
                        l1940 697E                          l2388 71AC                          l1854 6DE4  
                        l1846 6DB2                          l1838 6D9C                          l1870 6A3A  
                        l1918 6B18                          l1934 6C94                          l1926 6C6A  
                        l1942 69DA                          l1950 6E0A                          l1856 6DEE  
                        l1848 6DB6                          l1880 6A4C                          l1872 6A3C  
                        l1864 6A32                          l1936 6CAC                          l1928 6C70  
                        l1944 69F8                          l1952 6E18                          l1960 6BBA  
                        l1858 6DF2                          l1882 6A54                          l1874 6A3E  
                        l1866 6A36                          l1938 6CB0                          l1970 7BC6  
                        l1954 6E28                          l1962 6BF0                          l1884 6A58  
                        l1876 6A48                          l1868 6A3A                          l1892 6B6A  
                        l1980 7C04                          l1972 7BCC                          l1956 6E32  
                        l1948 6DF8                          l1964 6C02                          l1798 6970  
                        l1886 6A58                          l1878 6A4C                          l1894 6B7A  
                        l1958 6986                          l1990 7CDC                          l1982 7C24  
                        l1974 7BDC                          l1888 6A5C                          l1896 6B84  
                        l1984 7C7A                          l1992 7CE2                          l1976 7BE6  
                        l1968 7B9E                          l1898 6B8E                          l1994 7D1C  
                        l1986 7C84                          l1978 7BF6                          l1996 7D3A  
                        l1988 7CBE                          u1000 7D3A                          u1001 7D36  
                        u1010 7A24                          u1011 7A20                          u1020 7A3A  
                        u1100 6F10                          u1021 7A36                          u1101 6F0C  
                        u1030 7A8E                          u1110 6F5C                          u1031 7A8A  
                        u1111 6F58                          u1040 7ACC                          u1200 6FAC  
                        u1120 6F72                          u1041 7AC8                          u1201 6FA8  
                        u1121 6F6E                          u1050 7B4A                          u1210 6FF6  
                        u1130 7038                          u1051 7B46                          u1211 6FF2  
                        u1131 7034                          u1060 7B60                          u1220 7022  
                        u1300 75C2                          u1140 7052                          u1061 7B5C  
                        u1221 701E                          u1301 75BE                          u1141 704E  
                        u1070 7B82                          u1310 7604                          u1150 706C  
                        u1230 744A                          u1071 7B7E                          u1311 7600  
                        u1151 7068                          u1231 7446                          u1080 7B98  
                        u1400 77E8                          u1320 768E                          u1160 708A  
                        u1240 7466                          u1081 7B94                          u1401 77E4  
                        u1321 768A                          u1161 7086                          u1241 7462  
                        u1410 780A                          u1090 6EF4                          u1330 76D4  
                        u1170 70A0                          u1250 74B0                          u1411 7806  
                        u1091 6EF0                          u1331 76D0                          u1171 709C  
                        u1251 74AC                          u1420 783C                          u1500 728A  
                        u1340 76EA                          u1180 70C4                          u1260 74C6  
                        u1421 7838                          u1501 7286                          u1341 76E6  
                        u1181 70C0                          u1261 74C2                          u1430 7878  
                        u1350 7712                          u1510 72A4                          u1190 6F90  
                        u1270 7538                          u1431 7874                          u1351 770E  
                        u1511 72A0                          u1191 6F8C                          u1271 7534  
                        u1440 78C6                          u1360 7744                          u1520 72BA  
                        u1280 758C                          u1600 713A                          u1441 78C2  
                        u1361 7740                          u1521 72B6                          u1281 7588  
                        u1601 7136                          u1450 791A                          u1370 7766  
                        u1530 72E4                          u1290 75A6                          u1610 7156  
                        u1451 7916                          u1371 7762                          u1531 72E0  
                        u1291 75A2                          u1611 7152                          u1540 6C28  
                        u1460 7978                          u1380 7798                          u1620 7174  
                        u1541 6C24                          u1461 7974                          u1381 7794  
                        u1621 7170                          u1550 6C68                          u1390 77B6  
                        u1470 71F0                          u1630 7186                          u1551 6C64  
                        u1391 77B2                          u1471 71EC                          u1631 7182  
                        u1480 720C                          u1560 734C                          u1640 71AC  
                        u1481 7208                          u1561 7348                          u1641 71A8  
                        u1490 724C                          u1570 73DE                          u1491 7248  
                        u1707 6D80                          u1571 73DA                          u1580 7430  
                        u1717 6DB8                          u1581 742C                          u1727 6DE6  
                        u1657 71C0                          u1667 6D2E                          u1677 6D4A  
                        u1687 6D5C                          u1697 6D6E                          _RCIF 007CF5  
                        _TMR1 000FCE              ??_initialisation 00B6                          _main 70D6  
                        _rand 6BBA                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 00B9                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 00B7                         ?_main 00B4  
                       ?_rand 00C0               __end_of___awmod 70D6                         _ANSEL 000F7E  
       gagne@nbTuileEtDrapeau 00BA                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 7866           ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00B7                         _gagne 71D2                         _randx 00D8  
                       _srand 6986                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000             ??_afficheTabMines 00BC                __CFG_PBADEN$ON 000000  
            _metToucheCombien 758E               __initialization 6CC4                  __end_of_main 71D2  
                __end_of_rand 6C10           enleveTuilesAutour@i 00C5           enleveTuilesAutour@j 00C4  
         enleveTuilesAutour@x 00C3           enleveTuilesAutour@y 00BD    calculToucheCombien@nbMines 00C1  
        lcd_putMessage@chaine 00B9    calculToucheCombien@colonne 00BC                        ??_main 00D1  
                      ??_rand 00C2                 __activetblptr 000003                        ?_gagne 00B4  
                      _ADCON1 000FC1                        _ADRESH 000FC4                        ?_srand 00B4  
                      _ANSELH 000F7F                   initTabVue@i 00B7                   initTabVue@j 00B6  
              __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA  
              getAnalog@canal 00B5              __end_of_lcd_busy 6B18              __end_of_lcd_init 69DA  
                      ___lmul 6DF8                        ___wmul 69DA                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        _demine 7866                        gagne@i 00BB  
                      gagne@j 00BC                        clear_0 6D0A                        clear_1 6D16  
             ___awmod@divisor 00C4                     ??_deplace 00BD               ___awmod@counter 00C6  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00B4        __size_of_afficheTabVue 005A             _lcd_resetSequence 6D22  
                  __accesstop 0060       __end_of__initialization 6D1C           _lcd_strobeEnableBit 6976  
          ?_lcd_resetSequence 00B4                 ___rparam_used 000000                deplace@analogX 00BE  
              deplace@analogY 00BF                  __pidataBANK0 696C                  __pidataBANK1 6A96  
         ??_lcd_resetSequence 00B6                 __end_of_gagne 72FC                 __end_of_srand 6996  
        ?_lcd_strobeEnableBit 00B4            __size_of_getAnalog 002C            __size_of_lcd_wrCom 006C  
                     ??_gagne 00B6     __end_of_lcd_resetSequence 6D8C                       ??_srand 00B6  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 6996                    __pbssBANK0 0060  
                  __pbssBANK1 0100              ??_lcd_putMessage 00BB            ?_lcd_ecrireDonnees 00B4  
    __size_of_lcd_curseurHome 0008            _metOuEnleveDrapeau 72FC           ??_lcd_ecrireDonnees 00B4  
                     ?___lmul 00B4                       ?___wmul 00B4                       ?_demine 00C6  
         ?_metOuEnleveDrapeau 00BD                 _afficheTabVue 6C6A                ___lmul@product 00BC  
 __size_of_enleveTuilesAutour 01A2         ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 01A2  
    __end_of_metToucheCombien 76EC                    _lcd_gotoXY 6E64                    _lcd_wrData 6A2E  
             _afficheTabMines 6C10     __end_of_lcd_ecrireDonnees 69B2          ??_metOuEnleveDrapeau 00BE  
                   ?_lcd_busy 00B4                     ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5  
                  _m_tabMines 0060             __end_of_getAnalog 6A2E          __size_of_rempliMines 015C  
                     __Hparam 0000                       __Lparam 0000                    _initTabVue 6F78  
           __end_of_lcd_wrCom 6DF8                ?_afficheTabVue 00B4               __size_of___lmul 006C  
                     ___awmod 7024               __size_of___wmul 0028               __size_of_demine 0196  
                     __pcinit 6CC4                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 76EC                       __ptext0 70D6                       __ptext1 7432  
                     __ptext2 6BBA                       __ptext3 6DF8                       __ptext4 7024  
                     __ptext5 758E                       __ptext6 7B9E                       __ptext7 69DA  
                     __ptext8 72FC                       __ptext9 69B2         __end_of_lcd_ecritChar 6BBA  
             lcd_busy@adresse 00B5                     _T1CONbits 000FCD              ___awmod@dividend 00C2  
                     demine@x 00CF                       demine@y 00C6              lcd_ecritChar@car 00B7  
                  ??_lcd_busy 00B4                    ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A  
        end_of_initialization 6D1C         __end_of_lcd_initCGRam 6F78             ??_lcd_lireDonnees 00B4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80  
                   _PORTBbits 000F81       __end_of_afficheTabMines 6C6A                   ?_lcd_gotoXY 00B7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                  main@nbMine 00D2                     _TXSTAbits 000FAC               ??_afficheTabVue 00BC  
                 ?_initTabVue 00B4                __end_of___lmul 6E64                __end_of___wmul 6A02  
                 _BAUDCONbits 000FB8                __end_of_demine 79FC           start_initialization 6CC4  
       enleveTuilesAutour@mem 00C2           _calculToucheCombien 7B9E           metOuEnleveDrapeau@x 00C3  
         metOuEnleveDrapeau@y 00BD           __size_of_lcd_gotoXY 0072                      ??___lmul 00BC  
                    ??___wmul 00B8                 rempliMines@nb 00C8           __size_of_lcd_wrData 0034  
                    ??_demine 00C7                   __pdataBANK0 00D8                   __pdataBANK1 0154  
            __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA              ?_afficheTabMines 00B4  
               __pcstackBANK0 00B4             ?_metToucheCombien 00B4              afficheTabMines@i 00BC  
         __size_of_initTabVue 00AC            ??_metToucheCombien 00C6             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000                     _getAnalog 6A02  
 __end_of_lcd_strobeEnableBit 697E                _initialisation 6A62    __end_of_enleveTuilesAutour 7B9E  
                    ?___awmod 00C2                      ?_deplace 00B9                     _lcd_wrCom 6D8C  
       ??_calculToucheCombien 00BE                __size_of_gagne 012A               _lcd_lireDonnees 6970  
         lcd_wrData@caractere 00B6   __size_of_metOuEnleveDrapeau 0136                __size_of_srand 0010  
               ??_rempliMines 00CA               _lcd_curseurHome 697E                ___wmul@product 00B8  
      __end_of_initialisation 6A96                    ?_getAnalog 00B4              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 004E                    ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8  
                ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4  
                   copy_data0 6CD8                     copy_data1 6CF8                      __Hparam0 0000  
      __size_of_lcd_ecritChar 0054                      __Lparam0 0000               ?_initialisation 00B4  
         __end_of_rempliMines 758E                  ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000  
                rempliMines@i 00CF                  rempliMines@j 00D0                  rempliMines@x 00CD  
                rempliMines@y 00CE            __end_of_lcd_gotoXY 6ED6            __end_of_lcd_wrData 6A62  
            __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00BB  
            __size_of_deplace 017A       __end_of_lcd_lireDonnees 6976                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 6986                      __ptext10 6D22                      __ptext11 6ED6  
                    __ptext20 79FC                      __ptext12 697E                      __ptext21 6C6A  
                    __ptext13 6A62                      __ptext30 6AD6                      __ptext22 6C10  
                    __ptext14 6986                      __ptext31 6970                      __ptext23 6B18  
                    __ptext15 6F78                      __ptext24 6B66                      __ptext16 71D2  
                    __ptext25 6A2E                      __ptext17 76EC                      __ptext26 6E64  
                    __ptext18 6A02                      __ptext27 6D8C                      __ptext19 7866  
                    __ptext28 6976                      __ptext29 6996             metToucheCombien@i 00C9  
           metToucheCombien@j 00CA                      _lcd_busy 6AD6                      _lcd_init 69B2  
          __end_of_initTabVue 7024      calculToucheCombien@ligne 00BA                      _m_tabVue 0100  
               __size_of_main 00FC                 __size_of_rand 0056                   gagne@pMines 00B4  
                    deplace@x 00B9                      deplace@y 00BB                   ??_getAnalog 00B4  
       __end_of_afficheTabVue 6CC4                      main@posX 00D4                      main@posY 00D6  
                 ??_lcd_wrCom 00B6                 _lcd_ecritChar 6B66                afficheTabVue@i 00BC  
               _lcd_initCGRam 6ED6                   _rempliMines 7432          calculToucheCombien@i 00C2  
        calculToucheCombien@j 00C4     __size_of_metToucheCombien 015E                _lcd_putMessage 6B18  
              ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 79FC  
            ?_lcd_curseurHome 00B4      __size_of_afficheTabMines 005A                ?_lcd_initCGRam 00B4  
         ?_enleveTuilesAutour 00BD             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 6B66  
