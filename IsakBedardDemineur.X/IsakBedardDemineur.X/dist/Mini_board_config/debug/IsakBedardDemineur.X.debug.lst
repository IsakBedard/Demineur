

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 13:41:17 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    36  0000                     
    37                           ; Version 2.10
    38                           ; Generated 31/07/2019 GMT
    39                           ; 
    40                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F45K20 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataBANK0
    73  000DBC                     __pidataBANK0:
    74                           	opt callstack 0
    75                           
    76                           ;initializer for _randx
    77  000DBC  0001               	dw	1
    78  000DBE  0000               	dw	0
    79                           
    80                           	psect	idataBANK1
    81  000CAA                     __pidataBANK1:
    82                           	opt callstack 0
    83                           
    84                           ;initializer for _matCGRAM
    85  000CAA  08                 	db	8
    86  000CAB  04                 	db	4
    87  000CAC  04                 	db	4
    88  000CAD  0A                 	db	10
    89  000CAE  11                 	db	17
    90  000CAF  1F                 	db	31
    91  000CB0  11                 	db	17
    92  000CB1  00                 	db	0
    93  000CB2  1F                 	db	31
    94  000CB3  1B                 	db	27
    95  000CB4  11                 	db	17
    96  000CB5  11                 	db	17
    97  000CB6  11                 	db	17
    98  000CB7  11                 	db	17
    99  000CB8  1B                 	db	27
   100  000CB9  1F                 	db	31
   101  000CBA  00                 	db	0
   102  000CBB  15                 	db	21
   103  000CBC  0E                 	db	14
   104  000CBD  1F                 	db	31
   105  000CBE  1F                 	db	31
   106  000CBF  0E                 	db	14
   107  000CC0  15                 	db	21
   108  000CC1  00                 	db	0
   109  000CC2  0E                 	db	14
   110  000CC3  11                 	db	17
   111  000CC4  15                 	db	21
   112  000CC5  15                 	db	21
   113  000CC6  15                 	db	21
   114  000CC7  0E                 	db	14
   115  000CC8  15                 	db	21
   116  000CC9  04                 	db	4
   117  000CCA  04                 	db	4
   118  000CCB  04                 	db	4
   119  000CCC  04                 	db	4
   120  000CCD  04                 	db	4
   121  000CCE  0E                 	db	14
   122  000CCF  0E                 	db	14
   123  000CD0  1B                 	db	27
   124  000CD1  11                 	db	17
   125  000CD2  04                 	db	4
   126  000CD3  0A                 	db	10
   127  000CD4  0E                 	db	14
   128  000CD5  11                 	db	17
   129  000CD6  1F                 	db	31
   130  000CD7  10                 	db	16
   131  000CD8  0E                 	db	14
   132  000CD9  00                 	db	0
   133  000CDA  08                 	db	8
   134  000CDB  04                 	db	4
   135  000CDC  0E                 	db	14
   136  000CDD  01                 	db	1
   137  000CDE  0F                 	db	15
   138  000CDF  11                 	db	17
   139  000CE0  0F                 	db	15
   140  000CE1  00                 	db	0
   141  000CE2  04                 	db	4
   142  000CE3  0A                 	db	10
   143  000CE4  0E                 	db	14
   144  000CE5  01                 	db	1
   145  000CE6  0F                 	db	15
   146  000CE7  11                 	db	17
   147  000CE8  0F                 	db	15
   148  000CE9  00                 	db	0
   149  0000                     _TRISCbits	set	3988
   150  0000                     _PORTAbits	set	3968
   151  0000                     _PORTD	set	3971
   152  0000                     _ANSELbits	set	3966
   153  0000                     _TRISA	set	3986
   154  0000                     _ANSEL	set	3966
   155  0000                     _TRISB	set	3987
   156  0000                     _ANSELH	set	3967
   157  0000                     _TRISD	set	3989
   158  0000                     _TMR1	set	4046
   159  0000                     _RCREG	set	4014
   160  0000                     _TXREG	set	4013
   161  0000                     _RCSTAbits	set	4011
   162  0000                     _TXSTAbits	set	4012
   163  0000                     _BAUDCONbits	set	4024
   164  0000                     _SPBRG	set	4015
   165  0000                     _SPBRGH	set	4016
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADCON1	set	4033
   168  0000                     _ADCON0bits	set	4034
   169  0000                     _T1CONbits	set	4045
   170  0000                     _RCIF	set	31989
   171                           
   172                           	psect	smallconst
   173  000600                     __psmallconst:
   174                           	opt callstack 0
   175  000600  00                 	db	0
   176  000601                     STR_1:
   177                           
   178                           ; BSR set to: 0
   179  000601  4C                 	db	76	;'L'
   180  000602  41                 	db	65	;'A'
   181  000603  42                 	db	66	;'B'
   182  000604  36                 	db	54	;'6'
   183  000605  20                 	db	32
   184  000606  49                 	db	73	;'I'
   185  000607  73                 	db	115	;'s'
   186  000608  61                 	db	97	;'a'
   187  000609  6B                 	db	107	;'k'
   188  00060A  20                 	db	32
   189  00060B  42                 	db	66	;'B'
   190  00060C  65                 	db	101	;'e'
   191  00060D  64                 	db	100	;'d'
   192  00060E  61                 	db	97	;'a'
   193  00060F  72                 	db	114	;'r'
   194  000610  64                 	db	100	;'d'
   195  000611  00                 	db	0
   196                           
   197                           ; #config settings
   198  000612  00                 	db	0	; dummy byte at the end
   199  0000                     
   200                           	psect	cinit
   201  000B1E                     __pcinit:
   202                           	opt callstack 0
   203  000B1E                     start_initialization:
   204                           	opt callstack 0
   205  000B1E                     __initialization:
   206                           	opt callstack 0
   207                           
   208                           ; Initialize objects allocated to BANK1 (64 bytes)
   209                           ; load TBLPTR registers with __pidataBANK1
   210  000B1E  0EAA               	movlw	low __pidataBANK1
   211  000B20  6EF6               	movwf	tblptrl,c
   212  000B22  0E0C               	movlw	high __pidataBANK1
   213  000B24  6EF7               	movwf	tblptrh,c
   214  000B26  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   215  000B28  6EF8               	movwf	tblptru,c
   216  000B2A  EE01  F054         	lfsr	0,__pdataBANK1
   217  000B2E  EE10 F040          	lfsr	1,64
   218  000B32                     copy_data0:
   219  000B32  0009               	tblrd		*+
   220  000B34  CFF5 FFEE          	movff	tablat,postinc0
   221  000B38  50E5               	movf	postdec1,w,c
   222  000B3A  50E1               	movf	fsr1l,w,c
   223  000B3C  E1FA               	bnz	copy_data0
   224                           
   225                           ; Initialize objects allocated to BANK0 (4 bytes)
   226                           ; load TBLPTR registers with __pidataBANK0
   227  000B3E  0EBC               	movlw	low __pidataBANK0
   228  000B40  6EF6               	movwf	tblptrl,c
   229  000B42  0E0D               	movlw	high __pidataBANK0
   230  000B44  6EF7               	movwf	tblptrh,c
   231  000B46  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   232  000B48  6EF8               	movwf	tblptru,c
   233  000B4A  EE00  F0D2         	lfsr	0,__pdataBANK0
   234  000B4E  EE10 F004          	lfsr	1,4
   235  000B52                     copy_data1:
   236  000B52  0009               	tblrd		*+
   237  000B54  CFF5 FFEE          	movff	tablat,postinc0
   238  000B58  50E5               	movf	postdec1,w,c
   239  000B5A  50E1               	movf	fsr1l,w,c
   240  000B5C  E1FA               	bnz	copy_data1
   241                           
   242                           ; Clear objects allocated to BANK1 (84 bytes)
   243  000B5E  EE01  F000         	lfsr	0,__pbssBANK1
   244  000B62  0E54               	movlw	84
   245  000B64                     clear_0:
   246  000B64  6AEE               	clrf	postinc0,c
   247  000B66  06E8               	decf	wreg,f,c
   248  000B68  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BANK0 (84 bytes)
   251  000B6A  EE00  F060         	lfsr	0,__pbssBANK0
   252  000B6E  0E54               	movlw	84
   253  000B70                     clear_1:
   254  000B70  6AEE               	clrf	postinc0,c
   255  000B72  06E8               	decf	wreg,f,c
   256  000B74  E1FD               	bnz	clear_1
   257  000B76                     end_of_initialization:
   258                           	opt callstack 0
   259  000B76                     __end_of__initialization:
   260                           	opt callstack 0
   261  000B76  0100               	movlb	0
   262  000B78  EF13  F006         	goto	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  000060                     __pbssBANK0:
   266                           	opt callstack 0
   267  000060                     _m_tabMines:
   268                           	opt callstack 0
   269  000060                     	ds	84
   270                           
   271                           	psect	dataBANK0
   272  0000D2                     __pdataBANK0:
   273                           	opt callstack 0
   274  0000D2                     _randx:
   275                           	opt callstack 0
   276  0000D2                     	ds	4
   277                           
   278                           	psect	bssBANK1
   279  000100                     __pbssBANK1:
   280                           	opt callstack 0
   281  000100                     _m_tabVue:
   282                           	opt callstack 0
   283  000100                     	ds	84
   284                           
   285                           	psect	dataBANK1
   286  000154                     __pdataBANK1:
   287                           	opt callstack 0
   288  000154                     _matCGRAM:
   289                           	opt callstack 0
   290  000154                     	ds	64
   291                           
   292                           	psect	cstackBANK0
   293  0000B4                     __pcstackBANK0:
   294                           	opt callstack 0
   295  0000B4                     ??_initTabVue:
   296  0000B4                     ??_lcd_ecrireDonnees:
   297  0000B4                     ??_lcd_busy:
   298  0000B4                     ?___lmul:
   299                           	opt callstack 0
   300  0000B4                     srand@x:
   301                           	opt callstack 0
   302  0000B4                     ___lmul@multiplier:
   303                           	opt callstack 0
   304                           
   305                           ; 4 bytes @ 0x0
   306  0000B4                     	ds	1
   307  0000B5                     lcd_ecrireDonnees@donnee:
   308                           	opt callstack 0
   309  0000B5                     lcd_busy@adresse:
   310                           	opt callstack 0
   311                           
   312                           ; 1 bytes @ 0x1
   313  0000B5                     	ds	1
   314  0000B6                     ??_lcd_resetSequence:
   315  0000B6                     initTabVue@j:
   316                           	opt callstack 0
   317  0000B6                     lcd_wrCom@commande:
   318                           	opt callstack 0
   319  0000B6                     lcd_wrData@caractere:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0x2
   323  0000B6                     	ds	1
   324  0000B7                     ??_lcd_initCGRam:
   325  0000B7                     initTabVue@i:
   326                           	opt callstack 0
   327  0000B7                     lcd_ecritChar@car:
   328                           	opt callstack 0
   329                           
   330                           ; 1 bytes @ 0x3
   331  0000B7                     	ds	1
   332  0000B8                     lcd_ecritChar@posRam:
   333                           	opt callstack 0
   334  0000B8                     ___lmul@multiplicand:
   335                           	opt callstack 0
   336                           
   337                           ; 4 bytes @ 0x4
   338  0000B8                     	ds	1
   339  0000B9                     lcd_initCGRam@i:
   340                           	opt callstack 0
   341  0000B9                     lcd_putMessage@chaine:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x5
   345  0000B9                     	ds	1
   346  0000BA                     lcd_initCGRam@j:
   347                           	opt callstack 0
   348                           
   349                           ; 1 bytes @ 0x6
   350  0000BA                     	ds	1
   351  0000BB                     ??_lcd_putMessage:
   352                           
   353                           ; 1 bytes @ 0x7
   354  0000BB                     	ds	1
   355  0000BC                     ___lmul@product:
   356                           	opt callstack 0
   357                           
   358                           ; 4 bytes @ 0x8
   359  0000BC                     	ds	1
   360  0000BD                     lcd_putMessage@j:
   361                           	opt callstack 0
   362                           
   363                           ; 1 bytes @ 0x9
   364  0000BD                     	ds	3
   365  0000C0                     ?_rand:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0xC
   369  0000C0                     	ds	2
   370  0000C2                     ?___awmod:
   371                           	opt callstack 0
   372  0000C2                     ___awmod@dividend:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0xE
   376  0000C2                     	ds	2
   377  0000C4                     ___awmod@divisor:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x10
   381  0000C4                     	ds	2
   382  0000C6                     ___awmod@counter:
   383                           	opt callstack 0
   384                           
   385                           ; 1 bytes @ 0x12
   386  0000C6                     	ds	1
   387  0000C7                     ___awmod@sign:
   388                           	opt callstack 0
   389                           
   390                           ; 1 bytes @ 0x13
   391  0000C7                     	ds	1
   392  0000C8                     rempliMines@nb:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x14
   396  0000C8                     	ds	2
   397  0000CA                     ??_rempliMines:
   398                           
   399                           ; 1 bytes @ 0x16
   400  0000CA                     	ds	3
   401  0000CD                     rempliMines@x:
   402                           	opt callstack 0
   403                           
   404                           ; 1 bytes @ 0x19
   405  0000CD                     	ds	1
   406  0000CE                     rempliMines@y:
   407                           	opt callstack 0
   408                           
   409                           ; 1 bytes @ 0x1A
   410  0000CE                     	ds	1
   411  0000CF                     rempliMines@i:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x1B
   415  0000CF                     	ds	1
   416  0000D0                     rempliMines@j:
   417                           	opt callstack 0
   418                           
   419                           ; 1 bytes @ 0x1C
   420  0000D0                     	ds	1
   421  0000D1                     ??_main:
   422                           
   423                           ; 1 bytes @ 0x1D
   424  0000D1                     	ds	1
   425                           
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 47 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   445 ;;      Params:         0       0       0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0       0       0
   447 ;;      Temps:          0       1       0       0       0       0       0
   448 ;;      Totals:         0       1       0       0       0       0       0
   449 ;;Total ram usage:        1 bytes
   450 ;; Hardware stack levels required when called:    6
   451 ;; This function calls:
   452 ;;		_initTabVue
   453 ;;		_initialisation
   454 ;;		_lcd_init
   455 ;;		_lcd_putMessage
   456 ;;		_rempliMines
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text0
   463  000C26                     __ptext0:
   464                           	opt callstack 0
   465  000C26                     _main:
   466                           	opt callstack 25
   467  000C26                     
   468                           ;main.c: 49: initialisation();
   469  000C26  EC8F  F006         	call	_initialisation	;wreg free
   470  000C2A                     
   471                           ;main.c: 50: lcd_init();
   472  000C2A  ECA9  F006         	call	_lcd_init	;wreg free
   473  000C2E                     
   474                           ;main.c: 51: lcd_putMessage("LAB6 Isak Bedard");
   475  000C2E  0E01               	movlw	low STR_1
   476  000C30  0100               	movlb	0	; force () banked
   477  000C32  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
   478  000C34  0E06               	movlw	high STR_1
   479  000C36  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   480  000C38  ECEE  F004         	call	_lcd_putMessage	;wreg free
   481  000C3C                     
   482                           ;main.c: 52: initTabVue();
   483  000C3C  EC11  F004         	call	_initTabVue	;wreg free
   484  000C40                     
   485                           ;main.c: 53: rempliMines(1);
   486  000C40  0E00               	movlw	0
   487  000C42  0100               	movlb	0	; force () banked
   488  000C44  6FC9               	movwf	(rempliMines@nb+1)& (0+255),b
   489  000C46  0E01               	movlw	1
   490  000C48  6FC8               	movwf	rempliMines@nb& (0+255),b
   491  000C4A  EC0A  F003         	call	_rempliMines	;wreg free
   492  000C4E                     l1766:
   493                           
   494                           ;main.c: 55: {;main.c: 56: _delay((unsigned long)((100)*(1000000/4000.0)));
   495  000C4E  0E21               	movlw	33
   496  000C50  0100               	movlb	0	; force () banked
   497  000C52  6FD1               	movwf	??_main& (0+255),b
   498  000C54  0E76               	movlw	118
   499  000C56                     u607:
   500  000C56  2EE8               	decfsz	wreg,f,c
   501  000C58  D7FE               	bra	u607
   502  000C5A  2FD1               	decfsz	??_main& (0+255),f,b
   503  000C5C  D7FC               	bra	u607
   504  000C5E  F000               	nop	
   505  000C60  EF27  F006         	goto	l1766
   506  000C64  EF00  F000         	goto	start
   507  000C68                     __end_of_main:
   508                           	opt callstack 0
   509                           
   510 ;; *************** function _rempliMines *****************
   511 ;; Defined at:
   512 ;;		line 112 in file "main.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  nb              2   20[BANK0 ] int 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  j               1   28[BANK0 ] unsigned char 
   517 ;;  i               1   27[BANK0 ] unsigned char 
   518 ;;  y               1   26[BANK0 ] unsigned char 
   519 ;;  x               1   25[BANK0 ] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   529 ;;      Params:         0       2       0       0       0       0       0
   530 ;;      Locals:         0       4       0       0       0       0       0
   531 ;;      Temps:          0       3       0       0       0       0       0
   532 ;;      Totals:         0       9       0       0       0       0       0
   533 ;;Total ram usage:        9 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; Hardware stack levels required when called:    2
   536 ;; This function calls:
   537 ;;		___awmod
   538 ;;		_rand
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text1
   545  000614                     __ptext1:
   546                           	opt callstack 0
   547  000614                     _rempliMines:
   548                           	opt callstack 28
   549  000614                     
   550                           ;main.c: 114: char x,y;;main.c: 116: for (char i = 0; i < 4; i++)
   551  000614  0E00               	movlw	0
   552  000616  0100               	movlb	0	; force () banked
   553  000618  6FCF               	movwf	rempliMines@i& (0+255),b
   554  00061A                     
   555                           ; BSR set to: 0
   556  00061A  0E03               	movlw	3
   557  00061C  0100               	movlb	0	; force () banked
   558  00061E  65CF               	cpfsgt	rempliMines@i& (0+255),b
   559  000620  EF14  F003         	goto	u531
   560  000624  EF16  F003         	goto	u530
   561  000628                     u531:
   562  000628  EF18  F003         	goto	l1708
   563  00062C                     u530:
   564  00062C  EFA9  F003         	goto	l1732
   565  000630                     l1708:
   566                           
   567                           ; BSR set to: 0
   568                           ;main.c: 117: {;main.c: 118: for(char j=0;j<(20);j++)
   569  000630  0E00               	movlw	0
   570  000632  0100               	movlb	0	; force () banked
   571  000634  6FD0               	movwf	rempliMines@j& (0+255),b
   572  000636                     
   573                           ; BSR set to: 0
   574  000636  0E13               	movlw	19
   575  000638  0100               	movlb	0	; force () banked
   576  00063A  65D0               	cpfsgt	rempliMines@j& (0+255),b
   577  00063C  EF22  F003         	goto	u541
   578  000640  EF24  F003         	goto	u540
   579  000644                     u541:
   580  000644  EF26  F003         	goto	l1714
   581  000648                     u540:
   582  000648  EF49  F003         	goto	l1720
   583  00064C                     l1714:
   584                           
   585                           ; BSR set to: 0
   586                           ;main.c: 119: {;main.c: 120: m_tabMines[i][j]=' ';
   587  00064C  0100               	movlb	0	; force () banked
   588  00064E  51CF               	movf	rempliMines@i& (0+255),w,b
   589  000650  0D15               	mullw	21
   590  000652  0E60               	movlw	low _m_tabMines
   591  000654  0100               	movlb	0	; force () banked
   592  000656  6FCA               	movwf	??_rempliMines& (0+255),b
   593  000658  0E00               	movlw	high _m_tabMines
   594  00065A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   595  00065C  50F3               	movf	243,w,c
   596  00065E  27CA               	addwf	??_rempliMines& (0+255),f,b
   597  000660  50F4               	movf	244,w,c
   598  000662  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   599  000664  0100               	movlb	0	; force () banked
   600  000666  51D0               	movf	rempliMines@j& (0+255),w,b
   601  000668  0100               	movlb	0	; force () banked
   602  00066A  25CA               	addwf	??_rempliMines& (0+255),w,b
   603  00066C  6ED9               	movwf	fsr2l,c
   604  00066E  0100               	movlb	0	; force () banked
   605  000670  0E00               	movlw	0
   606  000672  0100               	movlb	0	; force () banked
   607  000674  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   608  000676  6EDA               	movwf	fsr2h,c
   609  000678  0E20               	movlw	32
   610  00067A  6EDF               	movwf	indf2,c
   611  00067C                     
   612                           ; BSR set to: 0
   613  00067C  0100               	movlb	0	; force () banked
   614  00067E  2BD0               	incf	rempliMines@j& (0+255),f,b
   615  000680                     
   616                           ; BSR set to: 0
   617  000680  0E13               	movlw	19
   618  000682  0100               	movlb	0	; force () banked
   619  000684  65D0               	cpfsgt	rempliMines@j& (0+255),b
   620  000686  EF47  F003         	goto	u551
   621  00068A  EF49  F003         	goto	u550
   622  00068E                     u551:
   623  00068E  EF26  F003         	goto	l1714
   624  000692                     u550:
   625  000692                     l1720:
   626                           
   627                           ; BSR set to: 0
   628  000692  0100               	movlb	0	; force () banked
   629  000694  2BCF               	incf	rempliMines@i& (0+255),f,b
   630  000696                     
   631                           ; BSR set to: 0
   632  000696  0E03               	movlw	3
   633  000698  0100               	movlb	0	; force () banked
   634  00069A  65CF               	cpfsgt	rempliMines@i& (0+255),b
   635  00069C  EF52  F003         	goto	u561
   636  0006A0  EF54  F003         	goto	u560
   637  0006A4                     u561:
   638  0006A4  EF18  F003         	goto	l1708
   639  0006A8                     u560:
   640  0006A8  EFA9  F003         	goto	l1732
   641  0006AC                     l1724:
   642                           
   643                           ; BSR set to: 0
   644                           ;main.c: 124: {;main.c: 125: x=rand()%20;
   645  0006AC  ECBE  F005         	call	_rand	;wreg free
   646  0006B0  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   647  0006B4  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   648  0006B8  0E00               	movlw	0
   649  0006BA  0100               	movlb	0	; force () banked
   650  0006BC  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   651  0006BE  0E14               	movlw	20
   652  0006C0  6FC4               	movwf	___awmod@divisor& (0+255),b
   653  0006C2  ECB8  F003         	call	___awmod	;wreg free
   654  0006C6  0100               	movlb	0	; force () banked
   655  0006C8  51C2               	movf	?___awmod& (0+255),w,b
   656  0006CA  0100               	movlb	0	; force () banked
   657  0006CC  6FCD               	movwf	rempliMines@x& (0+255),b
   658                           
   659                           ;main.c: 126: y=rand()%4;
   660  0006CE  ECBE  F005         	call	_rand	;wreg free
   661  0006D2  0100               	movlb	0	; force () banked
   662  0006D4  51C0               	movf	?_rand& (0+255),w,b
   663  0006D6  0B03               	andlw	3
   664  0006D8  0100               	movlb	0	; force () banked
   665  0006DA  6FCE               	movwf	rempliMines@y& (0+255),b
   666  0006DC                     
   667                           ; BSR set to: 0
   668                           ;main.c: 127: if (m_tabMines[y][x]!=2)
   669  0006DC  0100               	movlb	0	; force () banked
   670  0006DE  51CE               	movf	rempliMines@y& (0+255),w,b
   671  0006E0  0D15               	mullw	21
   672  0006E2  0E60               	movlw	low _m_tabMines
   673  0006E4  0100               	movlb	0	; force () banked
   674  0006E6  6FCA               	movwf	??_rempliMines& (0+255),b
   675  0006E8  0E00               	movlw	high _m_tabMines
   676  0006EA  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   677  0006EC  50F3               	movf	243,w,c
   678  0006EE  27CA               	addwf	??_rempliMines& (0+255),f,b
   679  0006F0  50F4               	movf	244,w,c
   680  0006F2  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   681  0006F4  0100               	movlb	0	; force () banked
   682  0006F6  51CD               	movf	rempliMines@x& (0+255),w,b
   683  0006F8  0100               	movlb	0	; force () banked
   684  0006FA  25CA               	addwf	??_rempliMines& (0+255),w,b
   685  0006FC  6ED9               	movwf	fsr2l,c
   686  0006FE  0100               	movlb	0	; force () banked
   687  000700  0E00               	movlw	0
   688  000702  0100               	movlb	0	; force () banked
   689  000704  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   690  000706  6EDA               	movwf	fsr2h,c
   691  000708  0E02               	movlw	2
   692  00070A  18DE               	xorwf	postinc2,w,c
   693  00070C  B4D8               	btfsc	status,2,c
   694  00070E  EF8B  F003         	goto	u571
   695  000712  EF8D  F003         	goto	u570
   696  000716                     u571:
   697  000716  EFA9  F003         	goto	l1732
   698  00071A                     u570:
   699  00071A                     
   700                           ; BSR set to: 0
   701                           ;main.c: 128: {;main.c: 129: m_tabMines[y][x]=2;
   702  00071A  0100               	movlb	0	; force () banked
   703  00071C  51CE               	movf	rempliMines@y& (0+255),w,b
   704  00071E  0D15               	mullw	21
   705  000720  0E60               	movlw	low _m_tabMines
   706  000722  0100               	movlb	0	; force () banked
   707  000724  6FCA               	movwf	??_rempliMines& (0+255),b
   708  000726  0E00               	movlw	high _m_tabMines
   709  000728  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   710  00072A  50F3               	movf	243,w,c
   711  00072C  27CA               	addwf	??_rempliMines& (0+255),f,b
   712  00072E  50F4               	movf	244,w,c
   713  000730  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   714  000732  0100               	movlb	0	; force () banked
   715  000734  51CD               	movf	rempliMines@x& (0+255),w,b
   716  000736  0100               	movlb	0	; force () banked
   717  000738  25CA               	addwf	??_rempliMines& (0+255),w,b
   718  00073A  6ED9               	movwf	fsr2l,c
   719  00073C  0100               	movlb	0	; force () banked
   720  00073E  0E00               	movlw	0
   721  000740  0100               	movlb	0	; force () banked
   722  000742  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   723  000744  6EDA               	movwf	fsr2h,c
   724  000746  0E02               	movlw	2
   725  000748  6EDF               	movwf	indf2,c
   726  00074A                     
   727                           ; BSR set to: 0
   728                           ;main.c: 130: nb--;
   729  00074A  0100               	movlb	0	; force () banked
   730  00074C  07C8               	decf	rempliMines@nb& (0+255),f,b
   731  00074E  A0D8               	btfss	status,0,c
   732  000750  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   733  000752                     l1732:
   734                           
   735                           ; BSR set to: 0
   736  000752  0100               	movlb	0	; force () banked
   737  000754  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   738  000756  EFB7  F003         	goto	u580
   739  00075A  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   740  00075C  E106               	bnz	u581
   741  00075E  05C8               	decf	rempliMines@nb& (0+255),w,b
   742  000760  B0D8               	btfsc	status,0,c
   743  000762  EFB5  F003         	goto	u581
   744  000766  EFB7  F003         	goto	u580
   745  00076A                     u581:
   746  00076A  EF56  F003         	goto	l1724
   747  00076E                     u580:
   748  00076E                     
   749                           ; BSR set to: 0
   750  00076E  0012               	return		;funcret
   751  000770                     __end_of_rempliMines:
   752                           	opt callstack 0
   753                           
   754 ;; *************** function _rand *****************
   755 ;; Defined at:
   756 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  2   12[BANK0 ] int 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   770 ;;      Params:         0       2       0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0
   773 ;;      Totals:         0       2       0       0       0       0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    1
   777 ;; This function calls:
   778 ;;		___lmul
   779 ;; This function is called by:
   780 ;;		_rempliMines
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text2
   785  000B7C                     __ptext2:
   786                           	opt callstack 0
   787  000B7C                     _rand:
   788                           	opt callstack 28
   789  000B7C  C0D2  F0B4         	movff	_randx,___lmul@multiplier
   790  000B80  C0D3  F0B5         	movff	_randx+1,___lmul@multiplier+1
   791  000B84  C0D4  F0B6         	movff	_randx+2,___lmul@multiplier+2
   792  000B88  C0D5  F0B7         	movff	_randx+3,___lmul@multiplier+3
   793  000B8C  0E6D               	movlw	109
   794  000B8E  0100               	movlb	0	; () banked
   795  000B90  6FB8               	movwf	___lmul@multiplicand& (0+255),b
   796  000B92  0E4E               	movlw	78
   797  000B94  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   798  000B96  0EC6               	movlw	198
   799  000B98  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   800  000B9A  0E41               	movlw	65
   801  000B9C  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   802  000B9E  ECB8  F004         	call	___lmul	;wreg free
   803  000BA2  C0B4  F0D2         	movff	?___lmul,_randx
   804  000BA6  C0B5  F0D3         	movff	?___lmul+1,_randx+1
   805  000BAA  C0B6  F0D4         	movff	?___lmul+2,_randx+2
   806  000BAE  C0B7  F0D5         	movff	?___lmul+3,_randx+3
   807  000BB2  0E39               	movlw	57
   808  000BB4  0100               	movlb	0	; () banked
   809  000BB6  27D2               	addwf	_randx& (0+255),f,b
   810  000BB8  0E30               	movlw	48
   811  000BBA  23D3               	addwfc	(_randx+1)& (0+255),f,b
   812  000BBC  0E00               	movlw	0
   813  000BBE  23D4               	addwfc	(_randx+2)& (0+255),f,b
   814  000BC0  0E00               	movlw	0
   815  000BC2  23D5               	addwfc	(_randx+3)& (0+255),f,b
   816  000BC4                     
   817                           ; BSR set to: 0
   818  000BC4  0EFF               	movlw	255
   819  000BC6  15D4               	andwf	(_randx+2)& (0+255),w,b
   820  000BC8  6FC0               	movwf	?_rand& (0+255),b
   821  000BCA  0E7F               	movlw	127
   822  000BCC  15D5               	andwf	(_randx+3)& (0+255),w,b
   823  000BCE  6FC1               	movwf	(?_rand+1)& (0+255),b
   824  000BD0                     
   825                           ; BSR set to: 0
   826  000BD0  0012               	return		;funcret
   827  000BD2                     __end_of_rand:
   828                           	opt callstack 0
   829                           
   830 ;; *************** function ___lmul *****************
   831 ;; Defined at:
   832 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  multiplier      4    0[BANK0 ] unsigned long 
   835 ;;  multiplicand    4    4[BANK0 ] unsigned long 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  product         4    8[BANK0 ] unsigned long 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  4    0[BANK0 ] unsigned long 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   847 ;;      Params:         0       8       0       0       0       0       0
   848 ;;      Locals:         0       4       0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0
   850 ;;      Totals:         0      12       0       0       0       0       0
   851 ;;Total ram usage:       12 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_rand
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text3
   861  000970                     __ptext3:
   862                           	opt callstack 0
   863  000970                     ___lmul:
   864                           	opt callstack 28
   865  000970  0E00               	movlw	0
   866  000972  0100               	movlb	0	; () banked
   867  000974  6FBC               	movwf	___lmul@product& (0+255),b
   868  000976  0E00               	movlw	0
   869  000978  6FBD               	movwf	(___lmul@product+1)& (0+255),b
   870  00097A  0E00               	movlw	0
   871  00097C  6FBE               	movwf	(___lmul@product+2)& (0+255),b
   872  00097E  0E00               	movlw	0
   873  000980  6FBF               	movwf	(___lmul@product+3)& (0+255),b
   874  000982                     l1520:
   875                           
   876                           ; BSR set to: 0
   877  000982  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
   878  000984  EFC6  F004         	goto	u361
   879  000988  EFC8  F004         	goto	u360
   880  00098C                     u361:
   881  00098C  EFD0  F004         	goto	l1524
   882  000990                     u360:
   883  000990                     
   884                           ; BSR set to: 0
   885  000990  51B8               	movf	___lmul@multiplicand& (0+255),w,b
   886  000992  27BC               	addwf	___lmul@product& (0+255),f,b
   887  000994  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
   888  000996  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
   889  000998  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
   890  00099A  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
   891  00099C  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
   892  00099E  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
   893  0009A0                     l1524:
   894                           
   895                           ; BSR set to: 0
   896  0009A0  90D8               	bcf	status,0,c
   897  0009A2  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
   898  0009A4  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
   899  0009A6  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
   900  0009A8  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
   901  0009AA                     
   902                           ; BSR set to: 0
   903  0009AA  90D8               	bcf	status,0,c
   904  0009AC  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
   905  0009AE  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
   906  0009B0  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
   907  0009B2  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
   908  0009B4  51B4               	movf	___lmul@multiplier& (0+255),w,b
   909  0009B6  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
   910  0009B8  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
   911  0009BA  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
   912  0009BC  A4D8               	btfss	status,2,c
   913  0009BE  EFE3  F004         	goto	u371
   914  0009C2  EFE5  F004         	goto	u370
   915  0009C6                     u371:
   916  0009C6  EFC1  F004         	goto	l1520
   917  0009CA                     u370:
   918  0009CA                     
   919                           ; BSR set to: 0
   920  0009CA  C0BC  F0B4         	movff	___lmul@product,?___lmul
   921  0009CE  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
   922  0009D2  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
   923  0009D6  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
   924  0009DA                     
   925                           ; BSR set to: 0
   926  0009DA  0012               	return		;funcret
   927  0009DC                     __end_of___lmul:
   928                           	opt callstack 0
   929                           
   930 ;; *************** function ___awmod *****************
   931 ;; Defined at:
   932 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  dividend        2   14[BANK0 ] int 
   935 ;;  divisor         2   16[BANK0 ] int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  sign            1   19[BANK0 ] unsigned char 
   938 ;;  counter         1   18[BANK0 ] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2   14[BANK0 ] int 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   948 ;;      Params:         0       4       0       0       0       0       0
   949 ;;      Locals:         0       2       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0
   951 ;;      Totals:         0       6       0       0       0       0       0
   952 ;;Total ram usage:        6 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_rempliMines
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text4
   962  000770                     __ptext4:
   963                           	opt callstack 0
   964  000770                     ___awmod:
   965                           	opt callstack 29
   966  000770  0E00               	movlw	0
   967  000772  0100               	movlb	0	; () banked
   968  000774  6FC7               	movwf	___awmod@sign& (0+255),b
   969  000776                     
   970                           ; BSR set to: 0
   971  000776  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
   972  000778  EFC2  F003         	goto	u420
   973  00077C  EFC0  F003         	goto	u421
   974  000780                     u421:
   975  000780  EFC8  F003         	goto	l1618
   976  000784                     u420:
   977  000784                     
   978                           ; BSR set to: 0
   979  000784  6DC2               	negf	___awmod@dividend& (0+255),b
   980  000786  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
   981  000788  B0D8               	btfsc	status,0,c
   982  00078A  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
   983  00078C                     
   984                           ; BSR set to: 0
   985  00078C  0E01               	movlw	1
   986  00078E  6FC7               	movwf	___awmod@sign& (0+255),b
   987  000790                     l1618:
   988                           
   989                           ; BSR set to: 0
   990  000790  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
   991  000792  EFCF  F003         	goto	u430
   992  000796  EFCD  F003         	goto	u431
   993  00079A                     u431:
   994  00079A  EFD3  F003         	goto	l1622
   995  00079E                     u430:
   996  00079E                     
   997                           ; BSR set to: 0
   998  00079E  6DC4               	negf	___awmod@divisor& (0+255),b
   999  0007A0  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1000  0007A2  B0D8               	btfsc	status,0,c
  1001  0007A4  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1002  0007A6                     l1622:
  1003                           
  1004                           ; BSR set to: 0
  1005  0007A6  51C4               	movf	___awmod@divisor& (0+255),w,b
  1006  0007A8  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1007  0007AA  B4D8               	btfsc	status,2,c
  1008  0007AC  EFDA  F003         	goto	u441
  1009  0007B0  EFDC  F003         	goto	u440
  1010  0007B4                     u441:
  1011  0007B4  EF00  F004         	goto	l1638
  1012  0007B8                     u440:
  1013  0007B8                     
  1014                           ; BSR set to: 0
  1015  0007B8  0E01               	movlw	1
  1016  0007BA  6FC6               	movwf	___awmod@counter& (0+255),b
  1017  0007BC  EFE4  F003         	goto	l1628
  1018  0007C0                     l1626:
  1019                           
  1020                           ; BSR set to: 0
  1021  0007C0  90D8               	bcf	status,0,c
  1022  0007C2  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1023  0007C4  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1024  0007C6  2BC6               	incf	___awmod@counter& (0+255),f,b
  1025  0007C8                     l1628:
  1026                           
  1027                           ; BSR set to: 0
  1028  0007C8  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1029  0007CA  EFE9  F003         	goto	u451
  1030  0007CE  EFEB  F003         	goto	u450
  1031  0007D2                     u451:
  1032  0007D2  EFE0  F003         	goto	l1626
  1033  0007D6                     u450:
  1034  0007D6                     l1630:
  1035                           
  1036                           ; BSR set to: 0
  1037  0007D6  51C4               	movf	___awmod@divisor& (0+255),w,b
  1038  0007D8  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1039  0007DA  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1040  0007DC  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1041  0007DE  A0D8               	btfss	status,0,c
  1042  0007E0  EFF4  F003         	goto	u461
  1043  0007E4  EFF6  F003         	goto	u460
  1044  0007E8                     u461:
  1045  0007E8  EFFA  F003         	goto	l1634
  1046  0007EC                     u460:
  1047  0007EC                     
  1048                           ; BSR set to: 0
  1049  0007EC  51C4               	movf	___awmod@divisor& (0+255),w,b
  1050  0007EE  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1051  0007F0  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1052  0007F2  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1053  0007F4                     l1634:
  1054                           
  1055                           ; BSR set to: 0
  1056  0007F4  90D8               	bcf	status,0,c
  1057  0007F6  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1058  0007F8  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1059  0007FA                     
  1060                           ; BSR set to: 0
  1061  0007FA  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1062  0007FC  EFEB  F003         	goto	l1630
  1063  000800                     l1638:
  1064                           
  1065                           ; BSR set to: 0
  1066  000800  51C7               	movf	___awmod@sign& (0+255),w,b
  1067  000802  B4D8               	btfsc	status,2,c
  1068  000804  EF06  F004         	goto	u471
  1069  000808  EF08  F004         	goto	u470
  1070  00080C                     u471:
  1071  00080C  EF0C  F004         	goto	l1642
  1072  000810                     u470:
  1073  000810                     
  1074                           ; BSR set to: 0
  1075  000810  6DC2               	negf	___awmod@dividend& (0+255),b
  1076  000812  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1077  000814  B0D8               	btfsc	status,0,c
  1078  000816  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1079  000818                     l1642:
  1080                           
  1081                           ; BSR set to: 0
  1082  000818  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1083  00081C  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1084  000820                     
  1085                           ; BSR set to: 0
  1086  000820  0012               	return		;funcret
  1087  000822                     __end_of___awmod:
  1088                           	opt callstack 0
  1089                           
  1090 ;; *************** function _lcd_putMessage *****************
  1091 ;; Defined at:
  1092 ;;		line 387 in file "Lcd4Lignes.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
  1095 ;;		 -> STR_1(17), 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  j               1    9[BANK0 ] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1107 ;;      Params:         0       2       0       0       0       0       0
  1108 ;;      Locals:         0       1       0       0       0       0       0
  1109 ;;      Temps:          0       2       0       0       0       0       0
  1110 ;;      Totals:         0       5       0       0       0       0       0
  1111 ;;Total ram usage:        5 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    4
  1114 ;; This function calls:
  1115 ;;		_lcd_ecritChar
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text5
  1122  0009DC                     __ptext5:
  1123                           	opt callstack 0
  1124  0009DC                     _lcd_putMessage:
  1125                           	opt callstack 26
  1126  0009DC                     
  1127                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  1128  0009DC  0E00               	movlw	0
  1129  0009DE  0100               	movlb	0	; force () banked
  1130  0009E0  6FBD               	movwf	lcd_putMessage@j& (0+255),b
  1131  0009E2  EF09  F005         	goto	l1676
  1132  0009E6                     l1672:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  1136  0009E6  0100               	movlb	0	; force () banked
  1137  0009E8  51BD               	movf	lcd_putMessage@j& (0+255),w,b
  1138  0009EA  0100               	movlb	0	; force () banked
  1139  0009EC  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1140  0009EE  0100               	movlb	0	; force () banked
  1141  0009F0  6FBB               	movwf	??_lcd_putMessage& (0+255),b
  1142  0009F2  0E00               	movlw	0
  1143  0009F4  0100               	movlb	0	; force () banked
  1144  0009F6  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1145  0009F8  0100               	movlb	0	; force () banked
  1146  0009FA  6FBC               	movwf	(??_lcd_putMessage+1)& (0+255),b
  1147  0009FC  C0BB  FFF6         	movff	??_lcd_putMessage,tblptrl
  1148  000A00  C0BC  FFF7         	movff	??_lcd_putMessage+1,tblptrh
  1149  000A04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1150  000A04  6AF8               	clrf	tblptru,c
  1151  000A06                     	endif
  1152  000A06                     	if	0	;tblptru may be non-zero
  1153  000A06                     	endif
  1154  000A06  0008               	tblrd		*
  1155  000A08  50F5               	movf	tablat,w,c
  1156  000A0A  ECE9  F005         	call	_lcd_ecritChar
  1157  000A0E  0100               	movlb	0	; force () banked
  1158  000A10  2BBD               	incf	lcd_putMessage@j& (0+255),f,b
  1159  000A12                     l1676:
  1160                           
  1161                           ; BSR set to: 0
  1162  000A12  0100               	movlb	0	; force () banked
  1163  000A14  51BD               	movf	lcd_putMessage@j& (0+255),w,b
  1164  000A16  0100               	movlb	0	; force () banked
  1165  000A18  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1166  000A1A  0100               	movlb	0	; force () banked
  1167  000A1C  6FBB               	movwf	??_lcd_putMessage& (0+255),b
  1168  000A1E  0E00               	movlw	0
  1169  000A20  0100               	movlb	0	; force () banked
  1170  000A22  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1171  000A24  0100               	movlb	0	; force () banked
  1172  000A26  6FBC               	movwf	(??_lcd_putMessage+1)& (0+255),b
  1173  000A28  C0BB  FFF6         	movff	??_lcd_putMessage,tblptrl
  1174  000A2C  C0BC  FFF7         	movff	??_lcd_putMessage+1,tblptrh
  1175  000A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1176  000A30  6AF8               	clrf	tblptru,c
  1177  000A32                     	endif
  1178  000A32                     	if	0	;tblptru may be non-zero
  1179  000A32                     	endif
  1180  000A32  0008               	tblrd		*
  1181  000A34  50F5               	movf	tablat,w,c
  1182  000A36  0900               	iorlw	0
  1183  000A38  A4D8               	btfss	status,2,c
  1184  000A3A  EF21  F005         	goto	u481
  1185  000A3E  EF23  F005         	goto	u480
  1186  000A42                     u481:
  1187  000A42  EFF3  F004         	goto	l1672
  1188  000A46                     u480:
  1189  000A46                     
  1190                           ; BSR set to: 0
  1191  000A46  0012               	return		;funcret
  1192  000A48                     __end_of_lcd_putMessage:
  1193                           	opt callstack 0
  1194                           
  1195 ;; *************** function _lcd_ecritChar *****************
  1196 ;; Defined at:
  1197 ;;		line 359 in file "Lcd4Lignes.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  car             1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  car             1    3[BANK0 ] unsigned char 
  1202 ;;  posRam          1    4[BANK0 ] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1212 ;;      Params:         0       0       0       0       0       0       0
  1213 ;;      Locals:         0       2       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0
  1215 ;;      Totals:         0       2       0       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    3
  1219 ;; This function calls:
  1220 ;;		_lcd_wrCom
  1221 ;;		_lcd_wrData
  1222 ;; This function is called by:
  1223 ;;		_lcd_putMessage
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text6
  1228  000BD2                     __ptext6:
  1229                           	opt callstack 0
  1230  000BD2                     _lcd_ecritChar:
  1231                           	opt callstack 26
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;incstack = 0
  1235                           ;lcd_ecritChar@car stored from wreg
  1236  000BD2  0100               	movlb	0	; force () banked
  1237  000BD4  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  1238  000BD6                     
  1239                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  1240  000BD6  0100               	movlb	0	; force () banked
  1241  000BD8  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  1242  000BDA  EC75  F006         	call	_lcd_wrData
  1243  000BDE  0100               	movlb	0	; force () banked
  1244  000BE0  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  1245                           
  1246                           ;Lcd4Lignes.c: 364: switch(posRam)
  1247  000BE2  EF02  F006         	goto	l1608
  1248  000BE6                     l1600:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  1252  000BE6  0EC0               	movlw	192
  1253  000BE8  EC24  F005         	call	_lcd_wrCom
  1254                           
  1255                           ;Lcd4Lignes.c: 368: break;
  1256  000BEC  EF12  F006         	goto	l163
  1257  000BF0                     l1602:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  1261  000BF0  0E94               	movlw	148
  1262  000BF2  EC24  F005         	call	_lcd_wrCom
  1263                           
  1264                           ;Lcd4Lignes.c: 371: break;
  1265  000BF6  EF12  F006         	goto	l163
  1266  000BFA                     l1604:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  1270  000BFA  0ED4               	movlw	212
  1271  000BFC  EC24  F005         	call	_lcd_wrCom
  1272                           
  1273                           ;Lcd4Lignes.c: 374: break;
  1274  000C00  EF12  F006         	goto	l163
  1275  000C04                     l1608:
  1276                           
  1277                           ; BSR set to: 0
  1278  000C04  0100               	movlb	0	; force () banked
  1279  000C06  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  1280                           
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 3, Range of values is 148 to 212
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte           10     6 (average)
  1286                           ;	Chosen strategy is simple_byte
  1287  000C08  0A94               	xorlw	148	; case 148
  1288  000C0A  B4D8               	btfsc	status,2,c
  1289  000C0C  EFF3  F005         	goto	l1600
  1290  000C10  0A54               	xorlw	84	; case 192
  1291  000C12  B4D8               	btfsc	status,2,c
  1292  000C14  EFFD  F005         	goto	l1604
  1293  000C18  0A14               	xorlw	20	; case 212
  1294  000C1A  B4D8               	btfsc	status,2,c
  1295  000C1C  EFF8  F005         	goto	l1602
  1296  000C20  EF12  F006         	goto	l163
  1297  000C24                     l163:
  1298  000C24  0012               	return		;funcret
  1299  000C26                     __end_of_lcd_ecritChar:
  1300                           	opt callstack 0
  1301                           
  1302 ;; *************** function _lcd_init *****************
  1303 ;; Defined at:
  1304 ;;		line 258 in file "Lcd4Lignes.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         0       0       0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    5
  1325 ;; This function calls:
  1326 ;;		_lcd_initCGRam
  1327 ;;		_lcd_resetSequence
  1328 ;;		_lcd_wrCom
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text7
  1335  000D52                     __ptext7:
  1336                           	opt callstack 0
  1337  000D52                     _lcd_init:
  1338                           	opt callstack 25
  1339  000D52                     
  1340                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1341  000D52  EC5A  F005         	call	_lcd_resetSequence	;wreg free
  1342                           
  1343                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1344  000D56  0E28               	movlw	40
  1345  000D58  EC24  F005         	call	_lcd_wrCom
  1346                           
  1347                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1348  000D5C  0E0F               	movlw	15
  1349  000D5E  EC24  F005         	call	_lcd_wrCom
  1350                           
  1351                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1352  000D62  0E01               	movlw	1
  1353  000D64  EC24  F005         	call	_lcd_wrCom
  1354                           
  1355                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1356  000D68  0E06               	movlw	6
  1357  000D6A  EC24  F005         	call	_lcd_wrCom
  1358                           
  1359                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1360  000D6E  0E80               	movlw	128
  1361  000D70  EC24  F005         	call	_lcd_wrCom
  1362  000D74                     
  1363                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1364  000D74  EC67  F004         	call	_lcd_initCGRam	;wreg free
  1365  000D78  0012               	return		;funcret
  1366  000D7A                     __end_of_lcd_init:
  1367                           	opt callstack 0
  1368                           
  1369 ;; *************** function _lcd_resetSequence *****************
  1370 ;; Defined at:
  1371 ;;		line 221 in file "Lcd4Lignes.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1385 ;;      Params:         0       0       0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0
  1387 ;;      Temps:          0       1       0       0       0       0       0
  1388 ;;      Totals:         0       1       0       0       0       0       0
  1389 ;;Total ram usage:        1 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    1
  1392 ;; This function calls:
  1393 ;;		_lcd_ecrireDonnees
  1394 ;;		_lcd_strobeEnableBit
  1395 ;; This function is called by:
  1396 ;;		_lcd_init
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text8
  1401  000AB4                     __ptext8:
  1402                           	opt callstack 0
  1403  000AB4                     _lcd_resetSequence:
  1404                           	opt callstack 28
  1405  000AB4                     
  1406                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1407  000AB4  0E00               	movlw	0
  1408  000AB6  6E95               	movwf	149,c	;volatile
  1409  000AB8                     
  1410                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1411  000AB8  0E0D               	movlw	13
  1412  000ABA  0100               	movlb	0	; force () banked
  1413  000ABC  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  1414  000ABE  0EFB               	movlw	251
  1415  000AC0                     u617:
  1416  000AC0  2EE8               	decfsz	wreg,f,c
  1417  000AC2  D7FE               	bra	u617
  1418  000AC4  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1419  000AC6  D7FC               	bra	u617
  1420  000AC8  F000 F000          	nop2	
  1421  000ACC                     
  1422                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1423  000ACC  9080               	bcf	128,0,c	;volatile
  1424  000ACE                     
  1425                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1426  000ACE  9280               	bcf	128,1,c	;volatile
  1427  000AD0                     
  1428                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1429  000AD0  0E03               	movlw	3
  1430  000AD2  ECBD  F006         	call	_lcd_ecrireDonnees
  1431  000AD6                     
  1432                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1433  000AD6  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1434  000ADA                     
  1435                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1436  000ADA  0E03               	movlw	3
  1437  000ADC                     u627:
  1438  000ADC  2EE8               	decfsz	wreg,f,c
  1439  000ADE  D7FE               	bra	u627
  1440  000AE0  F000               	nop	
  1441  000AE2                     
  1442                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  1443  000AE2  0E03               	movlw	3
  1444  000AE4  ECBD  F006         	call	_lcd_ecrireDonnees
  1445  000AE8                     
  1446                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  1447  000AE8  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1448  000AEC                     
  1449                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1450  000AEC  0E03               	movlw	3
  1451  000AEE                     u637:
  1452  000AEE  2EE8               	decfsz	wreg,f,c
  1453  000AF0  D7FE               	bra	u637
  1454  000AF2  F000               	nop	
  1455  000AF4                     
  1456                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  1457  000AF4  0E03               	movlw	3
  1458  000AF6  ECBD  F006         	call	_lcd_ecrireDonnees
  1459  000AFA                     
  1460                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  1461  000AFA  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1462  000AFE                     
  1463                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1464  000AFE  0E03               	movlw	3
  1465  000B00                     u647:
  1466  000B00  2EE8               	decfsz	wreg,f,c
  1467  000B02  D7FE               	bra	u647
  1468  000B04  F000               	nop	
  1469  000B06                     
  1470                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  1471  000B06  0E02               	movlw	2
  1472  000B08  ECBD  F006         	call	_lcd_ecrireDonnees
  1473  000B0C                     
  1474                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  1475  000B0C  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1476  000B10                     
  1477                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1478  000B10  0E03               	movlw	3
  1479  000B12                     u657:
  1480  000B12  2EE8               	decfsz	wreg,f,c
  1481  000B14  D7FE               	bra	u657
  1482  000B16  F000               	nop	
  1483  000B18                     
  1484                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  1485  000B18  0E0F               	movlw	15
  1486  000B1A  6E95               	movwf	149,c	;volatile
  1487  000B1C  0012               	return		;funcret
  1488  000B1E                     __end_of_lcd_resetSequence:
  1489                           	opt callstack 0
  1490                           
  1491 ;; *************** function _lcd_initCGRam *****************
  1492 ;; Defined at:
  1493 ;;		line 417 in file "Lcd4Lignes.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  j               1    6[BANK0 ] unsigned char 
  1498 ;;  i               1    5[BANK0 ] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1508 ;;      Params:         0       0       0       0       0       0       0
  1509 ;;      Locals:         0       2       0       0       0       0       0
  1510 ;;      Temps:          0       2       0       0       0       0       0
  1511 ;;      Totals:         0       4       0       0       0       0       0
  1512 ;;Total ram usage:        4 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    4
  1515 ;; This function calls:
  1516 ;;		_lcd_curseurHome
  1517 ;;		_lcd_wrCom
  1518 ;;		_lcd_wrData
  1519 ;; This function is called by:
  1520 ;;		_lcd_init
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text9
  1525  0008CE                     __ptext9:
  1526                           	opt callstack 0
  1527  0008CE                     _lcd_initCGRam:
  1528                           	opt callstack 25
  1529  0008CE                     
  1530                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  1531  0008CE  0E40               	movlw	64
  1532  0008D0  EC24  F005         	call	_lcd_wrCom
  1533  0008D4                     
  1534                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  1535  0008D4  0E00               	movlw	0
  1536  0008D6  0100               	movlb	0	; force () banked
  1537  0008D8  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  1538  0008DA                     
  1539                           ; BSR set to: 0
  1540  0008DA  0E07               	movlw	7
  1541  0008DC  0100               	movlb	0	; force () banked
  1542  0008DE  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1543  0008E0  EF74  F004         	goto	u381
  1544  0008E4  EF76  F004         	goto	u380
  1545  0008E8                     u381:
  1546  0008E8  EF78  F004         	goto	l1580
  1547  0008EC                     u380:
  1548  0008EC  EFB5  F004         	goto	l1596
  1549  0008F0                     l1580:
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  1553  0008F0  0E00               	movlw	0
  1554  0008F2  0100               	movlb	0	; force () banked
  1555  0008F4  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  1556  0008F6                     
  1557                           ; BSR set to: 0
  1558  0008F6  0E07               	movlw	7
  1559  0008F8  0100               	movlb	0	; force () banked
  1560  0008FA  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1561  0008FC  EF82  F004         	goto	u391
  1562  000900  EF84  F004         	goto	u390
  1563  000904                     u391:
  1564  000904  EF86  F004         	goto	l1586
  1565  000908                     u390:
  1566  000908  EFAA  F004         	goto	l1592
  1567  00090C                     l1586:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  1571  00090C  0100               	movlb	0	; force () banked
  1572  00090E  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  1573  000910  0D08               	mullw	8
  1574  000912  0E54               	movlw	low _matCGRAM
  1575  000914  0100               	movlb	0	; force () banked
  1576  000916  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  1577  000918  0E01               	movlw	high _matCGRAM
  1578  00091A  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  1579  00091C  50F3               	movf	243,w,c
  1580  00091E  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  1581  000920  50F4               	movf	244,w,c
  1582  000922  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  1583  000924  0100               	movlb	0	; force () banked
  1584  000926  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  1585  000928  0100               	movlb	0	; force () banked
  1586  00092A  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  1587  00092C  6ED9               	movwf	fsr2l,c
  1588  00092E  0100               	movlb	0	; force () banked
  1589  000930  0E00               	movlw	0
  1590  000932  0100               	movlb	0	; force () banked
  1591  000934  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  1592  000936  6EDA               	movwf	fsr2h,c
  1593  000938  50DF               	movf	indf2,w,c
  1594  00093A  EC75  F006         	call	_lcd_wrData
  1595  00093E  0100               	movlb	0	; force () banked
  1596  000940  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  1597  000942                     
  1598                           ; BSR set to: 0
  1599  000942  0E07               	movlw	7
  1600  000944  0100               	movlb	0	; force () banked
  1601  000946  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1602  000948  EFA8  F004         	goto	u401
  1603  00094C  EFAA  F004         	goto	u400
  1604  000950                     u401:
  1605  000950  EF86  F004         	goto	l1586
  1606  000954                     u400:
  1607  000954                     l1592:
  1608                           
  1609                           ; BSR set to: 0
  1610  000954  0100               	movlb	0	; force () banked
  1611  000956  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  1612  000958                     
  1613                           ; BSR set to: 0
  1614  000958  0E07               	movlw	7
  1615  00095A  0100               	movlb	0	; force () banked
  1616  00095C  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1617  00095E  EFB3  F004         	goto	u411
  1618  000962  EFB5  F004         	goto	u410
  1619  000966                     u411:
  1620  000966  EF78  F004         	goto	l1580
  1621  00096A                     u410:
  1622  00096A                     l1596:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  1626  00096A  ECD3  F006         	call	_lcd_curseurHome	;wreg free
  1627  00096E  0012               	return		;funcret
  1628  000970                     __end_of_lcd_initCGRam:
  1629                           	opt callstack 0
  1630                           
  1631 ;; *************** function _lcd_wrData *****************
  1632 ;; Defined at:
  1633 ;;		line 188 in file "Lcd4Lignes.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  caractere       1    wreg     unsigned char 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  caractere       1    2[BANK0 ] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      unsigned char 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1647 ;;      Params:         0       0       0       0       0       0       0
  1648 ;;      Locals:         0       1       0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0
  1650 ;;      Totals:         0       1       0       0       0       0       0
  1651 ;;Total ram usage:        1 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    2
  1654 ;; This function calls:
  1655 ;;		_lcd_busy
  1656 ;;		_lcd_ecrireDonnees
  1657 ;;		_lcd_strobeEnableBit
  1658 ;; This function is called by:
  1659 ;;		_lcd_ecritChar
  1660 ;;		_lcd_initCGRam
  1661 ;;		_lcd_effaceChar
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text10
  1666  000CEA                     __ptext10:
  1667                           	opt callstack 0
  1668  000CEA                     _lcd_wrData:
  1669                           	opt callstack 26
  1670                           
  1671                           ;incstack = 0
  1672                           ;lcd_wrData@caractere stored from wreg
  1673  000CEA  0100               	movlb	0	; force () banked
  1674  000CEC  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  1675  000CEE                     
  1676                           ;Lcd4Lignes.c: 190: lcd_busy();
  1677  000CEE  EC34  F006         	call	_lcd_busy	;wreg free
  1678  000CF2                     
  1679                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  1680  000CF2  0E00               	movlw	0
  1681  000CF4  6E95               	movwf	149,c	;volatile
  1682  000CF6                     
  1683                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  1684  000CF6  8080               	bsf	128,0,c	;volatile
  1685  000CF8                     
  1686                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  1687  000CF8  9280               	bcf	128,1,c	;volatile
  1688  000CFA                     
  1689                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  1690  000CFA  0100               	movlb	0	; force () banked
  1691  000CFC  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  1692  000CFE  0B0F               	andlw	15
  1693  000D00  ECBD  F006         	call	_lcd_ecrireDonnees
  1694  000D04                     
  1695                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  1696  000D04  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1697  000D08                     
  1698                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  1699  000D08  0100               	movlb	0	; force () banked
  1700  000D0A  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  1701  000D0C  ECBD  F006         	call	_lcd_ecrireDonnees
  1702  000D10                     
  1703                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  1704  000D10  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1705  000D14                     
  1706                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  1707  000D14  0E0F               	movlw	15
  1708  000D16  6E95               	movwf	149,c	;volatile
  1709  000D18                     
  1710                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  1711                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  1712  000D18  EC34  F006         	call	_lcd_busy	;wreg free
  1713  000D1C  0012               	return		;funcret
  1714  000D1E                     __end_of_lcd_wrData:
  1715                           	opt callstack 0
  1716                           
  1717 ;; *************** function _lcd_curseurHome *****************
  1718 ;; Defined at:
  1719 ;;		line 288 in file "Lcd4Lignes.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         0       0       0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    3
  1740 ;; This function calls:
  1741 ;;		_lcd_wrCom
  1742 ;; This function is called by:
  1743 ;;		_lcd_initCGRam
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text11
  1748  000DA6                     __ptext11:
  1749                           	opt callstack 0
  1750  000DA6                     _lcd_curseurHome:
  1751                           	opt callstack 25
  1752  000DA6                     
  1753                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  1754  000DA6  0E02               	movlw	2
  1755  000DA8  EC24  F005         	call	_lcd_wrCom
  1756  000DAC  0012               	return		;funcret
  1757  000DAE                     __end_of_lcd_curseurHome:
  1758                           	opt callstack 0
  1759                           
  1760 ;; *************** function _lcd_wrCom *****************
  1761 ;; Defined at:
  1762 ;;		line 156 in file "Lcd4Lignes.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  commande        1    wreg     unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  commande        1    2[BANK0 ] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      unsigned char 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1776 ;;      Params:         0       0       0       0       0       0       0
  1777 ;;      Locals:         0       1       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0
  1779 ;;      Totals:         0       1       0       0       0       0       0
  1780 ;;Total ram usage:        1 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    2
  1783 ;; This function calls:
  1784 ;;		_lcd_busy
  1785 ;;		_lcd_ecrireDonnees
  1786 ;;		_lcd_strobeEnableBit
  1787 ;; This function is called by:
  1788 ;;		_lcd_init
  1789 ;;		_lcd_curseurHome
  1790 ;;		_lcd_ecritChar
  1791 ;;		_lcd_initCGRam
  1792 ;;		_lcd_effaceAffichage
  1793 ;;		_lcd_gotoXY
  1794 ;;		_lcd_cacheCurseur
  1795 ;;		_lcd_montreCurseur
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text12
  1800  000A48                     __ptext12:
  1801                           	opt callstack 0
  1802  000A48                     _lcd_wrCom:
  1803                           	opt callstack 26
  1804                           
  1805                           ;incstack = 0
  1806                           ;lcd_wrCom@commande stored from wreg
  1807  000A48  0100               	movlb	0	; force () banked
  1808  000A4A  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  1809  000A4C                     
  1810                           ;Lcd4Lignes.c: 158: lcd_busy();
  1811  000A4C  EC34  F006         	call	_lcd_busy	;wreg free
  1812  000A50                     
  1813                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  1814  000A50  0E00               	movlw	0
  1815  000A52  6E95               	movwf	149,c	;volatile
  1816  000A54                     
  1817                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  1818  000A54  9080               	bcf	128,0,c	;volatile
  1819  000A56                     
  1820                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  1821  000A56  9280               	bcf	128,1,c	;volatile
  1822  000A58                     
  1823                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  1824  000A58  0100               	movlb	0	; force () banked
  1825  000A5A  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  1826  000A5C  0B0F               	andlw	15
  1827  000A5E  ECBD  F006         	call	_lcd_ecrireDonnees
  1828  000A62                     
  1829                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  1830  000A62  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1831  000A66                     
  1832                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  1833  000A66  0100               	movlb	0	; force () banked
  1834  000A68  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  1835  000A6A  ECBD  F006         	call	_lcd_ecrireDonnees
  1836  000A6E                     
  1837                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  1838  000A6E  ECD7  F006         	call	_lcd_strobeEnableBit	;wreg free
  1839  000A72                     
  1840                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1841  000A72  0E03               	movlw	3
  1842  000A74                     u667:
  1843  000A74  2EE8               	decfsz	wreg,f,c
  1844  000A76  D7FE               	bra	u667
  1845  000A78  F000               	nop	
  1846  000A7A                     
  1847                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  1848  000A7A  0100               	movlb	0	; force () banked
  1849  000A7C  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  1850  000A7E  B4D8               	btfsc	status,2,c
  1851  000A80  EF44  F005         	goto	u341
  1852  000A84  EF46  F005         	goto	u340
  1853  000A88                     u341:
  1854  000A88  EF50  F005         	goto	l1478
  1855  000A8C                     u340:
  1856  000A8C                     
  1857                           ; BSR set to: 0
  1858  000A8C  0E02               	movlw	2
  1859  000A8E  0100               	movlb	0	; force () banked
  1860  000A90  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  1861  000A92  A4D8               	btfss	status,2,c
  1862  000A94  EF4E  F005         	goto	u351
  1863  000A98  EF50  F005         	goto	u350
  1864  000A9C                     u351:
  1865  000A9C  EF55  F005         	goto	l1480
  1866  000AA0                     u350:
  1867  000AA0                     l1478:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  1871  000AA0  0EA6               	movlw	166
  1872  000AA2                     u677:
  1873  000AA2  2EE8               	decfsz	wreg,f,c
  1874  000AA4  D7FE               	bra	u677
  1875  000AA6  F000 F000          	nop2	
  1876  000AAA                     l1480:
  1877                           
  1878                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  1879  000AAA  0E0F               	movlw	15
  1880  000AAC  6E95               	movwf	149,c	;volatile
  1881  000AAE                     
  1882                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  1883  000AAE  EC34  F006         	call	_lcd_busy	;wreg free
  1884  000AB2  0012               	return		;funcret
  1885  000AB4                     __end_of_lcd_wrCom:
  1886                           	opt callstack 0
  1887                           
  1888 ;; *************** function _lcd_strobeEnableBit *****************
  1889 ;; Defined at:
  1890 ;;		line 431 in file "Lcd4Lignes.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		None
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1904 ;;      Params:         0       0       0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0
  1907 ;;      Totals:         0       0       0       0       0       0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_lcd_wrCom
  1914 ;;		_lcd_wrData
  1915 ;;		_lcd_resetSequence
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text13
  1920  000DAE                     __ptext13:
  1921                           	opt callstack 0
  1922  000DAE                     _lcd_strobeEnableBit:
  1923                           	opt callstack 27
  1924  000DAE                     
  1925                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  1926  000DAE  8480               	bsf	128,2,c	;volatile
  1927                           
  1928                           ;Lcd4Lignes.c: 434: __nop();
  1929  000DB0  F000               	nop	
  1930                           
  1931                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  1932  000DB2  9480               	bcf	128,2,c	;volatile
  1933  000DB4  0012               	return		;funcret
  1934  000DB6                     __end_of_lcd_strobeEnableBit:
  1935                           	opt callstack 0
  1936                           
  1937 ;; *************** function _lcd_ecrireDonnees *****************
  1938 ;; Defined at:
  1939 ;;		line 107 in file "Lcd4Lignes.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  donnee          1    wreg     unsigned char 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  donnee          1    1[BANK0 ] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1953 ;;      Params:         0       0       0       0       0       0       0
  1954 ;;      Locals:         0       1       0       0       0       0       0
  1955 ;;      Temps:          0       1       0       0       0       0       0
  1956 ;;      Totals:         0       2       0       0       0       0       0
  1957 ;;Total ram usage:        2 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_lcd_wrCom
  1963 ;;		_lcd_wrData
  1964 ;;		_lcd_resetSequence
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text14
  1969  000D7A                     __ptext14:
  1970                           	opt callstack 0
  1971  000D7A                     _lcd_ecrireDonnees:
  1972                           	opt callstack 27
  1973                           
  1974                           ;incstack = 0
  1975                           ;lcd_ecrireDonnees@donnee stored from wreg
  1976  000D7A  0100               	movlb	0	; force () banked
  1977  000D7C  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  1978  000D7E                     
  1979                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  1980  000D7E  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  1981  000D82  0EF0               	movlw	240
  1982  000D84  0100               	movlb	0	; force () banked
  1983  000D86  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1984  000D88  0100               	movlb	0	; force () banked
  1985  000D8A  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  1986  000D8C  0B0F               	andlw	15
  1987  000D8E  0100               	movlb	0	; force () banked
  1988  000D90  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1989  000D92  6E83               	movwf	131,c	;volatile
  1990  000D94                     
  1991                           ; BSR set to: 0
  1992  000D94  0012               	return		;funcret
  1993  000D96                     __end_of_lcd_ecrireDonnees:
  1994                           	opt callstack 0
  1995                           
  1996 ;; *************** function _lcd_busy *****************
  1997 ;; Defined at:
  1998 ;;		line 124 in file "Lcd4Lignes.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  adresse         1    1[BANK0 ] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      unsigned char 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2012 ;;      Params:         0       0       0       0       0       0       0
  2013 ;;      Locals:         0       1       0       0       0       0       0
  2014 ;;      Temps:          0       1       0       0       0       0       0
  2015 ;;      Totals:         0       2       0       0       0       0       0
  2016 ;;Total ram usage:        2 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    1
  2019 ;; This function calls:
  2020 ;;		_lcd_lireDonnees
  2021 ;; This function is called by:
  2022 ;;		_lcd_wrCom
  2023 ;;		_lcd_wrData
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text15
  2028  000C68                     __ptext15:
  2029                           	opt callstack 0
  2030  000C68                     _lcd_busy:
  2031                           	opt callstack 26
  2032  000C68                     
  2033                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  2034  000C68  9080               	bcf	128,0,c	;volatile
  2035                           
  2036                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  2037  000C6A  8280               	bsf	128,1,c	;volatile
  2038  000C6C                     l114:
  2039                           
  2040                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  2041  000C6C  8480               	bsf	128,2,c	;volatile
  2042                           
  2043                           ;Lcd4Lignes.c: 134: __nop();
  2044  000C6E  F000               	nop	
  2045  000C70                     
  2046                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  2047  000C70  ECDB  F006         	call	_lcd_lireDonnees	;wreg free
  2048  000C74  0100               	movlb	0	; force () banked
  2049  000C76  6FB4               	movwf	??_lcd_busy& (0+255),b
  2050  000C78  39B4               	swapf	??_lcd_busy& (0+255),w,b
  2051  000C7A  0BF0               	andlw	240
  2052  000C7C  0100               	movlb	0	; force () banked
  2053  000C7E  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  2054  000C80                     
  2055                           ; BSR set to: 0
  2056                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  2057  000C80  9480               	bcf	128,2,c	;volatile
  2058  000C82                     
  2059                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  2060  000C82  8480               	bsf	128,2,c	;volatile
  2061  000C84                     
  2062                           ;Lcd4Lignes.c: 139: __nop();
  2063  000C84  F000               	nop	
  2064                           
  2065                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  2066  000C86  ECDB  F006         	call	_lcd_lireDonnees	;wreg free
  2067  000C8A  0100               	movlb	0	; force () banked
  2068  000C8C  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  2069  000C8E                     
  2070                           ; BSR set to: 0
  2071                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  2072  000C8E  9480               	bcf	128,2,c	;volatile
  2073  000C90                     
  2074                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  2075  000C90  0100               	movlb	0	; force () banked
  2076  000C92  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  2077  000C94  EF4E  F006         	goto	u331
  2078  000C98  EF50  F006         	goto	u330
  2079  000C9C                     u331:
  2080  000C9C  EF36  F006         	goto	l114
  2081  000CA0                     u330:
  2082  000CA0                     
  2083                           ; BSR set to: 0
  2084                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  2085  000CA0  9280               	bcf	128,1,c	;volatile
  2086  000CA2                     
  2087                           ; BSR set to: 0
  2088                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  2089  000CA2  0100               	movlb	0	; force () banked
  2090  000CA4  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  2091  000CA6  0B7F               	andlw	127
  2092  000CA8                     
  2093                           ; BSR set to: 0
  2094  000CA8  0012               	return		;funcret
  2095  000CAA                     __end_of_lcd_busy:
  2096                           	opt callstack 0
  2097                           
  2098 ;; *************** function _lcd_lireDonnees *****************
  2099 ;; Defined at:
  2100 ;;		line 93 in file "Lcd4Lignes.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      unsigned char 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2114 ;;      Params:         0       0       0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_lcd_busy
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text16
  2128  000DB6                     __ptext16:
  2129                           	opt callstack 0
  2130  000DB6                     _lcd_lireDonnees:
  2131                           	opt callstack 26
  2132  000DB6                     
  2133                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  2134  000DB6  5083               	movf	131,w,c	;volatile
  2135  000DB8  0B0F               	andlw	15
  2136  000DBA  0012               	return		;funcret
  2137  000DBC                     __end_of_lcd_lireDonnees:
  2138                           	opt callstack 0
  2139                           
  2140 ;; *************** function _initialisation *****************
  2141 ;; Defined at:
  2142 ;;		line 65 in file "main.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2156 ;;      Params:         0       0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    1
  2163 ;; This function calls:
  2164 ;;		_srand
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text17
  2171  000D1E                     __ptext17:
  2172                           	opt callstack 0
  2173  000D1E                     _initialisation:
  2174                           	opt callstack 29
  2175  000D1E                     
  2176                           ;main.c: 67: TRISD = 0;
  2177  000D1E  0E00               	movlw	0
  2178  000D20  6E95               	movwf	149,c	;volatile
  2179                           
  2180                           ;main.c: 68: ANSELH = 0;
  2181  000D22  0E00               	movlw	0
  2182  000D24  6E7F               	movwf	127,c	;volatile
  2183  000D26                     
  2184                           ;main.c: 69: TRISB = 0xFF;
  2185  000D26  6893               	setf	147,c	;volatile
  2186                           
  2187                           ;main.c: 70: ANSEL = 0;
  2188  000D28  0E00               	movlw	0
  2189  000D2A  6E7E               	movwf	126,c	;volatile
  2190                           
  2191                           ;main.c: 71: TRISA = 0;
  2192  000D2C  0E00               	movlw	0
  2193  000D2E  6E92               	movwf	146,c	;volatile
  2194  000D30                     
  2195                           ;main.c: 75: T1CONbits.TMR1ON = 1;
  2196  000D30  80CD               	bsf	205,0,c	;volatile
  2197  000D32                     
  2198                           ;main.c: 76: srand(TMR1);
  2199  000D32  CFCE F0B4          	movff	4046,srand@x	;volatile
  2200  000D36  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2201  000D3A  ECCB  F006         	call	_srand	;wreg free
  2202  000D3E                     
  2203                           ;main.c: 78: ANSELbits.ANS7 = 1;
  2204  000D3E  8E7E               	bsf	126,7,c	;volatile
  2205  000D40                     
  2206                           ;main.c: 79: ADCON0bits.ADON = 1;
  2207  000D40  80C2               	bsf	194,0,c	;volatile
  2208  000D42                     
  2209                           ;main.c: 80: ADCON1 = 0;
  2210  000D42  0E00               	movlw	0
  2211  000D44  6EC1               	movwf	193,c	;volatile
  2212  000D46                     
  2213                           ;main.c: 81: ADCON2bits.ADFM = 0;
  2214  000D46  9EC0               	bcf	192,7,c	;volatile
  2215  000D48                     
  2216                           ;main.c: 82: ADCON2bits.ACQT = 0;
  2217  000D48  0EC7               	movlw	-57
  2218  000D4A  16C0               	andwf	192,f,c	;volatile
  2219  000D4C                     
  2220                           ;main.c: 83: ADCON2bits.ADCS = 0;
  2221  000D4C  0EF8               	movlw	-8
  2222  000D4E  16C0               	andwf	192,f,c	;volatile
  2223  000D50  0012               	return		;funcret
  2224  000D52                     __end_of_initialisation:
  2225                           	opt callstack 0
  2226                           
  2227 ;; *************** function _srand *****************
  2228 ;; Defined at:
  2229 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  x               2    0[BANK0 ] unsigned int 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		status,2
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2243 ;;      Params:         0       2       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0
  2246 ;;      Totals:         0       2       0       0       0       0       0
  2247 ;;Total ram usage:        2 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_initialisation
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text18
  2257  000D96                     __ptext18:
  2258                           	opt callstack 0
  2259  000D96                     _srand:
  2260                           	opt callstack 29
  2261  000D96  C0B4  F0D2         	movff	srand@x,_randx
  2262  000D9A  C0B5  F0D3         	movff	srand@x+1,_randx+1
  2263  000D9E  0100               	movlb	0	; () banked
  2264  000DA0  6BD4               	clrf	(_randx+2)& (0+255),b
  2265  000DA2  6BD5               	clrf	(_randx+3)& (0+255),b
  2266  000DA4                     
  2267                           ; BSR set to: 0
  2268  000DA4  0012               	return		;funcret
  2269  000DA6                     __end_of_srand:
  2270                           	opt callstack 0
  2271                           
  2272 ;; *************** function _initTabVue *****************
  2273 ;; Defined at:
  2274 ;;		line 93 in file "main.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  j               1    2[BANK0 ] unsigned char 
  2279 ;;  i               1    3[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2289 ;;      Params:         0       0       0       0       0       0       0
  2290 ;;      Locals:         0       2       0       0       0       0       0
  2291 ;;      Temps:          0       2       0       0       0       0       0
  2292 ;;      Totals:         0       4       0       0       0       0       0
  2293 ;;Total ram usage:        4 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text19
  2303  000822                     __ptext19:
  2304                           	opt callstack 0
  2305  000822                     _initTabVue:
  2306                           	opt callstack 30
  2307  000822                     
  2308                           ;main.c: 95: for (char i = 0; i < 4; i++)
  2309  000822  0E00               	movlw	0
  2310  000824  0100               	movlb	0	; force () banked
  2311  000826  6FB7               	movwf	initTabVue@i& (0+255),b
  2312  000828                     
  2313                           ; BSR set to: 0
  2314  000828  0E03               	movlw	3
  2315  00082A  0100               	movlb	0	; force () banked
  2316  00082C  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2317  00082E  EF1B  F004         	goto	u491
  2318  000832  EF1D  F004         	goto	u490
  2319  000836                     u491:
  2320  000836  EF1F  F004         	goto	l1684
  2321  00083A                     u490:
  2322  00083A  EF66  F004         	goto	l60
  2323  00083E                     l1684:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;main.c: 96: {;main.c: 97: for(char j=0;j<(20);j++)
  2327  00083E  0E00               	movlw	0
  2328  000840  0100               	movlb	0	; force () banked
  2329  000842  6FB6               	movwf	initTabVue@j& (0+255),b
  2330  000844                     
  2331                           ; BSR set to: 0
  2332  000844  0E13               	movlw	19
  2333  000846  0100               	movlb	0	; force () banked
  2334  000848  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2335  00084A  EF29  F004         	goto	u501
  2336  00084E  EF2B  F004         	goto	u500
  2337  000852                     u501:
  2338  000852  EF2D  F004         	goto	l1690
  2339  000856                     u500:
  2340  000856  EF50  F004         	goto	l1696
  2341  00085A                     l1690:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;main.c: 98: {;main.c: 99: m_tabVue[i][j]=1;
  2345  00085A  0100               	movlb	0	; force () banked
  2346  00085C  51B7               	movf	initTabVue@i& (0+255),w,b
  2347  00085E  0D15               	mullw	21
  2348  000860  0E00               	movlw	low _m_tabVue
  2349  000862  0100               	movlb	0	; force () banked
  2350  000864  6FB4               	movwf	??_initTabVue& (0+255),b
  2351  000866  0E01               	movlw	high _m_tabVue
  2352  000868  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  2353  00086A  50F3               	movf	243,w,c
  2354  00086C  27B4               	addwf	??_initTabVue& (0+255),f,b
  2355  00086E  50F4               	movf	244,w,c
  2356  000870  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2357  000872  0100               	movlb	0	; force () banked
  2358  000874  51B6               	movf	initTabVue@j& (0+255),w,b
  2359  000876  0100               	movlb	0	; force () banked
  2360  000878  25B4               	addwf	??_initTabVue& (0+255),w,b
  2361  00087A  6ED9               	movwf	fsr2l,c
  2362  00087C  0100               	movlb	0	; force () banked
  2363  00087E  0E00               	movlw	0
  2364  000880  0100               	movlb	0	; force () banked
  2365  000882  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2366  000884  6EDA               	movwf	fsr2h,c
  2367  000886  0E01               	movlw	1
  2368  000888  6EDF               	movwf	indf2,c
  2369  00088A                     
  2370                           ; BSR set to: 0
  2371  00088A  0100               	movlb	0	; force () banked
  2372  00088C  2BB6               	incf	initTabVue@j& (0+255),f,b
  2373  00088E                     
  2374                           ; BSR set to: 0
  2375  00088E  0E13               	movlw	19
  2376  000890  0100               	movlb	0	; force () banked
  2377  000892  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2378  000894  EF4E  F004         	goto	u511
  2379  000898  EF50  F004         	goto	u510
  2380  00089C                     u511:
  2381  00089C  EF2D  F004         	goto	l1690
  2382  0008A0                     u510:
  2383  0008A0                     l1696:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;main.c: 100: };main.c: 101: m_tabVue[i][20]=0;
  2387  0008A0  0100               	movlb	0	; force () banked
  2388  0008A2  51B7               	movf	initTabVue@i& (0+255),w,b
  2389  0008A4  0D15               	mullw	21
  2390  0008A6  0E14               	movlw	low (_m_tabVue+20)
  2391  0008A8  24F3               	addwf	243,w,c
  2392  0008AA  6ED9               	movwf	fsr2l,c
  2393  0008AC  0E01               	movlw	high (_m_tabVue+20)
  2394  0008AE  20F4               	addwfc	prodh,w,c
  2395  0008B0  6EDA               	movwf	fsr2h,c
  2396  0008B2  0E00               	movlw	0
  2397  0008B4  6EDF               	movwf	indf2,c
  2398  0008B6                     
  2399                           ; BSR set to: 0
  2400  0008B6  0100               	movlb	0	; force () banked
  2401  0008B8  2BB7               	incf	initTabVue@i& (0+255),f,b
  2402  0008BA                     
  2403                           ; BSR set to: 0
  2404  0008BA  0E03               	movlw	3
  2405  0008BC  0100               	movlb	0	; force () banked
  2406  0008BE  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2407  0008C0  EF64  F004         	goto	u521
  2408  0008C4  EF66  F004         	goto	u520
  2409  0008C8                     u521:
  2410  0008C8  EF1F  F004         	goto	l1684
  2411  0008CC                     u520:
  2412  0008CC                     l60:
  2413                           
  2414                           ; BSR set to: 0
  2415  0008CC  0012               	return		;funcret
  2416  0008CE                     __end_of_initTabVue:
  2417                           	opt callstack 0
  2418                           
  2419                           	psect	param0
  2420  0000                     tosu	equ	0xFFF
  2421                           tosh	equ	0xFFE
  2422                           tosl	equ	0xFFD
  2423                           stkptr	equ	0xFFC
  2424                           pclatu	equ	0xFFB
  2425                           pclath	equ	0xFFA
  2426                           pcl	equ	0xFF9
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           prodh	equ	0xFF4
  2432                           prodl	equ	0xFF3
  2433                           indf0	equ	0xFEF
  2434                           postinc0	equ	0xFEE
  2435                           postdec0	equ	0xFED
  2436                           preinc0	equ	0xFEC
  2437                           plusw0	equ	0xFEB
  2438                           fsr0h	equ	0xFEA
  2439                           fsr0l	equ	0xFE9
  2440                           wreg	equ	0xFE8
  2441                           indf1	equ	0xFE7
  2442                           postinc1	equ	0xFE6
  2443                           postdec1	equ	0xFE5
  2444                           preinc1	equ	0xFE4
  2445                           plusw1	equ	0xFE3
  2446                           fsr1h	equ	0xFE2
  2447                           fsr1l	equ	0xFE1
  2448                           bsr	equ	0xFE0
  2449                           indf2	equ	0xFDF
  2450                           postinc2	equ	0xFDE
  2451                           postdec2	equ	0xFDD
  2452                           preinc2	equ	0xFDC
  2453                           plusw2	equ	0xFDB
  2454                           fsr2h	equ	0xFDA
  2455                           fsr2l	equ	0xFD9
  2456                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     30     118
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    _initialisation->_srand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2616
                                             29 BANK0      1     1      0
                         _initTabVue
                     _initialisation
                           _lcd_init
                     _lcd_putMessage
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1143
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     479
                                              5 BANK0      5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initTabVue
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1E      76       4       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10A      14        0.0%
DATA                 0      0     10A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 13:41:17 2019

                          l60 08CC                            l53 0D50                            l71 076E  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l111 0D94  
                         l114 0C6C                           l122 0AB2                           l115 0CA0  
                         l131 0D78                           l108 0DBA                           l116 0CA8  
                         l125 0D1C                           l128 0B1C                           l137 0DAC  
                         l163 0C24                           l182 096E                           l246 09CA  
                         l247 09DA                           l185 0DB4                           l169 0A46  
                         l902 0BD0                           l479 0820                           l899 0DA4  
                __CFG_CPB$OFF 000000                           u400 0954                           u401 0950  
                         u330 0CA0                           u410 096A                           u331 0C9C  
                         u411 0966                           u500 0856                           u340 0A8C  
                         u420 0784                           u501 0852                           u341 0A88  
                         u421 0780                           u510 08A0                           u350 0AA0  
                         u430 079E                           u511 089C                           u351 0A9C  
                         u431 079A                           u520 08CC                           u440 07B8  
                         u360 0990                           u521 08C8                           u441 07B4  
                         u361 098C                           u450 07D6                           u370 09CA  
                         u530 062C                  __CFG_CPD$OFF 000000                           u451 07D2  
                         u371 09C6                           u531 0628                           u380 08EC  
                         u460 07EC                           u540 0648                           u381 08E8  
                         u461 07E8                           u541 0644                           u390 0908  
                         u470 0810                           u550 0692                           u391 0904  
                         u471 080C                           u551 068E                           u607 0C56  
                         u480 0A46                           u560 06A8                           u617 0AC0  
                         u481 0A42                           u561 06A4                           u490 083A  
                         u570 071A                           u491 0836                           u627 0ADC  
                         u571 0716                           u580 076E                           u637 0AEE  
                         u581 076A                           u647 0B00                           u657 0B12  
                         u667 0A74                           u677 0AA2                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                           prod 000FF3                           wreg 000FE8  
                __CFG_LVP$OFF 000000                          l1500 0D04                          l1422 0DB6  
                        l1430 0C70                          l1510 0D14                          l1502 0D08  
                        l1440 0C8E                          l1432 0C80                          l1512 0D18  
                        l1504 0D08                          l1600 0BE6                          l1520 0982  
                        l1442 0C90                          l1434 0C82                          l1426 0D7E  
                        l1450 0DAE                          l1506 0D10                          l1602 0BF0  
                        l1610 0770                          l1522 0990                          l1530 0B7C  
                        l1700 08BA                          l1444 0C90                          l1436 0C82  
                        l1428 0C68                          l1460 0A56                          l1452 0A4C  
                        l1516 0DA6                          l1508 0D14                          l1540 0AB8  
                        l1604 0BFA                          l1620 079E                          l1612 0776  
                        l1524 09A0                          l1532 0BB2                          l1446 0CA2  
                        l1438 0C84                          l1470 0A6E                          l1462 0A58  
                        l1454 0A50                          l1550 0ADA                          l1542 0ACC  
                        l1630 07D6                          l1622 07A6                          l1614 0784  
                        l1526 09AA                          l1518 0970                          l1534 0BC4  
                        l1710 0636                          l1702 0614                          l1528 0D96  
                        l1480 0AAA                          l1472 0A72                          l1464 0A62  
                        l1456 0A54                          l1560 0AFA                          l1552 0AE2  
                        l1544 0ACE                          l1608 0C04                          l1640 0810  
                        l1632 07EC                          l1624 07B8                          l1616 078C  
                        l1720 0692                          l1704 061A                          l1650 0D30  
                        l1482 0AAE                          l1474 0A7A                          l1466 0A66  
                        l1458 0A54                          l1490 0CF2                          l1570 0B18  
                        l1562 0AFE                          l1554 0AE8                          l1546 0AD0  
                        l1538 0AB4                          l1642 0818                          l1634 07F4  
                        l1626 07C0                          l1618 0790                          l1730 074A  
                        l1722 0696                          l1714 064C                          l1660 0D46  
                        l1652 0D32                          l1484 0AAE                          l1476 0A8C  
                        l1468 0A66                          l1492 0CF6                          l1580 08F0  
                        l1572 08CE                          l1564 0B06                          l1556 0AEC  
                        l1548 0AD6                          l1636 07FA                          l1628 07C8  
                        l1724 06AC                          l1716 067C                          l1732 0752  
                        l1708 0630                          l1662 0D48                          l1654 0D3E  
                        l1646 0D1E                          l1478 0AA0                          l1494 0CF6  
                        l1590 0942                          l1582 08F6                          l1574 08D4  
                        l1566 0B0C                          l1558 0AF4                          l1670 09DC  
                        l1638 0800                          l1726 06DC                          l1718 0680  
                        l1680 0828                          l1664 0D4C                          l1656 0D40  
                        l1648 0D26                          l1496 0CF8                          l1488 0CEE  
                        l1592 0954                          l1576 08DA                          l1568 0B10  
                        l1672 09E6                          l1728 071A                          l1760 0C2E  
                        l1690 085A                          l1658 0D42                          l1498 0CFA  
                        l1594 0958                          l1586 090C                          l1666 0D52  
                        l1674 0A0E                          l1762 0C3C                          l1692 088A  
                        l1684 083E                          l1588 093E                          l1596 096A  
                        l1668 0D74                          l1676 0A12                          l1764 0C40  
                        l1756 0C26                          l1694 088E                          l1686 0844  
                        l1678 0822                          l1598 0BD6                          l1766 0C4E  
                        l1758 0C2A                          l1696 08A0                          l1698 08B6  
                        STR_1 0601                          _RCIF 007CF5                          _TMR1 000FCE  
            ??_initialisation 00B6                          _main 0C26                          _rand 0B7C  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 00B9                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 00B7                         ?_main 00B4  
                       ?_rand 00C0               __end_of___awmod 0822                         _ANSEL 000F7E  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000           ___lmul@multiplicand 00B8  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7                         _randx 00D2  
                       _srand 0D96                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000               __initialization 0B1E  
                __end_of_main 0C68                  __end_of_rand 0BD2          lcd_putMessage@chaine 00B9  
                      ??_main 00D1                        ??_rand 00C2                 __activetblptr 000003  
                      _ADCON1 000FC1                        ?_srand 00B4                        _ANSELH 000F7F  
                 initTabVue@i 00B7                   initTabVue@j 00B6                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 00C8                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA              __end_of_lcd_busy 0CAA  
            __end_of_lcd_init 0D7A                        ___lmul 0970                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        clear_0 0B64                        clear_1 0B70  
             ___awmod@divisor 00C4               ___awmod@counter 00C6                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00B4             _lcd_resetSequence 0AB4                    __accesstop 0060  
     __end_of__initialization 0B76           _lcd_strobeEnableBit 0DAE            ?_lcd_resetSequence 00B4  
               ___rparam_used 000000                  __pidataBANK0 0DBC                  __pidataBANK1 0CAA  
         ??_lcd_resetSequence 00B6                 __end_of_srand 0DA6          ?_lcd_strobeEnableBit 00B4  
          __size_of_lcd_wrCom 006C     __end_of_lcd_resetSequence 0B1E                       ??_srand 00B6  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 0D7A                    __pbssBANK0 0060  
                  __pbssBANK1 0100              ??_lcd_putMessage 00BB            ?_lcd_ecrireDonnees 00B4  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4  
              ___lmul@product 00BC         ??_lcd_strobeEnableBit 00B4                    _lcd_wrData 0CEA  
   __end_of_lcd_ecrireDonnees 0D96                     ?_lcd_busy 00B4                     ?_lcd_init 00B4  
     lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060          __size_of_rempliMines 015C  
                     __Hparam 0000                       __Lparam 0000                    _initTabVue 0822  
           __end_of_lcd_wrCom 0AB4               __size_of___lmul 006C                       ___awmod 0770  
                __psmallconst 0600                       __pcinit 0B1E                     _ANSELbits 000F7E  
                     __ramtop 0600                       __ptext0 0C26                       __ptext1 0614  
                     __ptext2 0B7C                       __ptext3 0970                       __ptext4 0770  
                     __ptext5 09DC                       __ptext6 0BD2                       __ptext7 0D52  
                     __ptext8 0AB4                       __ptext9 08CE         __end_of_lcd_ecritChar 0C26  
             lcd_busy@adresse 00B5                     _T1CONbits 000FCD              ___awmod@dividend 00C2  
            lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4                    ??_lcd_init 00BB  
  __size_of_lcd_resetSequence 006A          end_of_initialization 0B76         __end_of_lcd_initCGRam 0970  
           ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC                   ?_initTabVue 00B4                __end_of___lmul 09DC  
                 _BAUDCONbits 000FB8           start_initialization 0B1E                      ??___lmul 00BC  
               rempliMines@nb 00C8           __size_of_lcd_wrData 0034                   __pdataBANK0 00D2  
                 __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000                 __pcstackBANK0 00B4  
         __size_of_initTabVue 00AC             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000   __end_of_lcd_strobeEnableBit 0DB6                _initialisation 0D1E  
                    ?___awmod 00C2                     _lcd_wrCom 0A48                   __smallconst 0600  
             _lcd_lireDonnees 0DB6           lcd_wrData@caractere 00B6                __size_of_srand 0010  
               ??_rempliMines 00CA               _lcd_curseurHome 0DA6        __end_of_initialisation 0D52  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 006C                    ?_lcd_wrCom 00B4  
                  _ADCON0bits 000FC2                    _ADCON2bits 000FC0                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 0B32  
                   copy_data1 0B52                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 0770  
                ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CF  
                rempliMines@j 00D0                  rempliMines@x 00CD                  rempliMines@y 00CE  
          __end_of_lcd_wrData 0D1E              __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2  
             lcd_putMessage@j 00BD       __end_of_lcd_lireDonnees 0DBC                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 0DAE                      __ptext10 0CEA                      __ptext11 0DA6  
                    __ptext12 0A48                      __ptext13 0DAE                      __ptext14 0D7A  
                    __ptext15 0C68                      __ptext16 0DB6                      __ptext17 0D1E  
                    __ptext18 0D96                      __ptext19 0822                      _lcd_busy 0C68  
                    _lcd_init 0D52            __end_of_initTabVue 08CE                      _m_tabVue 0100  
               __size_of_main 0042                 __size_of_rand 0056                   ??_lcd_wrCom 00B6  
               _lcd_ecritChar 0BD2                 _lcd_initCGRam 08CE                   _rempliMines 0614  
              _lcd_putMessage 09DC                ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4  
            ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 0A48  
