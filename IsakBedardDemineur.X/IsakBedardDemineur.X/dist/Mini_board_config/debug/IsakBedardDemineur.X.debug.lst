

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 13:03:41 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2,minocg
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F45K20 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataBANK0
    65  00084C                     __pidataBANK0:
    66                           	opt callstack 0
    67                           
    68                           ;initializer for _matCGRAM
    69  00084C  08                 	db	8
    70  00084D  04                 	db	4
    71  00084E  04                 	db	4
    72  00084F  0A                 	db	10
    73  000850  11                 	db	17
    74  000851  1F                 	db	31
    75  000852  11                 	db	17
    76  000853  00                 	db	0
    77  000854  00                 	db	0
    78  000855  00                 	db	0
    79  000856  0E                 	db	14
    80  000857  11                 	db	17
    81  000858  15                 	db	21
    82  000859  0E                 	db	14
    83  00085A  0A                 	db	10
    84  00085B  00                 	db	0
    85  00085C  11                 	db	17
    86  00085D  0E                 	db	14
    87  00085E  11                 	db	17
    88  00085F  15                 	db	21
    89  000860  15                 	db	21
    90  000861  0E                 	db	14
    91  000862  0A                 	db	10
    92  000863  00                 	db	0
    93  000864  0E                 	db	14
    94  000865  11                 	db	17
    95  000866  15                 	db	21
    96  000867  15                 	db	21
    97  000868  15                 	db	21
    98  000869  0E                 	db	14
    99  00086A  15                 	db	21
   100  00086B  04                 	db	4
   101  00086C  04                 	db	4
   102  00086D  04                 	db	4
   103  00086E  04                 	db	4
   104  00086F  04                 	db	4
   105  000870  0E                 	db	14
   106  000871  0E                 	db	14
   107  000872  1B                 	db	27
   108  000873  11                 	db	17
   109  000874  04                 	db	4
   110  000875  0A                 	db	10
   111  000876  0E                 	db	14
   112  000877  11                 	db	17
   113  000878  1F                 	db	31
   114  000879  10                 	db	16
   115  00087A  0E                 	db	14
   116  00087B  00                 	db	0
   117  00087C  08                 	db	8
   118  00087D  04                 	db	4
   119  00087E  0E                 	db	14
   120  00087F  01                 	db	1
   121  000880  0F                 	db	15
   122  000881  11                 	db	17
   123  000882  0F                 	db	15
   124  000883  00                 	db	0
   125  000884  04                 	db	4
   126  000885  0A                 	db	10
   127  000886  0E                 	db	14
   128  000887  01                 	db	1
   129  000888  0F                 	db	15
   130  000889  11                 	db	17
   131  00088A  0F                 	db	15
   132  00088B  00                 	db	0
   133                           
   134                           ;initializer for _randx
   135  00088C  0001               	dw	1
   136  00088E  0000               	dw	0
   137  0000                     _TRISCbits	set	3988
   138  0000                     _PORTAbits	set	3968
   139  0000                     _PORTD	set	3971
   140  0000                     _ANSELbits	set	3966
   141  0000                     _TRISA	set	3986
   142  0000                     _ANSEL	set	3966
   143  0000                     _TRISB	set	3987
   144  0000                     _ANSELH	set	3967
   145  0000                     _TRISD	set	3989
   146  0000                     _TMR1	set	4046
   147  0000                     _RCREG	set	4014
   148  0000                     _TXREG	set	4013
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _TXSTAbits	set	4012
   151  0000                     _BAUDCONbits	set	4024
   152  0000                     _SPBRG	set	4015
   153  0000                     _SPBRGH	set	4016
   154  0000                     _ADCON2bits	set	4032
   155  0000                     _ADCON1	set	4033
   156  0000                     _ADCON0bits	set	4034
   157  0000                     _T1CONbits	set	4045
   158  0000                     _RCIF	set	31989
   159                           
   160                           	psect	smallconst
   161  000600                     __psmallconst:
   162                           	opt callstack 0
   163  000600  00                 	db	0
   164  000601                     STR_1:
   165                           
   166                           ; BSR set to: 0
   167  000601  4C                 	db	76	;'L'
   168  000602  41                 	db	65	;'A'
   169  000603  42                 	db	66	;'B'
   170  000604  36                 	db	54	;'6'
   171  000605  20                 	db	32
   172  000606  49                 	db	73	;'I'
   173  000607  73                 	db	115	;'s'
   174  000608  61                 	db	97	;'a'
   175  000609  6B                 	db	107	;'k'
   176  00060A  20                 	db	32
   177  00060B  42                 	db	66	;'B'
   178  00060C  65                 	db	101	;'e'
   179  00060D  64                 	db	100	;'d'
   180  00060E  61                 	db	97	;'a'
   181  00060F  72                 	db	114	;'r'
   182  000610  64                 	db	100	;'d'
   183  000611  00                 	db	0
   184                           
   185                           ; #config settings
   186  000612  00                 	db	0	; dummy byte at the end
   187  0000                     
   188                           	psect	cinit
   189  00093A                     __pcinit:
   190                           	opt callstack 0
   191  00093A                     start_initialization:
   192                           	opt callstack 0
   193  00093A                     __initialization:
   194                           	opt callstack 0
   195                           
   196                           ; Initialize objects allocated to BANK0 (68 bytes)
   197                           ; load TBLPTR registers with __pidataBANK0
   198  00093A  0E4C               	movlw	low __pidataBANK0
   199  00093C  6EF6               	movwf	tblptrl,c
   200  00093E  0E08               	movlw	high __pidataBANK0
   201  000940  6EF7               	movwf	tblptrh,c
   202  000942  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   203  000944  6EF8               	movwf	tblptru,c
   204  000946  EE00  F060         	lfsr	0,__pdataBANK0
   205  00094A  EE10 F044          	lfsr	1,68
   206  00094E                     copy_data0:
   207  00094E  0009               	tblrd		*+
   208  000950  CFF5 FFEE          	movff	tablat,postinc0
   209  000954  50E5               	movf	postdec1,w,c
   210  000956  50E1               	movf	fsr1l,w,c
   211  000958  E1FA               	bnz	copy_data0
   212                           
   213                           ; Clear objects allocated to BANK1 (168 bytes)
   214  00095A  EE01  F000         	lfsr	0,__pbssBANK1
   215  00095E  0EA8               	movlw	168
   216  000960                     clear_0:
   217  000960  6AEE               	clrf	postinc0,c
   218  000962  06E8               	decf	wreg,f,c
   219  000964  E1FD               	bnz	clear_0
   220  000966                     end_of_initialization:
   221                           	opt callstack 0
   222  000966                     __end_of__initialization:
   223                           	opt callstack 0
   224  000966  0100               	movlb	0
   225  000968  EFB6  F004         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	dataBANK0
   228  000060                     __pdataBANK0:
   229                           	opt callstack 0
   230  000060                     _matCGRAM:
   231                           	opt callstack 0
   232  000060                     	ds	64
   233  0000A0                     _randx:
   234                           	opt callstack 0
   235  0000A0                     	ds	4
   236                           
   237                           	psect	bssBANK1
   238  000100                     __pbssBANK1:
   239                           	opt callstack 0
   240  000100                     _m_tabMines:
   241                           	opt callstack 0
   242  000100                     	ds	84
   243  000154                     _m_tabVue:
   244                           	opt callstack 0
   245  000154                     	ds	84
   246                           
   247                           	psect	cstackBANK0
   248  0000A4                     __pcstackBANK0:
   249                           	opt callstack 0
   250  0000A4                     ??_lcd_ecrireDonnees:
   251  0000A4                     ??_lcd_busy:
   252  0000A4                     srand@x:
   253                           	opt callstack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256  0000A4                     	ds	1
   257  0000A5                     lcd_ecrireDonnees@donnee:
   258                           	opt callstack 0
   259  0000A5                     lcd_busy@adresse:
   260                           	opt callstack 0
   261                           
   262                           ; 1 bytes @ 0x1
   263  0000A5                     	ds	1
   264  0000A6                     ??_lcd_resetSequence:
   265  0000A6                     lcd_wrCom@commande:
   266                           	opt callstack 0
   267  0000A6                     lcd_wrData@caractere:
   268                           	opt callstack 0
   269                           
   270                           ; 1 bytes @ 0x2
   271  0000A6                     	ds	1
   272  0000A7                     ??_lcd_initCGRam:
   273  0000A7                     lcd_ecritChar@car:
   274                           	opt callstack 0
   275                           
   276                           ; 1 bytes @ 0x3
   277  0000A7                     	ds	1
   278  0000A8                     lcd_ecritChar@posRam:
   279                           	opt callstack 0
   280                           
   281                           ; 1 bytes @ 0x4
   282  0000A8                     	ds	1
   283  0000A9                     lcd_initCGRam@i:
   284                           	opt callstack 0
   285  0000A9                     lcd_putMessage@chaine:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0x5
   289  0000A9                     	ds	1
   290  0000AA                     lcd_initCGRam@j:
   291                           	opt callstack 0
   292                           
   293                           ; 1 bytes @ 0x6
   294  0000AA                     	ds	1
   295  0000AB                     ??_lcd_putMessage:
   296                           
   297                           ; 1 bytes @ 0x7
   298  0000AB                     	ds	2
   299  0000AD                     lcd_putMessage@j:
   300                           	opt callstack 0
   301                           
   302                           ; 1 bytes @ 0x9
   303  0000AD                     	ds	1
   304  0000AE                     ??_main:
   305                           
   306                           ; 1 bytes @ 0xA
   307  0000AE                     	ds	1
   308                           
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 46 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   328 ;;      Params:         0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0
   330 ;;      Temps:          0       1       0       0       0       0       0
   331 ;;      Totals:         0       1       0       0       0       0       0
   332 ;;Total ram usage:        1 bytes
   333 ;; Hardware stack levels required when called:    6
   334 ;; This function calls:
   335 ;;		_initialisation
   336 ;;		_lcd_init
   337 ;;		_lcd_putMessage
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text0
   344  00096C                     __ptext0:
   345                           	opt callstack 0
   346  00096C                     _main:
   347                           	opt callstack 25
   348  00096C                     
   349                           ;main.c: 48: initialisation();
   350  00096C  EC83  F004         	call	_initialisation	;wreg free
   351  000970                     
   352                           ;main.c: 49: lcd_init();
   353  000970  ECCE  F004         	call	_lcd_init	;wreg free
   354  000974                     
   355                           ;main.c: 50: lcd_putMessage("LAB6 Isak Bedard");
   356  000974  0E01               	movlw	low STR_1
   357  000976  0100               	movlb	0	; force () banked
   358  000978  6FA9               	movwf	lcd_putMessage@chaine& (0+255),b
   359  00097A  0E06               	movlw	high STR_1
   360  00097C  6FAA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   361  00097E  EC5B  F003         	call	_lcd_putMessage	;wreg free
   362  000982                     l1326:
   363                           
   364                           ;main.c: 52: {;main.c: 53: _delay((unsigned long)((100)*(1000000/4000.0)));
   365  000982  0E21               	movlw	33
   366  000984  0100               	movlb	0	; force () banked
   367  000986  6FAE               	movwf	??_main& (0+255),b
   368  000988  0E76               	movlw	118
   369  00098A                     u167:
   370  00098A  2EE8               	decfsz	wreg,f,c
   371  00098C  D7FE               	bra	u167
   372  00098E  2FAE               	decfsz	??_main& (0+255),f,b
   373  000990  D7FC               	bra	u167
   374  000992  F000               	nop	
   375  000994  EFC1  F004         	goto	l1326
   376  000998  EF00  F000         	goto	start
   377  00099C                     __end_of_main:
   378                           	opt callstack 0
   379                           
   380 ;; *************** function _lcd_putMessage *****************
   381 ;; Defined at:
   382 ;;		line 387 in file "Lcd4Lignes.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
   385 ;;		 -> STR_1(17), 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  j               1    9[BANK0 ] unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   397 ;;      Params:         0       2       0       0       0       0       0
   398 ;;      Locals:         0       1       0       0       0       0       0
   399 ;;      Temps:          0       2       0       0       0       0       0
   400 ;;      Totals:         0       5       0       0       0       0       0
   401 ;;Total ram usage:        5 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    4
   404 ;; This function calls:
   405 ;;		_lcd_ecritChar
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text1
   412  0006B6                     __ptext1:
   413                           	opt callstack 0
   414  0006B6                     _lcd_putMessage:
   415                           	opt callstack 26
   416  0006B6                     
   417                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
   418  0006B6  0E00               	movlw	0
   419  0006B8  0100               	movlb	0	; force () banked
   420  0006BA  6FAD               	movwf	lcd_putMessage@j& (0+255),b
   421  0006BC  EF76  F003         	goto	l1318
   422  0006C0                     l1314:
   423                           
   424                           ; BSR set to: 0
   425                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
   426  0006C0  0100               	movlb	0	; force () banked
   427  0006C2  51AD               	movf	lcd_putMessage@j& (0+255),w,b
   428  0006C4  0100               	movlb	0	; force () banked
   429  0006C6  25A9               	addwf	lcd_putMessage@chaine& (0+255),w,b
   430  0006C8  0100               	movlb	0	; force () banked
   431  0006CA  6FAB               	movwf	??_lcd_putMessage& (0+255),b
   432  0006CC  0E00               	movlw	0
   433  0006CE  0100               	movlb	0	; force () banked
   434  0006D0  21AA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   435  0006D2  0100               	movlb	0	; force () banked
   436  0006D4  6FAC               	movwf	(??_lcd_putMessage+1)& (0+255),b
   437  0006D6  C0AB  FFF6         	movff	??_lcd_putMessage,tblptrl
   438  0006DA  C0AC  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   439  0006DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   440  0006DE  6AF8               	clrf	tblptru,c
   441  0006E0                     	endif
   442  0006E0                     	if	0	;tblptru may be non-zero
   443  0006E0                     	endif
   444  0006E0  0008               	tblrd		*
   445  0006E2  50F5               	movf	tablat,w,c
   446  0006E4  ECFC  F003         	call	_lcd_ecritChar
   447  0006E8  0100               	movlb	0	; force () banked
   448  0006EA  2BAD               	incf	lcd_putMessage@j& (0+255),f,b
   449  0006EC                     l1318:
   450                           
   451                           ; BSR set to: 0
   452  0006EC  0100               	movlb	0	; force () banked
   453  0006EE  51AD               	movf	lcd_putMessage@j& (0+255),w,b
   454  0006F0  0100               	movlb	0	; force () banked
   455  0006F2  25A9               	addwf	lcd_putMessage@chaine& (0+255),w,b
   456  0006F4  0100               	movlb	0	; force () banked
   457  0006F6  6FAB               	movwf	??_lcd_putMessage& (0+255),b
   458  0006F8  0E00               	movlw	0
   459  0006FA  0100               	movlb	0	; force () banked
   460  0006FC  21AA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   461  0006FE  0100               	movlb	0	; force () banked
   462  000700  6FAC               	movwf	(??_lcd_putMessage+1)& (0+255),b
   463  000702  C0AB  FFF6         	movff	??_lcd_putMessage,tblptrl
   464  000706  C0AC  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   465  00070A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   466  00070A  6AF8               	clrf	tblptru,c
   467  00070C                     	endif
   468  00070C                     	if	0	;tblptru may be non-zero
   469  00070C                     	endif
   470  00070C  0008               	tblrd		*
   471  00070E  50F5               	movf	tablat,w,c
   472  000710  0900               	iorlw	0
   473  000712  A4D8               	btfss	status,2,c
   474  000714  EF8E  F003         	goto	u151
   475  000718  EF90  F003         	goto	u150
   476  00071C                     u151:
   477  00071C  EF60  F003         	goto	l1314
   478  000720                     u150:
   479  000720                     
   480                           ; BSR set to: 0
   481  000720  0012               	return		;funcret
   482  000722                     __end_of_lcd_putMessage:
   483                           	opt callstack 0
   484                           
   485 ;; *************** function _lcd_ecritChar *****************
   486 ;; Defined at:
   487 ;;		line 359 in file "Lcd4Lignes.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  car             1    wreg     unsigned char 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  car             1    3[BANK0 ] unsigned char 
   492 ;;  posRam          1    4[BANK0 ] unsigned char 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2, status,0, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   502 ;;      Params:         0       0       0       0       0       0       0
   503 ;;      Locals:         0       2       0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0       0       0
   505 ;;      Totals:         0       2       0       0       0       0       0
   506 ;;Total ram usage:        2 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; Hardware stack levels required when called:    3
   509 ;; This function calls:
   510 ;;		_lcd_wrCom
   511 ;;		_lcd_wrData
   512 ;; This function is called by:
   513 ;;		_lcd_putMessage
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text2
   518  0007F8                     __ptext2:
   519                           	opt callstack 0
   520  0007F8                     _lcd_ecritChar:
   521                           	opt callstack 26
   522                           
   523                           ; BSR set to: 0
   524                           ;incstack = 0
   525                           ;lcd_ecritChar@car stored from wreg
   526  0007F8  0100               	movlb	0	; force () banked
   527  0007FA  6FA7               	movwf	lcd_ecritChar@car& (0+255),b
   528  0007FC                     
   529                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
   530  0007FC  0100               	movlb	0	; force () banked
   531  0007FE  51A7               	movf	lcd_ecritChar@car& (0+255),w,b
   532  000800  EC69  F004         	call	_lcd_wrData
   533  000804  0100               	movlb	0	; force () banked
   534  000806  6FA8               	movwf	lcd_ecritChar@posRam& (0+255),b
   535                           
   536                           ;Lcd4Lignes.c: 364: switch(posRam)
   537  000808  EF15  F004         	goto	l1178
   538  00080C                     l1170:
   539                           
   540                           ; BSR set to: 0
   541                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
   542  00080C  0EC0               	movlw	192
   543  00080E  EC91  F003         	call	_lcd_wrCom
   544                           
   545                           ;Lcd4Lignes.c: 368: break;
   546  000812  EF25  F004         	goto	l145
   547  000816                     l1172:
   548                           
   549                           ; BSR set to: 0
   550                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
   551  000816  0E94               	movlw	148
   552  000818  EC91  F003         	call	_lcd_wrCom
   553                           
   554                           ;Lcd4Lignes.c: 371: break;
   555  00081C  EF25  F004         	goto	l145
   556  000820                     l1174:
   557                           
   558                           ; BSR set to: 0
   559                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
   560  000820  0ED4               	movlw	212
   561  000822  EC91  F003         	call	_lcd_wrCom
   562                           
   563                           ;Lcd4Lignes.c: 374: break;
   564  000826  EF25  F004         	goto	l145
   565  00082A                     l1178:
   566                           
   567                           ; BSR set to: 0
   568  00082A  0100               	movlb	0	; force () banked
   569  00082C  51A8               	movf	lcd_ecritChar@posRam& (0+255),w,b
   570                           
   571                           ; Switch size 1, requested type "simple"
   572                           ; Number of cases is 3, Range of values is 148 to 212
   573                           ; switch strategies available:
   574                           ; Name         Instructions Cycles
   575                           ; simple_byte           10     6 (average)
   576                           ;	Chosen strategy is simple_byte
   577  00082E  0A94               	xorlw	148	; case 148
   578  000830  B4D8               	btfsc	status,2,c
   579  000832  EF06  F004         	goto	l1170
   580  000836  0A54               	xorlw	84	; case 192
   581  000838  B4D8               	btfsc	status,2,c
   582  00083A  EF10  F004         	goto	l1174
   583  00083E  0A14               	xorlw	20	; case 212
   584  000840  B4D8               	btfsc	status,2,c
   585  000842  EF0B  F004         	goto	l1172
   586  000846  EF25  F004         	goto	l145
   587  00084A                     l145:
   588  00084A  0012               	return		;funcret
   589  00084C                     __end_of_lcd_ecritChar:
   590                           	opt callstack 0
   591                           
   592 ;; *************** function _lcd_init *****************
   593 ;; Defined at:
   594 ;;		line 258 in file "Lcd4Lignes.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   608 ;;      Params:         0       0       0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    5
   615 ;; This function calls:
   616 ;;		_lcd_initCGRam
   617 ;;		_lcd_resetSequence
   618 ;;		_lcd_wrCom
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text3
   625  00099C                     __ptext3:
   626                           	opt callstack 0
   627  00099C                     _lcd_init:
   628                           	opt callstack 25
   629  00099C                     
   630                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
   631  00099C  ECC7  F003         	call	_lcd_resetSequence	;wreg free
   632                           
   633                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
   634  0009A0  0E28               	movlw	40
   635  0009A2  EC91  F003         	call	_lcd_wrCom
   636                           
   637                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
   638  0009A6  0E0F               	movlw	15
   639  0009A8  EC91  F003         	call	_lcd_wrCom
   640                           
   641                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
   642  0009AC  0E01               	movlw	1
   643  0009AE  EC91  F003         	call	_lcd_wrCom
   644                           
   645                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
   646  0009B2  0E06               	movlw	6
   647  0009B4  EC91  F003         	call	_lcd_wrCom
   648                           
   649                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
   650  0009B8  0E80               	movlw	128
   651  0009BA  EC91  F003         	call	_lcd_wrCom
   652  0009BE                     
   653                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
   654  0009BE  EC0A  F003         	call	_lcd_initCGRam	;wreg free
   655  0009C2  0012               	return		;funcret
   656  0009C4                     __end_of_lcd_init:
   657                           	opt callstack 0
   658                           
   659 ;; *************** function _lcd_resetSequence *****************
   660 ;; Defined at:
   661 ;;		line 221 in file "Lcd4Lignes.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   675 ;;      Params:         0       0       0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0
   677 ;;      Temps:          0       1       0       0       0       0       0
   678 ;;      Totals:         0       1       0       0       0       0       0
   679 ;;Total ram usage:        1 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    1
   682 ;; This function calls:
   683 ;;		_lcd_ecrireDonnees
   684 ;;		_lcd_strobeEnableBit
   685 ;; This function is called by:
   686 ;;		_lcd_init
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text4
   691  00078E                     __ptext4:
   692                           	opt callstack 0
   693  00078E                     _lcd_resetSequence:
   694                           	opt callstack 28
   695  00078E                     
   696                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
   697  00078E  0E00               	movlw	0
   698  000790  6E95               	movwf	149,c	;volatile
   699  000792                     
   700                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
   701  000792  0E0D               	movlw	13
   702  000794  0100               	movlb	0	; force () banked
   703  000796  6FA6               	movwf	??_lcd_resetSequence& (0+255),b
   704  000798  0EFB               	movlw	251
   705  00079A                     u177:
   706  00079A  2EE8               	decfsz	wreg,f,c
   707  00079C  D7FE               	bra	u177
   708  00079E  2FA6               	decfsz	??_lcd_resetSequence& (0+255),f,b
   709  0007A0  D7FC               	bra	u177
   710  0007A2  F000 F000          	nop2	
   711  0007A6                     
   712                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
   713  0007A6  9080               	bcf	128,0,c	;volatile
   714  0007A8                     
   715                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
   716  0007A8  9280               	bcf	128,1,c	;volatile
   717  0007AA                     
   718                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
   719  0007AA  0E03               	movlw	3
   720  0007AC  ECE2  F004         	call	_lcd_ecrireDonnees
   721  0007B0                     
   722                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
   723  0007B0  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
   724  0007B4                     
   725                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
   726  0007B4  0E03               	movlw	3
   727  0007B6                     u187:
   728  0007B6  2EE8               	decfsz	wreg,f,c
   729  0007B8  D7FE               	bra	u187
   730  0007BA  F000               	nop	
   731  0007BC                     
   732                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
   733  0007BC  0E03               	movlw	3
   734  0007BE  ECE2  F004         	call	_lcd_ecrireDonnees
   735  0007C2                     
   736                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
   737  0007C2  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
   738  0007C6                     
   739                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
   740  0007C6  0E03               	movlw	3
   741  0007C8                     u197:
   742  0007C8  2EE8               	decfsz	wreg,f,c
   743  0007CA  D7FE               	bra	u197
   744  0007CC  F000               	nop	
   745  0007CE                     
   746                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
   747  0007CE  0E03               	movlw	3
   748  0007D0  ECE2  F004         	call	_lcd_ecrireDonnees
   749  0007D4                     
   750                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
   751  0007D4  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
   752  0007D8                     
   753                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
   754  0007D8  0E03               	movlw	3
   755  0007DA                     u207:
   756  0007DA  2EE8               	decfsz	wreg,f,c
   757  0007DC  D7FE               	bra	u207
   758  0007DE  F000               	nop	
   759  0007E0                     
   760                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
   761  0007E0  0E02               	movlw	2
   762  0007E2  ECE2  F004         	call	_lcd_ecrireDonnees
   763  0007E6                     
   764                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
   765  0007E6  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
   766  0007EA                     
   767                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
   768  0007EA  0E03               	movlw	3
   769  0007EC                     u217:
   770  0007EC  2EE8               	decfsz	wreg,f,c
   771  0007EE  D7FE               	bra	u217
   772  0007F0  F000               	nop	
   773  0007F2                     
   774                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
   775  0007F2  0E0F               	movlw	15
   776  0007F4  6E95               	movwf	149,c	;volatile
   777  0007F6  0012               	return		;funcret
   778  0007F8                     __end_of_lcd_resetSequence:
   779                           	opt callstack 0
   780                           
   781 ;; *************** function _lcd_initCGRam *****************
   782 ;; Defined at:
   783 ;;		line 417 in file "Lcd4Lignes.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  j               1    6[BANK0 ] unsigned char 
   788 ;;  i               1    5[BANK0 ] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   798 ;;      Params:         0       0       0       0       0       0       0
   799 ;;      Locals:         0       2       0       0       0       0       0
   800 ;;      Temps:          0       2       0       0       0       0       0
   801 ;;      Totals:         0       4       0       0       0       0       0
   802 ;;Total ram usage:        4 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    4
   805 ;; This function calls:
   806 ;;		_lcd_curseurHome
   807 ;;		_lcd_wrCom
   808 ;;		_lcd_wrData
   809 ;; This function is called by:
   810 ;;		_lcd_init
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text5
   815  000614                     __ptext5:
   816                           	opt callstack 0
   817  000614                     _lcd_initCGRam:
   818                           	opt callstack 25
   819  000614                     
   820                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
   821  000614  0E40               	movlw	64
   822  000616  EC91  F003         	call	_lcd_wrCom
   823  00061A                     
   824                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
   825  00061A  0E00               	movlw	0
   826  00061C  0100               	movlb	0	; force () banked
   827  00061E  6FA9               	movwf	lcd_initCGRam@i& (0+255),b
   828  000620                     
   829                           ; BSR set to: 0
   830  000620  0E07               	movlw	7
   831  000622  0100               	movlb	0	; force () banked
   832  000624  65A9               	cpfsgt	lcd_initCGRam@i& (0+255),b
   833  000626  EF17  F003         	goto	u41
   834  00062A  EF19  F003         	goto	u40
   835  00062E                     u41:
   836  00062E  EF1B  F003         	goto	l1150
   837  000632                     u40:
   838  000632  EF58  F003         	goto	l1166
   839  000636                     l1150:
   840                           
   841                           ; BSR set to: 0
   842                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
   843  000636  0E00               	movlw	0
   844  000638  0100               	movlb	0	; force () banked
   845  00063A  6FAA               	movwf	lcd_initCGRam@j& (0+255),b
   846  00063C                     
   847                           ; BSR set to: 0
   848  00063C  0E07               	movlw	7
   849  00063E  0100               	movlb	0	; force () banked
   850  000640  65AA               	cpfsgt	lcd_initCGRam@j& (0+255),b
   851  000642  EF25  F003         	goto	u51
   852  000646  EF27  F003         	goto	u50
   853  00064A                     u51:
   854  00064A  EF29  F003         	goto	l1156
   855  00064E                     u50:
   856  00064E  EF4D  F003         	goto	l1162
   857  000652                     l1156:
   858                           
   859                           ; BSR set to: 0
   860                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
   861  000652  0100               	movlb	0	; force () banked
   862  000654  51A9               	movf	lcd_initCGRam@i& (0+255),w,b
   863  000656  0D08               	mullw	8
   864  000658  0E60               	movlw	low _matCGRAM
   865  00065A  0100               	movlb	0	; force () banked
   866  00065C  6FA7               	movwf	??_lcd_initCGRam& (0+255),b
   867  00065E  0E00               	movlw	high _matCGRAM
   868  000660  6FA8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
   869  000662  50F3               	movf	243,w,c
   870  000664  27A7               	addwf	??_lcd_initCGRam& (0+255),f,b
   871  000666  50F4               	movf	244,w,c
   872  000668  23A8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
   873  00066A  0100               	movlb	0	; force () banked
   874  00066C  51AA               	movf	lcd_initCGRam@j& (0+255),w,b
   875  00066E  0100               	movlb	0	; force () banked
   876  000670  25A7               	addwf	??_lcd_initCGRam& (0+255),w,b
   877  000672  6ED9               	movwf	fsr2l,c
   878  000674  0100               	movlb	0	; force () banked
   879  000676  0E00               	movlw	0
   880  000678  0100               	movlb	0	; force () banked
   881  00067A  21A8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
   882  00067C  6EDA               	movwf	fsr2h,c
   883  00067E  50DF               	movf	indf2,w,c
   884  000680  EC69  F004         	call	_lcd_wrData
   885  000684  0100               	movlb	0	; force () banked
   886  000686  2BAA               	incf	lcd_initCGRam@j& (0+255),f,b
   887  000688                     
   888                           ; BSR set to: 0
   889  000688  0E07               	movlw	7
   890  00068A  0100               	movlb	0	; force () banked
   891  00068C  65AA               	cpfsgt	lcd_initCGRam@j& (0+255),b
   892  00068E  EF4B  F003         	goto	u61
   893  000692  EF4D  F003         	goto	u60
   894  000696                     u61:
   895  000696  EF29  F003         	goto	l1156
   896  00069A                     u60:
   897  00069A                     l1162:
   898                           
   899                           ; BSR set to: 0
   900  00069A  0100               	movlb	0	; force () banked
   901  00069C  2BA9               	incf	lcd_initCGRam@i& (0+255),f,b
   902  00069E                     
   903                           ; BSR set to: 0
   904  00069E  0E07               	movlw	7
   905  0006A0  0100               	movlb	0	; force () banked
   906  0006A2  65A9               	cpfsgt	lcd_initCGRam@i& (0+255),b
   907  0006A4  EF56  F003         	goto	u71
   908  0006A8  EF58  F003         	goto	u70
   909  0006AC                     u71:
   910  0006AC  EF1B  F003         	goto	l1150
   911  0006B0                     u70:
   912  0006B0                     l1166:
   913                           
   914                           ; BSR set to: 0
   915                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
   916  0006B0  ECF8  F004         	call	_lcd_curseurHome	;wreg free
   917  0006B4  0012               	return		;funcret
   918  0006B6                     __end_of_lcd_initCGRam:
   919                           	opt callstack 0
   920                           
   921 ;; *************** function _lcd_wrData *****************
   922 ;; Defined at:
   923 ;;		line 188 in file "Lcd4Lignes.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  caractere       1    wreg     unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  caractere       1    2[BANK0 ] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      unsigned char 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   937 ;;      Params:         0       0       0       0       0       0       0
   938 ;;      Locals:         0       1       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0
   940 ;;      Totals:         0       1       0       0       0       0       0
   941 ;;Total ram usage:        1 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    2
   944 ;; This function calls:
   945 ;;		_lcd_busy
   946 ;;		_lcd_ecrireDonnees
   947 ;;		_lcd_strobeEnableBit
   948 ;; This function is called by:
   949 ;;		_lcd_ecritChar
   950 ;;		_lcd_initCGRam
   951 ;;		_lcd_effaceChar
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text6
   956  0008D2                     __ptext6:
   957                           	opt callstack 0
   958  0008D2                     _lcd_wrData:
   959                           	opt callstack 26
   960                           
   961                           ;incstack = 0
   962                           ;lcd_wrData@caractere stored from wreg
   963  0008D2  0100               	movlb	0	; force () banked
   964  0008D4  6FA6               	movwf	lcd_wrData@caractere& (0+255),b
   965  0008D6                     
   966                           ;Lcd4Lignes.c: 190: lcd_busy();
   967  0008D6  EC48  F004         	call	_lcd_busy	;wreg free
   968  0008DA                     
   969                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
   970  0008DA  0E00               	movlw	0
   971  0008DC  6E95               	movwf	149,c	;volatile
   972  0008DE                     
   973                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
   974  0008DE  8080               	bsf	128,0,c	;volatile
   975  0008E0                     
   976                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
   977  0008E0  9280               	bcf	128,1,c	;volatile
   978  0008E2                     
   979                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
   980  0008E2  0100               	movlb	0	; force () banked
   981  0008E4  39A6               	swapf	lcd_wrData@caractere& (0+255),w,b
   982  0008E6  0B0F               	andlw	15
   983  0008E8  ECE2  F004         	call	_lcd_ecrireDonnees
   984  0008EC                     
   985                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
   986  0008EC  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
   987  0008F0                     
   988                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
   989  0008F0  0100               	movlb	0	; force () banked
   990  0008F2  51A6               	movf	lcd_wrData@caractere& (0+255),w,b
   991  0008F4  ECE2  F004         	call	_lcd_ecrireDonnees
   992  0008F8                     
   993                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
   994  0008F8  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
   995  0008FC                     
   996                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
   997  0008FC  0E0F               	movlw	15
   998  0008FE  6E95               	movwf	149,c	;volatile
   999  000900                     
  1000                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  1001                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  1002  000900  EC48  F004         	call	_lcd_busy	;wreg free
  1003  000904  0012               	return		;funcret
  1004  000906                     __end_of_lcd_wrData:
  1005                           	opt callstack 0
  1006                           
  1007 ;; *************** function _lcd_curseurHome *****************
  1008 ;; Defined at:
  1009 ;;		line 288 in file "Lcd4Lignes.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1023 ;;      Params:         0       0       0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0
  1026 ;;      Totals:         0       0       0       0       0       0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    3
  1030 ;; This function calls:
  1031 ;;		_lcd_wrCom
  1032 ;; This function is called by:
  1033 ;;		_lcd_initCGRam
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text7
  1038  0009F0                     __ptext7:
  1039                           	opt callstack 0
  1040  0009F0                     _lcd_curseurHome:
  1041                           	opt callstack 25
  1042  0009F0                     
  1043                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  1044  0009F0  0E02               	movlw	2
  1045  0009F2  EC91  F003         	call	_lcd_wrCom
  1046  0009F6  0012               	return		;funcret
  1047  0009F8                     __end_of_lcd_curseurHome:
  1048                           	opt callstack 0
  1049                           
  1050 ;; *************** function _lcd_wrCom *****************
  1051 ;; Defined at:
  1052 ;;		line 156 in file "Lcd4Lignes.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  commande        1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  commande        1    2[BANK0 ] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      unsigned char 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1066 ;;      Params:         0       0       0       0       0       0       0
  1067 ;;      Locals:         0       1       0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0
  1069 ;;      Totals:         0       1       0       0       0       0       0
  1070 ;;Total ram usage:        1 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    2
  1073 ;; This function calls:
  1074 ;;		_lcd_busy
  1075 ;;		_lcd_ecrireDonnees
  1076 ;;		_lcd_strobeEnableBit
  1077 ;; This function is called by:
  1078 ;;		_lcd_init
  1079 ;;		_lcd_curseurHome
  1080 ;;		_lcd_ecritChar
  1081 ;;		_lcd_initCGRam
  1082 ;;		_lcd_effaceAffichage
  1083 ;;		_lcd_gotoXY
  1084 ;;		_lcd_cacheCurseur
  1085 ;;		_lcd_montreCurseur
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text8
  1090  000722                     __ptext8:
  1091                           	opt callstack 0
  1092  000722                     _lcd_wrCom:
  1093                           	opt callstack 26
  1094                           
  1095                           ;incstack = 0
  1096                           ;lcd_wrCom@commande stored from wreg
  1097  000722  0100               	movlb	0	; force () banked
  1098  000724  6FA6               	movwf	lcd_wrCom@commande& (0+255),b
  1099  000726                     
  1100                           ;Lcd4Lignes.c: 158: lcd_busy();
  1101  000726  EC48  F004         	call	_lcd_busy	;wreg free
  1102  00072A                     
  1103                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  1104  00072A  0E00               	movlw	0
  1105  00072C  6E95               	movwf	149,c	;volatile
  1106  00072E                     
  1107                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  1108  00072E  9080               	bcf	128,0,c	;volatile
  1109  000730                     
  1110                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  1111  000730  9280               	bcf	128,1,c	;volatile
  1112  000732                     
  1113                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  1114  000732  0100               	movlb	0	; force () banked
  1115  000734  39A6               	swapf	lcd_wrCom@commande& (0+255),w,b
  1116  000736  0B0F               	andlw	15
  1117  000738  ECE2  F004         	call	_lcd_ecrireDonnees
  1118  00073C                     
  1119                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  1120  00073C  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
  1121  000740                     
  1122                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  1123  000740  0100               	movlb	0	; force () banked
  1124  000742  51A6               	movf	lcd_wrCom@commande& (0+255),w,b
  1125  000744  ECE2  F004         	call	_lcd_ecrireDonnees
  1126  000748                     
  1127                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  1128  000748  ECFC  F004         	call	_lcd_strobeEnableBit	;wreg free
  1129  00074C                     
  1130                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1131  00074C  0E03               	movlw	3
  1132  00074E                     u227:
  1133  00074E  2EE8               	decfsz	wreg,f,c
  1134  000750  D7FE               	bra	u227
  1135  000752  F000               	nop	
  1136  000754                     
  1137                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  1138  000754  0100               	movlb	0	; force () banked
  1139  000756  05A6               	decf	lcd_wrCom@commande& (0+255),w,b
  1140  000758  B4D8               	btfsc	status,2,c
  1141  00075A  EFB1  F003         	goto	u21
  1142  00075E  EFB3  F003         	goto	u20
  1143  000762                     u21:
  1144  000762  EFBD  F003         	goto	l1066
  1145  000766                     u20:
  1146  000766                     
  1147                           ; BSR set to: 0
  1148  000766  0E02               	movlw	2
  1149  000768  0100               	movlb	0	; force () banked
  1150  00076A  19A6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  1151  00076C  A4D8               	btfss	status,2,c
  1152  00076E  EFBB  F003         	goto	u31
  1153  000772  EFBD  F003         	goto	u30
  1154  000776                     u31:
  1155  000776  EFC2  F003         	goto	l1068
  1156  00077A                     u30:
  1157  00077A                     l1066:
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  1161  00077A  0EA6               	movlw	166
  1162  00077C                     u237:
  1163  00077C  2EE8               	decfsz	wreg,f,c
  1164  00077E  D7FE               	bra	u237
  1165  000780  F000 F000          	nop2	
  1166  000784                     l1068:
  1167                           
  1168                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  1169  000784  0E0F               	movlw	15
  1170  000786  6E95               	movwf	149,c	;volatile
  1171  000788                     
  1172                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  1173  000788  EC48  F004         	call	_lcd_busy	;wreg free
  1174  00078C  0012               	return		;funcret
  1175  00078E                     __end_of_lcd_wrCom:
  1176                           	opt callstack 0
  1177                           
  1178 ;; *************** function _lcd_strobeEnableBit *****************
  1179 ;; Defined at:
  1180 ;;		line 431 in file "Lcd4Lignes.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		None
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0
  1197 ;;      Totals:         0       0       0       0       0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_lcd_wrCom
  1204 ;;		_lcd_wrData
  1205 ;;		_lcd_resetSequence
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text9
  1210  0009F8                     __ptext9:
  1211                           	opt callstack 0
  1212  0009F8                     _lcd_strobeEnableBit:
  1213                           	opt callstack 27
  1214  0009F8                     
  1215                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  1216  0009F8  8480               	bsf	128,2,c	;volatile
  1217                           
  1218                           ;Lcd4Lignes.c: 434: __nop();
  1219  0009FA  F000               	nop	
  1220                           
  1221                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  1222  0009FC  9480               	bcf	128,2,c	;volatile
  1223  0009FE  0012               	return		;funcret
  1224  000A00                     __end_of_lcd_strobeEnableBit:
  1225                           	opt callstack 0
  1226                           
  1227 ;; *************** function _lcd_ecrireDonnees *****************
  1228 ;; Defined at:
  1229 ;;		line 107 in file "Lcd4Lignes.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  donnee          1    wreg     unsigned char 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  donnee          1    1[BANK0 ] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1243 ;;      Params:         0       0       0       0       0       0       0
  1244 ;;      Locals:         0       1       0       0       0       0       0
  1245 ;;      Temps:          0       1       0       0       0       0       0
  1246 ;;      Totals:         0       2       0       0       0       0       0
  1247 ;;Total ram usage:        2 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_lcd_wrCom
  1253 ;;		_lcd_wrData
  1254 ;;		_lcd_resetSequence
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text10
  1259  0009C4                     __ptext10:
  1260                           	opt callstack 0
  1261  0009C4                     _lcd_ecrireDonnees:
  1262                           	opt callstack 27
  1263                           
  1264                           ;incstack = 0
  1265                           ;lcd_ecrireDonnees@donnee stored from wreg
  1266  0009C4  0100               	movlb	0	; force () banked
  1267  0009C6  6FA5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  1268  0009C8                     
  1269                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  1270  0009C8  CF83 F0A4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  1271  0009CC  0EF0               	movlw	240
  1272  0009CE  0100               	movlb	0	; force () banked
  1273  0009D0  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1274  0009D2  0100               	movlb	0	; force () banked
  1275  0009D4  51A5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  1276  0009D6  0B0F               	andlw	15
  1277  0009D8  0100               	movlb	0	; force () banked
  1278  0009DA  11A4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1279  0009DC  6E83               	movwf	131,c	;volatile
  1280  0009DE                     
  1281                           ; BSR set to: 0
  1282  0009DE  0012               	return		;funcret
  1283  0009E0                     __end_of_lcd_ecrireDonnees:
  1284                           	opt callstack 0
  1285                           
  1286 ;; *************** function _lcd_busy *****************
  1287 ;; Defined at:
  1288 ;;		line 124 in file "Lcd4Lignes.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  adresse         1    1[BANK0 ] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1302 ;;      Params:         0       0       0       0       0       0       0
  1303 ;;      Locals:         0       1       0       0       0       0       0
  1304 ;;      Temps:          0       1       0       0       0       0       0
  1305 ;;      Totals:         0       2       0       0       0       0       0
  1306 ;;Total ram usage:        2 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		_lcd_lireDonnees
  1311 ;; This function is called by:
  1312 ;;		_lcd_wrCom
  1313 ;;		_lcd_wrData
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text11
  1318  000890                     __ptext11:
  1319                           	opt callstack 0
  1320  000890                     _lcd_busy:
  1321                           	opt callstack 26
  1322  000890                     
  1323                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  1324  000890  9080               	bcf	128,0,c	;volatile
  1325                           
  1326                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  1327  000892  8280               	bsf	128,1,c	;volatile
  1328  000894                     l96:
  1329                           
  1330                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  1331  000894  8480               	bsf	128,2,c	;volatile
  1332                           
  1333                           ;Lcd4Lignes.c: 134: __nop();
  1334  000896  F000               	nop	
  1335  000898                     
  1336                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  1337  000898  EC00  F005         	call	_lcd_lireDonnees	;wreg free
  1338  00089C  0100               	movlb	0	; force () banked
  1339  00089E  6FA4               	movwf	??_lcd_busy& (0+255),b
  1340  0008A0  39A4               	swapf	??_lcd_busy& (0+255),w,b
  1341  0008A2  0BF0               	andlw	240
  1342  0008A4  0100               	movlb	0	; force () banked
  1343  0008A6  6FA5               	movwf	lcd_busy@adresse& (0+255),b
  1344  0008A8                     
  1345                           ; BSR set to: 0
  1346                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  1347  0008A8  9480               	bcf	128,2,c	;volatile
  1348  0008AA                     
  1349                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  1350  0008AA  8480               	bsf	128,2,c	;volatile
  1351  0008AC                     
  1352                           ;Lcd4Lignes.c: 139: __nop();
  1353  0008AC  F000               	nop	
  1354                           
  1355                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  1356  0008AE  EC00  F005         	call	_lcd_lireDonnees	;wreg free
  1357  0008B2  0100               	movlb	0	; force () banked
  1358  0008B4  13A5               	iorwf	lcd_busy@adresse& (0+255),f,b
  1359  0008B6                     
  1360                           ; BSR set to: 0
  1361                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  1362  0008B6  9480               	bcf	128,2,c	;volatile
  1363  0008B8                     
  1364                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  1365  0008B8  0100               	movlb	0	; force () banked
  1366  0008BA  BFA5               	btfsc	lcd_busy@adresse& (0+255),7,b
  1367  0008BC  EF62  F004         	goto	u11
  1368  0008C0  EF64  F004         	goto	u10
  1369  0008C4                     u11:
  1370  0008C4  EF4A  F004         	goto	l96
  1371  0008C8                     u10:
  1372  0008C8                     
  1373                           ; BSR set to: 0
  1374                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  1375  0008C8  9280               	bcf	128,1,c	;volatile
  1376  0008CA                     
  1377                           ; BSR set to: 0
  1378                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  1379  0008CA  0100               	movlb	0	; force () banked
  1380  0008CC  51A5               	movf	lcd_busy@adresse& (0+255),w,b
  1381  0008CE  0B7F               	andlw	127
  1382  0008D0                     
  1383                           ; BSR set to: 0
  1384  0008D0  0012               	return		;funcret
  1385  0008D2                     __end_of_lcd_busy:
  1386                           	opt callstack 0
  1387                           
  1388 ;; *************** function _lcd_lireDonnees *****************
  1389 ;; Defined at:
  1390 ;;		line 93 in file "Lcd4Lignes.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      unsigned char 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1404 ;;      Params:         0       0       0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_lcd_busy
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text12
  1418  000A00                     __ptext12:
  1419                           	opt callstack 0
  1420  000A00                     _lcd_lireDonnees:
  1421                           	opt callstack 26
  1422  000A00                     
  1423                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  1424  000A00  5083               	movf	131,w,c	;volatile
  1425  000A02  0B0F               	andlw	15
  1426  000A04  0012               	return		;funcret
  1427  000A06                     __end_of_lcd_lireDonnees:
  1428                           	opt callstack 0
  1429                           
  1430 ;; *************** function _initialisation *****************
  1431 ;; Defined at:
  1432 ;;		line 62 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1446 ;;      Params:         0       0       0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		_srand
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text13
  1461  000906                     __ptext13:
  1462                           	opt callstack 0
  1463  000906                     _initialisation:
  1464                           	opt callstack 29
  1465  000906                     
  1466                           ;main.c: 64: TRISD = 0;
  1467  000906  0E00               	movlw	0
  1468  000908  6E95               	movwf	149,c	;volatile
  1469                           
  1470                           ;main.c: 65: ANSELH = 0;
  1471  00090A  0E00               	movlw	0
  1472  00090C  6E7F               	movwf	127,c	;volatile
  1473  00090E                     
  1474                           ;main.c: 66: TRISB = 0xFF;
  1475  00090E  6893               	setf	147,c	;volatile
  1476                           
  1477                           ;main.c: 67: ANSEL = 0;
  1478  000910  0E00               	movlw	0
  1479  000912  6E7E               	movwf	126,c	;volatile
  1480                           
  1481                           ;main.c: 68: TRISA = 0;
  1482  000914  0E00               	movlw	0
  1483  000916  6E92               	movwf	146,c	;volatile
  1484  000918                     
  1485                           ;main.c: 72: T1CONbits.TMR1ON = 1;
  1486  000918  80CD               	bsf	205,0,c	;volatile
  1487  00091A                     
  1488                           ;main.c: 73: srand(TMR1);
  1489  00091A  CFCE F0A4          	movff	4046,srand@x	;volatile
  1490  00091E  CFCF F0A5          	movff	4047,srand@x+1	;volatile
  1491  000922  ECF0  F004         	call	_srand	;wreg free
  1492  000926                     
  1493                           ;main.c: 75: ANSELbits.ANS7 = 1;
  1494  000926  8E7E               	bsf	126,7,c	;volatile
  1495  000928                     
  1496                           ;main.c: 76: ADCON0bits.ADON = 1;
  1497  000928  80C2               	bsf	194,0,c	;volatile
  1498  00092A                     
  1499                           ;main.c: 77: ADCON1 = 0;
  1500  00092A  0E00               	movlw	0
  1501  00092C  6EC1               	movwf	193,c	;volatile
  1502  00092E                     
  1503                           ;main.c: 78: ADCON2bits.ADFM = 0;
  1504  00092E  9EC0               	bcf	192,7,c	;volatile
  1505  000930                     
  1506                           ;main.c: 79: ADCON2bits.ACQT = 0;
  1507  000930  0EC7               	movlw	-57
  1508  000932  16C0               	andwf	192,f,c	;volatile
  1509  000934                     
  1510                           ;main.c: 80: ADCON2bits.ADCS = 0;
  1511  000934  0EF8               	movlw	-8
  1512  000936  16C0               	andwf	192,f,c	;volatile
  1513  000938  0012               	return		;funcret
  1514  00093A                     __end_of_initialisation:
  1515                           	opt callstack 0
  1516                           
  1517 ;; *************** function _srand *****************
  1518 ;; Defined at:
  1519 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  x               2    0[BANK0 ] unsigned int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		status,2
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1533 ;;      Params:         0       2       0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0
  1536 ;;      Totals:         0       2       0       0       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_initialisation
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text14
  1547  0009E0                     __ptext14:
  1548                           	opt callstack 0
  1549  0009E0                     _srand:
  1550                           	opt callstack 29
  1551  0009E0  C0A4  F0A0         	movff	srand@x,_randx
  1552  0009E4  C0A5  F0A1         	movff	srand@x+1,_randx+1
  1553  0009E8  0100               	movlb	0	; () banked
  1554  0009EA  6BA2               	clrf	(_randx+2)& (0+255),b
  1555  0009EC  6BA3               	clrf	(_randx+3)& (0+255),b
  1556  0009EE                     
  1557                           ; BSR set to: 0
  1558  0009EE  0012               	return		;funcret
  1559  0009F0                     __end_of_srand:
  1560                           	opt callstack 0
  1561                           
  1562                           	psect	param0
  1563  0000                     tosu	equ	0xFFF
  1564                           tosh	equ	0xFFE
  1565                           tosl	equ	0xFFD
  1566                           stkptr	equ	0xFFC
  1567                           pclatu	equ	0xFFB
  1568                           pclath	equ	0xFFA
  1569                           pcl	equ	0xFF9
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           prodh	equ	0xFF4
  1575                           prodl	equ	0xFF3
  1576                           indf0	equ	0xFEF
  1577                           postinc0	equ	0xFEE
  1578                           postdec0	equ	0xFED
  1579                           preinc0	equ	0xFEC
  1580                           plusw0	equ	0xFEB
  1581                           fsr0h	equ	0xFEA
  1582                           fsr0l	equ	0xFE9
  1583                           wreg	equ	0xFE8
  1584                           indf1	equ	0xFE7
  1585                           postinc1	equ	0xFE6
  1586                           postdec1	equ	0xFE5
  1587                           preinc1	equ	0xFE4
  1588                           plusw1	equ	0xFE3
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           bsr	equ	0xFE0
  1592                           indf2	equ	0xFDF
  1593                           postinc2	equ	0xFDE
  1594                           postdec2	equ	0xFDD
  1595                           preinc2	equ	0xFDC
  1596                           plusw2	equ	0xFDB
  1597                           fsr2h	equ	0xFDA
  1598                           fsr2l	equ	0xFD9
  1599                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     11      79
    BANK1           256      0     168
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    _initialisation->_srand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     969
                                             10 BANK0      1     1      0
                     _initialisation
                           _lcd_init
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     376
                                              5 BANK0      5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     210
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     495
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      15
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     375
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0      75
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     105
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     105
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      30
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      A8       6       65.6%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      B      4F       4       49.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7      14        0.0%
DATA                 0      0      F7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 13:03:41 2019

                          l47 0938                            l90 0A04                            l93 09DE  
                          l96 0894                            l97 08C8                            l98 08D0  
                          u10 08C8                            u11 08C4                            u20 0766  
                          u21 0762                            u30 077A                            u31 0776  
                          u40 0632                            u41 062E                            u50 064E  
                          u51 064A                            u60 069A                            u61 0696  
                          u70 06B0                            u71 06AC                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l110 07F6                           l104 078C  
                         l113 09C2                           l107 0904                           l119 09F6  
                         l151 0720                           l145 084A                           l164 06B4  
                         l167 09FE                           l881 09EE                  __CFG_CPB$OFF 000000  
                         u150 0720                           u207 07DA                           u151 071C  
                         u217 07EC                           u227 074E                           u237 077C  
                         u167 098A                           u177 079A                  __CFG_CPD$OFF 000000  
                         u187 07B6                           u197 07C8                  __CFG_BORV$18 000000  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                          l1010 0A00  
                        l1020 08A8                          l1100 0900                          l1030 08B8  
                        l1022 08AA                          l1014 09C8                          l1110 0792  
                        l1032 08B8                          l1024 08AA                          l1016 0890  
                        l1040 0726                          l1104 09F0                          l1120 07B4  
                        l1112 07A6                          l1200 099C                          l1034 08CA  
                        l1026 08AC                          l1018 0898                          l1050 0732  
                        l1042 072A                          l1130 07D4                          l1122 07BC  
                        l1114 07A8                          l1202 09BE                          l1300 0926  
                        l1028 08B6                          l1060 074C                          l1052 073C  
                        l1044 072E                          l1140 07F2                          l1132 07D8  
                        l1124 07C2                          l1116 07AA                          l1108 078E  
                        l1310 0934                          l1302 0928                          l1038 09F8  
                        l1070 0788                          l1062 0754                          l1054 0740  
                        l1046 072E                          l1150 0636                          l1142 0614  
                        l1134 07E0                          l1126 07C6                          l1118 07B0  
                        l1304 092A                          l1072 0788                          l1064 0766  
                        l1056 0740                          l1048 0730                          l1080 08DE  
                        l1160 0688                          l1152 063C                          l1144 061A  
                        l1136 07E6                          l1128 07CE                          l1312 06B6  
                        l1320 096C                          l1306 092E                          l1066 077A  
                        l1058 0748                          l1090 08F0                          l1082 08DE  
                        l1162 069A                          l1146 0620                          l1138 07EA  
                        l1170 080C                          l1314 06C0                          l1322 0970  
                        l1308 0930                          l1068 0784                          l1092 08F0  
                        l1084 08E0                          l1076 08D6                          l1164 069E  
                        l1156 0652                          l1172 0816                          l1316 06E8  
                        l1324 0974                          l1094 08F8                          l1086 08E2  
                        l1078 08DA                          l1158 0684                          l1166 06B0  
                        l1174 0820                          l1318 06EC                          l1326 0982  
                        l1096 08FC                          l1088 08EC                          l1168 07FC  
                        l1290 09E0                          l1098 08FC                          l1178 082A  
                        l1292 0906                          l1294 090E                          l1296 0918  
                        l1298 091A                          STR_1 0601                          _RCIF 007CF5  
                        _TMR1 000FCE              ??_initialisation 00A6                          _main 096C  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 00A9                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 00A7                         ?_main 00A4  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00A7                         _randx 00A0  
                       _srand 09E0                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000               __initialization 093A  
                __end_of_main 099C          lcd_putMessage@chaine 00A9                        ??_main 00AE  
               __activetblptr 000003                        _ADCON1 000FC1                        ?_srand 00A4  
                      _ANSELH 000F7F                __CFG_WDTEN$OFF 000000                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 00A9                lcd_initCGRam@j 00AA  
            __end_of_lcd_busy 08D2              __end_of_lcd_init 09C4                __CFG_STVREN$ON 000000  
                      clear_0 0960                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        srand@x 00A4  
           _lcd_resetSequence 078E                    __accesstop 0060       __end_of__initialization 0966  
         _lcd_strobeEnableBit 09F8            ?_lcd_resetSequence 00A4                 ___rparam_used 000000  
                __pidataBANK0 084C           ??_lcd_resetSequence 00A6                 __end_of_srand 09F0  
        ?_lcd_strobeEnableBit 00A4            __size_of_lcd_wrCom 006C     __end_of_lcd_resetSequence 07F8  
                     ??_srand 00A6      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 09C4  
                  __pbssBANK1 0100              ??_lcd_putMessage 00AB            ?_lcd_ecrireDonnees 00A4  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00A4         ??_lcd_strobeEnableBit 00A4  
                  _lcd_wrData 08D2     __end_of_lcd_ecrireDonnees 09E0                     ?_lcd_busy 00A4  
                   ?_lcd_init 00A4       lcd_ecrireDonnees@donnee 00A5                    _m_tabMines 0100  
                     __Hparam 0000                       __Lparam 0000             __end_of_lcd_wrCom 078E  
                __psmallconst 0600                       __pcinit 093A                     _ANSELbits 000F7E  
                     __ramtop 0600                       __ptext0 096C                       __ptext1 06B6  
                     __ptext2 07F8                       __ptext3 099C                       __ptext4 078E  
                     __ptext5 0614                       __ptext6 08D2                       __ptext7 09F0  
                     __ptext8 0722                       __ptext9 09F8         __end_of_lcd_ecritChar 084C  
             lcd_busy@adresse 00A5                     _T1CONbits 000FCD              lcd_ecritChar@car 00A7  
                  ??_lcd_busy 00A4                    ??_lcd_init 00AB    __size_of_lcd_resetSequence 006A  
        end_of_initialization 0966         __end_of_lcd_initCGRam 06B6             ??_lcd_lireDonnees 00A4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postinc0 000FEE  
     __size_of_initialisation 0034             ??_lcd_curseurHome 00A7           lcd_ecritChar@posRam 00A8  
                   _PORTAbits 000F80                     _TRISCbits 000F94                   ?_lcd_wrData 00A4  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC                   _BAUDCONbits 000FB8  
         start_initialization 093A           __size_of_lcd_wrData 0034                   __pdataBANK0 0060  
            __CFG_LPT1OSC$OFF 000000                 __pcstackBANK0 00A4             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000   __end_of_lcd_strobeEnableBit 0A00  
              _initialisation 0906                     _lcd_wrCom 0722                   __smallconst 0600  
             _lcd_lireDonnees 0A00           lcd_wrData@caractere 00A6                __size_of_srand 0010  
             _lcd_curseurHome 09F0        __end_of_initialisation 093A              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 006C                    ?_lcd_wrCom 00A4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0                  ??_lcd_wrData 00A6             lcd_wrCom@commande 00A6  
                   copy_data0 094E                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00A4            __CFG_BOREN$SBORDIS 000000  
          __end_of_lcd_wrData 0906        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00AD  
     __end_of_lcd_lireDonnees 0A06                      _matCGRAM 0060       __end_of_lcd_curseurHome 09F8  
                    __ptext10 09C4                      __ptext11 0890                      __ptext12 0A00  
                    __ptext13 0906                      __ptext14 09E0                      _lcd_busy 0890  
                    _lcd_init 099C                      _m_tabVue 0154                 __size_of_main 0030  
                 ??_lcd_wrCom 00A6                 _lcd_ecritChar 07F8                 _lcd_initCGRam 0614  
              _lcd_putMessage 06B6                ?_lcd_ecritChar 00A4              ?_lcd_lireDonnees 00A4  
            ?_lcd_curseurHome 00A4                ?_lcd_initCGRam 00A4             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 0722  
