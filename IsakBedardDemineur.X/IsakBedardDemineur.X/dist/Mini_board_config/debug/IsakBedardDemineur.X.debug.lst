

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 03 14:03:38 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F45K20 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  006C66                     __pidataBANK0:
    84                           	opt callstack 0
    85                           
    86                           ;initializer for _randx
    87  006C66  0001               	dw	1
    88  006C68  0000               	dw	0
    89                           
    90                           	psect	idataBANK1
    91  006D90                     __pidataBANK1:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _matCGRAM
    95  006D90  08                 	db	8
    96  006D91  04                 	db	4
    97  006D92  04                 	db	4
    98  006D93  0A                 	db	10
    99  006D94  11                 	db	17
   100  006D95  1F                 	db	31
   101  006D96  11                 	db	17
   102  006D97  00                 	db	0
   103  006D98  1F                 	db	31
   104  006D99  1B                 	db	27
   105  006D9A  11                 	db	17
   106  006D9B  11                 	db	17
   107  006D9C  11                 	db	17
   108  006D9D  11                 	db	17
   109  006D9E  1B                 	db	27
   110  006D9F  1F                 	db	31
   111  006DA0  00                 	db	0
   112  006DA1  15                 	db	21
   113  006DA2  0E                 	db	14
   114  006DA3  1F                 	db	31
   115  006DA4  1F                 	db	31
   116  006DA5  0E                 	db	14
   117  006DA6  15                 	db	21
   118  006DA7  00                 	db	0
   119  006DA8  0E                 	db	14
   120  006DA9  11                 	db	17
   121  006DAA  15                 	db	21
   122  006DAB  15                 	db	21
   123  006DAC  15                 	db	21
   124  006DAD  0E                 	db	14
   125  006DAE  15                 	db	21
   126  006DAF  04                 	db	4
   127  006DB0  04                 	db	4
   128  006DB1  04                 	db	4
   129  006DB2  04                 	db	4
   130  006DB3  04                 	db	4
   131  006DB4  0E                 	db	14
   132  006DB5  0E                 	db	14
   133  006DB6  1B                 	db	27
   134  006DB7  11                 	db	17
   135  006DB8  04                 	db	4
   136  006DB9  0A                 	db	10
   137  006DBA  0E                 	db	14
   138  006DBB  11                 	db	17
   139  006DBC  1F                 	db	31
   140  006DBD  10                 	db	16
   141  006DBE  0E                 	db	14
   142  006DBF  00                 	db	0
   143  006DC0  08                 	db	8
   144  006DC1  04                 	db	4
   145  006DC2  0E                 	db	14
   146  006DC3  01                 	db	1
   147  006DC4  0F                 	db	15
   148  006DC5  11                 	db	17
   149  006DC6  0F                 	db	15
   150  006DC7  00                 	db	0
   151  006DC8  04                 	db	4
   152  006DC9  0A                 	db	10
   153  006DCA  0E                 	db	14
   154  006DCB  01                 	db	1
   155  006DCC  0F                 	db	15
   156  006DCD  11                 	db	17
   157  006DCE  0F                 	db	15
   158  006DCF  00                 	db	0
   159  0000                     _TRISCbits	set	3988
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _ANSELbits	set	3966
   163  0000                     _TRISA	set	3986
   164  0000                     _ANSEL	set	3966
   165  0000                     _TRISB	set	3987
   166  0000                     _ANSELH	set	3967
   167  0000                     _TRISD	set	3989
   168  0000                     _PORTBbits	set	3969
   169  0000                     _TMR1	set	4046
   170  0000                     _RCREG	set	4014
   171  0000                     _TXREG	set	4013
   172  0000                     _RCSTAbits	set	4011
   173  0000                     _TXSTAbits	set	4012
   174  0000                     _BAUDCONbits	set	4024
   175  0000                     _SPBRG	set	4015
   176  0000                     _SPBRGH	set	4016
   177  0000                     _ADRESH	set	4036
   178  0000                     _ADCON2bits	set	4032
   179  0000                     _ADCON1	set	4033
   180  0000                     _ADCON0bits	set	4034
   181  0000                     _T1CONbits	set	4045
   182  0000                     _RCIF	set	31989
   183                           
   184                           ; #config settings
   185  0000                     
   186                           	psect	cinit
   187  006FBE                     __pcinit:
   188                           	opt callstack 0
   189  006FBE                     start_initialization:
   190                           	opt callstack 0
   191  006FBE                     __initialization:
   192                           	opt callstack 0
   193                           
   194                           ; Initialize objects allocated to BANK1 (64 bytes)
   195                           ; load TBLPTR registers with __pidataBANK1
   196  006FBE  0E90               	movlw	low __pidataBANK1
   197  006FC0  6EF6               	movwf	tblptrl,c
   198  006FC2  0E6D               	movlw	high __pidataBANK1
   199  006FC4  6EF7               	movwf	tblptrh,c
   200  006FC6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   201  006FC8  6EF8               	movwf	tblptru,c
   202  006FCA  EE01  F054         	lfsr	0,__pdataBANK1
   203  006FCE  EE10 F040          	lfsr	1,64
   204  006FD2                     copy_data0:
   205  006FD2  0009               	tblrd		*+
   206  006FD4  CFF5 FFEE          	movff	tablat,postinc0
   207  006FD8  50E5               	movf	postdec1,w,c
   208  006FDA  50E1               	movf	fsr1l,w,c
   209  006FDC  E1FA               	bnz	copy_data0
   210                           
   211                           ; Initialize objects allocated to BANK0 (4 bytes)
   212                           ; load TBLPTR registers with __pidataBANK0
   213  006FDE  0E66               	movlw	low __pidataBANK0
   214  006FE0  6EF6               	movwf	tblptrl,c
   215  006FE2  0E6C               	movlw	high __pidataBANK0
   216  006FE4  6EF7               	movwf	tblptrh,c
   217  006FE6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   218  006FE8  6EF8               	movwf	tblptru,c
   219  006FEA  EE00  F0D8         	lfsr	0,__pdataBANK0
   220  006FEE  EE10 F004          	lfsr	1,4
   221  006FF2                     copy_data1:
   222  006FF2  0009               	tblrd		*+
   223  006FF4  CFF5 FFEE          	movff	tablat,postinc0
   224  006FF8  50E5               	movf	postdec1,w,c
   225  006FFA  50E1               	movf	fsr1l,w,c
   226  006FFC  E1FA               	bnz	copy_data1
   227                           
   228                           ; Clear objects allocated to BANK1 (84 bytes)
   229  006FFE  EE01  F000         	lfsr	0,__pbssBANK1
   230  007002  0E54               	movlw	84
   231  007004                     clear_0:
   232  007004  6AEE               	clrf	postinc0,c
   233  007006  06E8               	decf	wreg,f,c
   234  007008  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to BANK0 (84 bytes)
   237  00700A  EE00  F060         	lfsr	0,__pbssBANK0
   238  00700E  0E54               	movlw	84
   239  007010                     clear_1:
   240  007010  6AEE               	clrf	postinc0,c
   241  007012  06E8               	decf	wreg,f,c
   242  007014  E1FD               	bnz	clear_1
   243  007016                     end_of_initialization:
   244                           	opt callstack 0
   245  007016                     __end_of__initialization:
   246                           	opt callstack 0
   247  007016  0100               	movlb	0
   248  007018  EF1C  F03A         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssBANK0
   251  000060                     __pbssBANK0:
   252                           	opt callstack 0
   253  000060                     _m_tabMines:
   254                           	opt callstack 0
   255  000060                     	ds	84
   256                           
   257                           	psect	dataBANK0
   258  0000D8                     __pdataBANK0:
   259                           	opt callstack 0
   260  0000D8                     _randx:
   261                           	opt callstack 0
   262  0000D8                     	ds	4
   263                           
   264                           	psect	bssBANK1
   265  000100                     __pbssBANK1:
   266                           	opt callstack 0
   267  000100                     _m_tabVue:
   268                           	opt callstack 0
   269  000100                     	ds	84
   270                           
   271                           	psect	dataBANK1
   272  000154                     __pdataBANK1:
   273                           	opt callstack 0
   274  000154                     _matCGRAM:
   275                           	opt callstack 0
   276  000154                     	ds	64
   277                           
   278                           	psect	cstackBANK0
   279  0000B4                     __pcstackBANK0:
   280                           	opt callstack 0
   281  0000B4                     ??_initTabVue:
   282  0000B4                     ??_getAnalog:
   283  0000B4                     ??_lcd_ecrireDonnees:
   284  0000B4                     ??_lcd_busy:
   285  0000B4                     ?___wmul:
   286                           	opt callstack 0
   287  0000B4                     ?___lmul:
   288                           	opt callstack 0
   289  0000B4                     gagne@pMines:
   290                           	opt callstack 0
   291  0000B4                     ___wmul@multiplier:
   292                           	opt callstack 0
   293  0000B4                     srand@x:
   294                           	opt callstack 0
   295  0000B4                     ___lmul@multiplier:
   296                           	opt callstack 0
   297                           
   298                           ; 4 bytes @ 0x0
   299  0000B4                     	ds	1
   300  0000B5                     getAnalog@canal:
   301                           	opt callstack 0
   302  0000B5                     lcd_ecrireDonnees@donnee:
   303                           	opt callstack 0
   304  0000B5                     lcd_busy@adresse:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x1
   308  0000B5                     	ds	1
   309  0000B6                     ??_gagne:
   310  0000B6                     ??_lcd_resetSequence:
   311  0000B6                     initTabVue@j:
   312                           	opt callstack 0
   313  0000B6                     lcd_wrCom@commande:
   314                           	opt callstack 0
   315  0000B6                     lcd_wrData@caractere:
   316                           	opt callstack 0
   317  0000B6                     ___wmul@multiplicand:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x2
   321  0000B6                     	ds	1
   322  0000B7                     ??_lcd_initCGRam:
   323  0000B7                     initTabVue@i:
   324                           	opt callstack 0
   325  0000B7                     lcd_gotoXY@y:
   326                           	opt callstack 0
   327  0000B7                     lcd_ecritChar@car:
   328                           	opt callstack 0
   329                           
   330                           ; 1 bytes @ 0x3
   331  0000B7                     	ds	1
   332  0000B8                     lcd_gotoXY@x:
   333                           	opt callstack 0
   334  0000B8                     lcd_ecritChar@posRam:
   335                           	opt callstack 0
   336  0000B8                     ___wmul@product:
   337                           	opt callstack 0
   338  0000B8                     ___lmul@multiplicand:
   339                           	opt callstack 0
   340                           
   341                           ; 4 bytes @ 0x4
   342  0000B8                     	ds	1
   343  0000B9                     lcd_initCGRam@i:
   344                           	opt callstack 0
   345  0000B9                     deplace@x:
   346                           	opt callstack 0
   347  0000B9                     lcd_putMessage@chaine:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x5
   351  0000B9                     	ds	1
   352  0000BA                     gagne@nbTuile:
   353                           	opt callstack 0
   354  0000BA                     lcd_initCGRam@j:
   355                           	opt callstack 0
   356  0000BA                     calculToucheCombien@ligne:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x6
   360  0000BA                     	ds	1
   361  0000BB                     gagne@i:
   362                           	opt callstack 0
   363  0000BB                     lcd_putMessage@j:
   364                           	opt callstack 0
   365  0000BB                     deplace@y:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x7
   369  0000BB                     	ds	1
   370  0000BC                     gagne@j:
   371                           	opt callstack 0
   372  0000BC                     afficheTabVue@i:
   373                           	opt callstack 0
   374  0000BC                     afficheTabMines@i:
   375                           	opt callstack 0
   376  0000BC                     calculToucheCombien@colonne:
   377                           	opt callstack 0
   378  0000BC                     ___lmul@product:
   379                           	opt callstack 0
   380                           
   381                           ; 4 bytes @ 0x8
   382  0000BC                     	ds	1
   383  0000BD                     ??_deplace:
   384  0000BD                     enleveTuilesAutour@y:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x9
   388  0000BD                     	ds	1
   389  0000BE                     ??_calculToucheCombien:
   390  0000BE                     ??_enleveTuilesAutour:
   391  0000BE                     deplace@analogX:
   392                           	opt callstack 0
   393                           
   394                           ; 1 bytes @ 0xA
   395  0000BE                     	ds	1
   396  0000BF                     deplace@analogY:
   397                           	opt callstack 0
   398                           
   399                           ; 1 bytes @ 0xB
   400  0000BF                     	ds	1
   401  0000C0                     ?_rand:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0xC
   405  0000C0                     	ds	1
   406  0000C1                     calculToucheCombien@nbMines:
   407                           	opt callstack 0
   408                           
   409                           ; 1 bytes @ 0xD
   410  0000C1                     	ds	1
   411  0000C2                     ?___awmod:
   412                           	opt callstack 0
   413  0000C2                     enleveTuilesAutour@mem:
   414                           	opt callstack 0
   415  0000C2                     calculToucheCombien@i:
   416                           	opt callstack 0
   417  0000C2                     ___awmod@dividend:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xE
   421  0000C2                     	ds	1
   422  0000C3                     enleveTuilesAutour@x:
   423                           	opt callstack 0
   424                           
   425                           ; 1 bytes @ 0xF
   426  0000C3                     	ds	1
   427  0000C4                     enleveTuilesAutour@j:
   428                           	opt callstack 0
   429  0000C4                     calculToucheCombien@j:
   430                           	opt callstack 0
   431  0000C4                     ___awmod@divisor:
   432                           	opt callstack 0
   433                           
   434                           ; 2 bytes @ 0x10
   435  0000C4                     	ds	1
   436  0000C5                     enleveTuilesAutour@i:
   437                           	opt callstack 0
   438                           
   439                           ; 1 bytes @ 0x11
   440  0000C5                     	ds	1
   441  0000C6                     ??_metToucheCombien:
   442  0000C6                     demine@y:
   443                           	opt callstack 0
   444  0000C6                     ___awmod@counter:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x12
   448  0000C6                     	ds	1
   449  0000C7                     ??_demine:
   450  0000C7                     ___awmod@sign:
   451                           	opt callstack 0
   452                           
   453                           ; 1 bytes @ 0x13
   454  0000C7                     	ds	1
   455  0000C8                     rempliMines@nb:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x14
   459  0000C8                     	ds	1
   460  0000C9                     metToucheCombien@i:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x15
   464  0000C9                     	ds	1
   465  0000CA                     ??_rempliMines:
   466  0000CA                     metToucheCombien@j:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0x16
   470  0000CA                     	ds	2
   471  0000CC                     demine@x:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x18
   475  0000CC                     	ds	1
   476  0000CD                     rempliMines@x:
   477                           	opt callstack 0
   478                           
   479                           ; 1 bytes @ 0x19
   480  0000CD                     	ds	1
   481  0000CE                     rempliMines@y:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0x1A
   485  0000CE                     	ds	1
   486  0000CF                     rempliMines@i:
   487                           	opt callstack 0
   488                           
   489                           ; 1 bytes @ 0x1B
   490  0000CF                     	ds	1
   491  0000D0                     rempliMines@j:
   492                           	opt callstack 0
   493                           
   494                           ; 1 bytes @ 0x1C
   495  0000D0                     	ds	1
   496  0000D1                     ??_main:
   497                           
   498                           ; 1 bytes @ 0x1D
   499  0000D1                     	ds	1
   500  0000D2                     main@nbMine:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x1E
   504  0000D2                     	ds	2
   505  0000D4                     main@posX:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x20
   509  0000D4                     	ds	2
   510  0000D6                     main@posY:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x22
   514  0000D6                     	ds	2
   515                           
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 49 in file "main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  posY            2   34[BANK0 ] PTR unsigned char 
   526 ;;		 -> RAM(1535), 
   527 ;;  posX            2   32[BANK0 ] PTR unsigned char 
   528 ;;		 -> RAM(1535), 
   529 ;;  nbMine          2   30[BANK0 ] PTR int 
   530 ;;		 -> RAM(1535), 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   540 ;;      Params:         0       0       0       0       0       0       0
   541 ;;      Locals:         0       6       0       0       0       0       0
   542 ;;      Temps:          0       1       0       0       0       0       0
   543 ;;      Totals:         0       7       0       0       0       0       0
   544 ;;Total ram usage:        7 bytes
   545 ;; Hardware stack levels required when called:    8
   546 ;; This function calls:
   547 ;;		_afficheTabMines
   548 ;;		_afficheTabVue
   549 ;;		_demine
   550 ;;		_deplace
   551 ;;		_gagne
   552 ;;		_initTabVue
   553 ;;		_initialisation
   554 ;;		_lcd_init
   555 ;;		_metToucheCombien
   556 ;;		_rempliMines
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text0
   563  007438                     __ptext0:
   564                           	opt callstack 0
   565  007438                     _main:
   566                           	opt callstack 23
   567  007438                     
   568                           ;main.c: 51: char* posX = 10;
   569  007438  0E0A               	movlw	10
   570  00743A  0100               	movlb	0	; force () banked
   571  00743C  6FD4               	movwf	main@posX& (0+255),b
   572  00743E  0E00               	movlw	0
   573  007440  6FD5               	movwf	(main@posX+1)& (0+255),b
   574                           
   575                           ;main.c: 52: char* posY = 2;
   576  007442  0E02               	movlw	2
   577  007444  0100               	movlb	0	; force () banked
   578  007446  6FD6               	movwf	main@posY& (0+255),b
   579  007448  0E00               	movlw	0
   580  00744A  6FD7               	movwf	(main@posY+1)& (0+255),b
   581                           
   582                           ;main.c: 53: int* nbMine = 15;
   583  00744C  0E0F               	movlw	15
   584  00744E  0100               	movlb	0	; force () banked
   585  007450  6FD2               	movwf	main@nbMine& (0+255),b
   586  007452  0E00               	movlw	0
   587  007454  6FD3               	movwf	(main@nbMine+1)& (0+255),b
   588  007456                     
   589                           ; BSR set to: 0
   590                           ;main.c: 55: initialisation();
   591  007456  ECAE  F036         	call	_initialisation	;wreg free
   592  00745A                     
   593                           ;main.c: 56: lcd_init();
   594  00745A  EC56  F036         	call	_lcd_init	;wreg free
   595  00745E                     
   596                           ;main.c: 57: initTabVue();
   597  00745E  EC6D  F039         	call	_initTabVue	;wreg free
   598  007462                     
   599                           ;main.c: 58: rempliMines(nbMine);
   600  007462  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   601  007466  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   602  00746A  EC03  F03B         	call	_rempliMines	;wreg free
   603  00746E                     
   604                           ;main.c: 59: metToucheCombien();
   605  00746E  ECB1  F03B         	call	_metToucheCombien	;wreg free
   606  007472                     
   607                           ;main.c: 60: afficheTabVue();
   608  007472  ECB2  F037         	call	_afficheTabVue	;wreg free
   609  007476                     l2302:
   610                           
   611                           ;main.c: 63: {;main.c: 64: deplace(&posX, &posY);
   612  007476  0ED4               	movlw	low main@posX
   613  007478  0100               	movlb	0	; force () banked
   614  00747A  6FB9               	movwf	deplace@x& (0+255),b
   615  00747C  0E00               	movlw	high main@posX
   616  00747E  6FBA               	movwf	(deplace@x+1)& (0+255),b
   617  007480  0ED6               	movlw	low main@posY
   618  007482  0100               	movlb	0	; force () banked
   619  007484  6FBB               	movwf	deplace@y& (0+255),b
   620  007486  0E00               	movlw	high main@posY
   621  007488  6FBC               	movwf	(deplace@y+1)& (0+255),b
   622  00748A  EC12  F03D         	call	_deplace	;wreg free
   623  00748E                     
   624                           ;main.c: 65: if(PORTBbits.RB1==0)
   625  00748E  B281               	btfsc	129,1,c	;volatile
   626  007490  EF4C  F03A         	goto	u1431
   627  007494  EF4E  F03A         	goto	u1430
   628  007498                     u1431:
   629  007498  EF80  F03A         	goto	l2314
   630  00749C                     u1430:
   631  00749C                     
   632                           ;main.c: 66: if(demine(posX,posY)==0 || gagne(&nbMine))
   633  00749C  C0D6  F0C6         	movff	main@posY,demine@y
   634  0074A0  0100               	movlb	0	; force () banked
   635  0074A2  51D4               	movf	main@posX& (0+255),w,b
   636  0074A4  EC0E  F038         	call	_demine
   637  0074A8  0900               	iorlw	0
   638  0074AA  B4D8               	btfsc	status,2,c
   639  0074AC  EF5A  F03A         	goto	u1441
   640  0074B0  EF5C  F03A         	goto	u1440
   641  0074B4                     u1441:
   642  0074B4  EF6B  F03A         	goto	l2310
   643  0074B8                     u1440:
   644  0074B8  0ED2               	movlw	low main@nbMine
   645  0074BA  0100               	movlb	0	; force () banked
   646  0074BC  6FB4               	movwf	gagne@pMines& (0+255),b
   647  0074BE  0E00               	movlw	high main@nbMine
   648  0074C0  6FB5               	movwf	(gagne@pMines+1)& (0+255),b
   649  0074C2  EC8D  F03A         	call	_gagne	;wreg free
   650  0074C6  0900               	iorlw	0
   651  0074C8  B4D8               	btfsc	status,2,c
   652  0074CA  EF69  F03A         	goto	u1451
   653  0074CE  EF6B  F03A         	goto	u1450
   654  0074D2                     u1451:
   655  0074D2  EF80  F03A         	goto	l2314
   656  0074D6                     u1450:
   657  0074D6                     l2310:
   658                           
   659                           ;main.c: 67: {;main.c: 68: afficheTabMines();
   660  0074D6  EC85  F037         	call	_afficheTabMines	;wreg free
   661  0074DA                     l76:
   662  0074DA  A281               	btfss	129,1,c	;volatile
   663  0074DC  EF72  F03A         	goto	u1461
   664  0074E0  EF74  F03A         	goto	u1460
   665  0074E4                     u1461:
   666  0074E4  EF6D  F03A         	goto	l76
   667  0074E8                     u1460:
   668  0074E8                     
   669                           ;main.c: 70: initTabVue();
   670  0074E8  EC6D  F039         	call	_initTabVue	;wreg free
   671                           
   672                           ;main.c: 71: rempliMines(nbMine);
   673  0074EC  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   674  0074F0  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   675  0074F4  EC03  F03B         	call	_rempliMines	;wreg free
   676                           
   677                           ;main.c: 72: metToucheCombien();
   678  0074F8  ECB1  F03B         	call	_metToucheCombien	;wreg free
   679                           
   680                           ;main.c: 73: afficheTabVue();
   681  0074FC  ECB2  F037         	call	_afficheTabVue	;wreg free
   682  007500                     l2314:
   683                           
   684                           ;main.c: 74: };main.c: 75: _delay((unsigned long)((100)*(1000000/4000.0)));
   685  007500  0E21               	movlw	33
   686  007502  0100               	movlb	0	; force () banked
   687  007504  6FD1               	movwf	??_main& (0+255),b
   688  007506  0E76               	movlw	118
   689  007508                     u1477:
   690  007508  2EE8               	decfsz	wreg,f,c
   691  00750A  D7FE               	bra	u1477
   692  00750C  2FD1               	decfsz	??_main& (0+255),f,b
   693  00750E  D7FC               	bra	u1477
   694  007510  F000               	nop	
   695  007512  EF3B  F03A         	goto	l2302
   696  007516  EF00  F000         	goto	start
   697  00751A                     __end_of_main:
   698                           	opt callstack 0
   699                           
   700 ;; *************** function _rempliMines *****************
   701 ;; Defined at:
   702 ;;		line 129 in file "main.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  nb              2   20[BANK0 ] int 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  j               1   28[BANK0 ] unsigned char 
   707 ;;  i               1   27[BANK0 ] unsigned char 
   708 ;;  y               1   26[BANK0 ] unsigned char 
   709 ;;  x               1   25[BANK0 ] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   719 ;;      Params:         0       2       0       0       0       0       0
   720 ;;      Locals:         0       4       0       0       0       0       0
   721 ;;      Temps:          0       3       0       0       0       0       0
   722 ;;      Totals:         0       9       0       0       0       0       0
   723 ;;Total ram usage:        9 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    2
   726 ;; This function calls:
   727 ;;		___awmod
   728 ;;		_rand
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text1
   735  007606                     __ptext1:
   736                           	opt callstack 0
   737  007606                     _rempliMines:
   738                           	opt callstack 28
   739  007606                     
   740                           ;main.c: 131: char x, y;;main.c: 133: for (char i = 0; i < 4; i++) {
   741  007606  0E00               	movlw	0
   742  007608  0100               	movlb	0	; force () banked
   743  00760A  6FCF               	movwf	rempliMines@i& (0+255),b
   744  00760C                     
   745                           ; BSR set to: 0
   746  00760C  0E03               	movlw	3
   747  00760E  0100               	movlb	0	; force () banked
   748  007610  65CF               	cpfsgt	rempliMines@i& (0+255),b
   749  007612  EF0D  F03B         	goto	u1131
   750  007616  EF0F  F03B         	goto	u1130
   751  00761A                     u1131:
   752  00761A  EF11  F03B         	goto	l2130
   753  00761E                     u1130:
   754  00761E  EFA2  F03B         	goto	l2154
   755  007622                     l2130:
   756                           
   757                           ; BSR set to: 0
   758                           ;main.c: 134: for (char j = 0; j < 20; j++) {
   759  007622  0E00               	movlw	0
   760  007624  0100               	movlb	0	; force () banked
   761  007626  6FD0               	movwf	rempliMines@j& (0+255),b
   762  007628                     
   763                           ; BSR set to: 0
   764  007628  0E13               	movlw	19
   765  00762A  0100               	movlb	0	; force () banked
   766  00762C  65D0               	cpfsgt	rempliMines@j& (0+255),b
   767  00762E  EF1B  F03B         	goto	u1141
   768  007632  EF1D  F03B         	goto	u1140
   769  007636                     u1141:
   770  007636  EF1F  F03B         	goto	l2136
   771  00763A                     u1140:
   772  00763A  EF42  F03B         	goto	l2142
   773  00763E                     l2136:
   774                           
   775                           ; BSR set to: 0
   776                           ;main.c: 135: m_tabMines[i][j] = ' ';
   777  00763E  0100               	movlb	0	; force () banked
   778  007640  51CF               	movf	rempliMines@i& (0+255),w,b
   779  007642  0D15               	mullw	21
   780  007644  0E60               	movlw	low _m_tabMines
   781  007646  0100               	movlb	0	; force () banked
   782  007648  6FCA               	movwf	??_rempliMines& (0+255),b
   783  00764A  0E00               	movlw	high _m_tabMines
   784  00764C  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   785  00764E  50F3               	movf	243,w,c
   786  007650  27CA               	addwf	??_rempliMines& (0+255),f,b
   787  007652  50F4               	movf	244,w,c
   788  007654  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   789  007656  0100               	movlb	0	; force () banked
   790  007658  51D0               	movf	rempliMines@j& (0+255),w,b
   791  00765A  0100               	movlb	0	; force () banked
   792  00765C  25CA               	addwf	??_rempliMines& (0+255),w,b
   793  00765E  6ED9               	movwf	fsr2l,c
   794  007660  0100               	movlb	0	; force () banked
   795  007662  0E00               	movlw	0
   796  007664  0100               	movlb	0	; force () banked
   797  007666  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   798  007668  6EDA               	movwf	fsr2h,c
   799  00766A  0E20               	movlw	32
   800  00766C  6EDF               	movwf	indf2,c
   801  00766E                     
   802                           ; BSR set to: 0
   803  00766E  0100               	movlb	0	; force () banked
   804  007670  2BD0               	incf	rempliMines@j& (0+255),f,b
   805  007672                     
   806                           ; BSR set to: 0
   807  007672  0E13               	movlw	19
   808  007674  0100               	movlb	0	; force () banked
   809  007676  65D0               	cpfsgt	rempliMines@j& (0+255),b
   810  007678  EF40  F03B         	goto	u1151
   811  00767C  EF42  F03B         	goto	u1150
   812  007680                     u1151:
   813  007680  EF1F  F03B         	goto	l2136
   814  007684                     u1150:
   815  007684                     l2142:
   816                           
   817                           ; BSR set to: 0
   818  007684  0100               	movlb	0	; force () banked
   819  007686  2BCF               	incf	rempliMines@i& (0+255),f,b
   820  007688                     
   821                           ; BSR set to: 0
   822  007688  0E03               	movlw	3
   823  00768A  0100               	movlb	0	; force () banked
   824  00768C  65CF               	cpfsgt	rempliMines@i& (0+255),b
   825  00768E  EF4B  F03B         	goto	u1161
   826  007692  EF4D  F03B         	goto	u1160
   827  007696                     u1161:
   828  007696  EF11  F03B         	goto	l2130
   829  00769A                     u1160:
   830  00769A  EFA2  F03B         	goto	l2154
   831  00769E                     l2146:
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 139: x = rand() % 20;
   835  00769E  EC5A  F037         	call	_rand	;wreg free
   836  0076A2  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   837  0076A6  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   838  0076AA  0E00               	movlw	0
   839  0076AC  0100               	movlb	0	; force () banked
   840  0076AE  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   841  0076B0  0E14               	movlw	20
   842  0076B2  6FC4               	movwf	___awmod@divisor& (0+255),b
   843  0076B4  ECC3  F039         	call	___awmod	;wreg free
   844  0076B8  0100               	movlb	0	; force () banked
   845  0076BA  51C2               	movf	?___awmod& (0+255),w,b
   846  0076BC  0100               	movlb	0	; force () banked
   847  0076BE  6FCD               	movwf	rempliMines@x& (0+255),b
   848                           
   849                           ;main.c: 140: y = rand() % 4;
   850  0076C0  EC5A  F037         	call	_rand	;wreg free
   851  0076C4  0100               	movlb	0	; force () banked
   852  0076C6  51C0               	movf	?_rand& (0+255),w,b
   853  0076C8  0B03               	andlw	3
   854  0076CA  0100               	movlb	0	; force () banked
   855  0076CC  6FCE               	movwf	rempliMines@y& (0+255),b
   856  0076CE                     
   857                           ; BSR set to: 0
   858                           ;main.c: 141: if (m_tabMines[y][x] != 2) {
   859  0076CE  0100               	movlb	0	; force () banked
   860  0076D0  51CE               	movf	rempliMines@y& (0+255),w,b
   861  0076D2  0D15               	mullw	21
   862  0076D4  0E60               	movlw	low _m_tabMines
   863  0076D6  0100               	movlb	0	; force () banked
   864  0076D8  6FCA               	movwf	??_rempliMines& (0+255),b
   865  0076DA  0E00               	movlw	high _m_tabMines
   866  0076DC  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   867  0076DE  50F3               	movf	243,w,c
   868  0076E0  27CA               	addwf	??_rempliMines& (0+255),f,b
   869  0076E2  50F4               	movf	244,w,c
   870  0076E4  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   871  0076E6  0100               	movlb	0	; force () banked
   872  0076E8  51CD               	movf	rempliMines@x& (0+255),w,b
   873  0076EA  0100               	movlb	0	; force () banked
   874  0076EC  25CA               	addwf	??_rempliMines& (0+255),w,b
   875  0076EE  6ED9               	movwf	fsr2l,c
   876  0076F0  0100               	movlb	0	; force () banked
   877  0076F2  0E00               	movlw	0
   878  0076F4  0100               	movlb	0	; force () banked
   879  0076F6  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   880  0076F8  6EDA               	movwf	fsr2h,c
   881  0076FA  0E02               	movlw	2
   882  0076FC  18DE               	xorwf	postinc2,w,c
   883  0076FE  B4D8               	btfsc	status,2,c
   884  007700  EF84  F03B         	goto	u1171
   885  007704  EF86  F03B         	goto	u1170
   886  007708                     u1171:
   887  007708  EFA2  F03B         	goto	l2154
   888  00770C                     u1170:
   889  00770C                     
   890                           ; BSR set to: 0
   891                           ;main.c: 142: m_tabMines[y][x] = 2;
   892  00770C  0100               	movlb	0	; force () banked
   893  00770E  51CE               	movf	rempliMines@y& (0+255),w,b
   894  007710  0D15               	mullw	21
   895  007712  0E60               	movlw	low _m_tabMines
   896  007714  0100               	movlb	0	; force () banked
   897  007716  6FCA               	movwf	??_rempliMines& (0+255),b
   898  007718  0E00               	movlw	high _m_tabMines
   899  00771A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   900  00771C  50F3               	movf	243,w,c
   901  00771E  27CA               	addwf	??_rempliMines& (0+255),f,b
   902  007720  50F4               	movf	244,w,c
   903  007722  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   904  007724  0100               	movlb	0	; force () banked
   905  007726  51CD               	movf	rempliMines@x& (0+255),w,b
   906  007728  0100               	movlb	0	; force () banked
   907  00772A  25CA               	addwf	??_rempliMines& (0+255),w,b
   908  00772C  6ED9               	movwf	fsr2l,c
   909  00772E  0100               	movlb	0	; force () banked
   910  007730  0E00               	movlw	0
   911  007732  0100               	movlb	0	; force () banked
   912  007734  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   913  007736  6EDA               	movwf	fsr2h,c
   914  007738  0E02               	movlw	2
   915  00773A  6EDF               	movwf	indf2,c
   916  00773C                     
   917                           ; BSR set to: 0
   918                           ;main.c: 143: nb--;
   919  00773C  0100               	movlb	0	; force () banked
   920  00773E  07C8               	decf	rempliMines@nb& (0+255),f,b
   921  007740  A0D8               	btfss	status,0,c
   922  007742  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   923  007744                     l2154:
   924                           
   925                           ; BSR set to: 0
   926  007744  0100               	movlb	0	; force () banked
   927  007746  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   928  007748  EFB0  F03B         	goto	u1180
   929  00774C  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   930  00774E  E106               	bnz	u1181
   931  007750  05C8               	decf	rempliMines@nb& (0+255),w,b
   932  007752  B0D8               	btfsc	status,0,c
   933  007754  EFAE  F03B         	goto	u1181
   934  007758  EFB0  F03B         	goto	u1180
   935  00775C                     u1181:
   936  00775C  EF4F  F03B         	goto	l2146
   937  007760                     u1180:
   938  007760                     
   939                           ; BSR set to: 0
   940  007760  0012               	return		;funcret
   941  007762                     __end_of_rempliMines:
   942                           	opt callstack 0
   943                           
   944 ;; *************** function _rand *****************
   945 ;; Defined at:
   946 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  2   12[BANK0 ] int 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   960 ;;      Params:         0       2       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0
   963 ;;      Totals:         0       2       0       0       0       0       0
   964 ;;Total ram usage:        2 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    1
   967 ;; This function calls:
   968 ;;		___lmul
   969 ;; This function is called by:
   970 ;;		_rempliMines
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text2
   975  006EB4                     __ptext2:
   976                           	opt callstack 0
   977  006EB4                     _rand:
   978                           	opt callstack 28
   979  006EB4  C0D8  F0B4         	movff	_randx,___lmul@multiplier
   980  006EB8  C0D9  F0B5         	movff	_randx+1,___lmul@multiplier+1
   981  006EBC  C0DA  F0B6         	movff	_randx+2,___lmul@multiplier+2
   982  006EC0  C0DB  F0B7         	movff	_randx+3,___lmul@multiplier+3
   983  006EC4  0E6D               	movlw	109
   984  006EC6  0100               	movlb	0	; () banked
   985  006EC8  6FB8               	movwf	___lmul@multiplicand& (0+255),b
   986  006ECA  0E4E               	movlw	78
   987  006ECC  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   988  006ECE  0EC6               	movlw	198
   989  006ED0  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   990  006ED2  0E41               	movlw	65
   991  006ED4  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   992  006ED6  ECAD  F038         	call	___lmul	;wreg free
   993  006EDA  C0B4  F0D8         	movff	?___lmul,_randx
   994  006EDE  C0B5  F0D9         	movff	?___lmul+1,_randx+1
   995  006EE2  C0B6  F0DA         	movff	?___lmul+2,_randx+2
   996  006EE6  C0B7  F0DB         	movff	?___lmul+3,_randx+3
   997  006EEA  0E39               	movlw	57
   998  006EEC  0100               	movlb	0	; () banked
   999  006EEE  27D8               	addwf	_randx& (0+255),f,b
  1000  006EF0  0E30               	movlw	48
  1001  006EF2  23D9               	addwfc	(_randx+1)& (0+255),f,b
  1002  006EF4  0E00               	movlw	0
  1003  006EF6  23DA               	addwfc	(_randx+2)& (0+255),f,b
  1004  006EF8  0E00               	movlw	0
  1005  006EFA  23DB               	addwfc	(_randx+3)& (0+255),f,b
  1006  006EFC                     
  1007                           ; BSR set to: 0
  1008  006EFC  0EFF               	movlw	255
  1009  006EFE  15DA               	andwf	(_randx+2)& (0+255),w,b
  1010  006F00  6FC0               	movwf	?_rand& (0+255),b
  1011  006F02  0E7F               	movlw	127
  1012  006F04  15DB               	andwf	(_randx+3)& (0+255),w,b
  1013  006F06  6FC1               	movwf	(?_rand+1)& (0+255),b
  1014  006F08                     
  1015                           ; BSR set to: 0
  1016  006F08  0012               	return		;funcret
  1017  006F0A                     __end_of_rand:
  1018                           	opt callstack 0
  1019                           
  1020 ;; *************** function ___lmul *****************
  1021 ;; Defined at:
  1022 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1025 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  product         4    8[BANK0 ] unsigned long 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  4    0[BANK0 ] unsigned long 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1037 ;;      Params:         0       8       0       0       0       0       0
  1038 ;;      Locals:         0       4       0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0
  1040 ;;      Totals:         0      12       0       0       0       0       0
  1041 ;;Total ram usage:       12 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_rand
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text3
  1051  00715A                     __ptext3:
  1052                           	opt callstack 0
  1053  00715A                     ___lmul:
  1054                           	opt callstack 28
  1055  00715A  0E00               	movlw	0
  1056  00715C  0100               	movlb	0	; () banked
  1057  00715E  6FBC               	movwf	___lmul@product& (0+255),b
  1058  007160  0E00               	movlw	0
  1059  007162  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1060  007164  0E00               	movlw	0
  1061  007166  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1062  007168  0E00               	movlw	0
  1063  00716A  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1064  00716C                     l1902:
  1065                           
  1066                           ; BSR set to: 0
  1067  00716C  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1068  00716E  EFBB  F038         	goto	u831
  1069  007172  EFBD  F038         	goto	u830
  1070  007176                     u831:
  1071  007176  EFC5  F038         	goto	l1906
  1072  00717A                     u830:
  1073  00717A                     
  1074                           ; BSR set to: 0
  1075  00717A  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1076  00717C  27BC               	addwf	___lmul@product& (0+255),f,b
  1077  00717E  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1078  007180  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1079  007182  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1080  007184  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1081  007186  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1082  007188  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1083  00718A                     l1906:
  1084                           
  1085                           ; BSR set to: 0
  1086  00718A  90D8               	bcf	status,0,c
  1087  00718C  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1088  00718E  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1089  007190  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1090  007192  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1091  007194                     
  1092                           ; BSR set to: 0
  1093  007194  90D8               	bcf	status,0,c
  1094  007196  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1095  007198  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1096  00719A  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1097  00719C  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1098  00719E  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1099  0071A0  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1100  0071A2  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1101  0071A4  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1102  0071A6  A4D8               	btfss	status,2,c
  1103  0071A8  EFD8  F038         	goto	u841
  1104  0071AC  EFDA  F038         	goto	u840
  1105  0071B0                     u841:
  1106  0071B0  EFB6  F038         	goto	l1902
  1107  0071B4                     u840:
  1108  0071B4                     
  1109                           ; BSR set to: 0
  1110  0071B4  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1111  0071B8  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1112  0071BC  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1113  0071C0  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1114  0071C4                     
  1115                           ; BSR set to: 0
  1116  0071C4  0012               	return		;funcret
  1117  0071C6                     __end_of___lmul:
  1118                           	opt callstack 0
  1119                           
  1120 ;; *************** function ___awmod *****************
  1121 ;; Defined at:
  1122 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  dividend        2   14[BANK0 ] int 
  1125 ;;  divisor         2   16[BANK0 ] int 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  sign            1   19[BANK0 ] unsigned char 
  1128 ;;  counter         1   18[BANK0 ] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  2   14[BANK0 ] int 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1138 ;;      Params:         0       4       0       0       0       0       0
  1139 ;;      Locals:         0       2       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0
  1141 ;;      Totals:         0       6       0       0       0       0       0
  1142 ;;Total ram usage:        6 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_rempliMines
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text4
  1152  007386                     __ptext4:
  1153                           	opt callstack 0
  1154  007386                     ___awmod:
  1155                           	opt callstack 29
  1156  007386  0E00               	movlw	0
  1157  007388  0100               	movlb	0	; () banked
  1158  00738A  6FC7               	movwf	___awmod@sign& (0+255),b
  1159  00738C                     
  1160                           ; BSR set to: 0
  1161  00738C  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1162  00738E  EFCD  F039         	goto	u1030
  1163  007392  EFCB  F039         	goto	u1031
  1164  007396                     u1031:
  1165  007396  EFD3  F039         	goto	l2048
  1166  00739A                     u1030:
  1167  00739A                     
  1168                           ; BSR set to: 0
  1169  00739A  6DC2               	negf	___awmod@dividend& (0+255),b
  1170  00739C  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1171  00739E  B0D8               	btfsc	status,0,c
  1172  0073A0  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1173  0073A2                     
  1174                           ; BSR set to: 0
  1175  0073A2  0E01               	movlw	1
  1176  0073A4  6FC7               	movwf	___awmod@sign& (0+255),b
  1177  0073A6                     l2048:
  1178                           
  1179                           ; BSR set to: 0
  1180  0073A6  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1181  0073A8  EFDA  F039         	goto	u1040
  1182  0073AC  EFD8  F039         	goto	u1041
  1183  0073B0                     u1041:
  1184  0073B0  EFDE  F039         	goto	l2052
  1185  0073B4                     u1040:
  1186  0073B4                     
  1187                           ; BSR set to: 0
  1188  0073B4  6DC4               	negf	___awmod@divisor& (0+255),b
  1189  0073B6  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1190  0073B8  B0D8               	btfsc	status,0,c
  1191  0073BA  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1192  0073BC                     l2052:
  1193                           
  1194                           ; BSR set to: 0
  1195  0073BC  51C4               	movf	___awmod@divisor& (0+255),w,b
  1196  0073BE  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1197  0073C0  B4D8               	btfsc	status,2,c
  1198  0073C2  EFE5  F039         	goto	u1051
  1199  0073C6  EFE7  F039         	goto	u1050
  1200  0073CA                     u1051:
  1201  0073CA  EF0B  F03A         	goto	l2068
  1202  0073CE                     u1050:
  1203  0073CE                     
  1204                           ; BSR set to: 0
  1205  0073CE  0E01               	movlw	1
  1206  0073D0  6FC6               	movwf	___awmod@counter& (0+255),b
  1207  0073D2  EFEF  F039         	goto	l2058
  1208  0073D6                     l2056:
  1209                           
  1210                           ; BSR set to: 0
  1211  0073D6  90D8               	bcf	status,0,c
  1212  0073D8  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1213  0073DA  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1214  0073DC  2BC6               	incf	___awmod@counter& (0+255),f,b
  1215  0073DE                     l2058:
  1216                           
  1217                           ; BSR set to: 0
  1218  0073DE  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1219  0073E0  EFF4  F039         	goto	u1061
  1220  0073E4  EFF6  F039         	goto	u1060
  1221  0073E8                     u1061:
  1222  0073E8  EFEB  F039         	goto	l2056
  1223  0073EC                     u1060:
  1224  0073EC                     l2060:
  1225                           
  1226                           ; BSR set to: 0
  1227  0073EC  51C4               	movf	___awmod@divisor& (0+255),w,b
  1228  0073EE  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1229  0073F0  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1230  0073F2  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1231  0073F4  A0D8               	btfss	status,0,c
  1232  0073F6  EFFF  F039         	goto	u1071
  1233  0073FA  EF01  F03A         	goto	u1070
  1234  0073FE                     u1071:
  1235  0073FE  EF05  F03A         	goto	l2064
  1236  007402                     u1070:
  1237  007402                     
  1238                           ; BSR set to: 0
  1239  007402  51C4               	movf	___awmod@divisor& (0+255),w,b
  1240  007404  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1241  007406  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1242  007408  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1243  00740A                     l2064:
  1244                           
  1245                           ; BSR set to: 0
  1246  00740A  90D8               	bcf	status,0,c
  1247  00740C  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1248  00740E  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1249  007410                     
  1250                           ; BSR set to: 0
  1251  007410  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1252  007412  EFF6  F039         	goto	l2060
  1253  007416                     l2068:
  1254                           
  1255                           ; BSR set to: 0
  1256  007416  51C7               	movf	___awmod@sign& (0+255),w,b
  1257  007418  B4D8               	btfsc	status,2,c
  1258  00741A  EF11  F03A         	goto	u1081
  1259  00741E  EF13  F03A         	goto	u1080
  1260  007422                     u1081:
  1261  007422  EF17  F03A         	goto	l2072
  1262  007426                     u1080:
  1263  007426                     
  1264                           ; BSR set to: 0
  1265  007426  6DC2               	negf	___awmod@dividend& (0+255),b
  1266  007428  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1267  00742A  B0D8               	btfsc	status,0,c
  1268  00742C  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1269  00742E                     l2072:
  1270                           
  1271                           ; BSR set to: 0
  1272  00742E  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1273  007432  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1274  007436                     
  1275                           ; BSR set to: 0
  1276  007436  0012               	return		;funcret
  1277  007438                     __end_of___awmod:
  1278                           	opt callstack 0
  1279                           
  1280 ;; *************** function _metToucheCombien *****************
  1281 ;; Defined at:
  1282 ;;		line 157 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  j               1   22[BANK0 ] unsigned char 
  1287 ;;  i               1   21[BANK0 ] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         0       0       0       0       0       0       0
  1298 ;;      Locals:         0       2       0       0       0       0       0
  1299 ;;      Temps:          0       3       0       0       0       0       0
  1300 ;;      Totals:         0       5       0       0       0       0       0
  1301 ;;Total ram usage:        5 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    2
  1304 ;; This function calls:
  1305 ;;		_calculToucheCombien
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text5
  1312  007762                     __ptext5:
  1313                           	opt callstack 0
  1314  007762                     _metToucheCombien:
  1315                           	opt callstack 28
  1316  007762                     
  1317                           ;main.c: 159: for (char i = 0; i < 4; i++) {
  1318  007762  0E00               	movlw	0
  1319  007764  0100               	movlb	0	; force () banked
  1320  007766  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1321  007768                     
  1322                           ; BSR set to: 0
  1323  007768  0E03               	movlw	3
  1324  00776A  0100               	movlb	0	; force () banked
  1325  00776C  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1326  00776E  EFBB  F03B         	goto	u1191
  1327  007772  EFBD  F03B         	goto	u1190
  1328  007776                     u1191:
  1329  007776  EFBF  F03B         	goto	l2162
  1330  00777A                     u1190:
  1331  00777A  EF5F  F03C         	goto	l111
  1332  00777E                     l2162:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 160: for (char j = 0; j < 20; j++) {
  1336  00777E  0E00               	movlw	0
  1337  007780  0100               	movlb	0	; force () banked
  1338  007782  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1339  007784                     
  1340                           ; BSR set to: 0
  1341  007784  0E13               	movlw	19
  1342  007786  0100               	movlb	0	; force () banked
  1343  007788  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1344  00778A  EFC9  F03B         	goto	u1201
  1345  00778E  EFCB  F03B         	goto	u1200
  1346  007792                     u1201:
  1347  007792  EFCD  F03B         	goto	l2168
  1348  007796                     u1200:
  1349  007796  EF54  F03C         	goto	l2180
  1350  00779A                     l2168:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;main.c: 161: if (m_tabMines[i][j] != 2)
  1354  00779A  0100               	movlb	0	; force () banked
  1355  00779C  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1356  00779E  0D15               	mullw	21
  1357  0077A0  0E60               	movlw	low _m_tabMines
  1358  0077A2  0100               	movlb	0	; force () banked
  1359  0077A4  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1360  0077A6  0E00               	movlw	high _m_tabMines
  1361  0077A8  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1362  0077AA  50F3               	movf	243,w,c
  1363  0077AC  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1364  0077AE  50F4               	movf	244,w,c
  1365  0077B0  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1366  0077B2  0100               	movlb	0	; force () banked
  1367  0077B4  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1368  0077B6  0100               	movlb	0	; force () banked
  1369  0077B8  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1370  0077BA  6ED9               	movwf	fsr2l,c
  1371  0077BC  0100               	movlb	0	; force () banked
  1372  0077BE  0E00               	movlw	0
  1373  0077C0  0100               	movlb	0	; force () banked
  1374  0077C2  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1375  0077C4  6EDA               	movwf	fsr2h,c
  1376  0077C6  0E02               	movlw	2
  1377  0077C8  18DE               	xorwf	postinc2,w,c
  1378  0077CA  B4D8               	btfsc	status,2,c
  1379  0077CC  EFEA  F03B         	goto	u1211
  1380  0077D0  EFEC  F03B         	goto	u1210
  1381  0077D4                     u1211:
  1382  0077D4  EF12  F03C         	goto	l2172
  1383  0077D8                     u1210:
  1384  0077D8                     
  1385                           ; BSR set to: 0
  1386                           ;main.c: 162: m_tabMines[i][j] = calculToucheCombien(i, j) + 48;
  1387  0077D8  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1388  0077DC  0100               	movlb	0	; force () banked
  1389  0077DE  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1390  0077E0  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1391  0077E4  0100               	movlb	0	; force () banked
  1392  0077E6  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1393  0077E8  ECCF  F03D         	call	_calculToucheCombien	;wreg free
  1394  0077EC  0100               	movlb	0	; force () banked
  1395  0077EE  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1396  0077F0  0E30               	movlw	48
  1397  0077F2  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1398  0077F4  0100               	movlb	0	; force () banked
  1399  0077F6  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1400  0077F8  0D15               	mullw	21
  1401  0077FA  0E60               	movlw	low _m_tabMines
  1402  0077FC  0100               	movlb	0	; force () banked
  1403  0077FE  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1404  007800  0E00               	movlw	high _m_tabMines
  1405  007802  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1406  007804  50F3               	movf	243,w,c
  1407  007806  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1408  007808  50F4               	movf	244,w,c
  1409  00780A  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1410  00780C  0100               	movlb	0	; force () banked
  1411  00780E  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1412  007810  0100               	movlb	0	; force () banked
  1413  007812  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1414  007814  6ED9               	movwf	fsr2l,c
  1415  007816  0100               	movlb	0	; force () banked
  1416  007818  0E00               	movlw	0
  1417  00781A  0100               	movlb	0	; force () banked
  1418  00781C  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1419  00781E  6EDA               	movwf	fsr2h,c
  1420  007820  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1421  007824                     l2172:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;main.c: 163: if (m_tabMines[i][j] == '0')
  1425  007824  0100               	movlb	0	; force () banked
  1426  007826  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1427  007828  0D15               	mullw	21
  1428  00782A  0E60               	movlw	low _m_tabMines
  1429  00782C  0100               	movlb	0	; force () banked
  1430  00782E  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1431  007830  0E00               	movlw	high _m_tabMines
  1432  007832  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1433  007834  50F3               	movf	243,w,c
  1434  007836  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1435  007838  50F4               	movf	244,w,c
  1436  00783A  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1437  00783C  0100               	movlb	0	; force () banked
  1438  00783E  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1439  007840  0100               	movlb	0	; force () banked
  1440  007842  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1441  007844  6ED9               	movwf	fsr2l,c
  1442  007846  0100               	movlb	0	; force () banked
  1443  007848  0E00               	movlw	0
  1444  00784A  0100               	movlb	0	; force () banked
  1445  00784C  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1446  00784E  6EDA               	movwf	fsr2h,c
  1447  007850  0E30               	movlw	48
  1448  007852  18DE               	xorwf	postinc2,w,c
  1449  007854  A4D8               	btfss	status,2,c
  1450  007856  EF2F  F03C         	goto	u1221
  1451  00785A  EF31  F03C         	goto	u1220
  1452  00785E                     u1221:
  1453  00785E  EF49  F03C         	goto	l2176
  1454  007862                     u1220:
  1455  007862                     
  1456                           ; BSR set to: 0
  1457                           ;main.c: 164: m_tabMines[i][j] = ' ';
  1458  007862  0100               	movlb	0	; force () banked
  1459  007864  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1460  007866  0D15               	mullw	21
  1461  007868  0E60               	movlw	low _m_tabMines
  1462  00786A  0100               	movlb	0	; force () banked
  1463  00786C  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1464  00786E  0E00               	movlw	high _m_tabMines
  1465  007870  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1466  007872  50F3               	movf	243,w,c
  1467  007874  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1468  007876  50F4               	movf	244,w,c
  1469  007878  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1470  00787A  0100               	movlb	0	; force () banked
  1471  00787C  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1472  00787E  0100               	movlb	0	; force () banked
  1473  007880  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1474  007882  6ED9               	movwf	fsr2l,c
  1475  007884  0100               	movlb	0	; force () banked
  1476  007886  0E00               	movlw	0
  1477  007888  0100               	movlb	0	; force () banked
  1478  00788A  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1479  00788C  6EDA               	movwf	fsr2h,c
  1480  00788E  0E20               	movlw	32
  1481  007890  6EDF               	movwf	indf2,c
  1482  007892                     l2176:
  1483                           
  1484                           ; BSR set to: 0
  1485  007892  0100               	movlb	0	; force () banked
  1486  007894  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1487  007896                     
  1488                           ; BSR set to: 0
  1489  007896  0E13               	movlw	19
  1490  007898  0100               	movlb	0	; force () banked
  1491  00789A  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1492  00789C  EF52  F03C         	goto	u1231
  1493  0078A0  EF54  F03C         	goto	u1230
  1494  0078A4                     u1231:
  1495  0078A4  EFCD  F03B         	goto	l2168
  1496  0078A8                     u1230:
  1497  0078A8                     l2180:
  1498                           
  1499                           ; BSR set to: 0
  1500  0078A8  0100               	movlb	0	; force () banked
  1501  0078AA  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1502  0078AC                     
  1503                           ; BSR set to: 0
  1504  0078AC  0E03               	movlw	3
  1505  0078AE  0100               	movlb	0	; force () banked
  1506  0078B0  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1507  0078B2  EF5D  F03C         	goto	u1241
  1508  0078B6  EF5F  F03C         	goto	u1240
  1509  0078BA                     u1241:
  1510  0078BA  EFBF  F03B         	goto	l2162
  1511  0078BE                     u1240:
  1512  0078BE                     l111:
  1513                           
  1514                           ; BSR set to: 0
  1515  0078BE  0012               	return		;funcret
  1516  0078C0                     __end_of_metToucheCombien:
  1517                           	opt callstack 0
  1518                           
  1519 ;; *************** function _calculToucheCombien *****************
  1520 ;; Defined at:
  1521 ;;		line 174 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  ligne           2    6[BANK0 ] int 
  1524 ;;  colonne         2    8[BANK0 ] int 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  j               2   16[BANK0 ] int 
  1527 ;;  i               2   14[BANK0 ] int 
  1528 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      unsigned char 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1538 ;;      Params:         0       4       0       0       0       0       0
  1539 ;;      Locals:         0       5       0       0       0       0       0
  1540 ;;      Temps:          0       3       0       0       0       0       0
  1541 ;;      Totals:         0      12       0       0       0       0       0
  1542 ;;Total ram usage:       12 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    1
  1545 ;; This function calls:
  1546 ;;		___wmul
  1547 ;; This function is called by:
  1548 ;;		_metToucheCombien
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text6
  1553  007B9E                     __ptext6:
  1554                           	opt callstack 0
  1555  007B9E                     _calculToucheCombien:
  1556                           	opt callstack 28
  1557  007B9E                     
  1558                           ;main.c: 176: int i = ligne - 1;
  1559  007B9E  0EFF               	movlw	255
  1560  007BA0  0100               	movlb	0	; force () banked
  1561  007BA2  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1562  007BA4  0100               	movlb	0	; force () banked
  1563  007BA6  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1564  007BA8  0EFF               	movlw	255
  1565  007BAA  0100               	movlb	0	; force () banked
  1566  007BAC  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1567  007BAE  0100               	movlb	0	; force () banked
  1568  007BB0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1569                           
  1570                           ;main.c: 177: int j = colonne - 1;
  1571  007BB2  0EFF               	movlw	255
  1572  007BB4  0100               	movlb	0	; force () banked
  1573  007BB6  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1574  007BB8  0100               	movlb	0	; force () banked
  1575  007BBA  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1576  007BBC  0EFF               	movlw	255
  1577  007BBE  0100               	movlb	0	; force () banked
  1578  007BC0  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1579  007BC2  0100               	movlb	0	; force () banked
  1580  007BC4  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1581  007BC6                     
  1582                           ; BSR set to: 0
  1583                           ;main.c: 178: char nbMines = 0;
  1584  007BC6  0E00               	movlw	0
  1585  007BC8  0100               	movlb	0	; force () banked
  1586  007BCA  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1587  007BCC                     
  1588                           ; BSR set to: 0
  1589                           ;main.c: 180: if (i < 0)
  1590  007BCC  0100               	movlb	0	; force () banked
  1591  007BCE  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1592  007BD0  EFEE  F03D         	goto	u850
  1593  007BD4  EFEC  F03D         	goto	u851
  1594  007BD8                     u851:
  1595  007BD8  EFF3  F03D         	goto	l1928
  1596  007BDC                     u850:
  1597  007BDC                     
  1598                           ; BSR set to: 0
  1599                           ;main.c: 181: i = 0;
  1600  007BDC  0E00               	movlw	0
  1601  007BDE  0100               	movlb	0	; force () banked
  1602  007BE0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1603  007BE2  0E00               	movlw	0
  1604  007BE4  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1605  007BE6                     l1928:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 182: if (j < 0)
  1609  007BE6  0100               	movlb	0	; force () banked
  1610  007BE8  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1611  007BEA  EFFB  F03D         	goto	u860
  1612  007BEE  EFF9  F03D         	goto	u861
  1613  007BF2                     u861:
  1614  007BF2  EF71  F03E         	goto	l1944
  1615  007BF6                     u860:
  1616  007BF6                     
  1617                           ; BSR set to: 0
  1618                           ;main.c: 183: j = 0;
  1619  007BF6  0E00               	movlw	0
  1620  007BF8  0100               	movlb	0	; force () banked
  1621  007BFA  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1622  007BFC  0E00               	movlw	0
  1623  007BFE  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1624  007C00  EF71  F03E         	goto	l1944
  1625  007C04                     l1932:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;main.c: 186: for (j = j = colonne - 1; (j <= (colonne + 1))&&(j < 20); j++) {
  1629  007C04  0EFF               	movlw	255
  1630  007C06  0100               	movlb	0	; force () banked
  1631  007C08  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1632  007C0A  0100               	movlb	0	; force () banked
  1633  007C0C  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1634  007C0E  0EFF               	movlw	255
  1635  007C10  0100               	movlb	0	; force () banked
  1636  007C12  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1637  007C14  0100               	movlb	0	; force () banked
  1638  007C16  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1639  007C18  C0C4  F0C4         	movff	calculToucheCombien@j,calculToucheCombien@j
  1640  007C1C  C0C5  F0C5         	movff	calculToucheCombien@j+1,calculToucheCombien@j+1
  1641  007C20  EF42  F03E         	goto	l1938
  1642  007C24                     l1934:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;main.c: 187: if (m_tabMines[i][j] == 2)
  1646  007C24  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1647  007C28  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1648  007C2C  0E00               	movlw	0
  1649  007C2E  0100               	movlb	0	; force () banked
  1650  007C30  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1651  007C32  0E15               	movlw	21
  1652  007C34  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1653  007C36  EC6A  F036         	call	___wmul	;wreg free
  1654  007C3A  0E60               	movlw	low _m_tabMines
  1655  007C3C  0100               	movlb	0	; force () banked
  1656  007C3E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1657  007C40  0E00               	movlw	high _m_tabMines
  1658  007C42  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1659  007C44  0100               	movlb	0	; force () banked
  1660  007C46  51B4               	movf	?___wmul& (0+255),w,b
  1661  007C48  0100               	movlb	0	; force () banked
  1662  007C4A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1663  007C4C  0100               	movlb	0	; force () banked
  1664  007C4E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1665  007C50  0100               	movlb	0	; force () banked
  1666  007C52  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1667  007C54  0100               	movlb	0	; force () banked
  1668  007C56  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1669  007C58  0100               	movlb	0	; force () banked
  1670  007C5A  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1671  007C5C  6ED9               	movwf	fsr2l,c
  1672  007C5E  0100               	movlb	0	; force () banked
  1673  007C60  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1674  007C62  0100               	movlb	0	; force () banked
  1675  007C64  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1676  007C66  6EDA               	movwf	fsr2h,c
  1677  007C68  0E02               	movlw	2
  1678  007C6A  18DE               	xorwf	postinc2,w,c
  1679  007C6C  A4D8               	btfss	status,2,c
  1680  007C6E  EF3B  F03E         	goto	u871
  1681  007C72  EF3D  F03E         	goto	u870
  1682  007C76                     u871:
  1683  007C76  EF3F  F03E         	goto	l120
  1684  007C7A                     u870:
  1685  007C7A                     
  1686                           ; BSR set to: 0
  1687                           ;main.c: 188: nbMines++;
  1688  007C7A  0100               	movlb	0	; force () banked
  1689  007C7C  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1690  007C7E                     l120:
  1691                           
  1692                           ; BSR set to: 0
  1693  007C7E  0100               	movlb	0	; force () banked
  1694  007C80  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1695  007C82  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1696  007C84                     l1938:
  1697                           
  1698                           ; BSR set to: 0
  1699  007C84  0E01               	movlw	1
  1700  007C86  0100               	movlb	0	; force () banked
  1701  007C88  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1702  007C8A  0100               	movlb	0	; force () banked
  1703  007C8C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1704  007C8E  0E00               	movlw	0
  1705  007C90  0100               	movlb	0	; force () banked
  1706  007C92  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1707  007C94  0100               	movlb	0	; force () banked
  1708  007C96  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1709  007C98  0100               	movlb	0	; force () banked
  1710  007C9A  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1711  007C9C  0100               	movlb	0	; force () banked
  1712  007C9E  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1713  007CA0  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1714  007CA2  0A80               	xorlw	128
  1715  007CA4  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1716  007CA6  0100               	movlb	0	; force () banked
  1717  007CA8  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1718  007CAA  0A80               	xorlw	128
  1719  007CAC  0100               	movlb	0	; force () banked
  1720  007CAE  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1721  007CB0  A0D8               	btfss	status,0,c
  1722  007CB2  EF5D  F03E         	goto	u881
  1723  007CB6  EF5F  F03E         	goto	u880
  1724  007CBA                     u881:
  1725  007CBA  EF6E  F03E         	goto	l1942
  1726  007CBE                     u880:
  1727  007CBE                     
  1728                           ; BSR set to: 0
  1729  007CBE  0100               	movlb	0	; force () banked
  1730  007CC0  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1731  007CC2  EF6C  F03E         	goto	u891
  1732  007CC6  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1733  007CC8  E109               	bnz	u890
  1734  007CCA  0E14               	movlw	20
  1735  007CCC  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1736  007CCE  A0D8               	btfss	status,0,c
  1737  007CD0  EF6C  F03E         	goto	u891
  1738  007CD4  EF6E  F03E         	goto	u890
  1739  007CD8                     u891:
  1740  007CD8  EF12  F03E         	goto	l1934
  1741  007CDC                     u890:
  1742  007CDC                     l1942:
  1743                           
  1744                           ; BSR set to: 0
  1745  007CDC  0100               	movlb	0	; force () banked
  1746  007CDE  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1747  007CE0  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1748  007CE2                     l1944:
  1749                           
  1750                           ; BSR set to: 0
  1751  007CE2  0E01               	movlw	1
  1752  007CE4  0100               	movlb	0	; force () banked
  1753  007CE6  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1754  007CE8  0100               	movlb	0	; force () banked
  1755  007CEA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1756  007CEC  0E00               	movlw	0
  1757  007CEE  0100               	movlb	0	; force () banked
  1758  007CF0  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1759  007CF2  0100               	movlb	0	; force () banked
  1760  007CF4  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1761  007CF6  0100               	movlb	0	; force () banked
  1762  007CF8  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1763  007CFA  0100               	movlb	0	; force () banked
  1764  007CFC  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1765  007CFE  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1766  007D00  0A80               	xorlw	128
  1767  007D02  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1768  007D04  0100               	movlb	0	; force () banked
  1769  007D06  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1770  007D08  0A80               	xorlw	128
  1771  007D0A  0100               	movlb	0	; force () banked
  1772  007D0C  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1773  007D0E  A0D8               	btfss	status,0,c
  1774  007D10  EF8C  F03E         	goto	u901
  1775  007D14  EF8E  F03E         	goto	u900
  1776  007D18                     u901:
  1777  007D18  EF9D  F03E         	goto	l1948
  1778  007D1C                     u900:
  1779  007D1C                     
  1780                           ; BSR set to: 0
  1781  007D1C  0100               	movlb	0	; force () banked
  1782  007D1E  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1783  007D20  EF9B  F03E         	goto	u911
  1784  007D24  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1785  007D26  E109               	bnz	u910
  1786  007D28  0E04               	movlw	4
  1787  007D2A  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1788  007D2C  A0D8               	btfss	status,0,c
  1789  007D2E  EF9B  F03E         	goto	u911
  1790  007D32  EF9D  F03E         	goto	u910
  1791  007D36                     u911:
  1792  007D36  EF02  F03E         	goto	l1932
  1793  007D3A                     u910:
  1794  007D3A                     l1948:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;main.c: 189: };main.c: 190: };main.c: 191: return nbMines;
  1798  007D3A  0100               	movlb	0	; force () banked
  1799  007D3C  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1800  007D3E                     
  1801                           ; BSR set to: 0
  1802  007D3E  0012               	return		;funcret
  1803  007D40                     __end_of_calculToucheCombien:
  1804                           	opt callstack 0
  1805                           
  1806 ;; *************** function ___wmul *****************
  1807 ;; Defined at:
  1808 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1811 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  product         2    4[BANK0 ] unsigned int 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  2    0[BANK0 ] unsigned int 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, prodl, prodh
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1823 ;;      Params:         0       4       0       0       0       0       0
  1824 ;;      Locals:         0       2       0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0
  1826 ;;      Totals:         0       6       0       0       0       0       0
  1827 ;;Total ram usage:        6 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_calculToucheCombien
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text7
  1837  006CD4                     __ptext7:
  1838                           	opt callstack 0
  1839  006CD4                     ___wmul:
  1840                           	opt callstack 28
  1841  006CD4  0100               	movlb	0	; () banked
  1842  006CD6  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1843  006CD8  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1844  006CDA  CFF3 F0B8          	movff	prodl,___wmul@product
  1845  006CDE  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1846  006CE2  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1847  006CE4  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1848  006CE6  50F3               	movf	243,w,c
  1849  006CE8  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1850  006CEA  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1851  006CEC  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1852  006CEE  50F3               	movf	243,w,c
  1853  006CF0  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1854  006CF2                     
  1855                           ; BSR set to: 0
  1856  006CF2  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1857  006CF6  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1858  006CFA                     
  1859                           ; BSR set to: 0
  1860  006CFA  0012               	return		;funcret
  1861  006CFC                     __end_of___wmul:
  1862                           	opt callstack 0
  1863                           
  1864 ;; *************** function _lcd_init *****************
  1865 ;; Defined at:
  1866 ;;		line 258 in file "Lcd4Lignes.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1880 ;;      Params:         0       0       0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0
  1883 ;;      Totals:         0       0       0       0       0       0       0
  1884 ;;Total ram usage:        0 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    5
  1887 ;; This function calls:
  1888 ;;		_lcd_initCGRam
  1889 ;;		_lcd_resetSequence
  1890 ;;		_lcd_wrCom
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text8
  1897  006CAC                     __ptext8:
  1898                           	opt callstack 0
  1899  006CAC                     _lcd_init:
  1900                           	opt callstack 25
  1901  006CAC                     
  1902                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1903  006CAC  EC42  F038         	call	_lcd_resetSequence	;wreg free
  1904                           
  1905                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1906  006CB0  0E28               	movlw	40
  1907  006CB2  EC77  F038         	call	_lcd_wrCom
  1908                           
  1909                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1910  006CB6  0E0F               	movlw	15
  1911  006CB8  EC77  F038         	call	_lcd_wrCom
  1912                           
  1913                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1914  006CBC  0E01               	movlw	1
  1915  006CBE  EC77  F038         	call	_lcd_wrCom
  1916                           
  1917                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1918  006CC2  0E06               	movlw	6
  1919  006CC4  EC77  F038         	call	_lcd_wrCom
  1920                           
  1921                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1922  006CC8  0E80               	movlw	128
  1923  006CCA  EC77  F038         	call	_lcd_wrCom
  1924  006CCE                     
  1925                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1926  006CCE  EC1C  F039         	call	_lcd_initCGRam	;wreg free
  1927  006CD2  0012               	return		;funcret
  1928  006CD4                     __end_of_lcd_init:
  1929                           	opt callstack 0
  1930                           
  1931 ;; *************** function _lcd_resetSequence *****************
  1932 ;; Defined at:
  1933 ;;		line 221 in file "Lcd4Lignes.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1947 ;;      Params:         0       0       0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0
  1949 ;;      Temps:          0       1       0       0       0       0       0
  1950 ;;      Totals:         0       1       0       0       0       0       0
  1951 ;;Total ram usage:        1 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    1
  1954 ;; This function calls:
  1955 ;;		_lcd_ecrireDonnees
  1956 ;;		_lcd_strobeEnableBit
  1957 ;; This function is called by:
  1958 ;;		_lcd_init
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text9
  1963  007084                     __ptext9:
  1964                           	opt callstack 0
  1965  007084                     _lcd_resetSequence:
  1966                           	opt callstack 28
  1967  007084                     
  1968                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1969  007084  0E00               	movlw	0
  1970  007086  6E95               	movwf	149,c	;volatile
  1971  007088                     
  1972                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1973  007088  0E0D               	movlw	13
  1974  00708A  0100               	movlb	0	; force () banked
  1975  00708C  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  1976  00708E  0EFB               	movlw	251
  1977  007090                     u1487:
  1978  007090  2EE8               	decfsz	wreg,f,c
  1979  007092  D7FE               	bra	u1487
  1980  007094  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1981  007096  D7FC               	bra	u1487
  1982  007098  F000 F000          	nop2	
  1983  00709C                     
  1984                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1985  00709C  9080               	bcf	128,0,c	;volatile
  1986  00709E                     
  1987                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1988  00709E  9280               	bcf	128,1,c	;volatile
  1989  0070A0                     
  1990                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1991  0070A0  0E03               	movlw	3
  1992  0070A2  EC48  F036         	call	_lcd_ecrireDonnees
  1993  0070A6                     
  1994                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1995  0070A6  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  1996  0070AA                     
  1997                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1998  0070AA  0E03               	movlw	3
  1999  0070AC                     u1497:
  2000  0070AC  2EE8               	decfsz	wreg,f,c
  2001  0070AE  D7FE               	bra	u1497
  2002  0070B0  F000               	nop	
  2003  0070B2                     
  2004                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2005  0070B2  0E03               	movlw	3
  2006  0070B4  EC48  F036         	call	_lcd_ecrireDonnees
  2007  0070B8                     
  2008                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2009  0070B8  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  2010  0070BC                     
  2011                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2012  0070BC  0E03               	movlw	3
  2013  0070BE                     u1507:
  2014  0070BE  2EE8               	decfsz	wreg,f,c
  2015  0070C0  D7FE               	bra	u1507
  2016  0070C2  F000               	nop	
  2017  0070C4                     
  2018                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2019  0070C4  0E03               	movlw	3
  2020  0070C6  EC48  F036         	call	_lcd_ecrireDonnees
  2021  0070CA                     
  2022                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2023  0070CA  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  2024  0070CE                     
  2025                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2026  0070CE  0E03               	movlw	3
  2027  0070D0                     u1517:
  2028  0070D0  2EE8               	decfsz	wreg,f,c
  2029  0070D2  D7FE               	bra	u1517
  2030  0070D4  F000               	nop	
  2031  0070D6                     
  2032                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2033  0070D6  0E02               	movlw	2
  2034  0070D8  EC48  F036         	call	_lcd_ecrireDonnees
  2035  0070DC                     
  2036                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2037  0070DC  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  2038  0070E0                     
  2039                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2040  0070E0  0E03               	movlw	3
  2041  0070E2                     u1527:
  2042  0070E2  2EE8               	decfsz	wreg,f,c
  2043  0070E4  D7FE               	bra	u1527
  2044  0070E6  F000               	nop	
  2045  0070E8                     
  2046                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2047  0070E8  0E0F               	movlw	15
  2048  0070EA  6E95               	movwf	149,c	;volatile
  2049  0070EC  0012               	return		;funcret
  2050  0070EE                     __end_of_lcd_resetSequence:
  2051                           	opt callstack 0
  2052                           
  2053 ;; *************** function _lcd_initCGRam *****************
  2054 ;; Defined at:
  2055 ;;		line 417 in file "Lcd4Lignes.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  j               1    6[BANK0 ] unsigned char 
  2060 ;;  i               1    5[BANK0 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2070 ;;      Params:         0       0       0       0       0       0       0
  2071 ;;      Locals:         0       2       0       0       0       0       0
  2072 ;;      Temps:          0       2       0       0       0       0       0
  2073 ;;      Totals:         0       4       0       0       0       0       0
  2074 ;;Total ram usage:        4 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    4
  2077 ;; This function calls:
  2078 ;;		_lcd_curseurHome
  2079 ;;		_lcd_wrCom
  2080 ;;		_lcd_wrData
  2081 ;; This function is called by:
  2082 ;;		_lcd_init
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text10
  2087  007238                     __ptext10:
  2088                           	opt callstack 0
  2089  007238                     _lcd_initCGRam:
  2090                           	opt callstack 25
  2091  007238                     
  2092                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2093  007238  0E40               	movlw	64
  2094  00723A  EC77  F038         	call	_lcd_wrCom
  2095  00723E                     
  2096                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2097  00723E  0E00               	movlw	0
  2098  007240  0100               	movlb	0	; force () banked
  2099  007242  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2100  007244                     
  2101                           ; BSR set to: 0
  2102  007244  0E07               	movlw	7
  2103  007246  0100               	movlb	0	; force () banked
  2104  007248  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2105  00724A  EF29  F039         	goto	u991
  2106  00724E  EF2B  F039         	goto	u990
  2107  007252                     u991:
  2108  007252  EF2D  F039         	goto	l2022
  2109  007256                     u990:
  2110  007256  EF6A  F039         	goto	l2038
  2111  00725A                     l2022:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2115  00725A  0E00               	movlw	0
  2116  00725C  0100               	movlb	0	; force () banked
  2117  00725E  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2118  007260                     
  2119                           ; BSR set to: 0
  2120  007260  0E07               	movlw	7
  2121  007262  0100               	movlb	0	; force () banked
  2122  007264  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2123  007266  EF37  F039         	goto	u1001
  2124  00726A  EF39  F039         	goto	u1000
  2125  00726E                     u1001:
  2126  00726E  EF3B  F039         	goto	l2028
  2127  007272                     u1000:
  2128  007272  EF5F  F039         	goto	l2034
  2129  007276                     l2028:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2133  007276  0100               	movlb	0	; force () banked
  2134  007278  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2135  00727A  0D08               	mullw	8
  2136  00727C  0E54               	movlw	low _matCGRAM
  2137  00727E  0100               	movlb	0	; force () banked
  2138  007280  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2139  007282  0E01               	movlw	high _matCGRAM
  2140  007284  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2141  007286  50F3               	movf	243,w,c
  2142  007288  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2143  00728A  50F4               	movf	244,w,c
  2144  00728C  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2145  00728E  0100               	movlb	0	; force () banked
  2146  007290  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2147  007292  0100               	movlb	0	; force () banked
  2148  007294  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2149  007296  6ED9               	movwf	fsr2l,c
  2150  007298  0100               	movlb	0	; force () banked
  2151  00729A  0E00               	movlw	0
  2152  00729C  0100               	movlb	0	; force () banked
  2153  00729E  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2154  0072A0  6EDA               	movwf	fsr2h,c
  2155  0072A2  50DF               	movf	indf2,w,c
  2156  0072A4  EC94  F036         	call	_lcd_wrData
  2157  0072A8  0100               	movlb	0	; force () banked
  2158  0072AA  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2159  0072AC                     
  2160                           ; BSR set to: 0
  2161  0072AC  0E07               	movlw	7
  2162  0072AE  0100               	movlb	0	; force () banked
  2163  0072B0  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2164  0072B2  EF5D  F039         	goto	u1011
  2165  0072B6  EF5F  F039         	goto	u1010
  2166  0072BA                     u1011:
  2167  0072BA  EF3B  F039         	goto	l2028
  2168  0072BE                     u1010:
  2169  0072BE                     l2034:
  2170                           
  2171                           ; BSR set to: 0
  2172  0072BE  0100               	movlb	0	; force () banked
  2173  0072C0  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2174  0072C2                     
  2175                           ; BSR set to: 0
  2176  0072C2  0E07               	movlw	7
  2177  0072C4  0100               	movlb	0	; force () banked
  2178  0072C6  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2179  0072C8  EF68  F039         	goto	u1021
  2180  0072CC  EF6A  F039         	goto	u1020
  2181  0072D0                     u1021:
  2182  0072D0  EF2D  F039         	goto	l2022
  2183  0072D4                     u1020:
  2184  0072D4                     l2038:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2188  0072D4  EC3C  F036         	call	_lcd_curseurHome	;wreg free
  2189  0072D8  0012               	return		;funcret
  2190  0072DA                     __end_of_lcd_initCGRam:
  2191                           	opt callstack 0
  2192                           
  2193 ;; *************** function _lcd_curseurHome *****************
  2194 ;; Defined at:
  2195 ;;		line 288 in file "Lcd4Lignes.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2209 ;;      Params:         0       0       0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0
  2212 ;;      Totals:         0       0       0       0       0       0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    3
  2216 ;; This function calls:
  2217 ;;		_lcd_wrCom
  2218 ;; This function is called by:
  2219 ;;		_lcd_initCGRam
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text11
  2224  006C78                     __ptext11:
  2225                           	opt callstack 0
  2226  006C78                     _lcd_curseurHome:
  2227                           	opt callstack 25
  2228  006C78                     
  2229                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2230  006C78  0E02               	movlw	2
  2231  006C7A  EC77  F038         	call	_lcd_wrCom
  2232  006C7E  0012               	return		;funcret
  2233  006C80                     __end_of_lcd_curseurHome:
  2234                           	opt callstack 0
  2235                           
  2236 ;; *************** function _initialisation *****************
  2237 ;; Defined at:
  2238 ;;		line 84 in file "main.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2252 ;;      Params:         0       0       0       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0
  2255 ;;      Totals:         0       0       0       0       0       0       0
  2256 ;;Total ram usage:        0 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    1
  2259 ;; This function calls:
  2260 ;;		_srand
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text12
  2267  006D5C                     __ptext12:
  2268                           	opt callstack 0
  2269  006D5C                     _initialisation:
  2270                           	opt callstack 29
  2271  006D5C                     
  2272                           ;main.c: 86: TRISD = 0;
  2273  006D5C  0E00               	movlw	0
  2274  006D5E  6E95               	movwf	149,c	;volatile
  2275                           
  2276                           ;main.c: 87: ANSELH = 0;
  2277  006D60  0E00               	movlw	0
  2278  006D62  6E7F               	movwf	127,c	;volatile
  2279  006D64                     
  2280                           ;main.c: 88: TRISB = 0xFF;
  2281  006D64  6893               	setf	147,c	;volatile
  2282                           
  2283                           ;main.c: 89: ANSEL = 0;
  2284  006D66  0E00               	movlw	0
  2285  006D68  6E7E               	movwf	126,c	;volatile
  2286                           
  2287                           ;main.c: 90: TRISA = 0;
  2288  006D6A  0E00               	movlw	0
  2289  006D6C  6E92               	movwf	146,c	;volatile
  2290  006D6E                     
  2291                           ;main.c: 94: T1CONbits.TMR1ON = 1;
  2292  006D6E  80CD               	bsf	205,0,c	;volatile
  2293  006D70                     
  2294                           ;main.c: 95: srand(TMR1);
  2295  006D70  CFCE F0B4          	movff	4046,srand@x	;volatile
  2296  006D74  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2297  006D78  EC40  F036         	call	_srand	;wreg free
  2298  006D7C                     
  2299                           ;main.c: 97: ANSELbits.ANS7 = 1;
  2300  006D7C  8E7E               	bsf	126,7,c	;volatile
  2301  006D7E                     
  2302                           ;main.c: 98: ADCON0bits.ADON = 1;
  2303  006D7E  80C2               	bsf	194,0,c	;volatile
  2304  006D80                     
  2305                           ;main.c: 99: ADCON1 = 0;
  2306  006D80  0E00               	movlw	0
  2307  006D82  6EC1               	movwf	193,c	;volatile
  2308  006D84                     
  2309                           ;main.c: 100: ADCON2bits.ADFM = 0;
  2310  006D84  9EC0               	bcf	192,7,c	;volatile
  2311  006D86                     
  2312                           ;main.c: 101: ADCON2bits.ACQT = 0;
  2313  006D86  0EC7               	movlw	-57
  2314  006D88  16C0               	andwf	192,f,c	;volatile
  2315  006D8A                     
  2316                           ;main.c: 102: ADCON2bits.ADCS = 0;
  2317  006D8A  0EF8               	movlw	-8
  2318  006D8C  16C0               	andwf	192,f,c	;volatile
  2319  006D8E  0012               	return		;funcret
  2320  006D90                     __end_of_initialisation:
  2321                           	opt callstack 0
  2322                           
  2323 ;; *************** function _srand *****************
  2324 ;; Defined at:
  2325 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  x               2    0[BANK0 ] unsigned int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		status,2
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2339 ;;      Params:         0       2       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0
  2342 ;;      Totals:         0       2       0       0       0       0       0
  2343 ;;Total ram usage:        2 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_initialisation
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text13
  2353  006C80                     __ptext13:
  2354                           	opt callstack 0
  2355  006C80                     _srand:
  2356                           	opt callstack 29
  2357  006C80  C0B4  F0D8         	movff	srand@x,_randx
  2358  006C84  C0B5  F0D9         	movff	srand@x+1,_randx+1
  2359  006C88  0100               	movlb	0	; () banked
  2360  006C8A  6BDA               	clrf	(_randx+2)& (0+255),b
  2361  006C8C  6BDB               	clrf	(_randx+3)& (0+255),b
  2362  006C8E                     
  2363                           ; BSR set to: 0
  2364  006C8E  0012               	return		;funcret
  2365  006C90                     __end_of_srand:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _initTabVue *****************
  2369 ;; Defined at:
  2370 ;;		line 112 in file "main.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  j               1    2[BANK0 ] unsigned char 
  2375 ;;  i               1    3[BANK0 ] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2385 ;;      Params:         0       0       0       0       0       0       0
  2386 ;;      Locals:         0       2       0       0       0       0       0
  2387 ;;      Temps:          0       2       0       0       0       0       0
  2388 ;;      Totals:         0       4       0       0       0       0       0
  2389 ;;Total ram usage:        4 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text14
  2399  0072DA                     __ptext14:
  2400                           	opt callstack 0
  2401  0072DA                     _initTabVue:
  2402                           	opt callstack 30
  2403  0072DA                     
  2404                           ;main.c: 114: for (char i = 0; i < 4; i++) {
  2405  0072DA  0E00               	movlw	0
  2406  0072DC  0100               	movlb	0	; force () banked
  2407  0072DE  6FB7               	movwf	initTabVue@i& (0+255),b
  2408  0072E0                     
  2409                           ; BSR set to: 0
  2410  0072E0  0E03               	movlw	3
  2411  0072E2  0100               	movlb	0	; force () banked
  2412  0072E4  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2413  0072E6  EF77  F039         	goto	u1091
  2414  0072EA  EF79  F039         	goto	u1090
  2415  0072EE                     u1091:
  2416  0072EE  EF7B  F039         	goto	l2106
  2417  0072F2                     u1090:
  2418  0072F2  EFC2  F039         	goto	l91
  2419  0072F6                     l2106:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;main.c: 115: for (char j = 0; j < 20; j++) {
  2423  0072F6  0E00               	movlw	0
  2424  0072F8  0100               	movlb	0	; force () banked
  2425  0072FA  6FB6               	movwf	initTabVue@j& (0+255),b
  2426  0072FC                     
  2427                           ; BSR set to: 0
  2428  0072FC  0E13               	movlw	19
  2429  0072FE  0100               	movlb	0	; force () banked
  2430  007300  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2431  007302  EF85  F039         	goto	u1101
  2432  007306  EF87  F039         	goto	u1100
  2433  00730A                     u1101:
  2434  00730A  EF89  F039         	goto	l2112
  2435  00730E                     u1100:
  2436  00730E  EFAC  F039         	goto	l2118
  2437  007312                     l2112:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;main.c: 116: m_tabVue[i][j] = 1;
  2441  007312  0100               	movlb	0	; force () banked
  2442  007314  51B7               	movf	initTabVue@i& (0+255),w,b
  2443  007316  0D15               	mullw	21
  2444  007318  0E00               	movlw	low _m_tabVue
  2445  00731A  0100               	movlb	0	; force () banked
  2446  00731C  6FB4               	movwf	??_initTabVue& (0+255),b
  2447  00731E  0E01               	movlw	high _m_tabVue
  2448  007320  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  2449  007322  50F3               	movf	243,w,c
  2450  007324  27B4               	addwf	??_initTabVue& (0+255),f,b
  2451  007326  50F4               	movf	244,w,c
  2452  007328  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2453  00732A  0100               	movlb	0	; force () banked
  2454  00732C  51B6               	movf	initTabVue@j& (0+255),w,b
  2455  00732E  0100               	movlb	0	; force () banked
  2456  007330  25B4               	addwf	??_initTabVue& (0+255),w,b
  2457  007332  6ED9               	movwf	fsr2l,c
  2458  007334  0100               	movlb	0	; force () banked
  2459  007336  0E00               	movlw	0
  2460  007338  0100               	movlb	0	; force () banked
  2461  00733A  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2462  00733C  6EDA               	movwf	fsr2h,c
  2463  00733E  0E01               	movlw	1
  2464  007340  6EDF               	movwf	indf2,c
  2465  007342                     
  2466                           ; BSR set to: 0
  2467  007342  0100               	movlb	0	; force () banked
  2468  007344  2BB6               	incf	initTabVue@j& (0+255),f,b
  2469  007346                     
  2470                           ; BSR set to: 0
  2471  007346  0E13               	movlw	19
  2472  007348  0100               	movlb	0	; force () banked
  2473  00734A  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2474  00734C  EFAA  F039         	goto	u1111
  2475  007350  EFAC  F039         	goto	u1110
  2476  007354                     u1111:
  2477  007354  EF89  F039         	goto	l2112
  2478  007358                     u1110:
  2479  007358                     l2118:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;main.c: 117: };main.c: 118: m_tabVue[i][20] = 0;
  2483  007358  0100               	movlb	0	; force () banked
  2484  00735A  51B7               	movf	initTabVue@i& (0+255),w,b
  2485  00735C  0D15               	mullw	21
  2486  00735E  0E14               	movlw	low (_m_tabVue+20)
  2487  007360  24F3               	addwf	243,w,c
  2488  007362  6ED9               	movwf	fsr2l,c
  2489  007364  0E01               	movlw	high (_m_tabVue+20)
  2490  007366  20F4               	addwfc	prodh,w,c
  2491  007368  6EDA               	movwf	fsr2h,c
  2492  00736A  0E00               	movlw	0
  2493  00736C  6EDF               	movwf	indf2,c
  2494  00736E                     
  2495                           ; BSR set to: 0
  2496  00736E  0100               	movlb	0	; force () banked
  2497  007370  2BB7               	incf	initTabVue@i& (0+255),f,b
  2498  007372                     
  2499                           ; BSR set to: 0
  2500  007372  0E03               	movlw	3
  2501  007374  0100               	movlb	0	; force () banked
  2502  007376  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2503  007378  EFC0  F039         	goto	u1121
  2504  00737C  EFC2  F039         	goto	u1120
  2505  007380                     u1121:
  2506  007380  EF7B  F039         	goto	l2106
  2507  007384                     u1120:
  2508  007384                     l91:
  2509                           
  2510                           ; BSR set to: 0
  2511  007384  0012               	return		;funcret
  2512  007386                     __end_of_initTabVue:
  2513                           	opt callstack 0
  2514                           
  2515 ;; *************** function _gagne *****************
  2516 ;; Defined at:
  2517 ;;		line 290 in file "main.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  pMines          2    0[BANK0 ] PTR int 
  2520 ;;		 -> main@nbMine(2), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  j               1    8[BANK0 ] unsigned char 
  2523 ;;  i               1    7[BANK0 ] unsigned char 
  2524 ;;  nbTuile         1    6[BANK0 ] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      unsigned char 
  2527 ;; Registers used:
  2528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2534 ;;      Params:         0       2       0       0       0       0       0
  2535 ;;      Locals:         0       3       0       0       0       0       0
  2536 ;;      Temps:          0       4       0       0       0       0       0
  2537 ;;      Totals:         0       9       0       0       0       0       0
  2538 ;;Total ram usage:        9 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text15
  2548  00751A                     __ptext15:
  2549                           	opt callstack 0
  2550  00751A                     _gagne:
  2551                           	opt callstack 30
  2552  00751A                     
  2553                           ;main.c: 292: char nbTuile=0;
  2554  00751A  0E00               	movlw	0
  2555  00751C  0100               	movlb	0	; force () banked
  2556  00751E  6FBA               	movwf	gagne@nbTuile& (0+255),b
  2557                           
  2558                           ;main.c: 294: for (char i = 0; i < 4; i++) {
  2559  007520  0E00               	movlw	0
  2560  007522  0100               	movlb	0	; force () banked
  2561  007524  6FBB               	movwf	gagne@i& (0+255),b
  2562  007526                     
  2563                           ; BSR set to: 0
  2564  007526  0E03               	movlw	3
  2565  007528  0100               	movlb	0	; force () banked
  2566  00752A  65BB               	cpfsgt	gagne@i& (0+255),b
  2567  00752C  EF9A  F03A         	goto	u1341
  2568  007530  EF9C  F03A         	goto	u1340
  2569  007534                     u1341:
  2570  007534  EF9E  F03A         	goto	l2236
  2571  007538                     u1340:
  2572  007538  EFE2  F03A         	goto	l2252
  2573  00753C                     l2236:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;main.c: 295: for (char j = 0; j < 20; j++) {
  2577  00753C  0E00               	movlw	0
  2578  00753E  0100               	movlb	0	; force () banked
  2579  007540  6FBC               	movwf	gagne@j& (0+255),b
  2580  007542                     
  2581                           ; BSR set to: 0
  2582  007542  0E13               	movlw	19
  2583  007544  0100               	movlb	0	; force () banked
  2584  007546  65BC               	cpfsgt	gagne@j& (0+255),b
  2585  007548  EFA8  F03A         	goto	u1351
  2586  00754C  EFAA  F03A         	goto	u1350
  2587  007550                     u1351:
  2588  007550  EFAC  F03A         	goto	l2242
  2589  007554                     u1350:
  2590  007554  EFD7  F03A         	goto	l2248
  2591  007558                     l2242:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;main.c: 296: if(m_tabVue[i][j]==1)
  2595  007558  0100               	movlb	0	; force () banked
  2596  00755A  51BB               	movf	gagne@i& (0+255),w,b
  2597  00755C  0D15               	mullw	21
  2598  00755E  0E00               	movlw	low _m_tabVue
  2599  007560  0100               	movlb	0	; force () banked
  2600  007562  6FB6               	movwf	??_gagne& (0+255),b
  2601  007564  0E01               	movlw	high _m_tabVue
  2602  007566  6FB7               	movwf	(??_gagne+1)& (0+255),b
  2603  007568  50F3               	movf	243,w,c
  2604  00756A  27B6               	addwf	??_gagne& (0+255),f,b
  2605  00756C  50F4               	movf	244,w,c
  2606  00756E  23B7               	addwfc	(??_gagne+1)& (0+255),f,b
  2607  007570  0100               	movlb	0	; force () banked
  2608  007572  51BC               	movf	gagne@j& (0+255),w,b
  2609  007574  0100               	movlb	0	; force () banked
  2610  007576  25B6               	addwf	??_gagne& (0+255),w,b
  2611  007578  6ED9               	movwf	fsr2l,c
  2612  00757A  0100               	movlb	0	; force () banked
  2613  00757C  0E00               	movlw	0
  2614  00757E  0100               	movlb	0	; force () banked
  2615  007580  21B7               	addwfc	(??_gagne+1)& (0+255),w,b
  2616  007582  6EDA               	movwf	fsr2h,c
  2617  007584  04DE               	decf	postinc2,w,c
  2618  007586  A4D8               	btfss	status,2,c
  2619  007588  EFC8  F03A         	goto	u1361
  2620  00758C  EFCA  F03A         	goto	u1360
  2621  007590                     u1361:
  2622  007590  EFCC  F03A         	goto	l168
  2623  007594                     u1360:
  2624  007594                     
  2625                           ; BSR set to: 0
  2626                           ;main.c: 297: nbTuile++;
  2627  007594  0100               	movlb	0	; force () banked
  2628  007596  2BBA               	incf	gagne@nbTuile& (0+255),f,b
  2629  007598                     l168:
  2630                           
  2631                           ; BSR set to: 0
  2632  007598  0100               	movlb	0	; force () banked
  2633  00759A  2BBC               	incf	gagne@j& (0+255),f,b
  2634  00759C                     
  2635                           ; BSR set to: 0
  2636  00759C  0E13               	movlw	19
  2637  00759E  0100               	movlb	0	; force () banked
  2638  0075A0  65BC               	cpfsgt	gagne@j& (0+255),b
  2639  0075A2  EFD5  F03A         	goto	u1371
  2640  0075A6  EFD7  F03A         	goto	u1370
  2641  0075AA                     u1371:
  2642  0075AA  EFAC  F03A         	goto	l2242
  2643  0075AE                     u1370:
  2644  0075AE                     l2248:
  2645                           
  2646                           ; BSR set to: 0
  2647  0075AE  0100               	movlb	0	; force () banked
  2648  0075B0  2BBB               	incf	gagne@i& (0+255),f,b
  2649  0075B2                     
  2650                           ; BSR set to: 0
  2651  0075B2  0E03               	movlw	3
  2652  0075B4  0100               	movlb	0	; force () banked
  2653  0075B6  65BB               	cpfsgt	gagne@i& (0+255),b
  2654  0075B8  EFE0  F03A         	goto	u1381
  2655  0075BC  EFE2  F03A         	goto	u1380
  2656  0075C0                     u1381:
  2657  0075C0  EF9E  F03A         	goto	l2236
  2658  0075C4                     u1380:
  2659  0075C4                     l2252:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;main.c: 298: };main.c: 299: };main.c: 300: if (nbTuile == *pMines)
  2663  0075C4  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2664  0075C8  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2665  0075CC  0100               	movlb	0	; force () banked
  2666  0075CE  51BA               	movf	gagne@nbTuile& (0+255),w,b
  2667  0075D0  0100               	movlb	0	; force () banked
  2668  0075D2  6FB8               	movwf	(??_gagne+2)& (0+255),b
  2669  0075D4  6BB9               	clrf	(??_gagne+3)& (0+255),b
  2670  0075D6  50DE               	movf	postinc2,w,c
  2671  0075D8  19B8               	xorwf	(??_gagne+2)& (0+255),w,b
  2672  0075DA  E107               	bnz	u1391
  2673  0075DC  50DE               	movf	postinc2,w,c
  2674  0075DE  19B9               	xorwf	(??_gagne+3)& (0+255),w,b
  2675  0075E0  A4D8               	btfss	status,2,c
  2676  0075E2  EFF5  F03A         	goto	u1391
  2677  0075E6  EFF7  F03A         	goto	u1390
  2678  0075EA                     u1391:
  2679  0075EA  EF01  F03B         	goto	l2262
  2680  0075EE                     u1390:
  2681  0075EE                     
  2682                           ; BSR set to: 0
  2683                           ;main.c: 301: {;main.c: 302: (*pMines)++;
  2684  0075EE  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2685  0075F2  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2686  0075F6  2ADE               	incf	postinc2,f,c
  2687  0075F8  0E00               	movlw	0
  2688  0075FA  22DD               	addwfc	postdec2,f,c
  2689  0075FC                     
  2690                           ; BSR set to: 0
  2691                           ;main.c: 303: return 1;
  2692  0075FC  0E01               	movlw	1
  2693  0075FE  EF02  F03B         	goto	l170
  2694  007602                     l2262:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;main.c: 305: else;main.c: 306: return 0;
  2698  007602  0E00               	movlw	0
  2699  007604                     l170:
  2700                           
  2701                           ; BSR set to: 0
  2702  007604  0012               	return		;funcret
  2703  007606                     __end_of_gagne:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _deplace *****************
  2707 ;; Defined at:
  2708 ;;		line 200 in file "main.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2711 ;;		 -> main@posX(2), 
  2712 ;;  y               2    7[BANK0 ] PTR unsigned char 
  2713 ;;		 -> main@posY(2), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  analogY         1   11[BANK0 ] unsigned char 
  2716 ;;  analogX         1   10[BANK0 ] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2726 ;;      Params:         0       4       0       0       0       0       0
  2727 ;;      Locals:         0       2       0       0       0       0       0
  2728 ;;      Temps:          0       1       0       0       0       0       0
  2729 ;;      Totals:         0       7       0       0       0       0       0
  2730 ;;Total ram usage:        7 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    4
  2733 ;; This function calls:
  2734 ;;		_getAnalog
  2735 ;;		_lcd_gotoXY
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text16
  2742  007A24                     __ptext16:
  2743                           	opt callstack 0
  2744  007A24                     _deplace:
  2745                           	opt callstack 26
  2746  007A24                     
  2747                           ;main.c: 202: unsigned char analogX = getAnalog(7);
  2748  007A24  0E07               	movlw	7
  2749  007A26  EC7E  F036         	call	_getAnalog
  2750  007A2A  0100               	movlb	0	; force () banked
  2751  007A2C  6FBE               	movwf	deplace@analogX& (0+255),b
  2752                           
  2753                           ;main.c: 205: if (0 <= analogX && analogX <= 80)
  2754  007A2E  0E06               	movlw	6
  2755  007A30  EC7E  F036         	call	_getAnalog
  2756  007A34  0100               	movlb	0	; force () banked
  2757  007A36  6FBF               	movwf	deplace@analogY& (0+255),b
  2758  007A38                     
  2759                           ; BSR set to: 0
  2760  007A38  0E51               	movlw	81
  2761  007A3A  0100               	movlb	0	; force () banked
  2762  007A3C  61BE               	cpfslt	deplace@analogX& (0+255),b
  2763  007A3E  EF23  F03D         	goto	u1251
  2764  007A42  EF25  F03D         	goto	u1250
  2765  007A46                     u1251:
  2766  007A46  EF46  F03D         	goto	l2194
  2767  007A4A                     u1250:
  2768  007A4A                     
  2769                           ; BSR set to: 0
  2770                           ;main.c: 206: {;main.c: 207: *x = (*x) - 1;
  2771  007A4A  C0B9  FFD9         	movff	deplace@x,fsr2l
  2772  007A4E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2773  007A52  50DF               	movf	indf2,w,c
  2774  007A54  0100               	movlb	0	; force () banked
  2775  007A56  6FBD               	movwf	??_deplace& (0+255),b
  2776  007A58  05BD               	decf	??_deplace& (0+255),w,b
  2777  007A5A  C0B9  FFD9         	movff	deplace@x,fsr2l
  2778  007A5E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2779  007A62  6EDF               	movwf	indf2,c
  2780  007A64                     
  2781                           ; BSR set to: 0
  2782                           ;main.c: 208: if ((*x) <= 0)
  2783  007A64  C0B9  FFD9         	movff	deplace@x,fsr2l
  2784  007A68  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2785  007A6C  50DF               	movf	indf2,w,c
  2786  007A6E  A4D8               	btfss	status,2,c
  2787  007A70  EF3C  F03D         	goto	u1261
  2788  007A74  EF3E  F03D         	goto	u1260
  2789  007A78                     u1261:
  2790  007A78  EF6E  F03D         	goto	l2200
  2791  007A7C                     u1260:
  2792  007A7C                     
  2793                           ; BSR set to: 0
  2794                           ;main.c: 209: *x = 20;
  2795  007A7C  C0B9  FFD9         	movff	deplace@x,fsr2l
  2796  007A80  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2797  007A84  0E14               	movlw	20
  2798  007A86  6EDF               	movwf	indf2,c
  2799  007A88  EF6E  F03D         	goto	l2200
  2800  007A8C                     l2194:
  2801                           
  2802                           ; BSR set to: 0
  2803  007A8C  0EAE               	movlw	174
  2804  007A8E  0100               	movlb	0	; force () banked
  2805  007A90  65BE               	cpfsgt	deplace@analogX& (0+255),b
  2806  007A92  EF4D  F03D         	goto	u1271
  2807  007A96  EF4F  F03D         	goto	u1270
  2808  007A9A                     u1271:
  2809  007A9A  EF6E  F03D         	goto	l2200
  2810  007A9E                     u1270:
  2811  007A9E                     
  2812                           ; BSR set to: 0
  2813                           ;main.c: 211: {;main.c: 212: *x = (*x) + 1;
  2814  007A9E  C0B9  FFD9         	movff	deplace@x,fsr2l
  2815  007AA2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2816  007AA6  50DF               	movf	indf2,w,c
  2817  007AA8  0100               	movlb	0	; force () banked
  2818  007AAA  6FBD               	movwf	??_deplace& (0+255),b
  2819  007AAC  29BD               	incf	??_deplace& (0+255),w,b
  2820  007AAE  C0B9  FFD9         	movff	deplace@x,fsr2l
  2821  007AB2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2822  007AB6  6EDF               	movwf	indf2,c
  2823                           
  2824                           ;main.c: 213: if ((*x) >= 21)
  2825  007AB8  C0B9  FFD9         	movff	deplace@x,fsr2l
  2826  007ABC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2827  007AC0  0E14               	movlw	20
  2828  007AC2  64DF               	cpfsgt	indf2,c
  2829  007AC4  EF66  F03D         	goto	u1281
  2830  007AC8  EF68  F03D         	goto	u1280
  2831  007ACC                     u1281:
  2832  007ACC  EF6E  F03D         	goto	l2200
  2833  007AD0                     u1280:
  2834  007AD0                     
  2835                           ; BSR set to: 0
  2836                           ;main.c: 214: *x = 1;
  2837  007AD0  C0B9  FFD9         	movff	deplace@x,fsr2l
  2838  007AD4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2839  007AD8  0E01               	movlw	1
  2840  007ADA  6EDF               	movwf	indf2,c
  2841  007ADC                     l2200:
  2842                           
  2843                           ; BSR set to: 0
  2844  007ADC  0E51               	movlw	81
  2845  007ADE  0100               	movlb	0	; force () banked
  2846  007AE0  61BF               	cpfslt	deplace@analogY& (0+255),b
  2847  007AE2  EF75  F03D         	goto	u1291
  2848  007AE6  EF77  F03D         	goto	u1290
  2849  007AEA                     u1291:
  2850  007AEA  EF98  F03D         	goto	l2208
  2851  007AEE                     u1290:
  2852  007AEE                     
  2853                           ; BSR set to: 0
  2854                           ;main.c: 218: {;main.c: 219: *y = (*y) - 1;
  2855  007AEE  C0BB  FFD9         	movff	deplace@y,fsr2l
  2856  007AF2  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2857  007AF6  50DF               	movf	indf2,w,c
  2858  007AF8  0100               	movlb	0	; force () banked
  2859  007AFA  6FBD               	movwf	??_deplace& (0+255),b
  2860  007AFC  05BD               	decf	??_deplace& (0+255),w,b
  2861  007AFE  C0BB  FFD9         	movff	deplace@y,fsr2l
  2862  007B02  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2863  007B06  6EDF               	movwf	indf2,c
  2864  007B08                     
  2865                           ; BSR set to: 0
  2866                           ;main.c: 220: if ((*y) <= 0)
  2867  007B08  C0BB  FFD9         	movff	deplace@y,fsr2l
  2868  007B0C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2869  007B10  50DF               	movf	indf2,w,c
  2870  007B12  A4D8               	btfss	status,2,c
  2871  007B14  EF8E  F03D         	goto	u1301
  2872  007B18  EF90  F03D         	goto	u1300
  2873  007B1C                     u1301:
  2874  007B1C  EFC0  F03D         	goto	l2214
  2875  007B20                     u1300:
  2876  007B20                     
  2877                           ; BSR set to: 0
  2878                           ;main.c: 221: *y = 4;
  2879  007B20  C0BB  FFD9         	movff	deplace@y,fsr2l
  2880  007B24  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2881  007B28  0E04               	movlw	4
  2882  007B2A  6EDF               	movwf	indf2,c
  2883  007B2C  EFC0  F03D         	goto	l2214
  2884  007B30                     l2208:
  2885                           
  2886                           ; BSR set to: 0
  2887  007B30  0EAE               	movlw	174
  2888  007B32  0100               	movlb	0	; force () banked
  2889  007B34  65BF               	cpfsgt	deplace@analogY& (0+255),b
  2890  007B36  EF9F  F03D         	goto	u1311
  2891  007B3A  EFA1  F03D         	goto	u1310
  2892  007B3E                     u1311:
  2893  007B3E  EFC0  F03D         	goto	l2214
  2894  007B42                     u1310:
  2895  007B42                     
  2896                           ; BSR set to: 0
  2897                           ;main.c: 223: {;main.c: 224: *y = (*y) + 1;
  2898  007B42  C0BB  FFD9         	movff	deplace@y,fsr2l
  2899  007B46  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2900  007B4A  50DF               	movf	indf2,w,c
  2901  007B4C  0100               	movlb	0	; force () banked
  2902  007B4E  6FBD               	movwf	??_deplace& (0+255),b
  2903  007B50  29BD               	incf	??_deplace& (0+255),w,b
  2904  007B52  C0BB  FFD9         	movff	deplace@y,fsr2l
  2905  007B56  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2906  007B5A  6EDF               	movwf	indf2,c
  2907                           
  2908                           ;main.c: 225: if ((*y) >= 5)
  2909  007B5C  C0BB  FFD9         	movff	deplace@y,fsr2l
  2910  007B60  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2911  007B64  0E04               	movlw	4
  2912  007B66  64DF               	cpfsgt	indf2,c
  2913  007B68  EFB8  F03D         	goto	u1321
  2914  007B6C  EFBA  F03D         	goto	u1320
  2915  007B70                     u1321:
  2916  007B70  EFC0  F03D         	goto	l2214
  2917  007B74                     u1320:
  2918  007B74                     
  2919                           ; BSR set to: 0
  2920                           ;main.c: 226: *y = 1;
  2921  007B74  C0BB  FFD9         	movff	deplace@y,fsr2l
  2922  007B78  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2923  007B7C  0E01               	movlw	1
  2924  007B7E  6EDF               	movwf	indf2,c
  2925  007B80                     l2214:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;main.c: 227: };main.c: 228: lcd_gotoXY(*x, *y);
  2929  007B80  C0BB  FFD9         	movff	deplace@y,fsr2l
  2930  007B84  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2931  007B88  50DF               	movf	indf2,w,c
  2932  007B8A  0100               	movlb	0	; force () banked
  2933  007B8C  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  2934  007B8E  C0B9  FFD9         	movff	deplace@x,fsr2l
  2935  007B92  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2936  007B96  50DF               	movf	indf2,w,c
  2937  007B98  ECE3  F038         	call	_lcd_gotoXY
  2938  007B9C  0012               	return		;funcret
  2939  007B9E                     __end_of_deplace:
  2940                           	opt callstack 0
  2941                           
  2942 ;; *************** function _getAnalog *****************
  2943 ;; Defined at:
  2944 ;;		line 314 in file "main.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  canal           1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  canal           1    1[BANK0 ] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      unsigned char 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2958 ;;      Params:         0       0       0       0       0       0       0
  2959 ;;      Locals:         0       1       0       0       0       0       0
  2960 ;;      Temps:          0       1       0       0       0       0       0
  2961 ;;      Totals:         0       2       0       0       0       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_deplace
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text17
  2972  006CFC                     __ptext17:
  2973                           	opt callstack 0
  2974  006CFC                     _getAnalog:
  2975                           	opt callstack 29
  2976                           
  2977                           ;incstack = 0
  2978                           ;getAnalog@canal stored from wreg
  2979  006CFC  0100               	movlb	0	; force () banked
  2980  006CFE  6FB5               	movwf	getAnalog@canal& (0+255),b
  2981  006D00                     
  2982                           ;main.c: 316: ADCON0bits.CHS = canal;
  2983  006D00  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  2984  006D04  0100               	movlb	0	; force () banked
  2985  006D06  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2986  006D08  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2987  006D0A  50C2               	movf	194,w,c	;volatile
  2988  006D0C  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2989  006D0E  0BC3               	andlw	-61
  2990  006D10  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2991  006D12  6EC2               	movwf	194,c	;volatile
  2992  006D14                     
  2993                           ;main.c: 318: ADCON0bits.GO_DONE = 1;
  2994  006D14  82C2               	bsf	194,1,c	;volatile
  2995  006D16                     l174:
  2996  006D16  B2C2               	btfsc	194,1,c	;volatile
  2997  006D18  EF90  F036         	goto	u161
  2998  006D1C  EF92  F036         	goto	u160
  2999  006D20                     u161:
  3000  006D20  EF8B  F036         	goto	l174
  3001  006D24                     u160:
  3002  006D24                     
  3003                           ;main.c: 320: return ADRESH;
  3004  006D24  50C4               	movf	196,w,c	;volatile
  3005  006D26  0012               	return		;funcret
  3006  006D28                     __end_of_getAnalog:
  3007                           	opt callstack 0
  3008                           
  3009 ;; *************** function _demine *****************
  3010 ;; Defined at:
  3011 ;;		line 239 in file "main.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  x               1    wreg     unsigned char 
  3014 ;;  y               1   18[BANK0 ] unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  x               1   24[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      unsigned char 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3026 ;;      Params:         0       1       0       0       0       0       0
  3027 ;;      Locals:         0       1       0       0       0       0       0
  3028 ;;      Temps:          0       5       0       0       0       0       0
  3029 ;;      Totals:         0       7       0       0       0       0       0
  3030 ;;Total ram usage:        7 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    7
  3033 ;; This function calls:
  3034 ;;		_enleveTuilesAutour
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text18
  3041  00701C                     __ptext18:
  3042                           	opt callstack 0
  3043  00701C                     _demine:
  3044                           	opt callstack 23
  3045                           
  3046                           ;incstack = 0
  3047                           ;demine@x stored from wreg
  3048  00701C  0100               	movlb	0	; force () banked
  3049  00701E  6FCC               	movwf	demine@x& (0+255),b
  3050  007020                     
  3051                           ;main.c: 241: if (m_tabMines[y - 1][x - 1] == 2)
  3052  007020  0100               	movlb	0	; force () banked
  3053  007022  51C6               	movf	demine@y& (0+255),w,b
  3054  007024  0D15               	mullw	21
  3055  007026  0EEA               	movlw	234
  3056  007028  0100               	movlb	0	; force () banked
  3057  00702A  6FC7               	movwf	??_demine& (0+255),b
  3058  00702C  0EFF               	movlw	255
  3059  00702E  6FC8               	movwf	(??_demine+1)& (0+255),b
  3060  007030  0E60               	movlw	low _m_tabMines
  3061  007032  6FC9               	movwf	(??_demine+2)& (0+255),b
  3062  007034  0E00               	movlw	high _m_tabMines
  3063  007036  6FCA               	movwf	(??_demine+3)& (0+255),b
  3064  007038  51C7               	movf	??_demine& (0+255),w,b
  3065  00703A  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3066  00703C  51C8               	movf	(??_demine+1)& (0+255),w,b
  3067  00703E  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3068  007040  50F3               	movf	243,w,c
  3069  007042  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3070  007044  50F4               	movf	244,w,c
  3071  007046  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3072  007048  0100               	movlb	0	; force () banked
  3073  00704A  51CC               	movf	demine@x& (0+255),w,b
  3074  00704C  0100               	movlb	0	; force () banked
  3075  00704E  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3076  007050  6ED9               	movwf	fsr2l,c
  3077  007052  0100               	movlb	0	; force () banked
  3078  007054  0E00               	movlw	0
  3079  007056  0100               	movlb	0	; force () banked
  3080  007058  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3081  00705A  6EDA               	movwf	fsr2h,c
  3082  00705C  0E02               	movlw	2
  3083  00705E  18DE               	xorwf	postinc2,w,c
  3084  007060  A4D8               	btfss	status,2,c
  3085  007062  EF35  F038         	goto	u1331
  3086  007066  EF37  F038         	goto	u1330
  3087  00706A                     u1331:
  3088  00706A  EF3A  F038         	goto	l2224
  3089  00706E                     u1330:
  3090  00706E                     
  3091                           ; BSR set to: 0
  3092                           ;main.c: 242: return 0;
  3093  00706E  0E00               	movlw	0
  3094  007070  EF41  F038         	goto	l144
  3095  007074                     l2224:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;main.c: 243: else;main.c: 244: {;main.c: 245: enleveTuilesAutour(x, y);
  3099  007074  C0C6  F0BD         	movff	demine@y,enleveTuilesAutour@y
  3100  007078  0100               	movlb	0	; force () banked
  3101  00707A  51CC               	movf	demine@x& (0+255),w,b
  3102  00707C  EC60  F03C         	call	_enleveTuilesAutour
  3103  007080                     
  3104                           ;main.c: 246: return 1;
  3105  007080  0E01               	movlw	1
  3106  007082                     l144:
  3107  007082  0012               	return		;funcret
  3108  007084                     __end_of_demine:
  3109                           	opt callstack 0
  3110                           
  3111 ;; *************** function _enleveTuilesAutour *****************
  3112 ;; Defined at:
  3113 ;;		line 256 in file "main.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  x               1    wreg     unsigned char 
  3116 ;;  y               1    9[BANK0 ] unsigned char 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  x               1   15[BANK0 ] unsigned char 
  3119 ;;  i               1   17[BANK0 ] char 
  3120 ;;  j               1   16[BANK0 ] char 
  3121 ;;  mem             1   14[BANK0 ] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3131 ;;      Params:         0       1       0       0       0       0       0
  3132 ;;      Locals:         0       4       0       0       0       0       0
  3133 ;;      Temps:          0       4       0       0       0       0       0
  3134 ;;      Totals:         0       9       0       0       0       0       0
  3135 ;;Total ram usage:        9 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    6
  3138 ;; This function calls:
  3139 ;;		_afficheTabVue
  3140 ;; This function is called by:
  3141 ;;		_demine
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text19
  3146  0078C0                     __ptext19:
  3147                           	opt callstack 0
  3148  0078C0                     _enleveTuilesAutour:
  3149                           	opt callstack 23
  3150                           
  3151                           ;incstack = 0
  3152                           ;enleveTuilesAutour@x stored from wreg
  3153  0078C0  0100               	movlb	0	; force () banked
  3154  0078C2  6FC3               	movwf	enleveTuilesAutour@x& (0+255),b
  3155  0078C4                     
  3156                           ;main.c: 258: signed char i = x - 2;
  3157  0078C4  0100               	movlb	0	; force () banked
  3158  0078C6  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3159  0078C8  0FFE               	addlw	254
  3160  0078CA  0100               	movlb	0	; force () banked
  3161  0078CC  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3162                           
  3163                           ;main.c: 259: signed char j = y - 2;
  3164  0078CE  0100               	movlb	0	; force () banked
  3165  0078D0  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3166  0078D2  0FFE               	addlw	254
  3167  0078D4  0100               	movlb	0	; force () banked
  3168  0078D6  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3169                           
  3170                           ;main.c: 260: char mem;;main.c: 262: if (i < 0)
  3171  0078D8  0100               	movlb	0	; force () banked
  3172  0078DA  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3173  0078DC  EF74  F03C         	goto	u920
  3174  0078E0  EF72  F03C         	goto	u921
  3175  0078E4                     u921:
  3176  0078E4  EF77  F03C         	goto	l1956
  3177  0078E8                     u920:
  3178  0078E8                     
  3179                           ; BSR set to: 0
  3180                           ;main.c: 263: i = 0;
  3181  0078E8  0E00               	movlw	0
  3182  0078EA  0100               	movlb	0	; force () banked
  3183  0078EC  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3184  0078EE                     l1956:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;main.c: 264: if (j < 0)
  3188  0078EE  0100               	movlb	0	; force () banked
  3189  0078F0  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3190  0078F2  EF7F  F03C         	goto	u930
  3191  0078F6  EF7D  F03C         	goto	u931
  3192  0078FA                     u931:
  3193  0078FA  EF82  F03C         	goto	l1960
  3194  0078FE                     u930:
  3195  0078FE                     
  3196                           ; BSR set to: 0
  3197                           ;main.c: 265: j = 0;
  3198  0078FE  0E00               	movlw	0
  3199  007900  0100               	movlb	0	; force () banked
  3200  007902  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3201  007904                     l1960:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;main.c: 266: mem=i;
  3205  007904  C0C5  F0C2         	movff	enleveTuilesAutour@i,enleveTuilesAutour@mem
  3206                           
  3207                           ;main.c: 269: while(j <= y && j<4)
  3208  007908  EFF5  F03C         	goto	l1974
  3209  00790C                     l151:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;main.c: 270: {;main.c: 271: i=mem;
  3213  00790C  C0C2  F0C5         	movff	enleveTuilesAutour@mem,enleveTuilesAutour@i
  3214                           
  3215                           ;main.c: 272: while(i<=x && i<20)
  3216  007910  EFD9  F03C         	goto	l1968
  3217  007914                     l1962:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;main.c: 273: {;main.c: 274: if(m_tabMines[j][i]!=2)
  3221  007914  0100               	movlb	0	; force () banked
  3222  007916  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3223  007918  0D15               	mullw	21
  3224  00791A  0E60               	movlw	low _m_tabMines
  3225  00791C  0100               	movlb	0	; force () banked
  3226  00791E  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3227  007920  0E00               	movlw	high _m_tabMines
  3228  007922  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3229  007924  50F3               	movf	243,w,c
  3230  007926  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3231  007928  50F4               	movf	244,w,c
  3232  00792A  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3233  00792C  0100               	movlb	0	; force () banked
  3234  00792E  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3235  007930  0100               	movlb	0	; force () banked
  3236  007932  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3237  007934  6ED9               	movwf	fsr2l,c
  3238  007936  0100               	movlb	0	; force () banked
  3239  007938  0E00               	movlw	0
  3240  00793A  0100               	movlb	0	; force () banked
  3241  00793C  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3242  00793E  6EDA               	movwf	fsr2h,c
  3243  007940  0E02               	movlw	2
  3244  007942  18DE               	xorwf	postinc2,w,c
  3245  007944  B4D8               	btfsc	status,2,c
  3246  007946  EFA7  F03C         	goto	u941
  3247  00794A  EFA9  F03C         	goto	u940
  3248  00794E                     u941:
  3249  00794E  EFD7  F03C         	goto	l1966
  3250  007952                     u940:
  3251  007952                     
  3252                           ; BSR set to: 0
  3253                           ;main.c: 275: m_tabVue[j][i]=m_tabMines[j][i];
  3254  007952  0100               	movlb	0	; force () banked
  3255  007954  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3256  007956  0D15               	mullw	21
  3257  007958  0E60               	movlw	low _m_tabMines
  3258  00795A  0100               	movlb	0	; force () banked
  3259  00795C  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3260  00795E  0E00               	movlw	high _m_tabMines
  3261  007960  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3262  007962  50F3               	movf	243,w,c
  3263  007964  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3264  007966  50F4               	movf	244,w,c
  3265  007968  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3266  00796A  0100               	movlb	0	; force () banked
  3267  00796C  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3268  00796E  0100               	movlb	0	; force () banked
  3269  007970  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3270  007972  6ED9               	movwf	fsr2l,c
  3271  007974  0100               	movlb	0	; force () banked
  3272  007976  0E00               	movlw	0
  3273  007978  0100               	movlb	0	; force () banked
  3274  00797A  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3275  00797C  6EDA               	movwf	fsr2h,c
  3276  00797E  0100               	movlb	0	; force () banked
  3277  007980  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3278  007982  0D15               	mullw	21
  3279  007984  0E00               	movlw	low _m_tabVue
  3280  007986  0100               	movlb	0	; force () banked
  3281  007988  6FC0               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3282  00798A  0E01               	movlw	high _m_tabVue
  3283  00798C  6FC1               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3284  00798E  50F3               	movf	243,w,c
  3285  007990  27C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3286  007992  50F4               	movf	244,w,c
  3287  007994  23C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3288  007996  0100               	movlb	0	; force () banked
  3289  007998  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3290  00799A  0100               	movlb	0	; force () banked
  3291  00799C  25C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3292  00799E  6EE1               	movwf	fsr1l,c
  3293  0079A0  0100               	movlb	0	; force () banked
  3294  0079A2  0E00               	movlw	0
  3295  0079A4  0100               	movlb	0	; force () banked
  3296  0079A6  21C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3297  0079A8  6EE2               	movwf	fsr1h,c
  3298  0079AA  CFDF FFE7          	movff	indf2,indf1
  3299  0079AE                     l1966:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;main.c: 276: i++;
  3303  0079AE  0100               	movlb	0	; force () banked
  3304  0079B0  2BC5               	incf	enleveTuilesAutour@i& (0+255),f,b
  3305  0079B2                     l1968:
  3306                           
  3307                           ; BSR set to: 0
  3308  0079B2  0100               	movlb	0	; force () banked
  3309  0079B4  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3310  0079B6  0100               	movlb	0	; force () banked
  3311  0079B8  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3312  0079BA  EFE8  F03C         	goto	u950
  3313  0079BE  0AFF               	xorlw	255
  3314  0079C0  25C5               	addwf	enleveTuilesAutour@i& (0+255),w,b
  3315  0079C2  B0D8               	btfsc	status,0,c
  3316  0079C4  EFE6  F03C         	goto	u951
  3317  0079C8  EFE8  F03C         	goto	u950
  3318  0079CC                     u951:
  3319  0079CC  EFF3  F03C         	goto	l1972
  3320  0079D0                     u950:
  3321  0079D0                     
  3322                           ; BSR set to: 0
  3323  0079D0  0100               	movlb	0	; force () banked
  3324  0079D2  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3325  0079D4  0A80               	xorlw	128
  3326  0079D6  0F6C               	addlw	-148
  3327  0079D8  A0D8               	btfss	status,0,c
  3328  0079DA  EFF1  F03C         	goto	u961
  3329  0079DE  EFF3  F03C         	goto	u960
  3330  0079E2                     u961:
  3331  0079E2  EF8A  F03C         	goto	l1962
  3332  0079E6                     u960:
  3333  0079E6                     l1972:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;main.c: 277: };main.c: 278: j++;
  3337  0079E6  0100               	movlb	0	; force () banked
  3338  0079E8  2BC4               	incf	enleveTuilesAutour@j& (0+255),f,b
  3339  0079EA                     l1974:
  3340                           
  3341                           ; BSR set to: 0
  3342  0079EA  0100               	movlb	0	; force () banked
  3343  0079EC  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3344  0079EE  0100               	movlb	0	; force () banked
  3345  0079F0  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3346  0079F2  EF04  F03D         	goto	u970
  3347  0079F6  0AFF               	xorlw	255
  3348  0079F8  25C4               	addwf	enleveTuilesAutour@j& (0+255),w,b
  3349  0079FA  B0D8               	btfsc	status,0,c
  3350  0079FC  EF02  F03D         	goto	u971
  3351  007A00  EF04  F03D         	goto	u970
  3352  007A04                     u971:
  3353  007A04  EF0F  F03D         	goto	l1978
  3354  007A08                     u970:
  3355  007A08                     
  3356                           ; BSR set to: 0
  3357  007A08  0100               	movlb	0	; force () banked
  3358  007A0A  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3359  007A0C  0A80               	xorlw	128
  3360  007A0E  0F7C               	addlw	-132
  3361  007A10  A0D8               	btfss	status,0,c
  3362  007A12  EF0D  F03D         	goto	u981
  3363  007A16  EF0F  F03D         	goto	u980
  3364  007A1A                     u981:
  3365  007A1A  EF86  F03C         	goto	l151
  3366  007A1E                     u980:
  3367  007A1E                     l1978:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;main.c: 279: };main.c: 280: afficheTabVue();
  3371  007A1E  ECB2  F037         	call	_afficheTabVue	;wreg free
  3372  007A22  0012               	return		;funcret
  3373  007A24                     __end_of_enleveTuilesAutour:
  3374                           	opt callstack 0
  3375                           
  3376 ;; *************** function _afficheTabVue *****************
  3377 ;; Defined at:
  3378 ;;		line 329 in file "main.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  i               1    8[BANK0 ] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3392 ;;      Params:         0       0       0       0       0       0       0
  3393 ;;      Locals:         0       1       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0
  3395 ;;      Totals:         0       1       0       0       0       0       0
  3396 ;;Total ram usage:        1 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    5
  3399 ;; This function calls:
  3400 ;;		_lcd_gotoXY
  3401 ;;		_lcd_putMessage
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;;		_enleveTuilesAutour
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text20
  3409  006F64                     __ptext20:
  3410                           	opt callstack 0
  3411  006F64                     _afficheTabVue:
  3412                           	opt callstack 23
  3413  006F64                     
  3414                           ;main.c: 331: for (char i = 0; i < 4; i++) {
  3415  006F64  0E00               	movlw	0
  3416  006F66  0100               	movlb	0	; force () banked
  3417  006F68  6FBC               	movwf	afficheTabVue@i& (0+255),b
  3418  006F6A                     
  3419                           ; BSR set to: 0
  3420  006F6A  0E03               	movlw	3
  3421  006F6C  0100               	movlb	0	; force () banked
  3422  006F6E  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3423  006F70  EFBC  F037         	goto	u811
  3424  006F74  EFBE  F037         	goto	u810
  3425  006F78                     u811:
  3426  006F78  EFC0  F037         	goto	l1884
  3427  006F7C                     u810:
  3428  006F7C  EFDE  F037         	goto	l182
  3429  006F80                     l1884:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;main.c: 332: lcd_gotoXY(1, i + 1);
  3433  006F80  0100               	movlb	0	; force () banked
  3434  006F82  29BC               	incf	afficheTabVue@i& (0+255),w,b
  3435  006F84  0100               	movlb	0	; force () banked
  3436  006F86  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3437  006F88  0E01               	movlw	1
  3438  006F8A  ECE3  F038         	call	_lcd_gotoXY
  3439  006F8E                     
  3440                           ;main.c: 333: lcd_putMessage(m_tabVue[i]);
  3441  006F8E  0100               	movlb	0	; force () banked
  3442  006F90  51BC               	movf	afficheTabVue@i& (0+255),w,b
  3443  006F92  0D15               	mullw	21
  3444  006F94  0E00               	movlw	low _m_tabVue
  3445  006F96  24F3               	addwf	243,w,c
  3446  006F98  0100               	movlb	0	; force () banked
  3447  006F9A  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3448  006F9C  0E01               	movlw	high _m_tabVue
  3449  006F9E  20F4               	addwfc	prodh,w,c
  3450  006FA0  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3451  006FA2  EC09  F037         	call	_lcd_putMessage	;wreg free
  3452  006FA6  0100               	movlb	0	; force () banked
  3453  006FA8  2BBC               	incf	afficheTabVue@i& (0+255),f,b
  3454  006FAA                     
  3455                           ; BSR set to: 0
  3456  006FAA  0E03               	movlw	3
  3457  006FAC  0100               	movlb	0	; force () banked
  3458  006FAE  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3459  006FB0  EFDC  F037         	goto	u821
  3460  006FB4  EFDE  F037         	goto	u820
  3461  006FB8                     u821:
  3462  006FB8  EFC0  F037         	goto	l1884
  3463  006FBC                     u820:
  3464  006FBC                     l182:
  3465                           
  3466                           ; BSR set to: 0
  3467  006FBC  0012               	return		;funcret
  3468  006FBE                     __end_of_afficheTabVue:
  3469                           	opt callstack 0
  3470                           
  3471 ;; *************** function _afficheTabMines *****************
  3472 ;; Defined at:
  3473 ;;		line 342 in file "main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  i               1    8[BANK0 ] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3487 ;;      Params:         0       0       0       0       0       0       0
  3488 ;;      Locals:         0       1       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0
  3490 ;;      Totals:         0       1       0       0       0       0       0
  3491 ;;Total ram usage:        1 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    5
  3494 ;; This function calls:
  3495 ;;		_lcd_gotoXY
  3496 ;;		_lcd_putMessage
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text21
  3503  006F0A                     __ptext21:
  3504                           	opt callstack 0
  3505  006F0A                     _afficheTabMines:
  3506                           	opt callstack 25
  3507  006F0A                     
  3508                           ;main.c: 344: for (char i = 0; i < 4; i++) {
  3509  006F0A  0E00               	movlw	0
  3510  006F0C  0100               	movlb	0	; force () banked
  3511  006F0E  6FBC               	movwf	afficheTabMines@i& (0+255),b
  3512  006F10                     
  3513                           ; BSR set to: 0
  3514  006F10  0E03               	movlw	3
  3515  006F12  0100               	movlb	0	; force () banked
  3516  006F14  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3517  006F16  EF8F  F037         	goto	u1401
  3518  006F1A  EF91  F037         	goto	u1400
  3519  006F1E                     u1401:
  3520  006F1E  EF93  F037         	goto	l2272
  3521  006F22                     u1400:
  3522  006F22  EFB1  F037         	goto	l187
  3523  006F26                     l2272:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;main.c: 345: lcd_gotoXY(1, i + 1);
  3527  006F26  0100               	movlb	0	; force () banked
  3528  006F28  29BC               	incf	afficheTabMines@i& (0+255),w,b
  3529  006F2A  0100               	movlb	0	; force () banked
  3530  006F2C  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3531  006F2E  0E01               	movlw	1
  3532  006F30  ECE3  F038         	call	_lcd_gotoXY
  3533  006F34                     
  3534                           ;main.c: 346: lcd_putMessage(m_tabMines[i]);
  3535  006F34  0100               	movlb	0	; force () banked
  3536  006F36  51BC               	movf	afficheTabMines@i& (0+255),w,b
  3537  006F38  0D15               	mullw	21
  3538  006F3A  0E60               	movlw	low _m_tabMines
  3539  006F3C  24F3               	addwf	243,w,c
  3540  006F3E  0100               	movlb	0	; force () banked
  3541  006F40  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3542  006F42  0E00               	movlw	high _m_tabMines
  3543  006F44  20F4               	addwfc	prodh,w,c
  3544  006F46  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3545  006F48  EC09  F037         	call	_lcd_putMessage	;wreg free
  3546  006F4C  0100               	movlb	0	; force () banked
  3547  006F4E  2BBC               	incf	afficheTabMines@i& (0+255),f,b
  3548  006F50                     
  3549                           ; BSR set to: 0
  3550  006F50  0E03               	movlw	3
  3551  006F52  0100               	movlb	0	; force () banked
  3552  006F54  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3553  006F56  EFAF  F037         	goto	u1411
  3554  006F5A  EFB1  F037         	goto	u1410
  3555  006F5E                     u1411:
  3556  006F5E  EF93  F037         	goto	l2272
  3557  006F62                     u1410:
  3558  006F62                     l187:
  3559                           
  3560                           ; BSR set to: 0
  3561  006F62  0012               	return		;funcret
  3562  006F64                     __end_of_afficheTabMines:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _lcd_putMessage *****************
  3566 ;; Defined at:
  3567 ;;		line 387 in file "Lcd4Lignes.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
  3570 ;;		 -> m_tabMines(84), m_tabVue(84), 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  j               1    7[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3582 ;;      Params:         0       2       0       0       0       0       0
  3583 ;;      Locals:         0       1       0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0
  3585 ;;      Totals:         0       3       0       0       0       0       0
  3586 ;;Total ram usage:        3 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    4
  3589 ;; This function calls:
  3590 ;;		_lcd_ecritChar
  3591 ;; This function is called by:
  3592 ;;		_afficheTabVue
  3593 ;;		_afficheTabMines
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text22
  3598  006E12                     __ptext22:
  3599                           	opt callstack 0
  3600  006E12                     _lcd_putMessage:
  3601                           	opt callstack 23
  3602  006E12                     
  3603                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  3604  006E12  0E00               	movlw	0
  3605  006E14  0100               	movlb	0	; force () banked
  3606  006E16  6FBB               	movwf	lcd_putMessage@j& (0+255),b
  3607  006E18  EF1D  F037         	goto	l1876
  3608  006E1C                     l1872:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  3612  006E1C  0100               	movlb	0	; force () banked
  3613  006E1E  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  3614  006E20  0100               	movlb	0	; force () banked
  3615  006E22  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3616  006E24  6ED9               	movwf	fsr2l,c
  3617  006E26  0100               	movlb	0	; force () banked
  3618  006E28  0E00               	movlw	0
  3619  006E2A  0100               	movlb	0	; force () banked
  3620  006E2C  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3621  006E2E  6EDA               	movwf	fsr2h,c
  3622  006E30  50DF               	movf	indf2,w,c
  3623  006E32  EC30  F037         	call	_lcd_ecritChar
  3624  006E36  0100               	movlb	0	; force () banked
  3625  006E38  2BBB               	incf	lcd_putMessage@j& (0+255),f,b
  3626  006E3A                     l1876:
  3627                           
  3628                           ; BSR set to: 0
  3629  006E3A  0100               	movlb	0	; force () banked
  3630  006E3C  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  3631  006E3E  0100               	movlb	0	; force () banked
  3632  006E40  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3633  006E42  6ED9               	movwf	fsr2l,c
  3634  006E44  0100               	movlb	0	; force () banked
  3635  006E46  0E00               	movlw	0
  3636  006E48  0100               	movlb	0	; force () banked
  3637  006E4A  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3638  006E4C  6EDA               	movwf	fsr2h,c
  3639  006E4E  50DF               	movf	indf2,w,c
  3640  006E50  A4D8               	btfss	status,2,c
  3641  006E52  EF2D  F037         	goto	u801
  3642  006E56  EF2F  F037         	goto	u800
  3643  006E5A                     u801:
  3644  006E5A  EF0E  F037         	goto	l1872
  3645  006E5E                     u800:
  3646  006E5E                     
  3647                           ; BSR set to: 0
  3648  006E5E  0012               	return		;funcret
  3649  006E60                     __end_of_lcd_putMessage:
  3650                           	opt callstack 0
  3651                           
  3652 ;; *************** function _lcd_ecritChar *****************
  3653 ;; Defined at:
  3654 ;;		line 359 in file "Lcd4Lignes.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  car             1    wreg     unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  car             1    3[BANK0 ] unsigned char 
  3659 ;;  posRam          1    4[BANK0 ] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3669 ;;      Params:         0       0       0       0       0       0       0
  3670 ;;      Locals:         0       2       0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0
  3672 ;;      Totals:         0       2       0       0       0       0       0
  3673 ;;Total ram usage:        2 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    3
  3676 ;; This function calls:
  3677 ;;		_lcd_wrCom
  3678 ;;		_lcd_wrData
  3679 ;; This function is called by:
  3680 ;;		_lcd_putMessage
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text23
  3685  006E60                     __ptext23:
  3686                           	opt callstack 0
  3687  006E60                     _lcd_ecritChar:
  3688                           	opt callstack 23
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;incstack = 0
  3692                           ;lcd_ecritChar@car stored from wreg
  3693  006E60  0100               	movlb	0	; force () banked
  3694  006E62  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  3695  006E64                     
  3696                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  3697  006E64  0100               	movlb	0	; force () banked
  3698  006E66  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  3699  006E68  EC94  F036         	call	_lcd_wrData
  3700  006E6C  0100               	movlb	0	; force () banked
  3701  006E6E  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  3702                           
  3703                           ;Lcd4Lignes.c: 364: switch(posRam)
  3704  006E70  EF49  F037         	goto	l1854
  3705  006E74                     l1846:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  3709  006E74  0EC0               	movlw	192
  3710  006E76  EC77  F038         	call	_lcd_wrCom
  3711                           
  3712                           ;Lcd4Lignes.c: 368: break;
  3713  006E7A  EF59  F037         	goto	l261
  3714  006E7E                     l1848:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  3718  006E7E  0E94               	movlw	148
  3719  006E80  EC77  F038         	call	_lcd_wrCom
  3720                           
  3721                           ;Lcd4Lignes.c: 371: break;
  3722  006E84  EF59  F037         	goto	l261
  3723  006E88                     l1850:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  3727  006E88  0ED4               	movlw	212
  3728  006E8A  EC77  F038         	call	_lcd_wrCom
  3729                           
  3730                           ;Lcd4Lignes.c: 374: break;
  3731  006E8E  EF59  F037         	goto	l261
  3732  006E92                     l1854:
  3733                           
  3734                           ; BSR set to: 0
  3735  006E92  0100               	movlb	0	; force () banked
  3736  006E94  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3737                           
  3738                           ; Switch size 1, requested type "simple"
  3739                           ; Number of cases is 3, Range of values is 148 to 212
  3740                           ; switch strategies available:
  3741                           ; Name         Instructions Cycles
  3742                           ; simple_byte           10     6 (average)
  3743                           ;	Chosen strategy is simple_byte
  3744  006E96  0A94               	xorlw	148	; case 148
  3745  006E98  B4D8               	btfsc	status,2,c
  3746  006E9A  EF3A  F037         	goto	l1846
  3747  006E9E  0A54               	xorlw	84	; case 192
  3748  006EA0  B4D8               	btfsc	status,2,c
  3749  006EA2  EF44  F037         	goto	l1850
  3750  006EA6  0A14               	xorlw	20	; case 212
  3751  006EA8  B4D8               	btfsc	status,2,c
  3752  006EAA  EF3F  F037         	goto	l1848
  3753  006EAE  EF59  F037         	goto	l261
  3754  006EB2                     l261:
  3755  006EB2  0012               	return		;funcret
  3756  006EB4                     __end_of_lcd_ecritChar:
  3757                           	opt callstack 0
  3758                           
  3759 ;; *************** function _lcd_wrData *****************
  3760 ;; Defined at:
  3761 ;;		line 188 in file "Lcd4Lignes.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  caractere       1    wreg     unsigned char 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  caractere       1    2[BANK0 ] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      unsigned char 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3775 ;;      Params:         0       0       0       0       0       0       0
  3776 ;;      Locals:         0       1       0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0
  3778 ;;      Totals:         0       1       0       0       0       0       0
  3779 ;;Total ram usage:        1 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    2
  3782 ;; This function calls:
  3783 ;;		_lcd_busy
  3784 ;;		_lcd_ecrireDonnees
  3785 ;;		_lcd_strobeEnableBit
  3786 ;; This function is called by:
  3787 ;;		_lcd_ecritChar
  3788 ;;		_lcd_initCGRam
  3789 ;;		_lcd_effaceChar
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text24
  3794  006D28                     __ptext24:
  3795                           	opt callstack 0
  3796  006D28                     _lcd_wrData:
  3797                           	opt callstack 26
  3798                           
  3799                           ;incstack = 0
  3800                           ;lcd_wrData@caractere stored from wreg
  3801  006D28  0100               	movlb	0	; force () banked
  3802  006D2A  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  3803  006D2C                     
  3804                           ;Lcd4Lignes.c: 190: lcd_busy();
  3805  006D2C  ECE8  F036         	call	_lcd_busy	;wreg free
  3806  006D30                     
  3807                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  3808  006D30  0E00               	movlw	0
  3809  006D32  6E95               	movwf	149,c	;volatile
  3810  006D34                     
  3811                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  3812  006D34  8080               	bsf	128,0,c	;volatile
  3813  006D36                     
  3814                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  3815  006D36  9280               	bcf	128,1,c	;volatile
  3816  006D38                     
  3817                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  3818  006D38  0100               	movlb	0	; force () banked
  3819  006D3A  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  3820  006D3C  0B0F               	andlw	15
  3821  006D3E  EC48  F036         	call	_lcd_ecrireDonnees
  3822  006D42                     
  3823                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  3824  006D42  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  3825  006D46                     
  3826                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  3827  006D46  0100               	movlb	0	; force () banked
  3828  006D48  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  3829  006D4A  EC48  F036         	call	_lcd_ecrireDonnees
  3830  006D4E                     
  3831                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  3832  006D4E  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  3833  006D52                     
  3834                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  3835  006D52  0E0F               	movlw	15
  3836  006D54  6E95               	movwf	149,c	;volatile
  3837  006D56                     
  3838                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3839                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  3840  006D56  ECE8  F036         	call	_lcd_busy	;wreg free
  3841  006D5A  0012               	return		;funcret
  3842  006D5C                     __end_of_lcd_wrData:
  3843                           	opt callstack 0
  3844                           
  3845 ;; *************** function _lcd_gotoXY *****************
  3846 ;; Defined at:
  3847 ;;		line 314 in file "Lcd4Lignes.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  x               1    wreg     unsigned char 
  3850 ;;  y               1    3[BANK0 ] unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  x               1    4[BANK0 ] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       1       0       0       0       0       0
  3863 ;;      Locals:         0       1       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0
  3865 ;;      Totals:         0       2       0       0       0       0       0
  3866 ;;Total ram usage:        2 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    3
  3869 ;; This function calls:
  3870 ;;		_lcd_wrCom
  3871 ;; This function is called by:
  3872 ;;		_deplace
  3873 ;;		_afficheTabVue
  3874 ;;		_afficheTabMines
  3875 ;;		_lcd_effaceLigne
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text25
  3880  0071C6                     __ptext25:
  3881                           	opt callstack 0
  3882  0071C6                     _lcd_gotoXY:
  3883                           	opt callstack 26
  3884                           
  3885                           ;incstack = 0
  3886                           ;lcd_gotoXY@x stored from wreg
  3887  0071C6  0100               	movlb	0	; force () banked
  3888  0071C8  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  3889  0071CA                     
  3890                           ;Lcd4Lignes.c: 316: switch(y)
  3891  0071CA  EF07  F039         	goto	l1868
  3892  0071CE                     l1858:
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  3896  0071CE  0100               	movlb	0	; force () banked
  3897  0071D0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3898  0071D2  0F7F               	addlw	127
  3899  0071D4  0980               	iorlw	128
  3900  0071D6  EC77  F038         	call	_lcd_wrCom
  3901                           
  3902                           ;Lcd4Lignes.c: 320: break;
  3903  0071DA  EF1B  F039         	goto	l250
  3904  0071DE                     l1860:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  3908  0071DE  0100               	movlb	0	; force () banked
  3909  0071E0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3910  0071E2  0FBF               	addlw	191
  3911  0071E4  0980               	iorlw	128
  3912  0071E6  EC77  F038         	call	_lcd_wrCom
  3913                           
  3914                           ;Lcd4Lignes.c: 323: break;
  3915  0071EA  EF1B  F039         	goto	l250
  3916  0071EE                     l1862:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  3920  0071EE  0100               	movlb	0	; force () banked
  3921  0071F0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3922  0071F2  0F93               	addlw	147
  3923  0071F4  0980               	iorlw	128
  3924  0071F6  EC77  F038         	call	_lcd_wrCom
  3925                           
  3926                           ;Lcd4Lignes.c: 326: break;
  3927  0071FA  EF1B  F039         	goto	l250
  3928  0071FE                     l1864:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  3932  0071FE  0100               	movlb	0	; force () banked
  3933  007200  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3934  007202  0FD3               	addlw	211
  3935  007204  0980               	iorlw	128
  3936  007206  EC77  F038         	call	_lcd_wrCom
  3937                           
  3938                           ;Lcd4Lignes.c: 329: break;
  3939  00720A  EF1B  F039         	goto	l250
  3940  00720E                     l1868:
  3941  00720E  0100               	movlb	0	; force () banked
  3942  007210  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  3943                           
  3944                           ; Switch size 1, requested type "simple"
  3945                           ; Number of cases is 4, Range of values is 1 to 4
  3946                           ; switch strategies available:
  3947                           ; Name         Instructions Cycles
  3948                           ; simple_byte           13     7 (average)
  3949                           ;	Chosen strategy is simple_byte
  3950  007212  0A01               	xorlw	1	; case 1
  3951  007214  B4D8               	btfsc	status,2,c
  3952  007216  EFE7  F038         	goto	l1858
  3953  00721A  0A03               	xorlw	3	; case 2
  3954  00721C  B4D8               	btfsc	status,2,c
  3955  00721E  EFEF  F038         	goto	l1860
  3956  007222  0A01               	xorlw	1	; case 3
  3957  007224  B4D8               	btfsc	status,2,c
  3958  007226  EFF7  F038         	goto	l1862
  3959  00722A  0A07               	xorlw	7	; case 4
  3960  00722C  B4D8               	btfsc	status,2,c
  3961  00722E  EFFF  F038         	goto	l1864
  3962  007232  EF1B  F039         	goto	l250
  3963  007236                     l250:
  3964  007236  0012               	return		;funcret
  3965  007238                     __end_of_lcd_gotoXY:
  3966                           	opt callstack 0
  3967                           
  3968 ;; *************** function _lcd_wrCom *****************
  3969 ;; Defined at:
  3970 ;;		line 156 in file "Lcd4Lignes.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  commande        1    wreg     unsigned char 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  commande        1    2[BANK0 ] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      unsigned char 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3984 ;;      Params:         0       0       0       0       0       0       0
  3985 ;;      Locals:         0       1       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0
  3987 ;;      Totals:         0       1       0       0       0       0       0
  3988 ;;Total ram usage:        1 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    2
  3991 ;; This function calls:
  3992 ;;		_lcd_busy
  3993 ;;		_lcd_ecrireDonnees
  3994 ;;		_lcd_strobeEnableBit
  3995 ;; This function is called by:
  3996 ;;		_lcd_init
  3997 ;;		_lcd_curseurHome
  3998 ;;		_lcd_gotoXY
  3999 ;;		_lcd_ecritChar
  4000 ;;		_lcd_initCGRam
  4001 ;;		_lcd_effaceAffichage
  4002 ;;		_lcd_cacheCurseur
  4003 ;;		_lcd_montreCurseur
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text26
  4008  0070EE                     __ptext26:
  4009                           	opt callstack 0
  4010  0070EE                     _lcd_wrCom:
  4011                           	opt callstack 27
  4012                           
  4013                           ;incstack = 0
  4014                           ;lcd_wrCom@commande stored from wreg
  4015  0070EE  0100               	movlb	0	; force () banked
  4016  0070F0  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  4017  0070F2                     
  4018                           ;Lcd4Lignes.c: 158: lcd_busy();
  4019  0070F2  ECE8  F036         	call	_lcd_busy	;wreg free
  4020  0070F6                     
  4021                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4022  0070F6  0E00               	movlw	0
  4023  0070F8  6E95               	movwf	149,c	;volatile
  4024  0070FA                     
  4025                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4026  0070FA  9080               	bcf	128,0,c	;volatile
  4027  0070FC                     
  4028                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4029  0070FC  9280               	bcf	128,1,c	;volatile
  4030  0070FE                     
  4031                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4032  0070FE  0100               	movlb	0	; force () banked
  4033  007100  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  4034  007102  0B0F               	andlw	15
  4035  007104  EC48  F036         	call	_lcd_ecrireDonnees
  4036  007108                     
  4037                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4038  007108  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  4039  00710C                     
  4040                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4041  00710C  0100               	movlb	0	; force () banked
  4042  00710E  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  4043  007110  EC48  F036         	call	_lcd_ecrireDonnees
  4044  007114                     
  4045                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4046  007114  EC38  F036         	call	_lcd_strobeEnableBit	;wreg free
  4047  007118                     
  4048                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4049  007118  0E03               	movlw	3
  4050  00711A                     u1537:
  4051  00711A  2EE8               	decfsz	wreg,f,c
  4052  00711C  D7FE               	bra	u1537
  4053  00711E  F000               	nop	
  4054  007120                     
  4055                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4056  007120  0100               	movlb	0	; force () banked
  4057  007122  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  4058  007124  B4D8               	btfsc	status,2,c
  4059  007126  EF97  F038         	goto	u781
  4060  00712A  EF99  F038         	goto	u780
  4061  00712E                     u781:
  4062  00712E  EFA3  F038         	goto	l1806
  4063  007132                     u780:
  4064  007132                     
  4065                           ; BSR set to: 0
  4066  007132  0E02               	movlw	2
  4067  007134  0100               	movlb	0	; force () banked
  4068  007136  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4069  007138  A4D8               	btfss	status,2,c
  4070  00713A  EFA1  F038         	goto	u791
  4071  00713E  EFA3  F038         	goto	u790
  4072  007142                     u791:
  4073  007142  EFA8  F038         	goto	l1808
  4074  007146                     u790:
  4075  007146                     l1806:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4079  007146  0EA6               	movlw	166
  4080  007148                     u1547:
  4081  007148  2EE8               	decfsz	wreg,f,c
  4082  00714A  D7FE               	bra	u1547
  4083  00714C  F000 F000          	nop2	
  4084  007150                     l1808:
  4085                           
  4086                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4087  007150  0E0F               	movlw	15
  4088  007152  6E95               	movwf	149,c	;volatile
  4089  007154                     
  4090                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4091  007154  ECE8  F036         	call	_lcd_busy	;wreg free
  4092  007158  0012               	return		;funcret
  4093  00715A                     __end_of_lcd_wrCom:
  4094                           	opt callstack 0
  4095                           
  4096 ;; *************** function _lcd_strobeEnableBit *****************
  4097 ;; Defined at:
  4098 ;;		line 431 in file "Lcd4Lignes.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		None
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4112 ;;      Params:         0       0       0       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0
  4115 ;;      Totals:         0       0       0       0       0       0       0
  4116 ;;Total ram usage:        0 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_lcd_wrCom
  4122 ;;		_lcd_wrData
  4123 ;;		_lcd_resetSequence
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text27
  4128  006C70                     __ptext27:
  4129                           	opt callstack 0
  4130  006C70                     _lcd_strobeEnableBit:
  4131                           	opt callstack 28
  4132  006C70                     
  4133                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4134  006C70  8480               	bsf	128,2,c	;volatile
  4135                           
  4136                           ;Lcd4Lignes.c: 434: __nop();
  4137  006C72  F000               	nop	
  4138                           
  4139                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4140  006C74  9480               	bcf	128,2,c	;volatile
  4141  006C76  0012               	return		;funcret
  4142  006C78                     __end_of_lcd_strobeEnableBit:
  4143                           	opt callstack 0
  4144                           
  4145 ;; *************** function _lcd_ecrireDonnees *****************
  4146 ;; Defined at:
  4147 ;;		line 107 in file "Lcd4Lignes.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  donnee          1    wreg     unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  donnee          1    1[BANK0 ] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4161 ;;      Params:         0       0       0       0       0       0       0
  4162 ;;      Locals:         0       1       0       0       0       0       0
  4163 ;;      Temps:          0       1       0       0       0       0       0
  4164 ;;      Totals:         0       2       0       0       0       0       0
  4165 ;;Total ram usage:        2 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_lcd_wrCom
  4171 ;;		_lcd_wrData
  4172 ;;		_lcd_resetSequence
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text28
  4177  006C90                     __ptext28:
  4178                           	opt callstack 0
  4179  006C90                     _lcd_ecrireDonnees:
  4180                           	opt callstack 28
  4181                           
  4182                           ;incstack = 0
  4183                           ;lcd_ecrireDonnees@donnee stored from wreg
  4184  006C90  0100               	movlb	0	; force () banked
  4185  006C92  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4186  006C94                     
  4187                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4188  006C94  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4189  006C98  0EF0               	movlw	240
  4190  006C9A  0100               	movlb	0	; force () banked
  4191  006C9C  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4192  006C9E  0100               	movlb	0	; force () banked
  4193  006CA0  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4194  006CA2  0B0F               	andlw	15
  4195  006CA4  0100               	movlb	0	; force () banked
  4196  006CA6  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4197  006CA8  6E83               	movwf	131,c	;volatile
  4198  006CAA                     
  4199                           ; BSR set to: 0
  4200  006CAA  0012               	return		;funcret
  4201  006CAC                     __end_of_lcd_ecrireDonnees:
  4202                           	opt callstack 0
  4203                           
  4204 ;; *************** function _lcd_busy *****************
  4205 ;; Defined at:
  4206 ;;		line 124 in file "Lcd4Lignes.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  adresse         1    1[BANK0 ] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      unsigned char 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4220 ;;      Params:         0       0       0       0       0       0       0
  4221 ;;      Locals:         0       1       0       0       0       0       0
  4222 ;;      Temps:          0       1       0       0       0       0       0
  4223 ;;      Totals:         0       2       0       0       0       0       0
  4224 ;;Total ram usage:        2 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    1
  4227 ;; This function calls:
  4228 ;;		_lcd_lireDonnees
  4229 ;; This function is called by:
  4230 ;;		_lcd_wrCom
  4231 ;;		_lcd_wrData
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text29
  4236  006DD0                     __ptext29:
  4237                           	opt callstack 0
  4238  006DD0                     _lcd_busy:
  4239                           	opt callstack 27
  4240  006DD0                     
  4241                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4242  006DD0  9080               	bcf	128,0,c	;volatile
  4243                           
  4244                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4245  006DD2  8280               	bsf	128,1,c	;volatile
  4246  006DD4                     l212:
  4247                           
  4248                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4249  006DD4  8480               	bsf	128,2,c	;volatile
  4250                           
  4251                           ;Lcd4Lignes.c: 134: __nop();
  4252  006DD6  F000               	nop	
  4253  006DD8                     
  4254                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4255  006DD8  EC35  F036         	call	_lcd_lireDonnees	;wreg free
  4256  006DDC  0100               	movlb	0	; force () banked
  4257  006DDE  6FB4               	movwf	??_lcd_busy& (0+255),b
  4258  006DE0  39B4               	swapf	??_lcd_busy& (0+255),w,b
  4259  006DE2  0BF0               	andlw	240
  4260  006DE4  0100               	movlb	0	; force () banked
  4261  006DE6  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  4262  006DE8                     
  4263                           ; BSR set to: 0
  4264                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4265  006DE8  9480               	bcf	128,2,c	;volatile
  4266  006DEA                     
  4267                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4268  006DEA  8480               	bsf	128,2,c	;volatile
  4269  006DEC                     
  4270                           ;Lcd4Lignes.c: 139: __nop();
  4271  006DEC  F000               	nop	
  4272                           
  4273                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4274  006DEE  EC35  F036         	call	_lcd_lireDonnees	;wreg free
  4275  006DF2  0100               	movlb	0	; force () banked
  4276  006DF4  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  4277  006DF6                     
  4278                           ; BSR set to: 0
  4279                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4280  006DF6  9480               	bcf	128,2,c	;volatile
  4281  006DF8                     
  4282                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4283  006DF8  0100               	movlb	0	; force () banked
  4284  006DFA  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  4285  006DFC  EF02  F037         	goto	u771
  4286  006E00  EF04  F037         	goto	u770
  4287  006E04                     u771:
  4288  006E04  EFEA  F036         	goto	l212
  4289  006E08                     u770:
  4290  006E08                     
  4291                           ; BSR set to: 0
  4292                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4293  006E08  9280               	bcf	128,1,c	;volatile
  4294  006E0A                     
  4295                           ; BSR set to: 0
  4296                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4297  006E0A  0100               	movlb	0	; force () banked
  4298  006E0C  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  4299  006E0E  0B7F               	andlw	127
  4300  006E10                     
  4301                           ; BSR set to: 0
  4302  006E10  0012               	return		;funcret
  4303  006E12                     __end_of_lcd_busy:
  4304                           	opt callstack 0
  4305                           
  4306 ;; *************** function _lcd_lireDonnees *****************
  4307 ;; Defined at:
  4308 ;;		line 93 in file "Lcd4Lignes.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      unsigned char 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4322 ;;      Params:         0       0       0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_lcd_busy
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text30
  4336  006C6A                     __ptext30:
  4337                           	opt callstack 0
  4338  006C6A                     _lcd_lireDonnees:
  4339                           	opt callstack 27
  4340  006C6A                     
  4341                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4342  006C6A  5083               	movf	131,w,c	;volatile
  4343  006C6C  0B0F               	andlw	15
  4344  006C6E  0012               	return		;funcret
  4345  006C70                     __end_of_lcd_lireDonnees:
  4346                           	opt callstack 0
  4347  0000                     
  4348                           	psect	param0
  4349  0000                     tosu	equ	0xFFF
  4350                           tosh	equ	0xFFE
  4351                           tosl	equ	0xFFD
  4352                           stkptr	equ	0xFFC
  4353                           pclatu	equ	0xFFB
  4354                           pclath	equ	0xFFA
  4355                           pcl	equ	0xFF9
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           prodh	equ	0xFF4
  4361                           prodl	equ	0xFF3
  4362                           indf0	equ	0xFEF
  4363                           postinc0	equ	0xFEE
  4364                           postdec0	equ	0xFED
  4365                           preinc0	equ	0xFEC
  4366                           plusw0	equ	0xFEB
  4367                           fsr0h	equ	0xFEA
  4368                           fsr0l	equ	0xFE9
  4369                           wreg	equ	0xFE8
  4370                           indf1	equ	0xFE7
  4371                           postinc1	equ	0xFE6
  4372                           postdec1	equ	0xFE5
  4373                           preinc1	equ	0xFE4
  4374                           plusw1	equ	0xFE3
  4375                           fsr1h	equ	0xFE2
  4376                           fsr1l	equ	0xFE1
  4377                           bsr	equ	0xFE0
  4378                           indf2	equ	0xFDF
  4379                           postinc2	equ	0xFDE
  4380                           postdec2	equ	0xFDD
  4381                           preinc2	equ	0xFDC
  4382                           plusw2	equ	0xFDB
  4383                           fsr2h	equ	0xFDA
  4384                           fsr2l	equ	0xFD9
  4385                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     36     124
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMine(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    main@nbMine	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posY	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posX	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->_afficheTabVue
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    9688
                                             29 BANK0      7     7      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1219
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1193
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4     881
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     411
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _gagne                                                9     7      2     280
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              7     3      4    1299
                                              5 BANK0      7     3      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               7     6      1    1935
                                             18 BANK0      7     6      1
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                   9     8      1    1771
                                              9 BANK0      9     8      1
                      _afficheTabVue
 ---------------------------------------------------------------------------------
 (3) _afficheTabVue                                        1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (4) _lcd_putMessage                                       3     1      2     555
                                              5 BANK0      3     1      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (5) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       _afficheTabVue
         _lcd_gotoXY
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
         _lcd_putMessage
           _lcd_ecritChar
             _lcd_wrCom
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
             _lcd_wrData
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
   _initTabVue
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     24      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      14        0.0%
DATA                 0      0     110      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 03 14:03:38 2019

 __end_of_calculToucheCombien 7D40                            l91 7384                            l84 6D8E  
                          l76 74DA          ??_enleveTuilesAutour 00BE           ___wmul@multiplicand 00B6  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l102 7760  
                         l111 78BE                           l120 7C7E                           l212 6DD4  
                         l220 7158                           l140 7B9C                           l213 6E08  
                         l206 6C6E                           l214 6E10                           l223 6D5A  
                         l151 790C                           l127 7D3E                           l144 7082  
                         l209 6CAA                           l161 7A22                           l250 7236  
                         l170 7604                           l226 70EC                           l235 6C7E  
                         l261 6EB2                           l229 6CD2                           l333 6CFA  
                         l182 6FBC                           l174 6D16                           l168 7598  
                         l280 72D8                           l344 71B4                           l177 6D26  
                         l345 71C4                           l283 6C76                           l267 6E5E  
                         l187 6F62                           l577 7436                           l997 6C8E  
                __CFG_CPB$OFF 000000                           u160 6D24                           u161 6D20  
                __CFG_CPD$OFF 000000                           u800 6E5E                           u801 6E5A  
                         u810 6F7C                           u811 6F78                           u820 6FBC  
                         u900 7D1C                           u821 6FB8                           u901 7D18  
                         u910 7D3A                           u830 717A                           u911 7D36  
                         u831 7176                           u920 78E8                           u840 71B4  
                         u921 78E4                           u841 71B0                           u770 6E08  
                         u930 78FE                           u850 7BDC                           u771 6E04  
                         u931 78FA                           u851 7BD8                           u780 7132  
                         u940 7952                           u860 7BF6                           u781 712E  
                         u941 794E                           u861 7BF2                           u790 7146  
                         u950 79D0                           u870 7C7A                           u791 7142  
                         u951 79CC                           u871 7C76                           u960 79E6  
                         u880 7CBE                           u961 79E2                           u881 7CBA  
                         u970 7A08                           u890 7CDC                           u971 7A04  
                         u891 7CD8                           u980 7A1E                           u981 7A1A  
                         u990 7256                           u991 7252                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                           prod 000FF3                   lcd_gotoXY@x 00B8  
                         wreg 000FE8                   lcd_gotoXY@y 00B7                  __CFG_LVP$OFF 000000  
                        l1000 6F08                          l2000 70C4                          l2010 70E0  
                        l2002 70CA                          l2100 72DA                          l2012 70E8  
                        l2004 70CE                          l2102 72E0                          l2030 72A8  
                        l2022 725A                          l2014 7238                          l2006 70D6  
                        l2200 7ADC                          l2120 736E                          l2112 7312  
                        l2032 72AC                          l2024 7260                          l2016 723E  
                        l2008 70DC                          l2040 7386                          l1330 6D14  
                        l2210 7B42                          l2202 7AEE                          l2122 7372  
                        l2114 7342                          l2106 72F6                          l2034 72BE  
                        l2018 7244                          l2050 73B4                          l2042 738C  
                        l2130 7622                          l1332 6D14                          l2212 7B74  
                        l2204 7B08                          l2116 7346                          l2108 72FC  
                        l2036 72C2                          l2028 7276                          l2060 73EC  
                        l2052 73BC                          l2044 739A                          l2140 7672  
                        l2132 7628                          l2124 7606                          l2300 7472  
                        l1334 6D24                          l2206 7B20                          l2214 7B80  
                        l2230 751A                          l2118 7358                          l2038 72D4  
                        l2070 7426                          l2062 7402                          l2054 73CE  
                        l2046 73A2                          l2150 770C                          l2142 7684  
                        l2126 760C                          l2310 74D6                          l2302 7476  
                        l2224 7074                          l2216 7020                          l1328 6D00  
                        l2208 7B30                          l2232 7526                          l2080 6D6E  
                        l2072 742E                          l2064 740A                          l2056 73D6  
                        l2048 73A6                          l2152 773C                          l2144 7688  
                        l2136 763E                          l2312 74E8                          l2304 748E  
                        l2226 7080                          l2218 706E                          l2250 75B2  
                        l2242 7558                          l2090 6D84                          l2082 6D70  
                        l2170 77D8                          l2162 777E                          l2066 7410  
                        l2058 73DE                          l2146 769E                          l2138 766E  
                        l2154 7744                          l2306 749C                          l2314 7500  
                        l2244 7594                          l2252 75C4                          l2236 753C  
                        l2092 6D86                          l2084 6D7C                          l2076 6D5C  
                        l2172 7824                          l2180 78A8                          l2164 7784  
                        l2156 7762                          l2068 7416                          l2148 76CE  
                        l2308 74B8                          l2190 7A64                          l2254 75EE  
                        l2262 7602                          l2246 759C                          l2238 7542  
                        l2094 6D8A                          l2086 6D7E                          l2078 6D64  
                        l2182 78AC                          l2174 7862                          l2158 7768  
                        l1800 7118                          l2272 6F26                          l2192 7A7C  
                        l2184 7A24                          l2256 75FC                          l2248 75AE  
                        l2088 6D80                          l2096 6CAC                          l2176 7892  
                        l2168 779A                          l1810 7154                          l1802 7120  
                        l2274 6F34                          l2266 6F0A                          l2194 7A8C  
                        l2186 7A38                          l2098 6CCE                          l2178 7896  
                        l2290 7456                          l1812 7154                          l1804 7132  
                        l1820 6D34                          l2276 6F4C                          l2268 6F10  
                        l2196 7A9E                          l2188 7A4A                          l1900 715A  
                        l2292 745A                          l1750 6C6A                          l1806 7146  
                        l1830 6D46                          l1822 6D34                          l2278 6F50  
                        l2198 7AD0                          l1910 6C80                          l1902 716C  
                        l2294 745E                          l1760 6DE8                          l1808 7150  
                        l1840 6D56                          l1832 6D46                          l1824 6D36  
                        l1816 6D2C                          l1920 7B9E                          l1904 717A  
                        l1912 6EB4                          l2296 7462                          l2288 7438  
                        l1770 6DF8                          l1762 6DEA                          l1754 6C94  
                        l1834 6D4E                          l1826 6D38                          l1818 6D30  
                        l1850 6E88                          l1930 7BF6                          l1922 7BC6  
                        l1906 718A                          l1914 6EEA                          l2298 746E  
                        l1772 6DF8                          l1764 6DEA                          l1756 6DD0  
                        l1780 70F2                          l1860 71DE                          l1836 6D52  
                        l1828 6D42                          l1844 6E64                          l1940 7CBE  
                        l1932 7C04                          l1924 7BCC                          l1908 7194  
                        l1916 6EFC                          l1774 6E0A                          l1766 6DEC  
                        l1758 6DD8                          l1790 70FE                          l1782 70F6  
                        l1862 71EE                          l1838 6D52                          l1846 6E74  
                        l1854 6E92                          l1870 6E12                          l1942 7CDC  
                        l1934 7C24                          l1926 7BDC                          l1768 6DF6  
                        l1792 7108                          l1784 70FA                          l1864 71FE  
                        l1856 71CA                          l1848 6E7E                          l1872 6E1C  
                        l1880 6F6A                          l1960 7904                          l1952 78C4  
                        l1936 7C7A                          l1944 7CE2                          l1928 7BE6  
                        l1778 6C70                          l1794 710C                          l1786 70FA  
                        l1858 71CE                          l1874 6E36                          l1890 6FAA  
                        l1970 79D0                          l1962 7914                          l1954 78E8  
                        l1946 7D1C                          l1938 7C84                          l1796 710C  
                        l1788 70FC                          l1868 720E                          l1876 6E3A  
                        l1884 6F80                          l1972 79E6                          l1964 7952  
                        l1956 78EE                          l1892 6C78                          l1980 7084  
                        l1948 7D3A                          l1798 7114                          l1886 6F8E  
                        l1878 6F64                          l1966 79AE                          l1974 79EA  
                        l1958 78FE                          l1990 70A6                          l1982 7088  
                        l1894 6CD4                          l1888 6FA6                          l1976 7A08  
                        l1968 79B2                          l1992 70AA                          l1984 709C  
                        l1896 6CF2                          l1978 7A1E                          l1994 70B2  
                        l1986 709E                          l1996 70B8                          l1988 70A0  
                        l1998 70BC                          u1000 7272                          u1001 726E  
                        u1010 72BE                          u1011 72BA                          u1100 730E  
                        u1020 72D4                          u1101 730A                          u1021 72D0  
                        u1110 7358                          u1030 739A                          u1111 7354  
                        u1031 7396                          u1120 7384                          u1200 7796  
                        u1040 73B4                          u1121 7380                          u1201 7792  
                        u1041 73B0                          u1210 77D8                          u1050 73CE  
                        u1130 761E                          u1211 77D4                          u1051 73CA  
                        u1131 761A                          u1300 7B20                          u1220 7862  
                        u1060 73EC                          u1140 763A                          u1301 7B1C  
                        u1221 785E                          u1061 73E8                          u1141 7636  
                        u1310 7B42                          u1230 78A8                          u1070 7402  
                        u1150 7684                          u1311 7B3E                          u1231 78A4  
                        u1071 73FE                          u1151 7680                          u1400 6F22  
                        u1320 7B74                          u1240 78BE                          u1080 7426  
                        u1160 769A                          u1401 6F1E                          u1321 7B70  
                        u1241 78BA                          u1081 7422                          u1161 7696  
                        u1410 6F62                          u1330 706E                          u1250 7A4A  
                        u1090 72F2                          u1170 770C                          u1411 6F5E  
                        u1331 706A                          u1251 7A46                          u1091 72EE  
                        u1171 7708                          u1260 7A7C                          u1340 7538  
                        u1180 7760                          u1261 7A78                          u1341 7534  
                        u1181 775C                          u1270 7A9E                          u1350 7554  
                        u1190 777A                          u1430 749C                          u1271 7A9A  
                        u1351 7550                          u1191 7776                          u1431 7498  
                        u1280 7AD0                          u1360 7594                          u1440 74B8  
                        u1281 7ACC                          u1361 7590                          u1441 74B4  
                        u1290 7AEE                          u1370 75AE                          u1450 74D6  
                        u1291 7AEA                          u1371 75AA                          u1507 70BE  
                        u1451 74D2                          u1380 75C4                          u1460 74E8  
                        u1381 75C0                          u1517 70D0                          u1461 74E4  
                        u1390 75EE                          u1391 75EA                          u1527 70E2  
                        u1537 711A                          u1547 7148                          u1477 7508  
                        u1487 7090                          u1497 70AC                          _RCIF 007CF5  
                        _TMR1 000FCE              ??_initialisation 00B6                          _main 7438  
                        _rand 6EB4                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 00B9                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 00B7                         ?_main 00B4  
                       ?_rand 00C0               __end_of___awmod 7438                         _ANSEL 000F7E  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 7B9E  
         ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7  
                       _gagne 751A                         _randx 00D8                         _srand 6C80  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
           ??_afficheTabMines 00BC                __CFG_PBADEN$ON 000000              _metToucheCombien 7762  
             __initialization 6FBE                  __end_of_main 751A                  __end_of_rand 6F0A  
         enleveTuilesAutour@i 00C5           enleveTuilesAutour@j 00C4           enleveTuilesAutour@x 00C3  
         enleveTuilesAutour@y 00BD    calculToucheCombien@nbMines 00C1          lcd_putMessage@chaine 00B9  
  calculToucheCombien@colonne 00BC                        ??_main 00D1                        ??_rand 00C2  
               __activetblptr 000003                        ?_gagne 00B4                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        ?_srand 00B4                        _ANSELH 000F7F  
                 initTabVue@i 00B7                   initTabVue@j 00B6                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 00C8                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA                getAnalog@canal 00B5  
            __end_of_lcd_busy 6E12              __end_of_lcd_init 6CD4                        ___lmul 715A  
                      ___wmul 6CD4                __CFG_STVREN$ON 000000                     ??___awmod 00C6  
                      _demine 701C                        gagne@i 00BB                        gagne@j 00BC  
                      clear_0 7004                        clear_1 7010               ___awmod@divisor 00C4  
                   ??_deplace 00BD               ___awmod@counter 00C6                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        srand@x 00B4  
      __size_of_afficheTabVue 005A             _lcd_resetSequence 7084                    __accesstop 0060  
     __end_of__initialization 7016           _lcd_strobeEnableBit 6C70            ?_lcd_resetSequence 00B4  
               ___rparam_used 000000                deplace@analogX 00BE                deplace@analogY 00BF  
                __pidataBANK0 6C66                  __pidataBANK1 6D90           ??_lcd_resetSequence 00B6  
               __end_of_gagne 7606                 __end_of_srand 6C90          ?_lcd_strobeEnableBit 00B4  
          __size_of_getAnalog 002C            __size_of_lcd_wrCom 006C                       ??_gagne 00B6  
   __end_of_lcd_resetSequence 70EE                       ??_srand 00B6      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 6C90                    __pbssBANK0 0060                    __pbssBANK1 0100  
            ??_lcd_putMessage 00BB            ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4                       ?___wmul 00B4  
                     ?_demine 00C6                 _afficheTabVue 6F64                ___lmul@product 00BC  
 __size_of_enleveTuilesAutour 0164         ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 01A2  
    __end_of_metToucheCombien 78C0                    _lcd_gotoXY 71C6                    _lcd_wrData 6D28  
             _afficheTabMines 6F0A     __end_of_lcd_ecrireDonnees 6CAC                     ?_lcd_busy 00B4  
                   ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060  
           __end_of_getAnalog 6D28          __size_of_rempliMines 015C                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 72DA             __end_of_lcd_wrCom 715A  
              ?_afficheTabVue 00B4               __size_of___lmul 006C                       ___awmod 7386  
             __size_of___wmul 0028               __size_of_demine 0068                       __pcinit 6FBE  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 7A24  
                     __ptext0 7438                       __ptext1 7606                       __ptext2 6EB4  
                     __ptext3 715A                       __ptext4 7386                       __ptext5 7762  
                     __ptext6 7B9E                       __ptext7 6CD4                       __ptext8 6CAC  
                     __ptext9 7084         __end_of_lcd_ecritChar 6EB4               lcd_busy@adresse 00B5  
                   _T1CONbits 000FCD              ___awmod@dividend 00C2                       demine@x 00CC  
                     demine@y 00C6              lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4  
                  ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A          end_of_initialization 7016  
       __end_of_lcd_initCGRam 72DA             ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0034             ??_lcd_curseurHome 00B7  
         lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80                     _PORTBbits 000F81  
     __end_of_afficheTabMines 6F64                   ?_lcd_gotoXY 00B7                     _TRISCbits 000F94  
                 ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C                    main@nbMine 00D2  
                   _TXSTAbits 000FAC               ??_afficheTabVue 00BC                   ?_initTabVue 00B4  
              __end_of___lmul 71C6                __end_of___wmul 6CFC                   _BAUDCONbits 000FB8  
              __end_of_demine 7084           start_initialization 6FBE         enleveTuilesAutour@mem 00C2  
         _calculToucheCombien 7B9E           __size_of_lcd_gotoXY 0072                      ??___lmul 00BC  
                    ??___wmul 00B8                 rempliMines@nb 00C8           __size_of_lcd_wrData 0034  
                    ??_demine 00C7                   __pdataBANK0 00D8                   __pdataBANK1 0154  
            __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA              ?_afficheTabMines 00B4  
               __pcstackBANK0 00B4             ?_metToucheCombien 00B4              afficheTabMines@i 00BC  
         __size_of_initTabVue 00AC            ??_metToucheCombien 00C6             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000                     _getAnalog 6CFC  
 __end_of_lcd_strobeEnableBit 6C78                _initialisation 6D5C    __end_of_enleveTuilesAutour 7A24  
                    ?___awmod 00C2                      ?_deplace 00B9                     _lcd_wrCom 70EE  
       ??_calculToucheCombien 00BE                __size_of_gagne 00EC               _lcd_lireDonnees 6C6A  
         lcd_wrData@caractere 00B6                __size_of_srand 0010                 ??_rempliMines 00CA  
                gagne@nbTuile 00BA               _lcd_curseurHome 6C78                ___wmul@product 00B8  
      __end_of_initialisation 6D90                    ?_getAnalog 00B4              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 004E                    ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8  
                ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4  
                   copy_data0 6FD2                     copy_data1 6FF2                      __Hparam0 0000  
      __size_of_lcd_ecritChar 0054                      __Lparam0 0000               ?_initialisation 00B4  
         __end_of_rempliMines 7762                  ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000  
                rempliMines@i 00CF                  rempliMines@j 00D0                  rempliMines@x 00CD  
                rempliMines@y 00CE            __end_of_lcd_gotoXY 7238            __end_of_lcd_wrData 6D5C  
            __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00BB  
            __size_of_deplace 017A       __end_of_lcd_lireDonnees 6C70                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 6C80                      __ptext10 7238                      __ptext11 6C78  
                    __ptext20 6F64                      __ptext12 6D5C                      __ptext21 6F0A  
                    __ptext13 6C80                      __ptext30 6C6A                      __ptext22 6E12  
                    __ptext14 72DA                      __ptext23 6E60                      __ptext15 751A  
                    __ptext24 6D28                      __ptext16 7A24                      __ptext25 71C6  
                    __ptext17 6CFC                      __ptext26 70EE                      __ptext18 701C  
                    __ptext27 6C70                      __ptext19 78C0                      __ptext28 6C90  
                    __ptext29 6DD0             metToucheCombien@i 00C9             metToucheCombien@j 00CA  
                    _lcd_busy 6DD0                      _lcd_init 6CAC            __end_of_initTabVue 7386  
    calculToucheCombien@ligne 00BA                      _m_tabVue 0100                 __size_of_main 00E2  
               __size_of_rand 0056                   gagne@pMines 00B4                      deplace@x 00B9  
                    deplace@y 00BB                   ??_getAnalog 00B4         __end_of_afficheTabVue 6FBE  
                    main@posX 00D4                      main@posY 00D6                   ??_lcd_wrCom 00B6  
               _lcd_ecritChar 6E60                afficheTabVue@i 00BC                 _lcd_initCGRam 7238  
                 _rempliMines 7606          calculToucheCombien@i 00C2          calculToucheCombien@j 00C4  
   __size_of_metToucheCombien 015E                _lcd_putMessage 6E12                ?_lcd_ecritChar 00B4  
            ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 78C0              ?_lcd_curseurHome 00B4  
    __size_of_afficheTabMines 005A                ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BD  
           __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 6E60  
