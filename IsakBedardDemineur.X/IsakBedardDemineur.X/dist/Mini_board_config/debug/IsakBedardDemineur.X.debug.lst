

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 14:46:32 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  00697A                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  00697A  0001               	dw	1
    89  00697C  0000               	dw	0
    90                           
    91                           	psect	idataBANK1
    92  006AA4                     __pidataBANK1:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  006AA4  08                 	db	8
    97  006AA5  04                 	db	4
    98  006AA6  04                 	db	4
    99  006AA7  0A                 	db	10
   100  006AA8  11                 	db	17
   101  006AA9  1F                 	db	31
   102  006AAA  11                 	db	17
   103  006AAB  00                 	db	0
   104  006AAC  1F                 	db	31
   105  006AAD  1B                 	db	27
   106  006AAE  11                 	db	17
   107  006AAF  11                 	db	17
   108  006AB0  11                 	db	17
   109  006AB1  11                 	db	17
   110  006AB2  1B                 	db	27
   111  006AB3  1F                 	db	31
   112  006AB4  00                 	db	0
   113  006AB5  15                 	db	21
   114  006AB6  0E                 	db	14
   115  006AB7  1F                 	db	31
   116  006AB8  1F                 	db	31
   117  006AB9  0E                 	db	14
   118  006ABA  15                 	db	21
   119  006ABB  00                 	db	0
   120  006ABC  08                 	db	8
   121  006ABD  0C                 	db	12
   122  006ABE  0E                 	db	14
   123  006ABF  0F                 	db	15
   124  006AC0  0C                 	db	12
   125  006AC1  08                 	db	8
   126  006AC2  08                 	db	8
   127  006AC3  1C                 	db	28
   128  006AC4  04                 	db	4
   129  006AC5  04                 	db	4
   130  006AC6  04                 	db	4
   131  006AC7  04                 	db	4
   132  006AC8  0E                 	db	14
   133  006AC9  0E                 	db	14
   134  006ACA  1B                 	db	27
   135  006ACB  11                 	db	17
   136  006ACC  04                 	db	4
   137  006ACD  0A                 	db	10
   138  006ACE  0E                 	db	14
   139  006ACF  11                 	db	17
   140  006AD0  1F                 	db	31
   141  006AD1  10                 	db	16
   142  006AD2  0E                 	db	14
   143  006AD3  00                 	db	0
   144  006AD4  08                 	db	8
   145  006AD5  04                 	db	4
   146  006AD6  0E                 	db	14
   147  006AD7  01                 	db	1
   148  006AD8  0F                 	db	15
   149  006AD9  11                 	db	17
   150  006ADA  0F                 	db	15
   151  006ADB  00                 	db	0
   152  006ADC  04                 	db	4
   153  006ADD  0A                 	db	10
   154  006ADE  0E                 	db	14
   155  006ADF  01                 	db	1
   156  006AE0  0F                 	db	15
   157  006AE1  11                 	db	17
   158  006AE2  0F                 	db	15
   159  006AE3  00                 	db	0
   160  0000                     _TRISCbits	set	3988
   161  0000                     _PORTAbits	set	3968
   162  0000                     _PORTD	set	3971
   163  0000                     _ANSELbits	set	3966
   164  0000                     _TRISA	set	3986
   165  0000                     _ANSEL	set	3966
   166  0000                     _TRISB	set	3987
   167  0000                     _ANSELH	set	3967
   168  0000                     _TRISD	set	3989
   169  0000                     _PORTBbits	set	3969
   170  0000                     _TMR1	set	4046
   171  0000                     _RCREG	set	4014
   172  0000                     _TXREG	set	4013
   173  0000                     _RCSTAbits	set	4011
   174  0000                     _TXSTAbits	set	4012
   175  0000                     _BAUDCONbits	set	4024
   176  0000                     _SPBRG	set	4015
   177  0000                     _SPBRGH	set	4016
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1	set	4033
   181  0000                     _ADCON0bits	set	4034
   182  0000                     _T1CONbits	set	4045
   183  0000                     _RCIF	set	31989
   184                           
   185                           ; #config settings
   186  0000                     
   187                           	psect	cinit
   188  006CD2                     __pcinit:
   189                           	opt callstack 0
   190  006CD2                     start_initialization:
   191                           	opt callstack 0
   192  006CD2                     __initialization:
   193                           	opt callstack 0
   194                           
   195                           ; Initialize objects allocated to BANK1 (64 bytes)
   196                           ; load TBLPTR registers with __pidataBANK1
   197  006CD2  0EA4               	movlw	low __pidataBANK1
   198  006CD4  6EF6               	movwf	tblptrl,c
   199  006CD6  0E6A               	movlw	high __pidataBANK1
   200  006CD8  6EF7               	movwf	tblptrh,c
   201  006CDA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   202  006CDC  6EF8               	movwf	tblptru,c
   203  006CDE  EE01  F054         	lfsr	0,__pdataBANK1
   204  006CE2  EE10 F040          	lfsr	1,64
   205  006CE6                     copy_data0:
   206  006CE6  0009               	tblrd		*+
   207  006CE8  CFF5 FFEE          	movff	tablat,postinc0
   208  006CEC  50E5               	movf	postdec1,w,c
   209  006CEE  50E1               	movf	fsr1l,w,c
   210  006CF0  E1FA               	bnz	copy_data0
   211                           
   212                           ; Initialize objects allocated to BANK0 (4 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214  006CF2  0E7A               	movlw	low __pidataBANK0
   215  006CF4  6EF6               	movwf	tblptrl,c
   216  006CF6  0E69               	movlw	high __pidataBANK0
   217  006CF8  6EF7               	movwf	tblptrh,c
   218  006CFA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219  006CFC  6EF8               	movwf	tblptru,c
   220  006CFE  EE00  F0D8         	lfsr	0,__pdataBANK0
   221  006D02  EE10 F004          	lfsr	1,4
   222  006D06                     copy_data1:
   223  006D06  0009               	tblrd		*+
   224  006D08  CFF5 FFEE          	movff	tablat,postinc0
   225  006D0C  50E5               	movf	postdec1,w,c
   226  006D0E  50E1               	movf	fsr1l,w,c
   227  006D10  E1FA               	bnz	copy_data1
   228                           
   229                           ; Clear objects allocated to BANK1 (84 bytes)
   230  006D12  EE01  F000         	lfsr	0,__pbssBANK1
   231  006D16  0E54               	movlw	84
   232  006D18                     clear_0:
   233  006D18  6AEE               	clrf	postinc0,c
   234  006D1A  06E8               	decf	wreg,f,c
   235  006D1C  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to BANK0 (84 bytes)
   238  006D1E  EE00  F060         	lfsr	0,__pbssBANK0
   239  006D22  0E54               	movlw	84
   240  006D24                     clear_1:
   241  006D24  6AEE               	clrf	postinc0,c
   242  006D26  06E8               	decf	wreg,f,c
   243  006D28  E1FD               	bnz	clear_1
   244  006D2A                     end_of_initialization:
   245                           	opt callstack 0
   246  006D2A                     __end_of__initialization:
   247                           	opt callstack 0
   248  006D2A  0100               	movlb	0
   249  006D2C  EF72  F038         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssBANK0
   252  000060                     __pbssBANK0:
   253                           	opt callstack 0
   254  000060                     _m_tabMines:
   255                           	opt callstack 0
   256  000060                     	ds	84
   257                           
   258                           	psect	dataBANK0
   259  0000D8                     __pdataBANK0:
   260                           	opt callstack 0
   261  0000D8                     _randx:
   262                           	opt callstack 0
   263  0000D8                     	ds	4
   264                           
   265                           	psect	bssBANK1
   266  000100                     __pbssBANK1:
   267                           	opt callstack 0
   268  000100                     _m_tabVue:
   269                           	opt callstack 0
   270  000100                     	ds	84
   271                           
   272                           	psect	dataBANK1
   273  000154                     __pdataBANK1:
   274                           	opt callstack 0
   275  000154                     _matCGRAM:
   276                           	opt callstack 0
   277  000154                     	ds	64
   278                           
   279                           	psect	cstackBANK0
   280  0000B4                     __pcstackBANK0:
   281                           	opt callstack 0
   282  0000B4                     ??_initTabVue:
   283  0000B4                     ??_getAnalog:
   284  0000B4                     ??_lcd_ecrireDonnees:
   285  0000B4                     ??_lcd_busy:
   286  0000B4                     ?___wmul:
   287                           	opt callstack 0
   288  0000B4                     ?___lmul:
   289                           	opt callstack 0
   290  0000B4                     gagne@pMines:
   291                           	opt callstack 0
   292  0000B4                     ___wmul@multiplier:
   293                           	opt callstack 0
   294  0000B4                     srand@x:
   295                           	opt callstack 0
   296  0000B4                     ___lmul@multiplier:
   297                           	opt callstack 0
   298                           
   299                           ; 4 bytes @ 0x0
   300  0000B4                     	ds	1
   301  0000B5                     getAnalog@canal:
   302                           	opt callstack 0
   303  0000B5                     lcd_ecrireDonnees@donnee:
   304                           	opt callstack 0
   305  0000B5                     lcd_busy@adresse:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x1
   309  0000B5                     	ds	1
   310  0000B6                     ??_gagne:
   311  0000B6                     ??_lcd_resetSequence:
   312  0000B6                     initTabVue@j:
   313                           	opt callstack 0
   314  0000B6                     lcd_wrCom@commande:
   315                           	opt callstack 0
   316  0000B6                     lcd_wrData@caractere:
   317                           	opt callstack 0
   318  0000B6                     ___wmul@multiplicand:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x2
   322  0000B6                     	ds	1
   323  0000B7                     ??_lcd_initCGRam:
   324  0000B7                     initTabVue@i:
   325                           	opt callstack 0
   326  0000B7                     lcd_gotoXY@y:
   327                           	opt callstack 0
   328  0000B7                     lcd_ecritChar@car:
   329                           	opt callstack 0
   330                           
   331                           ; 1 bytes @ 0x3
   332  0000B7                     	ds	1
   333  0000B8                     lcd_gotoXY@x:
   334                           	opt callstack 0
   335  0000B8                     lcd_ecritChar@posRam:
   336                           	opt callstack 0
   337  0000B8                     ___wmul@product:
   338                           	opt callstack 0
   339  0000B8                     ___lmul@multiplicand:
   340                           	opt callstack 0
   341                           
   342                           ; 4 bytes @ 0x4
   343  0000B8                     	ds	1
   344  0000B9                     lcd_initCGRam@i:
   345                           	opt callstack 0
   346  0000B9                     deplace@x:
   347                           	opt callstack 0
   348  0000B9                     lcd_putMessage@chaine:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x5
   352  0000B9                     	ds	1
   353  0000BA                     gagne@nbTuileEtDrapeau:
   354                           	opt callstack 0
   355  0000BA                     lcd_initCGRam@j:
   356                           	opt callstack 0
   357  0000BA                     calculToucheCombien@ligne:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x6
   361  0000BA                     	ds	1
   362  0000BB                     gagne@i:
   363                           	opt callstack 0
   364  0000BB                     lcd_putMessage@j:
   365                           	opt callstack 0
   366  0000BB                     deplace@y:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0x7
   370  0000BB                     	ds	1
   371  0000BC                     gagne@j:
   372                           	opt callstack 0
   373  0000BC                     afficheTabVue@i:
   374                           	opt callstack 0
   375  0000BC                     afficheTabMines@i:
   376                           	opt callstack 0
   377  0000BC                     calculToucheCombien@colonne:
   378                           	opt callstack 0
   379  0000BC                     ___lmul@product:
   380                           	opt callstack 0
   381                           
   382                           ; 4 bytes @ 0x8
   383  0000BC                     	ds	1
   384  0000BD                     ??_deplace:
   385  0000BD                     enleveTuilesAutour@y:
   386                           	opt callstack 0
   387  0000BD                     metOuEnleveDrapeau@y:
   388                           	opt callstack 0
   389                           
   390                           ; 1 bytes @ 0x9
   391  0000BD                     	ds	1
   392  0000BE                     ??_metOuEnleveDrapeau:
   393  0000BE                     ??_calculToucheCombien:
   394  0000BE                     ??_enleveTuilesAutour:
   395  0000BE                     deplace@analogX:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0xA
   399  0000BE                     	ds	1
   400  0000BF                     deplace@analogY:
   401                           	opt callstack 0
   402                           
   403                           ; 1 bytes @ 0xB
   404  0000BF                     	ds	1
   405  0000C0                     ?_rand:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0xC
   409  0000C0                     	ds	1
   410  0000C1                     calculToucheCombien@nbMines:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0xD
   414  0000C1                     	ds	1
   415  0000C2                     ?___awmod:
   416                           	opt callstack 0
   417  0000C2                     enleveTuilesAutour@mem:
   418                           	opt callstack 0
   419  0000C2                     calculToucheCombien@i:
   420                           	opt callstack 0
   421  0000C2                     ___awmod@dividend:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0xE
   425  0000C2                     	ds	1
   426  0000C3                     enleveTuilesAutour@x:
   427                           	opt callstack 0
   428  0000C3                     metOuEnleveDrapeau@x:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0xF
   432  0000C3                     	ds	1
   433  0000C4                     enleveTuilesAutour@j:
   434                           	opt callstack 0
   435  0000C4                     calculToucheCombien@j:
   436                           	opt callstack 0
   437  0000C4                     ___awmod@divisor:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0x10
   441  0000C4                     	ds	1
   442  0000C5                     enleveTuilesAutour@i:
   443                           	opt callstack 0
   444                           
   445                           ; 1 bytes @ 0x11
   446  0000C5                     	ds	1
   447  0000C6                     ??_metToucheCombien:
   448  0000C6                     demine@y:
   449                           	opt callstack 0
   450  0000C6                     ___awmod@counter:
   451                           	opt callstack 0
   452                           
   453                           ; 1 bytes @ 0x12
   454  0000C6                     	ds	1
   455  0000C7                     ??_demine:
   456  0000C7                     ___awmod@sign:
   457                           	opt callstack 0
   458                           
   459                           ; 1 bytes @ 0x13
   460  0000C7                     	ds	1
   461  0000C8                     rempliMines@nb:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x14
   465  0000C8                     	ds	1
   466  0000C9                     metToucheCombien@i:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0x15
   470  0000C9                     	ds	1
   471  0000CA                     ??_rempliMines:
   472  0000CA                     metToucheCombien@j:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0x16
   476  0000CA                     	ds	3
   477  0000CD                     rempliMines@x:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x19
   481  0000CD                     	ds	1
   482  0000CE                     rempliMines@y:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0x1A
   486  0000CE                     	ds	1
   487  0000CF                     rempliMines@i:
   488                           	opt callstack 0
   489  0000CF                     demine@x:
   490                           	opt callstack 0
   491                           
   492                           ; 1 bytes @ 0x1B
   493  0000CF                     	ds	1
   494  0000D0                     rempliMines@j:
   495                           	opt callstack 0
   496                           
   497                           ; 1 bytes @ 0x1C
   498  0000D0                     	ds	1
   499  0000D1                     ??_main:
   500                           
   501                           ; 1 bytes @ 0x1D
   502  0000D1                     	ds	1
   503  0000D2                     main@nbMine:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x1E
   507  0000D2                     	ds	2
   508  0000D4                     main@posX:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x20
   512  0000D4                     	ds	2
   513  0000D6                     main@posY:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x22
   517  0000D6                     	ds	2
   518                           
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 52 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  posY            2   34[BANK0 ] PTR unsigned char 
   529 ;;		 -> RAM(1535), 
   530 ;;  posX            2   32[BANK0 ] PTR unsigned char 
   531 ;;		 -> RAM(1535), 
   532 ;;  nbMine          2   30[BANK0 ] PTR int 
   533 ;;		 -> RAM(1535), 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   543 ;;      Params:         0       0       0       0       0       0       0
   544 ;;      Locals:         0       6       0       0       0       0       0
   545 ;;      Temps:          0       1       0       0       0       0       0
   546 ;;      Totals:         0       7       0       0       0       0       0
   547 ;;Total ram usage:        7 bytes
   548 ;; Hardware stack levels required when called:    8
   549 ;; This function calls:
   550 ;;		_afficheTabMines
   551 ;;		_afficheTabVue
   552 ;;		_demine
   553 ;;		_deplace
   554 ;;		_gagne
   555 ;;		_initTabVue
   556 ;;		_initialisation
   557 ;;		_lcd_init
   558 ;;		_metOuEnleveDrapeau
   559 ;;		_metToucheCombien
   560 ;;		_rempliMines
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text0
   567  0070E4                     __ptext0:
   568                           	opt callstack 0
   569  0070E4                     _main:
   570                           	opt callstack 23
   571  0070E4                     
   572                           ;main.c: 54: char* posX = 10;
   573  0070E4  0E0A               	movlw	10
   574  0070E6  0100               	movlb	0	; force () banked
   575  0070E8  6FD4               	movwf	main@posX& (0+255),b
   576  0070EA  0E00               	movlw	0
   577  0070EC  6FD5               	movwf	(main@posX+1)& (0+255),b
   578                           
   579                           ;main.c: 55: char* posY = 2;
   580  0070EE  0E02               	movlw	2
   581  0070F0  0100               	movlb	0	; force () banked
   582  0070F2  6FD6               	movwf	main@posY& (0+255),b
   583  0070F4  0E00               	movlw	0
   584  0070F6  6FD7               	movwf	(main@posY+1)& (0+255),b
   585                           
   586                           ;main.c: 56: int* nbMine = 9;
   587  0070F8  0E09               	movlw	9
   588  0070FA  0100               	movlb	0	; force () banked
   589  0070FC  6FD2               	movwf	main@nbMine& (0+255),b
   590  0070FE  0E00               	movlw	0
   591  007100  6FD3               	movwf	(main@nbMine+1)& (0+255),b
   592  007102                     
   593                           ; BSR set to: 0
   594                           ;main.c: 58: initialisation();
   595  007102  EC38  F035         	call	_initialisation	;wreg free
   596  007106                     
   597                           ;main.c: 59: lcd_init();
   598  007106  ECE0  F034         	call	_lcd_init	;wreg free
   599  00710A                     
   600                           ;main.c: 60: initTabVue();
   601  00710A  ECC3  F037         	call	_initTabVue	;wreg free
   602  00710E                     
   603                           ;main.c: 61: rempliMines(nbMine);
   604  00710E  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   605  007112  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   606  007116  EC20  F03A         	call	_rempliMines	;wreg free
   607  00711A                     
   608                           ;main.c: 62: metToucheCombien();
   609  00711A  ECCE  F03A         	call	_metToucheCombien	;wreg free
   610  00711E                     
   611                           ;main.c: 63: afficheTabVue();
   612  00711E  EC3C  F036         	call	_afficheTabVue	;wreg free
   613  007122                     l2367:
   614                           
   615                           ;main.c: 67: {;main.c: 68: deplace(&posX, &posY);
   616  007122  0ED4               	movlw	low main@posX
   617  007124  0100               	movlb	0	; force () banked
   618  007126  6FB9               	movwf	deplace@x& (0+255),b
   619  007128  0E00               	movlw	high main@posX
   620  00712A  6FBA               	movwf	(deplace@x+1)& (0+255),b
   621  00712C  0ED6               	movlw	low main@posY
   622  00712E  0100               	movlb	0	; force () banked
   623  007130  6FBB               	movwf	deplace@y& (0+255),b
   624  007132  0E00               	movlw	high main@posY
   625  007134  6FBC               	movwf	(deplace@y+1)& (0+255),b
   626  007136  EC7D  F03B         	call	_deplace	;wreg free
   627  00713A                     
   628                           ;main.c: 69: if(PORTBbits.RB1==0)
   629  00713A  B281               	btfsc	129,1,c	;volatile
   630  00713C  EFA2  F038         	goto	u1581
   631  007140  EFA4  F038         	goto	u1580
   632  007144                     u1581:
   633  007144  EFD6  F038         	goto	l2379
   634  007148                     u1580:
   635  007148                     
   636                           ;main.c: 70: if(demine(posX,posY)==0 || gagne(&nbMine))
   637  007148  C0D6  F0C6         	movff	main@posY,demine@y
   638  00714C  0100               	movlb	0	; force () banked
   639  00714E  51D4               	movf	main@posX& (0+255),w,b
   640  007150  EC3A  F03C         	call	_demine
   641  007154  0900               	iorlw	0
   642  007156  B4D8               	btfsc	status,2,c
   643  007158  EFB0  F038         	goto	u1591
   644  00715C  EFB2  F038         	goto	u1590
   645  007160                     u1591:
   646  007160  EFC1  F038         	goto	l2375
   647  007164                     u1590:
   648  007164  0ED2               	movlw	low main@nbMine
   649  007166  0100               	movlb	0	; force () banked
   650  007168  6FB4               	movwf	gagne@pMines& (0+255),b
   651  00716A  0E00               	movlw	high main@nbMine
   652  00716C  6FB5               	movwf	(gagne@pMines+1)& (0+255),b
   653  00716E  ECF0  F038         	call	_gagne	;wreg free
   654  007172  0900               	iorlw	0
   655  007174  B4D8               	btfsc	status,2,c
   656  007176  EFBF  F038         	goto	u1601
   657  00717A  EFC1  F038         	goto	u1600
   658  00717E                     u1601:
   659  00717E  EFD6  F038         	goto	l2379
   660  007182                     u1600:
   661  007182                     l2375:
   662                           
   663                           ;main.c: 71: {;main.c: 72: afficheTabMines();
   664  007182  EC0F  F036         	call	_afficheTabMines	;wreg free
   665  007186                     l78:
   666  007186  A281               	btfss	129,1,c	;volatile
   667  007188  EFC8  F038         	goto	u1611
   668  00718C  EFCA  F038         	goto	u1610
   669  007190                     u1611:
   670  007190  EFC3  F038         	goto	l78
   671  007194                     u1610:
   672  007194                     
   673                           ;main.c: 74: initTabVue();
   674  007194  ECC3  F037         	call	_initTabVue	;wreg free
   675                           
   676                           ;main.c: 75: rempliMines(nbMine);
   677  007198  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   678  00719C  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   679  0071A0  EC20  F03A         	call	_rempliMines	;wreg free
   680                           
   681                           ;main.c: 76: metToucheCombien();
   682  0071A4  ECCE  F03A         	call	_metToucheCombien	;wreg free
   683                           
   684                           ;main.c: 77: afficheTabVue();
   685  0071A8  EC3C  F036         	call	_afficheTabVue	;wreg free
   686  0071AC                     l2379:
   687                           
   688                           ;main.c: 78: };main.c: 79: if(PORTBbits.RB0==0)
   689  0071AC  B081               	btfsc	129,0,c	;volatile
   690  0071AE  EFDB  F038         	goto	u1621
   691  0071B2  EFDD  F038         	goto	u1620
   692  0071B6                     u1621:
   693  0071B6  EFE3  F038         	goto	l2383
   694  0071BA                     u1620:
   695  0071BA                     
   696                           ;main.c: 80: metOuEnleveDrapeau(posX,posY);
   697  0071BA  C0D6  F0BD         	movff	main@posY,metOuEnleveDrapeau@y
   698  0071BE  0100               	movlb	0	; force () banked
   699  0071C0  51D4               	movf	main@posX& (0+255),w,b
   700  0071C2  EC85  F039         	call	_metOuEnleveDrapeau
   701  0071C6                     l2383:
   702                           
   703                           ;main.c: 81: _delay((unsigned long)((100)*(1000000/4000.0)));
   704  0071C6  0E21               	movlw	33
   705  0071C8  0100               	movlb	0	; force () banked
   706  0071CA  6FD1               	movwf	??_main& (0+255),b
   707  0071CC  0E76               	movlw	118
   708  0071CE                     u1637:
   709  0071CE  2EE8               	decfsz	wreg,f,c
   710  0071D0  D7FE               	bra	u1637
   711  0071D2  2FD1               	decfsz	??_main& (0+255),f,b
   712  0071D4  D7FC               	bra	u1637
   713  0071D6  F000               	nop	
   714  0071D8  EF91  F038         	goto	l2367
   715  0071DC  EF00  F000         	goto	start
   716  0071E0                     __end_of_main:
   717                           	opt callstack 0
   718                           
   719 ;; *************** function _rempliMines *****************
   720 ;; Defined at:
   721 ;;		line 135 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  nb              2   20[BANK0 ] int 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  j               1   28[BANK0 ] unsigned char 
   726 ;;  i               1   27[BANK0 ] unsigned char 
   727 ;;  y               1   26[BANK0 ] unsigned char 
   728 ;;  x               1   25[BANK0 ] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         0       2       0       0       0       0       0
   739 ;;      Locals:         0       4       0       0       0       0       0
   740 ;;      Temps:          0       3       0       0       0       0       0
   741 ;;      Totals:         0       9       0       0       0       0       0
   742 ;;Total ram usage:        9 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    2
   745 ;; This function calls:
   746 ;;		___awmod
   747 ;;		_rand
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text1
   754  007440                     __ptext1:
   755                           	opt callstack 0
   756  007440                     _rempliMines:
   757                           	opt callstack 28
   758  007440                     
   759                           ;main.c: 137: char x, y;;main.c: 139: for (char i = 0; i < 4; i++) {
   760  007440  0E00               	movlw	0
   761  007442  0100               	movlb	0	; force () banked
   762  007444  6FCF               	movwf	rempliMines@i& (0+255),b
   763  007446                     
   764                           ; BSR set to: 0
   765  007446  0E03               	movlw	3
   766  007448  0100               	movlb	0	; force () banked
   767  00744A  65CF               	cpfsgt	rempliMines@i& (0+255),b
   768  00744C  EF2A  F03A         	goto	u1221
   769  007450  EF2C  F03A         	goto	u1220
   770  007454                     u1221:
   771  007454  EF2E  F03A         	goto	l2175
   772  007458                     u1220:
   773  007458  EFBF  F03A         	goto	l2199
   774  00745C                     l2175:
   775                           
   776                           ; BSR set to: 0
   777                           ;main.c: 140: for (char j = 0; j < 20; j++) {
   778  00745C  0E00               	movlw	0
   779  00745E  0100               	movlb	0	; force () banked
   780  007460  6FD0               	movwf	rempliMines@j& (0+255),b
   781  007462                     
   782                           ; BSR set to: 0
   783  007462  0E13               	movlw	19
   784  007464  0100               	movlb	0	; force () banked
   785  007466  65D0               	cpfsgt	rempliMines@j& (0+255),b
   786  007468  EF38  F03A         	goto	u1231
   787  00746C  EF3A  F03A         	goto	u1230
   788  007470                     u1231:
   789  007470  EF3C  F03A         	goto	l2181
   790  007474                     u1230:
   791  007474  EF5F  F03A         	goto	l2187
   792  007478                     l2181:
   793                           
   794                           ; BSR set to: 0
   795                           ;main.c: 141: m_tabMines[i][j] = ' ';
   796  007478  0100               	movlb	0	; force () banked
   797  00747A  51CF               	movf	rempliMines@i& (0+255),w,b
   798  00747C  0D15               	mullw	21
   799  00747E  0E60               	movlw	low _m_tabMines
   800  007480  0100               	movlb	0	; force () banked
   801  007482  6FCA               	movwf	??_rempliMines& (0+255),b
   802  007484  0E00               	movlw	high _m_tabMines
   803  007486  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   804  007488  50F3               	movf	243,w,c
   805  00748A  27CA               	addwf	??_rempliMines& (0+255),f,b
   806  00748C  50F4               	movf	244,w,c
   807  00748E  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   808  007490  0100               	movlb	0	; force () banked
   809  007492  51D0               	movf	rempliMines@j& (0+255),w,b
   810  007494  0100               	movlb	0	; force () banked
   811  007496  25CA               	addwf	??_rempliMines& (0+255),w,b
   812  007498  6ED9               	movwf	fsr2l,c
   813  00749A  0100               	movlb	0	; force () banked
   814  00749C  0E00               	movlw	0
   815  00749E  0100               	movlb	0	; force () banked
   816  0074A0  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   817  0074A2  6EDA               	movwf	fsr2h,c
   818  0074A4  0E20               	movlw	32
   819  0074A6  6EDF               	movwf	indf2,c
   820  0074A8                     
   821                           ; BSR set to: 0
   822  0074A8  0100               	movlb	0	; force () banked
   823  0074AA  2BD0               	incf	rempliMines@j& (0+255),f,b
   824  0074AC                     
   825                           ; BSR set to: 0
   826  0074AC  0E13               	movlw	19
   827  0074AE  0100               	movlb	0	; force () banked
   828  0074B0  65D0               	cpfsgt	rempliMines@j& (0+255),b
   829  0074B2  EF5D  F03A         	goto	u1241
   830  0074B6  EF5F  F03A         	goto	u1240
   831  0074BA                     u1241:
   832  0074BA  EF3C  F03A         	goto	l2181
   833  0074BE                     u1240:
   834  0074BE                     l2187:
   835                           
   836                           ; BSR set to: 0
   837  0074BE  0100               	movlb	0	; force () banked
   838  0074C0  2BCF               	incf	rempliMines@i& (0+255),f,b
   839  0074C2                     
   840                           ; BSR set to: 0
   841  0074C2  0E03               	movlw	3
   842  0074C4  0100               	movlb	0	; force () banked
   843  0074C6  65CF               	cpfsgt	rempliMines@i& (0+255),b
   844  0074C8  EF68  F03A         	goto	u1251
   845  0074CC  EF6A  F03A         	goto	u1250
   846  0074D0                     u1251:
   847  0074D0  EF2E  F03A         	goto	l2175
   848  0074D4                     u1250:
   849  0074D4  EFBF  F03A         	goto	l2199
   850  0074D8                     l2191:
   851                           
   852                           ; BSR set to: 0
   853                           ;main.c: 145: x = rand() % 20;
   854  0074D8  ECE4  F035         	call	_rand	;wreg free
   855  0074DC  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   856  0074E0  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   857  0074E4  0E00               	movlw	0
   858  0074E6  0100               	movlb	0	; force () banked
   859  0074E8  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   860  0074EA  0E14               	movlw	20
   861  0074EC  6FC4               	movwf	___awmod@divisor& (0+255),b
   862  0074EE  EC19  F038         	call	___awmod	;wreg free
   863  0074F2  0100               	movlb	0	; force () banked
   864  0074F4  51C2               	movf	?___awmod& (0+255),w,b
   865  0074F6  0100               	movlb	0	; force () banked
   866  0074F8  6FCD               	movwf	rempliMines@x& (0+255),b
   867                           
   868                           ;main.c: 146: y = rand() % 4;
   869  0074FA  ECE4  F035         	call	_rand	;wreg free
   870  0074FE  0100               	movlb	0	; force () banked
   871  007500  51C0               	movf	?_rand& (0+255),w,b
   872  007502  0B03               	andlw	3
   873  007504  0100               	movlb	0	; force () banked
   874  007506  6FCE               	movwf	rempliMines@y& (0+255),b
   875  007508                     
   876                           ; BSR set to: 0
   877                           ;main.c: 147: if (m_tabMines[y][x] != 2) {
   878  007508  0100               	movlb	0	; force () banked
   879  00750A  51CE               	movf	rempliMines@y& (0+255),w,b
   880  00750C  0D15               	mullw	21
   881  00750E  0E60               	movlw	low _m_tabMines
   882  007510  0100               	movlb	0	; force () banked
   883  007512  6FCA               	movwf	??_rempliMines& (0+255),b
   884  007514  0E00               	movlw	high _m_tabMines
   885  007516  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   886  007518  50F3               	movf	243,w,c
   887  00751A  27CA               	addwf	??_rempliMines& (0+255),f,b
   888  00751C  50F4               	movf	244,w,c
   889  00751E  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   890  007520  0100               	movlb	0	; force () banked
   891  007522  51CD               	movf	rempliMines@x& (0+255),w,b
   892  007524  0100               	movlb	0	; force () banked
   893  007526  25CA               	addwf	??_rempliMines& (0+255),w,b
   894  007528  6ED9               	movwf	fsr2l,c
   895  00752A  0100               	movlb	0	; force () banked
   896  00752C  0E00               	movlw	0
   897  00752E  0100               	movlb	0	; force () banked
   898  007530  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   899  007532  6EDA               	movwf	fsr2h,c
   900  007534  0E02               	movlw	2
   901  007536  18DE               	xorwf	postinc2,w,c
   902  007538  B4D8               	btfsc	status,2,c
   903  00753A  EFA1  F03A         	goto	u1261
   904  00753E  EFA3  F03A         	goto	u1260
   905  007542                     u1261:
   906  007542  EFBF  F03A         	goto	l2199
   907  007546                     u1260:
   908  007546                     
   909                           ; BSR set to: 0
   910                           ;main.c: 148: m_tabMines[y][x] = 2;
   911  007546  0100               	movlb	0	; force () banked
   912  007548  51CE               	movf	rempliMines@y& (0+255),w,b
   913  00754A  0D15               	mullw	21
   914  00754C  0E60               	movlw	low _m_tabMines
   915  00754E  0100               	movlb	0	; force () banked
   916  007550  6FCA               	movwf	??_rempliMines& (0+255),b
   917  007552  0E00               	movlw	high _m_tabMines
   918  007554  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   919  007556  50F3               	movf	243,w,c
   920  007558  27CA               	addwf	??_rempliMines& (0+255),f,b
   921  00755A  50F4               	movf	244,w,c
   922  00755C  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   923  00755E  0100               	movlb	0	; force () banked
   924  007560  51CD               	movf	rempliMines@x& (0+255),w,b
   925  007562  0100               	movlb	0	; force () banked
   926  007564  25CA               	addwf	??_rempliMines& (0+255),w,b
   927  007566  6ED9               	movwf	fsr2l,c
   928  007568  0100               	movlb	0	; force () banked
   929  00756A  0E00               	movlw	0
   930  00756C  0100               	movlb	0	; force () banked
   931  00756E  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   932  007570  6EDA               	movwf	fsr2h,c
   933  007572  0E02               	movlw	2
   934  007574  6EDF               	movwf	indf2,c
   935  007576                     
   936                           ; BSR set to: 0
   937                           ;main.c: 149: nb--;
   938  007576  0100               	movlb	0	; force () banked
   939  007578  07C8               	decf	rempliMines@nb& (0+255),f,b
   940  00757A  A0D8               	btfss	status,0,c
   941  00757C  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   942  00757E                     l2199:
   943                           
   944                           ; BSR set to: 0
   945  00757E  0100               	movlb	0	; force () banked
   946  007580  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   947  007582  EFCD  F03A         	goto	u1270
   948  007586  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   949  007588  E106               	bnz	u1271
   950  00758A  05C8               	decf	rempliMines@nb& (0+255),w,b
   951  00758C  B0D8               	btfsc	status,0,c
   952  00758E  EFCB  F03A         	goto	u1271
   953  007592  EFCD  F03A         	goto	u1270
   954  007596                     u1271:
   955  007596  EF6C  F03A         	goto	l2191
   956  00759A                     u1270:
   957  00759A                     
   958                           ; BSR set to: 0
   959  00759A  0012               	return		;funcret
   960  00759C                     __end_of_rempliMines:
   961                           	opt callstack 0
   962                           
   963 ;; *************** function _rand *****************
   964 ;; Defined at:
   965 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  2   12[BANK0 ] int 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   979 ;;      Params:         0       2       0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0
   982 ;;      Totals:         0       2       0       0       0       0       0
   983 ;;Total ram usage:        2 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    1
   986 ;; This function calls:
   987 ;;		___lmul
   988 ;; This function is called by:
   989 ;;		_rempliMines
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text2
   994  006BC8                     __ptext2:
   995                           	opt callstack 0
   996  006BC8                     _rand:
   997                           	opt callstack 28
   998  006BC8  C0D8  F0B4         	movff	_randx,___lmul@multiplier
   999  006BCC  C0D9  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1000  006BD0  C0DA  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1001  006BD4  C0DB  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1002  006BD8  0E6D               	movlw	109
  1003  006BDA  0100               	movlb	0	; () banked
  1004  006BDC  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1005  006BDE  0E4E               	movlw	78
  1006  006BE0  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1007  006BE2  0EC6               	movlw	198
  1008  006BE4  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1009  006BE6  0E41               	movlw	65
  1010  006BE8  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1011  006BEA  EC03  F037         	call	___lmul	;wreg free
  1012  006BEE  C0B4  F0D8         	movff	?___lmul,_randx
  1013  006BF2  C0B5  F0D9         	movff	?___lmul+1,_randx+1
  1014  006BF6  C0B6  F0DA         	movff	?___lmul+2,_randx+2
  1015  006BFA  C0B7  F0DB         	movff	?___lmul+3,_randx+3
  1016  006BFE  0E39               	movlw	57
  1017  006C00  0100               	movlb	0	; () banked
  1018  006C02  27D8               	addwf	_randx& (0+255),f,b
  1019  006C04  0E30               	movlw	48
  1020  006C06  23D9               	addwfc	(_randx+1)& (0+255),f,b
  1021  006C08  0E00               	movlw	0
  1022  006C0A  23DA               	addwfc	(_randx+2)& (0+255),f,b
  1023  006C0C  0E00               	movlw	0
  1024  006C0E  23DB               	addwfc	(_randx+3)& (0+255),f,b
  1025  006C10                     
  1026                           ; BSR set to: 0
  1027  006C10  0EFF               	movlw	255
  1028  006C12  15DA               	andwf	(_randx+2)& (0+255),w,b
  1029  006C14  6FC0               	movwf	?_rand& (0+255),b
  1030  006C16  0E7F               	movlw	127
  1031  006C18  15DB               	andwf	(_randx+3)& (0+255),w,b
  1032  006C1A  6FC1               	movwf	(?_rand+1)& (0+255),b
  1033  006C1C                     
  1034                           ; BSR set to: 0
  1035  006C1C  0012               	return		;funcret
  1036  006C1E                     __end_of_rand:
  1037                           	opt callstack 0
  1038                           
  1039 ;; *************** function ___lmul *****************
  1040 ;; Defined at:
  1041 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1044 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  product         4    8[BANK0 ] unsigned long 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  4    0[BANK0 ] unsigned long 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1056 ;;      Params:         0       8       0       0       0       0       0
  1057 ;;      Locals:         0       4       0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0
  1059 ;;      Totals:         0      12       0       0       0       0       0
  1060 ;;Total ram usage:       12 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_rand
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070  006E06                     __ptext3:
  1071                           	opt callstack 0
  1072  006E06                     ___lmul:
  1073                           	opt callstack 28
  1074  006E06  0E00               	movlw	0
  1075  006E08  0100               	movlb	0	; () banked
  1076  006E0A  6FBC               	movwf	___lmul@product& (0+255),b
  1077  006E0C  0E00               	movlw	0
  1078  006E0E  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1079  006E10  0E00               	movlw	0
  1080  006E12  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1081  006E14  0E00               	movlw	0
  1082  006E16  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1083  006E18                     l1945:
  1084                           
  1085                           ; BSR set to: 0
  1086  006E18  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1087  006E1A  EF11  F037         	goto	u911
  1088  006E1E  EF13  F037         	goto	u910
  1089  006E22                     u911:
  1090  006E22  EF1B  F037         	goto	l1949
  1091  006E26                     u910:
  1092  006E26                     
  1093                           ; BSR set to: 0
  1094  006E26  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1095  006E28  27BC               	addwf	___lmul@product& (0+255),f,b
  1096  006E2A  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1097  006E2C  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1098  006E2E  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1099  006E30  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1100  006E32  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1101  006E34  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1102  006E36                     l1949:
  1103                           
  1104                           ; BSR set to: 0
  1105  006E36  90D8               	bcf	status,0,c
  1106  006E38  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1107  006E3A  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1108  006E3C  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1109  006E3E  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1110  006E40                     
  1111                           ; BSR set to: 0
  1112  006E40  90D8               	bcf	status,0,c
  1113  006E42  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1114  006E44  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1115  006E46  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1116  006E48  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1117  006E4A  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1118  006E4C  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1119  006E4E  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1120  006E50  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1121  006E52  A4D8               	btfss	status,2,c
  1122  006E54  EF2E  F037         	goto	u921
  1123  006E58  EF30  F037         	goto	u920
  1124  006E5C                     u921:
  1125  006E5C  EF0C  F037         	goto	l1945
  1126  006E60                     u920:
  1127  006E60                     
  1128                           ; BSR set to: 0
  1129  006E60  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1130  006E64  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1131  006E68  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1132  006E6C  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1133  006E70                     
  1134                           ; BSR set to: 0
  1135  006E70  0012               	return		;funcret
  1136  006E72                     __end_of___lmul:
  1137                           	opt callstack 0
  1138                           
  1139 ;; *************** function ___awmod *****************
  1140 ;; Defined at:
  1141 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  dividend        2   14[BANK0 ] int 
  1144 ;;  divisor         2   16[BANK0 ] int 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  sign            1   19[BANK0 ] unsigned char 
  1147 ;;  counter         1   18[BANK0 ] unsigned char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  2   14[BANK0 ] int 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1157 ;;      Params:         0       4       0       0       0       0       0
  1158 ;;      Locals:         0       2       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0
  1160 ;;      Totals:         0       6       0       0       0       0       0
  1161 ;;Total ram usage:        6 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_rempliMines
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text4
  1171  007032                     __ptext4:
  1172                           	opt callstack 0
  1173  007032                     ___awmod:
  1174                           	opt callstack 29
  1175  007032  0E00               	movlw	0
  1176  007034  0100               	movlb	0	; () banked
  1177  007036  6FC7               	movwf	___awmod@sign& (0+255),b
  1178  007038                     
  1179                           ; BSR set to: 0
  1180  007038  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1181  00703A  EF23  F038         	goto	u1120
  1182  00703E  EF21  F038         	goto	u1121
  1183  007042                     u1121:
  1184  007042  EF29  F038         	goto	l2093
  1185  007046                     u1120:
  1186  007046                     
  1187                           ; BSR set to: 0
  1188  007046  6DC2               	negf	___awmod@dividend& (0+255),b
  1189  007048  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1190  00704A  B0D8               	btfsc	status,0,c
  1191  00704C  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1192  00704E                     
  1193                           ; BSR set to: 0
  1194  00704E  0E01               	movlw	1
  1195  007050  6FC7               	movwf	___awmod@sign& (0+255),b
  1196  007052                     l2093:
  1197                           
  1198                           ; BSR set to: 0
  1199  007052  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1200  007054  EF30  F038         	goto	u1130
  1201  007058  EF2E  F038         	goto	u1131
  1202  00705C                     u1131:
  1203  00705C  EF34  F038         	goto	l2097
  1204  007060                     u1130:
  1205  007060                     
  1206                           ; BSR set to: 0
  1207  007060  6DC4               	negf	___awmod@divisor& (0+255),b
  1208  007062  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1209  007064  B0D8               	btfsc	status,0,c
  1210  007066  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1211  007068                     l2097:
  1212                           
  1213                           ; BSR set to: 0
  1214  007068  51C4               	movf	___awmod@divisor& (0+255),w,b
  1215  00706A  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1216  00706C  B4D8               	btfsc	status,2,c
  1217  00706E  EF3B  F038         	goto	u1141
  1218  007072  EF3D  F038         	goto	u1140
  1219  007076                     u1141:
  1220  007076  EF61  F038         	goto	l2113
  1221  00707A                     u1140:
  1222  00707A                     
  1223                           ; BSR set to: 0
  1224  00707A  0E01               	movlw	1
  1225  00707C  6FC6               	movwf	___awmod@counter& (0+255),b
  1226  00707E  EF45  F038         	goto	l2103
  1227  007082                     l2101:
  1228                           
  1229                           ; BSR set to: 0
  1230  007082  90D8               	bcf	status,0,c
  1231  007084  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1232  007086  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1233  007088  2BC6               	incf	___awmod@counter& (0+255),f,b
  1234  00708A                     l2103:
  1235                           
  1236                           ; BSR set to: 0
  1237  00708A  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1238  00708C  EF4A  F038         	goto	u1151
  1239  007090  EF4C  F038         	goto	u1150
  1240  007094                     u1151:
  1241  007094  EF41  F038         	goto	l2101
  1242  007098                     u1150:
  1243  007098                     l2105:
  1244                           
  1245                           ; BSR set to: 0
  1246  007098  51C4               	movf	___awmod@divisor& (0+255),w,b
  1247  00709A  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1248  00709C  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1249  00709E  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1250  0070A0  A0D8               	btfss	status,0,c
  1251  0070A2  EF55  F038         	goto	u1161
  1252  0070A6  EF57  F038         	goto	u1160
  1253  0070AA                     u1161:
  1254  0070AA  EF5B  F038         	goto	l2109
  1255  0070AE                     u1160:
  1256  0070AE                     
  1257                           ; BSR set to: 0
  1258  0070AE  51C4               	movf	___awmod@divisor& (0+255),w,b
  1259  0070B0  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1260  0070B2  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1261  0070B4  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1262  0070B6                     l2109:
  1263                           
  1264                           ; BSR set to: 0
  1265  0070B6  90D8               	bcf	status,0,c
  1266  0070B8  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1267  0070BA  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1268  0070BC                     
  1269                           ; BSR set to: 0
  1270  0070BC  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1271  0070BE  EF4C  F038         	goto	l2105
  1272  0070C2                     l2113:
  1273                           
  1274                           ; BSR set to: 0
  1275  0070C2  51C7               	movf	___awmod@sign& (0+255),w,b
  1276  0070C4  B4D8               	btfsc	status,2,c
  1277  0070C6  EF67  F038         	goto	u1171
  1278  0070CA  EF69  F038         	goto	u1170
  1279  0070CE                     u1171:
  1280  0070CE  EF6D  F038         	goto	l2117
  1281  0070D2                     u1170:
  1282  0070D2                     
  1283                           ; BSR set to: 0
  1284  0070D2  6DC2               	negf	___awmod@dividend& (0+255),b
  1285  0070D4  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1286  0070D6  B0D8               	btfsc	status,0,c
  1287  0070D8  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1288  0070DA                     l2117:
  1289                           
  1290                           ; BSR set to: 0
  1291  0070DA  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1292  0070DE  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1293  0070E2                     
  1294                           ; BSR set to: 0
  1295  0070E2  0012               	return		;funcret
  1296  0070E4                     __end_of___awmod:
  1297                           	opt callstack 0
  1298                           
  1299 ;; *************** function _metToucheCombien *****************
  1300 ;; Defined at:
  1301 ;;		line 163 in file "main.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  j               1   22[BANK0 ] unsigned char 
  1306 ;;  i               1   21[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1316 ;;      Params:         0       0       0       0       0       0       0
  1317 ;;      Locals:         0       2       0       0       0       0       0
  1318 ;;      Temps:          0       3       0       0       0       0       0
  1319 ;;      Totals:         0       5       0       0       0       0       0
  1320 ;;Total ram usage:        5 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    2
  1323 ;; This function calls:
  1324 ;;		_calculToucheCombien
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text5
  1331  00759C                     __ptext5:
  1332                           	opt callstack 0
  1333  00759C                     _metToucheCombien:
  1334                           	opt callstack 28
  1335  00759C                     
  1336                           ;main.c: 165: for (char i = 0; i < 4; i++) {
  1337  00759C  0E00               	movlw	0
  1338  00759E  0100               	movlb	0	; force () banked
  1339  0075A0  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1340  0075A2                     
  1341                           ; BSR set to: 0
  1342  0075A2  0E03               	movlw	3
  1343  0075A4  0100               	movlb	0	; force () banked
  1344  0075A6  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1345  0075A8  EFD8  F03A         	goto	u1281
  1346  0075AC  EFDA  F03A         	goto	u1280
  1347  0075B0                     u1281:
  1348  0075B0  EFDC  F03A         	goto	l2207
  1349  0075B4                     u1280:
  1350  0075B4  EF7C  F03B         	goto	l114
  1351  0075B8                     l2207:
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;main.c: 166: for (char j = 0; j < 20; j++) {
  1355  0075B8  0E00               	movlw	0
  1356  0075BA  0100               	movlb	0	; force () banked
  1357  0075BC  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1358  0075BE                     
  1359                           ; BSR set to: 0
  1360  0075BE  0E13               	movlw	19
  1361  0075C0  0100               	movlb	0	; force () banked
  1362  0075C2  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1363  0075C4  EFE6  F03A         	goto	u1291
  1364  0075C8  EFE8  F03A         	goto	u1290
  1365  0075CC                     u1291:
  1366  0075CC  EFEA  F03A         	goto	l2213
  1367  0075D0                     u1290:
  1368  0075D0  EF71  F03B         	goto	l2225
  1369  0075D4                     l2213:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main.c: 167: if (m_tabMines[i][j] != 2)
  1373  0075D4  0100               	movlb	0	; force () banked
  1374  0075D6  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1375  0075D8  0D15               	mullw	21
  1376  0075DA  0E60               	movlw	low _m_tabMines
  1377  0075DC  0100               	movlb	0	; force () banked
  1378  0075DE  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1379  0075E0  0E00               	movlw	high _m_tabMines
  1380  0075E2  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1381  0075E4  50F3               	movf	243,w,c
  1382  0075E6  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1383  0075E8  50F4               	movf	244,w,c
  1384  0075EA  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1385  0075EC  0100               	movlb	0	; force () banked
  1386  0075EE  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1387  0075F0  0100               	movlb	0	; force () banked
  1388  0075F2  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1389  0075F4  6ED9               	movwf	fsr2l,c
  1390  0075F6  0100               	movlb	0	; force () banked
  1391  0075F8  0E00               	movlw	0
  1392  0075FA  0100               	movlb	0	; force () banked
  1393  0075FC  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1394  0075FE  6EDA               	movwf	fsr2h,c
  1395  007600  0E02               	movlw	2
  1396  007602  18DE               	xorwf	postinc2,w,c
  1397  007604  B4D8               	btfsc	status,2,c
  1398  007606  EF07  F03B         	goto	u1301
  1399  00760A  EF09  F03B         	goto	u1300
  1400  00760E                     u1301:
  1401  00760E  EF2F  F03B         	goto	l2217
  1402  007612                     u1300:
  1403  007612                     
  1404                           ; BSR set to: 0
  1405                           ;main.c: 168: m_tabMines[i][j] = calculToucheCombien(i, j) + 48;
  1406  007612  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1407  007616  0100               	movlb	0	; force () banked
  1408  007618  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1409  00761A  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1410  00761E  0100               	movlb	0	; force () banked
  1411  007620  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1412  007622  ECCF  F03D         	call	_calculToucheCombien	;wreg free
  1413  007626  0100               	movlb	0	; force () banked
  1414  007628  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1415  00762A  0E30               	movlw	48
  1416  00762C  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1417  00762E  0100               	movlb	0	; force () banked
  1418  007630  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1419  007632  0D15               	mullw	21
  1420  007634  0E60               	movlw	low _m_tabMines
  1421  007636  0100               	movlb	0	; force () banked
  1422  007638  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1423  00763A  0E00               	movlw	high _m_tabMines
  1424  00763C  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1425  00763E  50F3               	movf	243,w,c
  1426  007640  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1427  007642  50F4               	movf	244,w,c
  1428  007644  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1429  007646  0100               	movlb	0	; force () banked
  1430  007648  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1431  00764A  0100               	movlb	0	; force () banked
  1432  00764C  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1433  00764E  6ED9               	movwf	fsr2l,c
  1434  007650  0100               	movlb	0	; force () banked
  1435  007652  0E00               	movlw	0
  1436  007654  0100               	movlb	0	; force () banked
  1437  007656  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1438  007658  6EDA               	movwf	fsr2h,c
  1439  00765A  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1440  00765E                     l2217:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;main.c: 169: if (m_tabMines[i][j] == '0')
  1444  00765E  0100               	movlb	0	; force () banked
  1445  007660  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1446  007662  0D15               	mullw	21
  1447  007664  0E60               	movlw	low _m_tabMines
  1448  007666  0100               	movlb	0	; force () banked
  1449  007668  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1450  00766A  0E00               	movlw	high _m_tabMines
  1451  00766C  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1452  00766E  50F3               	movf	243,w,c
  1453  007670  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1454  007672  50F4               	movf	244,w,c
  1455  007674  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1456  007676  0100               	movlb	0	; force () banked
  1457  007678  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1458  00767A  0100               	movlb	0	; force () banked
  1459  00767C  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1460  00767E  6ED9               	movwf	fsr2l,c
  1461  007680  0100               	movlb	0	; force () banked
  1462  007682  0E00               	movlw	0
  1463  007684  0100               	movlb	0	; force () banked
  1464  007686  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1465  007688  6EDA               	movwf	fsr2h,c
  1466  00768A  0E30               	movlw	48
  1467  00768C  18DE               	xorwf	postinc2,w,c
  1468  00768E  A4D8               	btfss	status,2,c
  1469  007690  EF4C  F03B         	goto	u1311
  1470  007694  EF4E  F03B         	goto	u1310
  1471  007698                     u1311:
  1472  007698  EF66  F03B         	goto	l2221
  1473  00769C                     u1310:
  1474  00769C                     
  1475                           ; BSR set to: 0
  1476                           ;main.c: 170: m_tabMines[i][j] = ' ';
  1477  00769C  0100               	movlb	0	; force () banked
  1478  00769E  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1479  0076A0  0D15               	mullw	21
  1480  0076A2  0E60               	movlw	low _m_tabMines
  1481  0076A4  0100               	movlb	0	; force () banked
  1482  0076A6  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1483  0076A8  0E00               	movlw	high _m_tabMines
  1484  0076AA  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1485  0076AC  50F3               	movf	243,w,c
  1486  0076AE  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1487  0076B0  50F4               	movf	244,w,c
  1488  0076B2  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1489  0076B4  0100               	movlb	0	; force () banked
  1490  0076B6  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1491  0076B8  0100               	movlb	0	; force () banked
  1492  0076BA  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1493  0076BC  6ED9               	movwf	fsr2l,c
  1494  0076BE  0100               	movlb	0	; force () banked
  1495  0076C0  0E00               	movlw	0
  1496  0076C2  0100               	movlb	0	; force () banked
  1497  0076C4  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1498  0076C6  6EDA               	movwf	fsr2h,c
  1499  0076C8  0E20               	movlw	32
  1500  0076CA  6EDF               	movwf	indf2,c
  1501  0076CC                     l2221:
  1502                           
  1503                           ; BSR set to: 0
  1504  0076CC  0100               	movlb	0	; force () banked
  1505  0076CE  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1506  0076D0                     
  1507                           ; BSR set to: 0
  1508  0076D0  0E13               	movlw	19
  1509  0076D2  0100               	movlb	0	; force () banked
  1510  0076D4  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1511  0076D6  EF6F  F03B         	goto	u1321
  1512  0076DA  EF71  F03B         	goto	u1320
  1513  0076DE                     u1321:
  1514  0076DE  EFEA  F03A         	goto	l2213
  1515  0076E2                     u1320:
  1516  0076E2                     l2225:
  1517                           
  1518                           ; BSR set to: 0
  1519  0076E2  0100               	movlb	0	; force () banked
  1520  0076E4  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1521  0076E6                     
  1522                           ; BSR set to: 0
  1523  0076E6  0E03               	movlw	3
  1524  0076E8  0100               	movlb	0	; force () banked
  1525  0076EA  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1526  0076EC  EF7A  F03B         	goto	u1331
  1527  0076F0  EF7C  F03B         	goto	u1330
  1528  0076F4                     u1331:
  1529  0076F4  EFDC  F03A         	goto	l2207
  1530  0076F8                     u1330:
  1531  0076F8                     l114:
  1532                           
  1533                           ; BSR set to: 0
  1534  0076F8  0012               	return		;funcret
  1535  0076FA                     __end_of_metToucheCombien:
  1536                           	opt callstack 0
  1537                           
  1538 ;; *************** function _calculToucheCombien *****************
  1539 ;; Defined at:
  1540 ;;		line 180 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  ligne           2    6[BANK0 ] int 
  1543 ;;  colonne         2    8[BANK0 ] int 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  j               2   16[BANK0 ] int 
  1546 ;;  i               2   14[BANK0 ] int 
  1547 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1557 ;;      Params:         0       4       0       0       0       0       0
  1558 ;;      Locals:         0       5       0       0       0       0       0
  1559 ;;      Temps:          0       3       0       0       0       0       0
  1560 ;;      Totals:         0      12       0       0       0       0       0
  1561 ;;Total ram usage:       12 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    1
  1564 ;; This function calls:
  1565 ;;		___wmul
  1566 ;; This function is called by:
  1567 ;;		_metToucheCombien
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text6
  1572  007B9E                     __ptext6:
  1573                           	opt callstack 0
  1574  007B9E                     _calculToucheCombien:
  1575                           	opt callstack 28
  1576  007B9E                     
  1577                           ;main.c: 182: int i = ligne - 1;
  1578  007B9E  0EFF               	movlw	255
  1579  007BA0  0100               	movlb	0	; force () banked
  1580  007BA2  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1581  007BA4  0100               	movlb	0	; force () banked
  1582  007BA6  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1583  007BA8  0EFF               	movlw	255
  1584  007BAA  0100               	movlb	0	; force () banked
  1585  007BAC  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1586  007BAE  0100               	movlb	0	; force () banked
  1587  007BB0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1588                           
  1589                           ;main.c: 183: int j = colonne - 1;
  1590  007BB2  0EFF               	movlw	255
  1591  007BB4  0100               	movlb	0	; force () banked
  1592  007BB6  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1593  007BB8  0100               	movlb	0	; force () banked
  1594  007BBA  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1595  007BBC  0EFF               	movlw	255
  1596  007BBE  0100               	movlb	0	; force () banked
  1597  007BC0  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1598  007BC2  0100               	movlb	0	; force () banked
  1599  007BC4  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1600  007BC6                     
  1601                           ; BSR set to: 0
  1602                           ;main.c: 184: char nbMines = 0;
  1603  007BC6  0E00               	movlw	0
  1604  007BC8  0100               	movlb	0	; force () banked
  1605  007BCA  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1606  007BCC                     
  1607                           ; BSR set to: 0
  1608                           ;main.c: 186: if (i < 0)
  1609  007BCC  0100               	movlb	0	; force () banked
  1610  007BCE  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1611  007BD0  EFEE  F03D         	goto	u930
  1612  007BD4  EFEC  F03D         	goto	u931
  1613  007BD8                     u931:
  1614  007BD8  EFF3  F03D         	goto	l1971
  1615  007BDC                     u930:
  1616  007BDC                     
  1617                           ; BSR set to: 0
  1618                           ;main.c: 187: i = 0;
  1619  007BDC  0E00               	movlw	0
  1620  007BDE  0100               	movlb	0	; force () banked
  1621  007BE0  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1622  007BE2  0E00               	movlw	0
  1623  007BE4  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1624  007BE6                     l1971:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 188: if (j < 0)
  1628  007BE6  0100               	movlb	0	; force () banked
  1629  007BE8  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1630  007BEA  EFFB  F03D         	goto	u940
  1631  007BEE  EFF9  F03D         	goto	u941
  1632  007BF2                     u941:
  1633  007BF2  EF71  F03E         	goto	l1987
  1634  007BF6                     u940:
  1635  007BF6                     
  1636                           ; BSR set to: 0
  1637                           ;main.c: 189: j = 0;
  1638  007BF6  0E00               	movlw	0
  1639  007BF8  0100               	movlb	0	; force () banked
  1640  007BFA  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1641  007BFC  0E00               	movlw	0
  1642  007BFE  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1643  007C00  EF71  F03E         	goto	l1987
  1644  007C04                     l1975:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 192: for (j = j = colonne - 1; (j <= (colonne + 1))&&(j < 20); j++) {
  1648  007C04  0EFF               	movlw	255
  1649  007C06  0100               	movlb	0	; force () banked
  1650  007C08  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1651  007C0A  0100               	movlb	0	; force () banked
  1652  007C0C  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1653  007C0E  0EFF               	movlw	255
  1654  007C10  0100               	movlb	0	; force () banked
  1655  007C12  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1656  007C14  0100               	movlb	0	; force () banked
  1657  007C16  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1658  007C18  C0C4  F0C4         	movff	calculToucheCombien@j,calculToucheCombien@j
  1659  007C1C  C0C5  F0C5         	movff	calculToucheCombien@j+1,calculToucheCombien@j+1
  1660  007C20  EF42  F03E         	goto	l1981
  1661  007C24                     l1977:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;main.c: 193: if (m_tabMines[i][j] == 2)
  1665  007C24  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1666  007C28  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1667  007C2C  0E00               	movlw	0
  1668  007C2E  0100               	movlb	0	; force () banked
  1669  007C30  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1670  007C32  0E15               	movlw	21
  1671  007C34  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1672  007C36  ECF4  F034         	call	___wmul	;wreg free
  1673  007C3A  0E60               	movlw	low _m_tabMines
  1674  007C3C  0100               	movlb	0	; force () banked
  1675  007C3E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1676  007C40  0E00               	movlw	high _m_tabMines
  1677  007C42  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1678  007C44  0100               	movlb	0	; force () banked
  1679  007C46  51B4               	movf	?___wmul& (0+255),w,b
  1680  007C48  0100               	movlb	0	; force () banked
  1681  007C4A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1682  007C4C  0100               	movlb	0	; force () banked
  1683  007C4E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1684  007C50  0100               	movlb	0	; force () banked
  1685  007C52  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1686  007C54  0100               	movlb	0	; force () banked
  1687  007C56  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1688  007C58  0100               	movlb	0	; force () banked
  1689  007C5A  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1690  007C5C  6ED9               	movwf	fsr2l,c
  1691  007C5E  0100               	movlb	0	; force () banked
  1692  007C60  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1693  007C62  0100               	movlb	0	; force () banked
  1694  007C64  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1695  007C66  6EDA               	movwf	fsr2h,c
  1696  007C68  0E02               	movlw	2
  1697  007C6A  18DE               	xorwf	postinc2,w,c
  1698  007C6C  A4D8               	btfss	status,2,c
  1699  007C6E  EF3B  F03E         	goto	u951
  1700  007C72  EF3D  F03E         	goto	u950
  1701  007C76                     u951:
  1702  007C76  EF3F  F03E         	goto	l123
  1703  007C7A                     u950:
  1704  007C7A                     
  1705                           ; BSR set to: 0
  1706                           ;main.c: 194: nbMines++;
  1707  007C7A  0100               	movlb	0	; force () banked
  1708  007C7C  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1709  007C7E                     l123:
  1710                           
  1711                           ; BSR set to: 0
  1712  007C7E  0100               	movlb	0	; force () banked
  1713  007C80  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1714  007C82  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1715  007C84                     l1981:
  1716                           
  1717                           ; BSR set to: 0
  1718  007C84  0E01               	movlw	1
  1719  007C86  0100               	movlb	0	; force () banked
  1720  007C88  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1721  007C8A  0100               	movlb	0	; force () banked
  1722  007C8C  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1723  007C8E  0E00               	movlw	0
  1724  007C90  0100               	movlb	0	; force () banked
  1725  007C92  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1726  007C94  0100               	movlb	0	; force () banked
  1727  007C96  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1728  007C98  0100               	movlb	0	; force () banked
  1729  007C9A  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1730  007C9C  0100               	movlb	0	; force () banked
  1731  007C9E  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1732  007CA0  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1733  007CA2  0A80               	xorlw	128
  1734  007CA4  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1735  007CA6  0100               	movlb	0	; force () banked
  1736  007CA8  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1737  007CAA  0A80               	xorlw	128
  1738  007CAC  0100               	movlb	0	; force () banked
  1739  007CAE  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1740  007CB0  A0D8               	btfss	status,0,c
  1741  007CB2  EF5D  F03E         	goto	u961
  1742  007CB6  EF5F  F03E         	goto	u960
  1743  007CBA                     u961:
  1744  007CBA  EF6E  F03E         	goto	l1985
  1745  007CBE                     u960:
  1746  007CBE                     
  1747                           ; BSR set to: 0
  1748  007CBE  0100               	movlb	0	; force () banked
  1749  007CC0  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1750  007CC2  EF6C  F03E         	goto	u971
  1751  007CC6  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1752  007CC8  E109               	bnz	u970
  1753  007CCA  0E14               	movlw	20
  1754  007CCC  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1755  007CCE  A0D8               	btfss	status,0,c
  1756  007CD0  EF6C  F03E         	goto	u971
  1757  007CD4  EF6E  F03E         	goto	u970
  1758  007CD8                     u971:
  1759  007CD8  EF12  F03E         	goto	l1977
  1760  007CDC                     u970:
  1761  007CDC                     l1985:
  1762                           
  1763                           ; BSR set to: 0
  1764  007CDC  0100               	movlb	0	; force () banked
  1765  007CDE  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1766  007CE0  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1767  007CE2                     l1987:
  1768                           
  1769                           ; BSR set to: 0
  1770  007CE2  0E01               	movlw	1
  1771  007CE4  0100               	movlb	0	; force () banked
  1772  007CE6  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1773  007CE8  0100               	movlb	0	; force () banked
  1774  007CEA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1775  007CEC  0E00               	movlw	0
  1776  007CEE  0100               	movlb	0	; force () banked
  1777  007CF0  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1778  007CF2  0100               	movlb	0	; force () banked
  1779  007CF4  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1780  007CF6  0100               	movlb	0	; force () banked
  1781  007CF8  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1782  007CFA  0100               	movlb	0	; force () banked
  1783  007CFC  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1784  007CFE  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1785  007D00  0A80               	xorlw	128
  1786  007D02  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1787  007D04  0100               	movlb	0	; force () banked
  1788  007D06  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1789  007D08  0A80               	xorlw	128
  1790  007D0A  0100               	movlb	0	; force () banked
  1791  007D0C  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1792  007D0E  A0D8               	btfss	status,0,c
  1793  007D10  EF8C  F03E         	goto	u981
  1794  007D14  EF8E  F03E         	goto	u980
  1795  007D18                     u981:
  1796  007D18  EF9D  F03E         	goto	l1991
  1797  007D1C                     u980:
  1798  007D1C                     
  1799                           ; BSR set to: 0
  1800  007D1C  0100               	movlb	0	; force () banked
  1801  007D1E  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1802  007D20  EF9B  F03E         	goto	u991
  1803  007D24  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1804  007D26  E109               	bnz	u990
  1805  007D28  0E04               	movlw	4
  1806  007D2A  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1807  007D2C  A0D8               	btfss	status,0,c
  1808  007D2E  EF9B  F03E         	goto	u991
  1809  007D32  EF9D  F03E         	goto	u990
  1810  007D36                     u991:
  1811  007D36  EF02  F03E         	goto	l1975
  1812  007D3A                     u990:
  1813  007D3A                     l1991:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 195: };main.c: 196: };main.c: 197: return nbMines;
  1817  007D3A  0100               	movlb	0	; force () banked
  1818  007D3C  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1819  007D3E                     
  1820                           ; BSR set to: 0
  1821  007D3E  0012               	return		;funcret
  1822  007D40                     __end_of_calculToucheCombien:
  1823                           	opt callstack 0
  1824                           
  1825 ;; *************** function ___wmul *****************
  1826 ;; Defined at:
  1827 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1830 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  product         2    4[BANK0 ] unsigned int 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2    0[BANK0 ] unsigned int 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, prodl, prodh
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1842 ;;      Params:         0       4       0       0       0       0       0
  1843 ;;      Locals:         0       2       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0
  1845 ;;      Totals:         0       6       0       0       0       0       0
  1846 ;;Total ram usage:        6 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_calculToucheCombien
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text7
  1856  0069E8                     __ptext7:
  1857                           	opt callstack 0
  1858  0069E8                     ___wmul:
  1859                           	opt callstack 28
  1860  0069E8  0100               	movlb	0	; () banked
  1861  0069EA  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1862  0069EC  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1863  0069EE  CFF3 F0B8          	movff	prodl,___wmul@product
  1864  0069F2  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1865  0069F6  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1866  0069F8  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1867  0069FA  50F3               	movf	243,w,c
  1868  0069FC  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1869  0069FE  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1870  006A00  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1871  006A02  50F3               	movf	243,w,c
  1872  006A04  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1873  006A06                     
  1874                           ; BSR set to: 0
  1875  006A06  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1876  006A0A  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1877  006A0E                     
  1878                           ; BSR set to: 0
  1879  006A0E  0012               	return		;funcret
  1880  006A10                     __end_of___wmul:
  1881                           	opt callstack 0
  1882                           
  1883 ;; *************** function _metOuEnleveDrapeau *****************
  1884 ;; Defined at:
  1885 ;;		line 370 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  x               1    wreg     unsigned char 
  1888 ;;  y               1    9[BANK0 ] unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  x               1   15[BANK0 ] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1900 ;;      Params:         0       1       0       0       0       0       0
  1901 ;;      Locals:         0       1       0       0       0       0       0
  1902 ;;      Temps:          0       5       0       0       0       0       0
  1903 ;;      Totals:         0       7       0       0       0       0       0
  1904 ;;Total ram usage:        7 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    6
  1907 ;; This function calls:
  1908 ;;		_afficheTabVue
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text8
  1915  00730A                     __ptext8:
  1916                           	opt callstack 0
  1917  00730A                     _metOuEnleveDrapeau:
  1918                           	opt callstack 24
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;incstack = 0
  1922                           ;metOuEnleveDrapeau@x stored from wreg
  1923  00730A  0100               	movlb	0	; force () banked
  1924  00730C  6FC3               	movwf	metOuEnleveDrapeau@x& (0+255),b
  1925  00730E                     
  1926                           ;main.c: 372: if (m_tabVue[y-1][x-1]==1)
  1927  00730E  0100               	movlb	0	; force () banked
  1928  007310  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  1929  007312  0D15               	mullw	21
  1930  007314  0EEA               	movlw	234
  1931  007316  0100               	movlb	0	; force () banked
  1932  007318  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  1933  00731A  0EFF               	movlw	255
  1934  00731C  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  1935  00731E  0E00               	movlw	low _m_tabVue
  1936  007320  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  1937  007322  0E01               	movlw	high _m_tabVue
  1938  007324  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  1939  007326  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  1940  007328  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1941  00732A  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  1942  00732C  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1943  00732E  50F3               	movf	243,w,c
  1944  007330  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1945  007332  50F4               	movf	244,w,c
  1946  007334  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1947  007336  0100               	movlb	0	; force () banked
  1948  007338  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  1949  00733A  0100               	movlb	0	; force () banked
  1950  00733C  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  1951  00733E  6ED9               	movwf	fsr2l,c
  1952  007340  0100               	movlb	0	; force () banked
  1953  007342  0E00               	movlw	0
  1954  007344  0100               	movlb	0	; force () banked
  1955  007346  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  1956  007348  6EDA               	movwf	fsr2h,c
  1957  00734A  04DE               	decf	postinc2,w,c
  1958  00734C  A4D8               	btfss	status,2,c
  1959  00734E  EFAB  F039         	goto	u1541
  1960  007352  EFAD  F039         	goto	u1540
  1961  007356                     u1541:
  1962  007356  EFCF  F039         	goto	l2339
  1963  00735A                     u1540:
  1964  00735A                     
  1965                           ; BSR set to: 0
  1966                           ;main.c: 373: m_tabVue[y-1][x-1]=3;
  1967  00735A  0100               	movlb	0	; force () banked
  1968  00735C  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  1969  00735E  0D15               	mullw	21
  1970  007360  0EEA               	movlw	234
  1971  007362  0100               	movlb	0	; force () banked
  1972  007364  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  1973  007366  0EFF               	movlw	255
  1974  007368  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  1975  00736A  0E00               	movlw	low _m_tabVue
  1976  00736C  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  1977  00736E  0E01               	movlw	high _m_tabVue
  1978  007370  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  1979  007372  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  1980  007374  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1981  007376  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  1982  007378  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1983  00737A  50F3               	movf	243,w,c
  1984  00737C  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  1985  00737E  50F4               	movf	244,w,c
  1986  007380  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  1987  007382  0100               	movlb	0	; force () banked
  1988  007384  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  1989  007386  0100               	movlb	0	; force () banked
  1990  007388  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  1991  00738A  6ED9               	movwf	fsr2l,c
  1992  00738C  0100               	movlb	0	; force () banked
  1993  00738E  0E00               	movlw	0
  1994  007390  0100               	movlb	0	; force () banked
  1995  007392  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  1996  007394  6EDA               	movwf	fsr2h,c
  1997  007396  0E03               	movlw	3
  1998  007398  6EDF               	movwf	indf2,c
  1999  00739A  EF16  F03A         	goto	l2343
  2000  00739E                     l2339:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;main.c: 374: else if (m_tabVue[y-1][x-1]==3)
  2004  00739E  0100               	movlb	0	; force () banked
  2005  0073A0  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  2006  0073A2  0D15               	mullw	21
  2007  0073A4  0EEA               	movlw	234
  2008  0073A6  0100               	movlb	0	; force () banked
  2009  0073A8  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  2010  0073AA  0EFF               	movlw	255
  2011  0073AC  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  2012  0073AE  0E00               	movlw	low _m_tabVue
  2013  0073B0  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  2014  0073B2  0E01               	movlw	high _m_tabVue
  2015  0073B4  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  2016  0073B6  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  2017  0073B8  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2018  0073BA  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  2019  0073BC  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2020  0073BE  50F3               	movf	243,w,c
  2021  0073C0  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2022  0073C2  50F4               	movf	244,w,c
  2023  0073C4  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2024  0073C6  0100               	movlb	0	; force () banked
  2025  0073C8  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  2026  0073CA  0100               	movlb	0	; force () banked
  2027  0073CC  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  2028  0073CE  6ED9               	movwf	fsr2l,c
  2029  0073D0  0100               	movlb	0	; force () banked
  2030  0073D2  0E00               	movlw	0
  2031  0073D4  0100               	movlb	0	; force () banked
  2032  0073D6  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  2033  0073D8  6EDA               	movwf	fsr2h,c
  2034  0073DA  0E03               	movlw	3
  2035  0073DC  18DE               	xorwf	postinc2,w,c
  2036  0073DE  A4D8               	btfss	status,2,c
  2037  0073E0  EFF4  F039         	goto	u1551
  2038  0073E4  EFF6  F039         	goto	u1550
  2039  0073E8                     u1551:
  2040  0073E8  EF16  F03A         	goto	l2343
  2041  0073EC                     u1550:
  2042  0073EC                     
  2043                           ; BSR set to: 0
  2044                           ;main.c: 375: m_tabVue[y-1][x-1]=1;
  2045  0073EC  0100               	movlb	0	; force () banked
  2046  0073EE  51BD               	movf	metOuEnleveDrapeau@y& (0+255),w,b
  2047  0073F0  0D15               	mullw	21
  2048  0073F2  0EEA               	movlw	234
  2049  0073F4  0100               	movlb	0	; force () banked
  2050  0073F6  6FBE               	movwf	??_metOuEnleveDrapeau& (0+255),b
  2051  0073F8  0EFF               	movlw	255
  2052  0073FA  6FBF               	movwf	(??_metOuEnleveDrapeau+1)& (0+255),b
  2053  0073FC  0E00               	movlw	low _m_tabVue
  2054  0073FE  6FC0               	movwf	(??_metOuEnleveDrapeau+2)& (0+255),b
  2055  007400  0E01               	movlw	high _m_tabVue
  2056  007402  6FC1               	movwf	(??_metOuEnleveDrapeau+3)& (0+255),b
  2057  007404  51BE               	movf	??_metOuEnleveDrapeau& (0+255),w,b
  2058  007406  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2059  007408  51BF               	movf	(??_metOuEnleveDrapeau+1)& (0+255),w,b
  2060  00740A  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2061  00740C  50F3               	movf	243,w,c
  2062  00740E  27C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),f,b
  2063  007410  50F4               	movf	244,w,c
  2064  007412  23C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),f,b
  2065  007414  0100               	movlb	0	; force () banked
  2066  007416  51C3               	movf	metOuEnleveDrapeau@x& (0+255),w,b
  2067  007418  0100               	movlb	0	; force () banked
  2068  00741A  25C0               	addwf	(??_metOuEnleveDrapeau+2)& (0+255),w,b
  2069  00741C  6ED9               	movwf	fsr2l,c
  2070  00741E  0100               	movlb	0	; force () banked
  2071  007420  0E00               	movlw	0
  2072  007422  0100               	movlb	0	; force () banked
  2073  007424  21C1               	addwfc	(??_metOuEnleveDrapeau+3)& (0+255),w,b
  2074  007426  6EDA               	movwf	fsr2h,c
  2075  007428  0E01               	movlw	1
  2076  00742A  6EDF               	movwf	indf2,c
  2077  00742C                     l2343:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 376: afficheTabVue();
  2081  00742C  EC3C  F036         	call	_afficheTabVue	;wreg free
  2082  007430                     l201:
  2083  007430  A081               	btfss	129,0,c	;volatile
  2084  007432  EF1D  F03A         	goto	u1561
  2085  007436  EF1F  F03A         	goto	u1560
  2086  00743A                     u1561:
  2087  00743A  EF18  F03A         	goto	l201
  2088  00743E                     u1560:
  2089  00743E  0012               	return		;funcret
  2090  007440                     __end_of_metOuEnleveDrapeau:
  2091                           	opt callstack 0
  2092                           
  2093 ;; *************** function _lcd_init *****************
  2094 ;; Defined at:
  2095 ;;		line 258 in file "Lcd4Lignes.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2109 ;;      Params:         0       0       0       0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0
  2112 ;;      Totals:         0       0       0       0       0       0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    5
  2116 ;; This function calls:
  2117 ;;		_lcd_initCGRam
  2118 ;;		_lcd_resetSequence
  2119 ;;		_lcd_wrCom
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text9
  2126  0069C0                     __ptext9:
  2127                           	opt callstack 0
  2128  0069C0                     _lcd_init:
  2129                           	opt callstack 25
  2130  0069C0                     
  2131                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2132  0069C0  EC98  F036         	call	_lcd_resetSequence	;wreg free
  2133                           
  2134                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2135  0069C4  0E28               	movlw	40
  2136  0069C6  ECCD  F036         	call	_lcd_wrCom
  2137                           
  2138                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2139  0069CA  0E0F               	movlw	15
  2140  0069CC  ECCD  F036         	call	_lcd_wrCom
  2141                           
  2142                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2143  0069D0  0E01               	movlw	1
  2144  0069D2  ECCD  F036         	call	_lcd_wrCom
  2145                           
  2146                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2147  0069D6  0E06               	movlw	6
  2148  0069D8  ECCD  F036         	call	_lcd_wrCom
  2149                           
  2150                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2151  0069DC  0E80               	movlw	128
  2152  0069DE  ECCD  F036         	call	_lcd_wrCom
  2153  0069E2                     
  2154                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2155  0069E2  EC72  F037         	call	_lcd_initCGRam	;wreg free
  2156  0069E6  0012               	return		;funcret
  2157  0069E8                     __end_of_lcd_init:
  2158                           	opt callstack 0
  2159                           
  2160 ;; *************** function _lcd_resetSequence *****************
  2161 ;; Defined at:
  2162 ;;		line 221 in file "Lcd4Lignes.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2176 ;;      Params:         0       0       0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0
  2178 ;;      Temps:          0       1       0       0       0       0       0
  2179 ;;      Totals:         0       1       0       0       0       0       0
  2180 ;;Total ram usage:        1 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    1
  2183 ;; This function calls:
  2184 ;;		_lcd_ecrireDonnees
  2185 ;;		_lcd_strobeEnableBit
  2186 ;; This function is called by:
  2187 ;;		_lcd_init
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text10
  2192  006D30                     __ptext10:
  2193                           	opt callstack 0
  2194  006D30                     _lcd_resetSequence:
  2195                           	opt callstack 28
  2196  006D30                     
  2197                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2198  006D30  0E00               	movlw	0
  2199  006D32  6E95               	movwf	149,c	;volatile
  2200  006D34                     
  2201                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2202  006D34  0E0D               	movlw	13
  2203  006D36  0100               	movlb	0	; force () banked
  2204  006D38  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2205  006D3A  0EFB               	movlw	251
  2206  006D3C                     u1647:
  2207  006D3C  2EE8               	decfsz	wreg,f,c
  2208  006D3E  D7FE               	bra	u1647
  2209  006D40  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2210  006D42  D7FC               	bra	u1647
  2211  006D44  F000 F000          	nop2	
  2212  006D48                     
  2213                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2214  006D48  9080               	bcf	128,0,c	;volatile
  2215  006D4A                     
  2216                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2217  006D4A  9280               	bcf	128,1,c	;volatile
  2218  006D4C                     
  2219                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2220  006D4C  0E03               	movlw	3
  2221  006D4E  ECD2  F034         	call	_lcd_ecrireDonnees
  2222  006D52                     
  2223                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2224  006D52  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  2225  006D56                     
  2226                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2227  006D56  0E03               	movlw	3
  2228  006D58                     u1657:
  2229  006D58  2EE8               	decfsz	wreg,f,c
  2230  006D5A  D7FE               	bra	u1657
  2231  006D5C  F000               	nop	
  2232  006D5E                     
  2233                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2234  006D5E  0E03               	movlw	3
  2235  006D60  ECD2  F034         	call	_lcd_ecrireDonnees
  2236  006D64                     
  2237                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2238  006D64  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  2239  006D68                     
  2240                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2241  006D68  0E03               	movlw	3
  2242  006D6A                     u1667:
  2243  006D6A  2EE8               	decfsz	wreg,f,c
  2244  006D6C  D7FE               	bra	u1667
  2245  006D6E  F000               	nop	
  2246  006D70                     
  2247                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2248  006D70  0E03               	movlw	3
  2249  006D72  ECD2  F034         	call	_lcd_ecrireDonnees
  2250  006D76                     
  2251                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2252  006D76  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  2253  006D7A                     
  2254                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2255  006D7A  0E03               	movlw	3
  2256  006D7C                     u1677:
  2257  006D7C  2EE8               	decfsz	wreg,f,c
  2258  006D7E  D7FE               	bra	u1677
  2259  006D80  F000               	nop	
  2260  006D82                     
  2261                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2262  006D82  0E02               	movlw	2
  2263  006D84  ECD2  F034         	call	_lcd_ecrireDonnees
  2264  006D88                     
  2265                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2266  006D88  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  2267  006D8C                     
  2268                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2269  006D8C  0E03               	movlw	3
  2270  006D8E                     u1687:
  2271  006D8E  2EE8               	decfsz	wreg,f,c
  2272  006D90  D7FE               	bra	u1687
  2273  006D92  F000               	nop	
  2274  006D94                     
  2275                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2276  006D94  0E0F               	movlw	15
  2277  006D96  6E95               	movwf	149,c	;volatile
  2278  006D98  0012               	return		;funcret
  2279  006D9A                     __end_of_lcd_resetSequence:
  2280                           	opt callstack 0
  2281                           
  2282 ;; *************** function _lcd_initCGRam *****************
  2283 ;; Defined at:
  2284 ;;		line 417 in file "Lcd4Lignes.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  j               1    6[BANK0 ] unsigned char 
  2289 ;;  i               1    5[BANK0 ] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2299 ;;      Params:         0       0       0       0       0       0       0
  2300 ;;      Locals:         0       2       0       0       0       0       0
  2301 ;;      Temps:          0       2       0       0       0       0       0
  2302 ;;      Totals:         0       4       0       0       0       0       0
  2303 ;;Total ram usage:        4 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    4
  2306 ;; This function calls:
  2307 ;;		_lcd_curseurHome
  2308 ;;		_lcd_wrCom
  2309 ;;		_lcd_wrData
  2310 ;; This function is called by:
  2311 ;;		_lcd_init
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text11
  2316  006EE4                     __ptext11:
  2317                           	opt callstack 0
  2318  006EE4                     _lcd_initCGRam:
  2319                           	opt callstack 25
  2320  006EE4                     
  2321                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2322  006EE4  0E40               	movlw	64
  2323  006EE6  ECCD  F036         	call	_lcd_wrCom
  2324  006EEA                     
  2325                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2326  006EEA  0E00               	movlw	0
  2327  006EEC  0100               	movlb	0	; force () banked
  2328  006EEE  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2329  006EF0                     
  2330                           ; BSR set to: 0
  2331  006EF0  0E07               	movlw	7
  2332  006EF2  0100               	movlb	0	; force () banked
  2333  006EF4  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2334  006EF6  EF7F  F037         	goto	u1081
  2335  006EFA  EF81  F037         	goto	u1080
  2336  006EFE                     u1081:
  2337  006EFE  EF83  F037         	goto	l2067
  2338  006F02                     u1080:
  2339  006F02  EFC0  F037         	goto	l2083
  2340  006F06                     l2067:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2344  006F06  0E00               	movlw	0
  2345  006F08  0100               	movlb	0	; force () banked
  2346  006F0A  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2347  006F0C                     
  2348                           ; BSR set to: 0
  2349  006F0C  0E07               	movlw	7
  2350  006F0E  0100               	movlb	0	; force () banked
  2351  006F10  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2352  006F12  EF8D  F037         	goto	u1091
  2353  006F16  EF8F  F037         	goto	u1090
  2354  006F1A                     u1091:
  2355  006F1A  EF91  F037         	goto	l2073
  2356  006F1E                     u1090:
  2357  006F1E  EFB5  F037         	goto	l2079
  2358  006F22                     l2073:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2362  006F22  0100               	movlb	0	; force () banked
  2363  006F24  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2364  006F26  0D08               	mullw	8
  2365  006F28  0E54               	movlw	low _matCGRAM
  2366  006F2A  0100               	movlb	0	; force () banked
  2367  006F2C  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2368  006F2E  0E01               	movlw	high _matCGRAM
  2369  006F30  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2370  006F32  50F3               	movf	243,w,c
  2371  006F34  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2372  006F36  50F4               	movf	244,w,c
  2373  006F38  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2374  006F3A  0100               	movlb	0	; force () banked
  2375  006F3C  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2376  006F3E  0100               	movlb	0	; force () banked
  2377  006F40  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2378  006F42  6ED9               	movwf	fsr2l,c
  2379  006F44  0100               	movlb	0	; force () banked
  2380  006F46  0E00               	movlw	0
  2381  006F48  0100               	movlb	0	; force () banked
  2382  006F4A  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2383  006F4C  6EDA               	movwf	fsr2h,c
  2384  006F4E  50DF               	movf	indf2,w,c
  2385  006F50  EC1E  F035         	call	_lcd_wrData
  2386  006F54  0100               	movlb	0	; force () banked
  2387  006F56  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2388  006F58                     
  2389                           ; BSR set to: 0
  2390  006F58  0E07               	movlw	7
  2391  006F5A  0100               	movlb	0	; force () banked
  2392  006F5C  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2393  006F5E  EFB3  F037         	goto	u1101
  2394  006F62  EFB5  F037         	goto	u1100
  2395  006F66                     u1101:
  2396  006F66  EF91  F037         	goto	l2073
  2397  006F6A                     u1100:
  2398  006F6A                     l2079:
  2399                           
  2400                           ; BSR set to: 0
  2401  006F6A  0100               	movlb	0	; force () banked
  2402  006F6C  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2403  006F6E                     
  2404                           ; BSR set to: 0
  2405  006F6E  0E07               	movlw	7
  2406  006F70  0100               	movlb	0	; force () banked
  2407  006F72  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2408  006F74  EFBE  F037         	goto	u1111
  2409  006F78  EFC0  F037         	goto	u1110
  2410  006F7C                     u1111:
  2411  006F7C  EF83  F037         	goto	l2067
  2412  006F80                     u1110:
  2413  006F80                     l2083:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2417  006F80  ECC6  F034         	call	_lcd_curseurHome	;wreg free
  2418  006F84  0012               	return		;funcret
  2419  006F86                     __end_of_lcd_initCGRam:
  2420                           	opt callstack 0
  2421                           
  2422 ;; *************** function _lcd_curseurHome *****************
  2423 ;; Defined at:
  2424 ;;		line 288 in file "Lcd4Lignes.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2438 ;;      Params:         0       0       0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    3
  2445 ;; This function calls:
  2446 ;;		_lcd_wrCom
  2447 ;; This function is called by:
  2448 ;;		_lcd_initCGRam
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text12
  2453  00698C                     __ptext12:
  2454                           	opt callstack 0
  2455  00698C                     _lcd_curseurHome:
  2456                           	opt callstack 25
  2457  00698C                     
  2458                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2459  00698C  0E02               	movlw	2
  2460  00698E  ECCD  F036         	call	_lcd_wrCom
  2461  006992  0012               	return		;funcret
  2462  006994                     __end_of_lcd_curseurHome:
  2463                           	opt callstack 0
  2464                           
  2465 ;; *************** function _initialisation *****************
  2466 ;; Defined at:
  2467 ;;		line 90 in file "main.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2481 ;;      Params:         0       0       0       0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0
  2484 ;;      Totals:         0       0       0       0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    1
  2488 ;; This function calls:
  2489 ;;		_srand
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text13
  2496  006A70                     __ptext13:
  2497                           	opt callstack 0
  2498  006A70                     _initialisation:
  2499                           	opt callstack 29
  2500  006A70                     
  2501                           ;main.c: 92: TRISD = 0;
  2502  006A70  0E00               	movlw	0
  2503  006A72  6E95               	movwf	149,c	;volatile
  2504                           
  2505                           ;main.c: 93: ANSELH = 0;
  2506  006A74  0E00               	movlw	0
  2507  006A76  6E7F               	movwf	127,c	;volatile
  2508  006A78                     
  2509                           ;main.c: 94: TRISB = 0xFF;
  2510  006A78  6893               	setf	147,c	;volatile
  2511                           
  2512                           ;main.c: 95: ANSEL = 0;
  2513  006A7A  0E00               	movlw	0
  2514  006A7C  6E7E               	movwf	126,c	;volatile
  2515                           
  2516                           ;main.c: 96: TRISA = 0;
  2517  006A7E  0E00               	movlw	0
  2518  006A80  6E92               	movwf	146,c	;volatile
  2519  006A82                     
  2520                           ;main.c: 100: T1CONbits.TMR1ON = 1;
  2521  006A82  80CD               	bsf	205,0,c	;volatile
  2522  006A84                     
  2523                           ;main.c: 101: srand(TMR1);
  2524  006A84  CFCE F0B4          	movff	4046,srand@x	;volatile
  2525  006A88  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2526  006A8C  ECCA  F034         	call	_srand	;wreg free
  2527  006A90                     
  2528                           ;main.c: 103: ANSELbits.ANS7 = 1;
  2529  006A90  8E7E               	bsf	126,7,c	;volatile
  2530  006A92                     
  2531                           ;main.c: 104: ADCON0bits.ADON = 1;
  2532  006A92  80C2               	bsf	194,0,c	;volatile
  2533  006A94                     
  2534                           ;main.c: 105: ADCON1 = 0;
  2535  006A94  0E00               	movlw	0
  2536  006A96  6EC1               	movwf	193,c	;volatile
  2537  006A98                     
  2538                           ;main.c: 106: ADCON2bits.ADFM = 0;
  2539  006A98  9EC0               	bcf	192,7,c	;volatile
  2540  006A9A                     
  2541                           ;main.c: 107: ADCON2bits.ACQT = 0;
  2542  006A9A  0EC7               	movlw	-57
  2543  006A9C  16C0               	andwf	192,f,c	;volatile
  2544  006A9E                     
  2545                           ;main.c: 108: ADCON2bits.ADCS = 0;
  2546  006A9E  0EF8               	movlw	-8
  2547  006AA0  16C0               	andwf	192,f,c	;volatile
  2548  006AA2  0012               	return		;funcret
  2549  006AA4                     __end_of_initialisation:
  2550                           	opt callstack 0
  2551                           
  2552 ;; *************** function _srand *****************
  2553 ;; Defined at:
  2554 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  x               2    0[BANK0 ] unsigned int 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		status,2
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         0       2       0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0
  2571 ;;      Totals:         0       2       0       0       0       0       0
  2572 ;;Total ram usage:        2 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_initialisation
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text14
  2582  006994                     __ptext14:
  2583                           	opt callstack 0
  2584  006994                     _srand:
  2585                           	opt callstack 29
  2586  006994  C0B4  F0D8         	movff	srand@x,_randx
  2587  006998  C0B5  F0D9         	movff	srand@x+1,_randx+1
  2588  00699C  0100               	movlb	0	; () banked
  2589  00699E  6BDA               	clrf	(_randx+2)& (0+255),b
  2590  0069A0  6BDB               	clrf	(_randx+3)& (0+255),b
  2591  0069A2                     
  2592                           ; BSR set to: 0
  2593  0069A2  0012               	return		;funcret
  2594  0069A4                     __end_of_srand:
  2595                           	opt callstack 0
  2596                           
  2597 ;; *************** function _initTabVue *****************
  2598 ;; Defined at:
  2599 ;;		line 118 in file "main.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  j               1    2[BANK0 ] unsigned char 
  2604 ;;  i               1    3[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2614 ;;      Params:         0       0       0       0       0       0       0
  2615 ;;      Locals:         0       2       0       0       0       0       0
  2616 ;;      Temps:          0       2       0       0       0       0       0
  2617 ;;      Totals:         0       4       0       0       0       0       0
  2618 ;;Total ram usage:        4 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text15
  2628  006F86                     __ptext15:
  2629                           	opt callstack 0
  2630  006F86                     _initTabVue:
  2631                           	opt callstack 30
  2632  006F86                     
  2633                           ;main.c: 120: for (char i = 0; i < 4; i++) {
  2634  006F86  0E00               	movlw	0
  2635  006F88  0100               	movlb	0	; force () banked
  2636  006F8A  6FB7               	movwf	initTabVue@i& (0+255),b
  2637  006F8C                     
  2638                           ; BSR set to: 0
  2639  006F8C  0E03               	movlw	3
  2640  006F8E  0100               	movlb	0	; force () banked
  2641  006F90  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2642  006F92  EFCD  F037         	goto	u1181
  2643  006F96  EFCF  F037         	goto	u1180
  2644  006F9A                     u1181:
  2645  006F9A  EFD1  F037         	goto	l2151
  2646  006F9E                     u1180:
  2647  006F9E  EF18  F038         	goto	l94
  2648  006FA2                     l2151:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;main.c: 121: for (char j = 0; j < 20; j++) {
  2652  006FA2  0E00               	movlw	0
  2653  006FA4  0100               	movlb	0	; force () banked
  2654  006FA6  6FB6               	movwf	initTabVue@j& (0+255),b
  2655  006FA8                     
  2656                           ; BSR set to: 0
  2657  006FA8  0E13               	movlw	19
  2658  006FAA  0100               	movlb	0	; force () banked
  2659  006FAC  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2660  006FAE  EFDB  F037         	goto	u1191
  2661  006FB2  EFDD  F037         	goto	u1190
  2662  006FB6                     u1191:
  2663  006FB6  EFDF  F037         	goto	l2157
  2664  006FBA                     u1190:
  2665  006FBA  EF02  F038         	goto	l2163
  2666  006FBE                     l2157:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;main.c: 122: m_tabVue[i][j] = 1;
  2670  006FBE  0100               	movlb	0	; force () banked
  2671  006FC0  51B7               	movf	initTabVue@i& (0+255),w,b
  2672  006FC2  0D15               	mullw	21
  2673  006FC4  0E00               	movlw	low _m_tabVue
  2674  006FC6  0100               	movlb	0	; force () banked
  2675  006FC8  6FB4               	movwf	??_initTabVue& (0+255),b
  2676  006FCA  0E01               	movlw	high _m_tabVue
  2677  006FCC  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  2678  006FCE  50F3               	movf	243,w,c
  2679  006FD0  27B4               	addwf	??_initTabVue& (0+255),f,b
  2680  006FD2  50F4               	movf	244,w,c
  2681  006FD4  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2682  006FD6  0100               	movlb	0	; force () banked
  2683  006FD8  51B6               	movf	initTabVue@j& (0+255),w,b
  2684  006FDA  0100               	movlb	0	; force () banked
  2685  006FDC  25B4               	addwf	??_initTabVue& (0+255),w,b
  2686  006FDE  6ED9               	movwf	fsr2l,c
  2687  006FE0  0100               	movlb	0	; force () banked
  2688  006FE2  0E00               	movlw	0
  2689  006FE4  0100               	movlb	0	; force () banked
  2690  006FE6  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2691  006FE8  6EDA               	movwf	fsr2h,c
  2692  006FEA  0E01               	movlw	1
  2693  006FEC  6EDF               	movwf	indf2,c
  2694  006FEE                     
  2695                           ; BSR set to: 0
  2696  006FEE  0100               	movlb	0	; force () banked
  2697  006FF0  2BB6               	incf	initTabVue@j& (0+255),f,b
  2698  006FF2                     
  2699                           ; BSR set to: 0
  2700  006FF2  0E13               	movlw	19
  2701  006FF4  0100               	movlb	0	; force () banked
  2702  006FF6  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2703  006FF8  EF00  F038         	goto	u1201
  2704  006FFC  EF02  F038         	goto	u1200
  2705  007000                     u1201:
  2706  007000  EFDF  F037         	goto	l2157
  2707  007004                     u1200:
  2708  007004                     l2163:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;main.c: 123: };main.c: 124: m_tabVue[i][20] = 0;
  2712  007004  0100               	movlb	0	; force () banked
  2713  007006  51B7               	movf	initTabVue@i& (0+255),w,b
  2714  007008  0D15               	mullw	21
  2715  00700A  0E14               	movlw	low (_m_tabVue+20)
  2716  00700C  24F3               	addwf	243,w,c
  2717  00700E  6ED9               	movwf	fsr2l,c
  2718  007010  0E01               	movlw	high (_m_tabVue+20)
  2719  007012  20F4               	addwfc	prodh,w,c
  2720  007014  6EDA               	movwf	fsr2h,c
  2721  007016  0E00               	movlw	0
  2722  007018  6EDF               	movwf	indf2,c
  2723  00701A                     
  2724                           ; BSR set to: 0
  2725  00701A  0100               	movlb	0	; force () banked
  2726  00701C  2BB7               	incf	initTabVue@i& (0+255),f,b
  2727  00701E                     
  2728                           ; BSR set to: 0
  2729  00701E  0E03               	movlw	3
  2730  007020  0100               	movlb	0	; force () banked
  2731  007022  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2732  007024  EF16  F038         	goto	u1211
  2733  007028  EF18  F038         	goto	u1210
  2734  00702C                     u1211:
  2735  00702C  EFD1  F037         	goto	l2151
  2736  007030                     u1210:
  2737  007030                     l94:
  2738                           
  2739                           ; BSR set to: 0
  2740  007030  0012               	return		;funcret
  2741  007032                     __end_of_initTabVue:
  2742                           	opt callstack 0
  2743                           
  2744 ;; *************** function _gagne *****************
  2745 ;; Defined at:
  2746 ;;		line 303 in file "main.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  pMines          2    0[BANK0 ] PTR int 
  2749 ;;		 -> main@nbMine(2), 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  j               1    8[BANK0 ] unsigned char 
  2752 ;;  i               1    7[BANK0 ] unsigned char 
  2753 ;;  nbTuileEtDra    1    6[BANK0 ] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      unsigned char 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2763 ;;      Params:         0       2       0       0       0       0       0
  2764 ;;      Locals:         0       3       0       0       0       0       0
  2765 ;;      Temps:          0       4       0       0       0       0       0
  2766 ;;      Totals:         0       9       0       0       0       0       0
  2767 ;;Total ram usage:        9 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text16
  2777  0071E0                     __ptext16:
  2778                           	opt callstack 0
  2779  0071E0                     _gagne:
  2780                           	opt callstack 30
  2781  0071E0                     
  2782                           ;main.c: 305: char nbTuileEtDrapeau=0;
  2783  0071E0  0E00               	movlw	0
  2784  0071E2  0100               	movlb	0	; force () banked
  2785  0071E4  6FBA               	movwf	gagne@nbTuileEtDrapeau& (0+255),b
  2786                           
  2787                           ;main.c: 307: for (char i = 0; i < 4; i++) {
  2788  0071E6  0E00               	movlw	0
  2789  0071E8  0100               	movlb	0	; force () banked
  2790  0071EA  6FBB               	movwf	gagne@i& (0+255),b
  2791  0071EC                     
  2792                           ; BSR set to: 0
  2793  0071EC  0E03               	movlw	3
  2794  0071EE  0100               	movlb	0	; force () banked
  2795  0071F0  65BB               	cpfsgt	gagne@i& (0+255),b
  2796  0071F2  EFFD  F038         	goto	u1451
  2797  0071F6  EFFF  F038         	goto	u1450
  2798  0071FA                     u1451:
  2799  0071FA  EF01  F039         	goto	l2289
  2800  0071FE                     u1450:
  2801  0071FE  EF64  F039         	goto	l2307
  2802  007202                     l2289:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;main.c: 308: for (char j = 0; j < 20; j++) {
  2806  007202  0E00               	movlw	0
  2807  007204  0100               	movlb	0	; force () banked
  2808  007206  6FBC               	movwf	gagne@j& (0+255),b
  2809  007208                     
  2810                           ; BSR set to: 0
  2811  007208  0E13               	movlw	19
  2812  00720A  0100               	movlb	0	; force () banked
  2813  00720C  65BC               	cpfsgt	gagne@j& (0+255),b
  2814  00720E  EF0B  F039         	goto	u1461
  2815  007212  EF0D  F039         	goto	u1460
  2816  007216                     u1461:
  2817  007216  EF0F  F039         	goto	l2295
  2818  00721A                     u1460:
  2819  00721A  EF59  F039         	goto	l2303
  2820  00721E                     l2295:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;main.c: 309: if(m_tabVue[i][j]==1||m_tabVue[i][j]==3)
  2824  00721E  0100               	movlb	0	; force () banked
  2825  007220  51BB               	movf	gagne@i& (0+255),w,b
  2826  007222  0D15               	mullw	21
  2827  007224  0E00               	movlw	low _m_tabVue
  2828  007226  0100               	movlb	0	; force () banked
  2829  007228  6FB6               	movwf	??_gagne& (0+255),b
  2830  00722A  0E01               	movlw	high _m_tabVue
  2831  00722C  6FB7               	movwf	(??_gagne+1)& (0+255),b
  2832  00722E  50F3               	movf	243,w,c
  2833  007230  27B6               	addwf	??_gagne& (0+255),f,b
  2834  007232  50F4               	movf	244,w,c
  2835  007234  23B7               	addwfc	(??_gagne+1)& (0+255),f,b
  2836  007236  0100               	movlb	0	; force () banked
  2837  007238  51BC               	movf	gagne@j& (0+255),w,b
  2838  00723A  0100               	movlb	0	; force () banked
  2839  00723C  25B6               	addwf	??_gagne& (0+255),w,b
  2840  00723E  6ED9               	movwf	fsr2l,c
  2841  007240  0100               	movlb	0	; force () banked
  2842  007242  0E00               	movlw	0
  2843  007244  0100               	movlb	0	; force () banked
  2844  007246  21B7               	addwfc	(??_gagne+1)& (0+255),w,b
  2845  007248  6EDA               	movwf	fsr2h,c
  2846  00724A  04DE               	decf	postinc2,w,c
  2847  00724C  B4D8               	btfsc	status,2,c
  2848  00724E  EF2B  F039         	goto	u1471
  2849  007252  EF2D  F039         	goto	u1470
  2850  007256                     u1471:
  2851  007256  EF4C  F039         	goto	l2299
  2852  00725A                     u1470:
  2853  00725A                     
  2854                           ; BSR set to: 0
  2855  00725A  0100               	movlb	0	; force () banked
  2856  00725C  51BB               	movf	gagne@i& (0+255),w,b
  2857  00725E  0D15               	mullw	21
  2858  007260  0E00               	movlw	low _m_tabVue
  2859  007262  0100               	movlb	0	; force () banked
  2860  007264  6FB6               	movwf	??_gagne& (0+255),b
  2861  007266  0E01               	movlw	high _m_tabVue
  2862  007268  6FB7               	movwf	(??_gagne+1)& (0+255),b
  2863  00726A  50F3               	movf	243,w,c
  2864  00726C  27B6               	addwf	??_gagne& (0+255),f,b
  2865  00726E  50F4               	movf	244,w,c
  2866  007270  23B7               	addwfc	(??_gagne+1)& (0+255),f,b
  2867  007272  0100               	movlb	0	; force () banked
  2868  007274  51BC               	movf	gagne@j& (0+255),w,b
  2869  007276  0100               	movlb	0	; force () banked
  2870  007278  25B6               	addwf	??_gagne& (0+255),w,b
  2871  00727A  6ED9               	movwf	fsr2l,c
  2872  00727C  0100               	movlb	0	; force () banked
  2873  00727E  0E00               	movlw	0
  2874  007280  0100               	movlb	0	; force () banked
  2875  007282  21B7               	addwfc	(??_gagne+1)& (0+255),w,b
  2876  007284  6EDA               	movwf	fsr2h,c
  2877  007286  0E03               	movlw	3
  2878  007288  18DE               	xorwf	postinc2,w,c
  2879  00728A  A4D8               	btfss	status,2,c
  2880  00728C  EF4A  F039         	goto	u1481
  2881  007290  EF4C  F039         	goto	u1480
  2882  007294                     u1481:
  2883  007294  EF4E  F039         	goto	l174
  2884  007298                     u1480:
  2885  007298                     l2299:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;main.c: 310: nbTuileEtDrapeau++;
  2889  007298  0100               	movlb	0	; force () banked
  2890  00729A  2BBA               	incf	gagne@nbTuileEtDrapeau& (0+255),f,b
  2891  00729C                     l174:
  2892                           
  2893                           ; BSR set to: 0
  2894  00729C  0100               	movlb	0	; force () banked
  2895  00729E  2BBC               	incf	gagne@j& (0+255),f,b
  2896  0072A0                     
  2897                           ; BSR set to: 0
  2898  0072A0  0E13               	movlw	19
  2899  0072A2  0100               	movlb	0	; force () banked
  2900  0072A4  65BC               	cpfsgt	gagne@j& (0+255),b
  2901  0072A6  EF57  F039         	goto	u1491
  2902  0072AA  EF59  F039         	goto	u1490
  2903  0072AE                     u1491:
  2904  0072AE  EF0F  F039         	goto	l2295
  2905  0072B2                     u1490:
  2906  0072B2                     l2303:
  2907                           
  2908                           ; BSR set to: 0
  2909  0072B2  0100               	movlb	0	; force () banked
  2910  0072B4  2BBB               	incf	gagne@i& (0+255),f,b
  2911  0072B6                     
  2912                           ; BSR set to: 0
  2913  0072B6  0E03               	movlw	3
  2914  0072B8  0100               	movlb	0	; force () banked
  2915  0072BA  65BB               	cpfsgt	gagne@i& (0+255),b
  2916  0072BC  EF62  F039         	goto	u1501
  2917  0072C0  EF64  F039         	goto	u1500
  2918  0072C4                     u1501:
  2919  0072C4  EF01  F039         	goto	l2289
  2920  0072C8                     u1500:
  2921  0072C8                     l2307:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;main.c: 311: };main.c: 312: };main.c: 313: if (nbTuileEtDrapeau == *pMines)
  2925  0072C8  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2926  0072CC  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2927  0072D0  0100               	movlb	0	; force () banked
  2928  0072D2  51BA               	movf	gagne@nbTuileEtDrapeau& (0+255),w,b
  2929  0072D4  0100               	movlb	0	; force () banked
  2930  0072D6  6FB8               	movwf	(??_gagne+2)& (0+255),b
  2931  0072D8  6BB9               	clrf	(??_gagne+3)& (0+255),b
  2932  0072DA  50DE               	movf	postinc2,w,c
  2933  0072DC  19B8               	xorwf	(??_gagne+2)& (0+255),w,b
  2934  0072DE  E107               	bnz	u1511
  2935  0072E0  50DE               	movf	postinc2,w,c
  2936  0072E2  19B9               	xorwf	(??_gagne+3)& (0+255),w,b
  2937  0072E4  A4D8               	btfss	status,2,c
  2938  0072E6  EF77  F039         	goto	u1511
  2939  0072EA  EF79  F039         	goto	u1510
  2940  0072EE                     u1511:
  2941  0072EE  EF83  F039         	goto	l2317
  2942  0072F2                     u1510:
  2943  0072F2                     
  2944                           ; BSR set to: 0
  2945                           ;main.c: 314: {;main.c: 315: (*pMines)++;
  2946  0072F2  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2947  0072F6  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2948  0072FA  2ADE               	incf	postinc2,f,c
  2949  0072FC  0E00               	movlw	0
  2950  0072FE  22DD               	addwfc	postdec2,f,c
  2951  007300                     
  2952                           ; BSR set to: 0
  2953                           ;main.c: 316: return 1;
  2954  007300  0E01               	movlw	1
  2955  007302  EF84  F039         	goto	l178
  2956  007306                     l2317:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;main.c: 318: else;main.c: 319: return 0;
  2960  007306  0E00               	movlw	0
  2961  007308                     l178:
  2962                           
  2963                           ; BSR set to: 0
  2964  007308  0012               	return		;funcret
  2965  00730A                     __end_of_gagne:
  2966                           	opt callstack 0
  2967                           
  2968 ;; *************** function _deplace *****************
  2969 ;; Defined at:
  2970 ;;		line 206 in file "main.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2973 ;;		 -> main@posX(2), 
  2974 ;;  y               2    7[BANK0 ] PTR unsigned char 
  2975 ;;		 -> main@posY(2), 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  analogY         1   11[BANK0 ] unsigned char 
  2978 ;;  analogX         1   10[BANK0 ] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2988 ;;      Params:         0       4       0       0       0       0       0
  2989 ;;      Locals:         0       2       0       0       0       0       0
  2990 ;;      Temps:          0       1       0       0       0       0       0
  2991 ;;      Totals:         0       7       0       0       0       0       0
  2992 ;;Total ram usage:        7 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    4
  2995 ;; This function calls:
  2996 ;;		_getAnalog
  2997 ;;		_lcd_gotoXY
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text17
  3004  0076FA                     __ptext17:
  3005                           	opt callstack 0
  3006  0076FA                     _deplace:
  3007                           	opt callstack 26
  3008  0076FA                     
  3009                           ;main.c: 208: unsigned char analogX = getAnalog(7);
  3010  0076FA  0E07               	movlw	7
  3011  0076FC  EC08  F035         	call	_getAnalog
  3012  007700  0100               	movlb	0	; force () banked
  3013  007702  6FBE               	movwf	deplace@analogX& (0+255),b
  3014                           
  3015                           ;main.c: 211: if (0 <= analogX && analogX <= 80)
  3016  007704  0E06               	movlw	6
  3017  007706  EC08  F035         	call	_getAnalog
  3018  00770A  0100               	movlb	0	; force () banked
  3019  00770C  6FBF               	movwf	deplace@analogY& (0+255),b
  3020  00770E                     
  3021                           ; BSR set to: 0
  3022  00770E  0E51               	movlw	81
  3023  007710  0100               	movlb	0	; force () banked
  3024  007712  61BE               	cpfslt	deplace@analogX& (0+255),b
  3025  007714  EF8E  F03B         	goto	u1341
  3026  007718  EF90  F03B         	goto	u1340
  3027  00771C                     u1341:
  3028  00771C  EFB1  F03B         	goto	l2239
  3029  007720                     u1340:
  3030  007720                     
  3031                           ; BSR set to: 0
  3032                           ;main.c: 212: {;main.c: 213: *x = (*x) - 1;
  3033  007720  C0B9  FFD9         	movff	deplace@x,fsr2l
  3034  007724  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3035  007728  50DF               	movf	indf2,w,c
  3036  00772A  0100               	movlb	0	; force () banked
  3037  00772C  6FBD               	movwf	??_deplace& (0+255),b
  3038  00772E  05BD               	decf	??_deplace& (0+255),w,b
  3039  007730  C0B9  FFD9         	movff	deplace@x,fsr2l
  3040  007734  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3041  007738  6EDF               	movwf	indf2,c
  3042  00773A                     
  3043                           ; BSR set to: 0
  3044                           ;main.c: 214: if ((*x) <= 0)
  3045  00773A  C0B9  FFD9         	movff	deplace@x,fsr2l
  3046  00773E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3047  007742  50DF               	movf	indf2,w,c
  3048  007744  A4D8               	btfss	status,2,c
  3049  007746  EFA7  F03B         	goto	u1351
  3050  00774A  EFA9  F03B         	goto	u1350
  3051  00774E                     u1351:
  3052  00774E  EFD9  F03B         	goto	l2245
  3053  007752                     u1350:
  3054  007752                     
  3055                           ; BSR set to: 0
  3056                           ;main.c: 215: *x = 20;
  3057  007752  C0B9  FFD9         	movff	deplace@x,fsr2l
  3058  007756  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3059  00775A  0E14               	movlw	20
  3060  00775C  6EDF               	movwf	indf2,c
  3061  00775E  EFD9  F03B         	goto	l2245
  3062  007762                     l2239:
  3063                           
  3064                           ; BSR set to: 0
  3065  007762  0EAE               	movlw	174
  3066  007764  0100               	movlb	0	; force () banked
  3067  007766  65BE               	cpfsgt	deplace@analogX& (0+255),b
  3068  007768  EFB8  F03B         	goto	u1361
  3069  00776C  EFBA  F03B         	goto	u1360
  3070  007770                     u1361:
  3071  007770  EFD9  F03B         	goto	l2245
  3072  007774                     u1360:
  3073  007774                     
  3074                           ; BSR set to: 0
  3075                           ;main.c: 217: {;main.c: 218: *x = (*x) + 1;
  3076  007774  C0B9  FFD9         	movff	deplace@x,fsr2l
  3077  007778  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3078  00777C  50DF               	movf	indf2,w,c
  3079  00777E  0100               	movlb	0	; force () banked
  3080  007780  6FBD               	movwf	??_deplace& (0+255),b
  3081  007782  29BD               	incf	??_deplace& (0+255),w,b
  3082  007784  C0B9  FFD9         	movff	deplace@x,fsr2l
  3083  007788  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3084  00778C  6EDF               	movwf	indf2,c
  3085                           
  3086                           ;main.c: 219: if ((*x) >= 21)
  3087  00778E  C0B9  FFD9         	movff	deplace@x,fsr2l
  3088  007792  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3089  007796  0E14               	movlw	20
  3090  007798  64DF               	cpfsgt	indf2,c
  3091  00779A  EFD1  F03B         	goto	u1371
  3092  00779E  EFD3  F03B         	goto	u1370
  3093  0077A2                     u1371:
  3094  0077A2  EFD9  F03B         	goto	l2245
  3095  0077A6                     u1370:
  3096  0077A6                     
  3097                           ; BSR set to: 0
  3098                           ;main.c: 220: *x = 1;
  3099  0077A6  C0B9  FFD9         	movff	deplace@x,fsr2l
  3100  0077AA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3101  0077AE  0E01               	movlw	1
  3102  0077B0  6EDF               	movwf	indf2,c
  3103  0077B2                     l2245:
  3104                           
  3105                           ; BSR set to: 0
  3106  0077B2  0E51               	movlw	81
  3107  0077B4  0100               	movlb	0	; force () banked
  3108  0077B6  61BF               	cpfslt	deplace@analogY& (0+255),b
  3109  0077B8  EFE0  F03B         	goto	u1381
  3110  0077BC  EFE2  F03B         	goto	u1380
  3111  0077C0                     u1381:
  3112  0077C0  EF03  F03C         	goto	l2253
  3113  0077C4                     u1380:
  3114  0077C4                     
  3115                           ; BSR set to: 0
  3116                           ;main.c: 224: {;main.c: 225: *y = (*y) - 1;
  3117  0077C4  C0BB  FFD9         	movff	deplace@y,fsr2l
  3118  0077C8  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3119  0077CC  50DF               	movf	indf2,w,c
  3120  0077CE  0100               	movlb	0	; force () banked
  3121  0077D0  6FBD               	movwf	??_deplace& (0+255),b
  3122  0077D2  05BD               	decf	??_deplace& (0+255),w,b
  3123  0077D4  C0BB  FFD9         	movff	deplace@y,fsr2l
  3124  0077D8  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3125  0077DC  6EDF               	movwf	indf2,c
  3126  0077DE                     
  3127                           ; BSR set to: 0
  3128                           ;main.c: 226: if ((*y) <= 0)
  3129  0077DE  C0BB  FFD9         	movff	deplace@y,fsr2l
  3130  0077E2  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3131  0077E6  50DF               	movf	indf2,w,c
  3132  0077E8  A4D8               	btfss	status,2,c
  3133  0077EA  EFF9  F03B         	goto	u1391
  3134  0077EE  EFFB  F03B         	goto	u1390
  3135  0077F2                     u1391:
  3136  0077F2  EF2B  F03C         	goto	l2259
  3137  0077F6                     u1390:
  3138  0077F6                     
  3139                           ; BSR set to: 0
  3140                           ;main.c: 227: *y = 4;
  3141  0077F6  C0BB  FFD9         	movff	deplace@y,fsr2l
  3142  0077FA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3143  0077FE  0E04               	movlw	4
  3144  007800  6EDF               	movwf	indf2,c
  3145  007802  EF2B  F03C         	goto	l2259
  3146  007806                     l2253:
  3147                           
  3148                           ; BSR set to: 0
  3149  007806  0EAE               	movlw	174
  3150  007808  0100               	movlb	0	; force () banked
  3151  00780A  65BF               	cpfsgt	deplace@analogY& (0+255),b
  3152  00780C  EF0A  F03C         	goto	u1401
  3153  007810  EF0C  F03C         	goto	u1400
  3154  007814                     u1401:
  3155  007814  EF2B  F03C         	goto	l2259
  3156  007818                     u1400:
  3157  007818                     
  3158                           ; BSR set to: 0
  3159                           ;main.c: 229: {;main.c: 230: *y = (*y) + 1;
  3160  007818  C0BB  FFD9         	movff	deplace@y,fsr2l
  3161  00781C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3162  007820  50DF               	movf	indf2,w,c
  3163  007822  0100               	movlb	0	; force () banked
  3164  007824  6FBD               	movwf	??_deplace& (0+255),b
  3165  007826  29BD               	incf	??_deplace& (0+255),w,b
  3166  007828  C0BB  FFD9         	movff	deplace@y,fsr2l
  3167  00782C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3168  007830  6EDF               	movwf	indf2,c
  3169                           
  3170                           ;main.c: 231: if ((*y) >= 5)
  3171  007832  C0BB  FFD9         	movff	deplace@y,fsr2l
  3172  007836  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3173  00783A  0E04               	movlw	4
  3174  00783C  64DF               	cpfsgt	indf2,c
  3175  00783E  EF23  F03C         	goto	u1411
  3176  007842  EF25  F03C         	goto	u1410
  3177  007846                     u1411:
  3178  007846  EF2B  F03C         	goto	l2259
  3179  00784A                     u1410:
  3180  00784A                     
  3181                           ; BSR set to: 0
  3182                           ;main.c: 232: *y = 1;
  3183  00784A  C0BB  FFD9         	movff	deplace@y,fsr2l
  3184  00784E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3185  007852  0E01               	movlw	1
  3186  007854  6EDF               	movwf	indf2,c
  3187  007856                     l2259:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;main.c: 233: };main.c: 234: lcd_gotoXY(*x, *y);
  3191  007856  C0BB  FFD9         	movff	deplace@y,fsr2l
  3192  00785A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3193  00785E  50DF               	movf	indf2,w,c
  3194  007860  0100               	movlb	0	; force () banked
  3195  007862  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3196  007864  C0B9  FFD9         	movff	deplace@x,fsr2l
  3197  007868  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3198  00786C  50DF               	movf	indf2,w,c
  3199  00786E  EC39  F037         	call	_lcd_gotoXY
  3200  007872  0012               	return		;funcret
  3201  007874                     __end_of_deplace:
  3202                           	opt callstack 0
  3203                           
  3204 ;; *************** function _getAnalog *****************
  3205 ;; Defined at:
  3206 ;;		line 327 in file "main.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  canal           1    wreg     unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  canal           1    1[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3220 ;;      Params:         0       0       0       0       0       0       0
  3221 ;;      Locals:         0       1       0       0       0       0       0
  3222 ;;      Temps:          0       1       0       0       0       0       0
  3223 ;;      Totals:         0       2       0       0       0       0       0
  3224 ;;Total ram usage:        2 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_deplace
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text18
  3234  006A10                     __ptext18:
  3235                           	opt callstack 0
  3236  006A10                     _getAnalog:
  3237                           	opt callstack 29
  3238                           
  3239                           ;incstack = 0
  3240                           ;getAnalog@canal stored from wreg
  3241  006A10  0100               	movlb	0	; force () banked
  3242  006A12  6FB5               	movwf	getAnalog@canal& (0+255),b
  3243  006A14                     
  3244                           ;main.c: 329: ADCON0bits.CHS = canal;
  3245  006A14  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  3246  006A18  0100               	movlb	0	; force () banked
  3247  006A1A  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3248  006A1C  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3249  006A1E  50C2               	movf	194,w,c	;volatile
  3250  006A20  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3251  006A22  0BC3               	andlw	-61
  3252  006A24  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3253  006A26  6EC2               	movwf	194,c	;volatile
  3254  006A28                     
  3255                           ;main.c: 331: ADCON0bits.GO_DONE = 1;
  3256  006A28  82C2               	bsf	194,1,c	;volatile
  3257  006A2A                     l182:
  3258  006A2A  B2C2               	btfsc	194,1,c	;volatile
  3259  006A2C  EF1A  F035         	goto	u161
  3260  006A30  EF1C  F035         	goto	u160
  3261  006A34                     u161:
  3262  006A34  EF15  F035         	goto	l182
  3263  006A38                     u160:
  3264  006A38                     
  3265                           ;main.c: 333: return ADRESH;
  3266  006A38  50C4               	movf	196,w,c	;volatile
  3267  006A3A  0012               	return		;funcret
  3268  006A3C                     __end_of_getAnalog:
  3269                           	opt callstack 0
  3270                           
  3271 ;; *************** function _demine *****************
  3272 ;; Defined at:
  3273 ;;		line 245 in file "main.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  x               1    wreg     unsigned char 
  3276 ;;  y               1   18[BANK0 ] unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  x               1   27[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      unsigned char 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         0       1       0       0       0       0       0
  3289 ;;      Locals:         0       1       0       0       0       0       0
  3290 ;;      Temps:          0       8       0       0       0       0       0
  3291 ;;      Totals:         0      10       0       0       0       0       0
  3292 ;;Total ram usage:       10 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    7
  3295 ;; This function calls:
  3296 ;;		_afficheTabVue
  3297 ;;		_enleveTuilesAutour
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text19
  3304  007874                     __ptext19:
  3305                           	opt callstack 0
  3306  007874                     _demine:
  3307                           	opt callstack 23
  3308                           
  3309                           ;incstack = 0
  3310                           ;demine@x stored from wreg
  3311  007874  0100               	movlb	0	; force () banked
  3312  007876  6FCF               	movwf	demine@x& (0+255),b
  3313  007878                     
  3314                           ;main.c: 247: if (m_tabMines[y - 1][x - 1] == 2)
  3315  007878  0100               	movlb	0	; force () banked
  3316  00787A  51C6               	movf	demine@y& (0+255),w,b
  3317  00787C  0D15               	mullw	21
  3318  00787E  0EEA               	movlw	234
  3319  007880  0100               	movlb	0	; force () banked
  3320  007882  6FC7               	movwf	??_demine& (0+255),b
  3321  007884  0EFF               	movlw	255
  3322  007886  6FC8               	movwf	(??_demine+1)& (0+255),b
  3323  007888  0E60               	movlw	low _m_tabMines
  3324  00788A  6FC9               	movwf	(??_demine+2)& (0+255),b
  3325  00788C  0E00               	movlw	high _m_tabMines
  3326  00788E  6FCA               	movwf	(??_demine+3)& (0+255),b
  3327  007890  51C7               	movf	??_demine& (0+255),w,b
  3328  007892  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3329  007894  51C8               	movf	(??_demine+1)& (0+255),w,b
  3330  007896  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3331  007898  50F3               	movf	243,w,c
  3332  00789A  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3333  00789C  50F4               	movf	244,w,c
  3334  00789E  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3335  0078A0  0100               	movlb	0	; force () banked
  3336  0078A2  51CF               	movf	demine@x& (0+255),w,b
  3337  0078A4  0100               	movlb	0	; force () banked
  3338  0078A6  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3339  0078A8  6ED9               	movwf	fsr2l,c
  3340  0078AA  0100               	movlb	0	; force () banked
  3341  0078AC  0E00               	movlw	0
  3342  0078AE  0100               	movlb	0	; force () banked
  3343  0078B0  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3344  0078B2  6EDA               	movwf	fsr2h,c
  3345  0078B4  0E02               	movlw	2
  3346  0078B6  18DE               	xorwf	postinc2,w,c
  3347  0078B8  A4D8               	btfss	status,2,c
  3348  0078BA  EF61  F03C         	goto	u1421
  3349  0078BE  EF63  F03C         	goto	u1420
  3350  0078C2                     u1421:
  3351  0078C2  EF66  F03C         	goto	l2269
  3352  0078C6                     u1420:
  3353  0078C6                     
  3354                           ; BSR set to: 0
  3355                           ;main.c: 248: return 0;
  3356  0078C6  0E00               	movlw	0
  3357  0078C8  EFFD  F03C         	goto	l147
  3358  0078CC                     l2269:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;main.c: 249: else;main.c: 250: {;main.c: 251: if (m_tabMines[y-1][x-1]==' ')
  3362  0078CC  0100               	movlb	0	; force () banked
  3363  0078CE  51C6               	movf	demine@y& (0+255),w,b
  3364  0078D0  0D15               	mullw	21
  3365  0078D2  0EEA               	movlw	234
  3366  0078D4  0100               	movlb	0	; force () banked
  3367  0078D6  6FC7               	movwf	??_demine& (0+255),b
  3368  0078D8  0EFF               	movlw	255
  3369  0078DA  6FC8               	movwf	(??_demine+1)& (0+255),b
  3370  0078DC  0E60               	movlw	low _m_tabMines
  3371  0078DE  6FC9               	movwf	(??_demine+2)& (0+255),b
  3372  0078E0  0E00               	movlw	high _m_tabMines
  3373  0078E2  6FCA               	movwf	(??_demine+3)& (0+255),b
  3374  0078E4  51C7               	movf	??_demine& (0+255),w,b
  3375  0078E6  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3376  0078E8  51C8               	movf	(??_demine+1)& (0+255),w,b
  3377  0078EA  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3378  0078EC  50F3               	movf	243,w,c
  3379  0078EE  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3380  0078F0  50F4               	movf	244,w,c
  3381  0078F2  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3382  0078F4  0100               	movlb	0	; force () banked
  3383  0078F6  51CF               	movf	demine@x& (0+255),w,b
  3384  0078F8  0100               	movlb	0	; force () banked
  3385  0078FA  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3386  0078FC  6ED9               	movwf	fsr2l,c
  3387  0078FE  0100               	movlb	0	; force () banked
  3388  007900  0E00               	movlw	0
  3389  007902  0100               	movlb	0	; force () banked
  3390  007904  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3391  007906  6EDA               	movwf	fsr2h,c
  3392  007908  0E20               	movlw	32
  3393  00790A  18DE               	xorwf	postinc2,w,c
  3394  00790C  A4D8               	btfss	status,2,c
  3395  00790E  EF8B  F03C         	goto	u1431
  3396  007912  EF8D  F03C         	goto	u1430
  3397  007916                     u1431:
  3398  007916  EF95  F03C         	goto	l2273
  3399  00791A                     u1430:
  3400  00791A                     
  3401                           ; BSR set to: 0
  3402                           ;main.c: 252: enleveTuilesAutour(x, y);
  3403  00791A  C0C6  F0BD         	movff	demine@y,enleveTuilesAutour@y
  3404  00791E  0100               	movlb	0	; force () banked
  3405  007920  51CF               	movf	demine@x& (0+255),w,b
  3406  007922  ECFE  F03C         	call	_enleveTuilesAutour
  3407  007926  EFFC  F03C         	goto	l2279
  3408  00792A                     l2273:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;main.c: 253: else if (m_tabVue[y-1][x-1]!=3)
  3412  00792A  0100               	movlb	0	; force () banked
  3413  00792C  51C6               	movf	demine@y& (0+255),w,b
  3414  00792E  0D15               	mullw	21
  3415  007930  0EEA               	movlw	234
  3416  007932  0100               	movlb	0	; force () banked
  3417  007934  6FC7               	movwf	??_demine& (0+255),b
  3418  007936  0EFF               	movlw	255
  3419  007938  6FC8               	movwf	(??_demine+1)& (0+255),b
  3420  00793A  0E00               	movlw	low _m_tabVue
  3421  00793C  6FC9               	movwf	(??_demine+2)& (0+255),b
  3422  00793E  0E01               	movlw	high _m_tabVue
  3423  007940  6FCA               	movwf	(??_demine+3)& (0+255),b
  3424  007942  51C7               	movf	??_demine& (0+255),w,b
  3425  007944  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3426  007946  51C8               	movf	(??_demine+1)& (0+255),w,b
  3427  007948  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3428  00794A  50F3               	movf	243,w,c
  3429  00794C  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3430  00794E  50F4               	movf	244,w,c
  3431  007950  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3432  007952  0100               	movlb	0	; force () banked
  3433  007954  51CF               	movf	demine@x& (0+255),w,b
  3434  007956  0100               	movlb	0	; force () banked
  3435  007958  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3436  00795A  6ED9               	movwf	fsr2l,c
  3437  00795C  0100               	movlb	0	; force () banked
  3438  00795E  0E00               	movlw	0
  3439  007960  0100               	movlb	0	; force () banked
  3440  007962  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3441  007964  6EDA               	movwf	fsr2h,c
  3442  007966  0E03               	movlw	3
  3443  007968  18DE               	xorwf	postinc2,w,c
  3444  00796A  B4D8               	btfsc	status,2,c
  3445  00796C  EFBA  F03C         	goto	u1441
  3446  007970  EFBC  F03C         	goto	u1440
  3447  007974                     u1441:
  3448  007974  EFFC  F03C         	goto	l2279
  3449  007978                     u1440:
  3450  007978                     
  3451                           ; BSR set to: 0
  3452                           ;main.c: 254: {;main.c: 255: m_tabVue[y-1][x-1]=m_tabMines[y-1][x-1];
  3453  007978  0100               	movlb	0	; force () banked
  3454  00797A  51C6               	movf	demine@y& (0+255),w,b
  3455  00797C  0D15               	mullw	21
  3456  00797E  0EEA               	movlw	234
  3457  007980  0100               	movlb	0	; force () banked
  3458  007982  6FC7               	movwf	??_demine& (0+255),b
  3459  007984  0EFF               	movlw	255
  3460  007986  6FC8               	movwf	(??_demine+1)& (0+255),b
  3461  007988  0E60               	movlw	low _m_tabMines
  3462  00798A  6FC9               	movwf	(??_demine+2)& (0+255),b
  3463  00798C  0E00               	movlw	high _m_tabMines
  3464  00798E  6FCA               	movwf	(??_demine+3)& (0+255),b
  3465  007990  51C7               	movf	??_demine& (0+255),w,b
  3466  007992  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3467  007994  51C8               	movf	(??_demine+1)& (0+255),w,b
  3468  007996  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3469  007998  50F3               	movf	243,w,c
  3470  00799A  27C9               	addwf	(??_demine+2)& (0+255),f,b
  3471  00799C  50F4               	movf	244,w,c
  3472  00799E  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  3473  0079A0  0100               	movlb	0	; force () banked
  3474  0079A2  51CF               	movf	demine@x& (0+255),w,b
  3475  0079A4  0100               	movlb	0	; force () banked
  3476  0079A6  25C9               	addwf	(??_demine+2)& (0+255),w,b
  3477  0079A8  6ED9               	movwf	fsr2l,c
  3478  0079AA  0100               	movlb	0	; force () banked
  3479  0079AC  0E00               	movlw	0
  3480  0079AE  0100               	movlb	0	; force () banked
  3481  0079B0  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  3482  0079B2  6EDA               	movwf	fsr2h,c
  3483  0079B4  0100               	movlb	0	; force () banked
  3484  0079B6  51C6               	movf	demine@y& (0+255),w,b
  3485  0079B8  0D15               	mullw	21
  3486  0079BA  0EEA               	movlw	234
  3487  0079BC  0100               	movlb	0	; force () banked
  3488  0079BE  6FCB               	movwf	(??_demine+4)& (0+255),b
  3489  0079C0  0EFF               	movlw	255
  3490  0079C2  6FCC               	movwf	(??_demine+5)& (0+255),b
  3491  0079C4  0E00               	movlw	low _m_tabVue
  3492  0079C6  6FCD               	movwf	(??_demine+6)& (0+255),b
  3493  0079C8  0E01               	movlw	high _m_tabVue
  3494  0079CA  6FCE               	movwf	(??_demine+7)& (0+255),b
  3495  0079CC  51CB               	movf	(??_demine+4)& (0+255),w,b
  3496  0079CE  27CD               	addwf	(??_demine+6)& (0+255),f,b
  3497  0079D0  51CC               	movf	(??_demine+5)& (0+255),w,b
  3498  0079D2  23CE               	addwfc	(??_demine+7)& (0+255),f,b
  3499  0079D4  50F3               	movf	243,w,c
  3500  0079D6  27CD               	addwf	(??_demine+6)& (0+255),f,b
  3501  0079D8  50F4               	movf	244,w,c
  3502  0079DA  23CE               	addwfc	(??_demine+7)& (0+255),f,b
  3503  0079DC  0100               	movlb	0	; force () banked
  3504  0079DE  51CF               	movf	demine@x& (0+255),w,b
  3505  0079E0  0100               	movlb	0	; force () banked
  3506  0079E2  25CD               	addwf	(??_demine+6)& (0+255),w,b
  3507  0079E4  6EE1               	movwf	fsr1l,c
  3508  0079E6  0100               	movlb	0	; force () banked
  3509  0079E8  0E00               	movlw	0
  3510  0079EA  0100               	movlb	0	; force () banked
  3511  0079EC  21CE               	addwfc	(??_demine+7)& (0+255),w,b
  3512  0079EE  6EE2               	movwf	fsr1h,c
  3513  0079F0  CFDF FFE7          	movff	indf2,indf1
  3514  0079F4                     
  3515                           ; BSR set to: 0
  3516                           ;main.c: 256: afficheTabVue();
  3517  0079F4  EC3C  F036         	call	_afficheTabVue	;wreg free
  3518  0079F8                     l2279:
  3519                           
  3520                           ;main.c: 257: };main.c: 258: return 1;
  3521  0079F8  0E01               	movlw	1
  3522  0079FA                     l147:
  3523  0079FA  0012               	return		;funcret
  3524  0079FC                     __end_of_demine:
  3525                           	opt callstack 0
  3526                           
  3527 ;; *************** function _enleveTuilesAutour *****************
  3528 ;; Defined at:
  3529 ;;		line 269 in file "main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  x               1    wreg     unsigned char 
  3532 ;;  y               1    9[BANK0 ] unsigned char 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  x               1   15[BANK0 ] unsigned char 
  3535 ;;  i               1   17[BANK0 ] char 
  3536 ;;  j               1   16[BANK0 ] char 
  3537 ;;  mem             1   14[BANK0 ] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3547 ;;      Params:         0       1       0       0       0       0       0
  3548 ;;      Locals:         0       4       0       0       0       0       0
  3549 ;;      Temps:          0       4       0       0       0       0       0
  3550 ;;      Totals:         0       9       0       0       0       0       0
  3551 ;;Total ram usage:        9 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    6
  3554 ;; This function calls:
  3555 ;;		_afficheTabVue
  3556 ;; This function is called by:
  3557 ;;		_demine
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text20
  3562  0079FC                     __ptext20:
  3563                           	opt callstack 0
  3564  0079FC                     _enleveTuilesAutour:
  3565                           	opt callstack 23
  3566                           
  3567                           ;incstack = 0
  3568                           ;enleveTuilesAutour@x stored from wreg
  3569  0079FC  0100               	movlb	0	; force () banked
  3570  0079FE  6FC3               	movwf	enleveTuilesAutour@x& (0+255),b
  3571  007A00                     
  3572                           ;main.c: 271: signed char i = x - 2;
  3573  007A00  0100               	movlb	0	; force () banked
  3574  007A02  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3575  007A04  0FFE               	addlw	254
  3576  007A06  0100               	movlb	0	; force () banked
  3577  007A08  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3578                           
  3579                           ;main.c: 272: signed char j = y - 2;
  3580  007A0A  0100               	movlb	0	; force () banked
  3581  007A0C  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3582  007A0E  0FFE               	addlw	254
  3583  007A10  0100               	movlb	0	; force () banked
  3584  007A12  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3585                           
  3586                           ;main.c: 273: char mem;;main.c: 275: if (i < 0)
  3587  007A14  0100               	movlb	0	; force () banked
  3588  007A16  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3589  007A18  EF12  F03D         	goto	u1000
  3590  007A1C  EF10  F03D         	goto	u1001
  3591  007A20                     u1001:
  3592  007A20  EF15  F03D         	goto	l1999
  3593  007A24                     u1000:
  3594  007A24                     
  3595                           ; BSR set to: 0
  3596                           ;main.c: 276: i = 0;
  3597  007A24  0E00               	movlw	0
  3598  007A26  0100               	movlb	0	; force () banked
  3599  007A28  6FC5               	movwf	enleveTuilesAutour@i& (0+255),b
  3600  007A2A                     l1999:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;main.c: 277: if (j < 0)
  3604  007A2A  0100               	movlb	0	; force () banked
  3605  007A2C  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3606  007A2E  EF1D  F03D         	goto	u1010
  3607  007A32  EF1B  F03D         	goto	u1011
  3608  007A36                     u1011:
  3609  007A36  EF20  F03D         	goto	l2003
  3610  007A3A                     u1010:
  3611  007A3A                     
  3612                           ; BSR set to: 0
  3613                           ;main.c: 278: j = 0;
  3614  007A3A  0E00               	movlw	0
  3615  007A3C  0100               	movlb	0	; force () banked
  3616  007A3E  6FC4               	movwf	enleveTuilesAutour@j& (0+255),b
  3617  007A40                     l2003:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;main.c: 279: mem=i;
  3621  007A40  C0C5  F0C2         	movff	enleveTuilesAutour@i,enleveTuilesAutour@mem
  3622                           
  3623                           ;main.c: 282: while(j <= y && j<4)
  3624  007A44  EFB2  F03D         	goto	l2019
  3625  007A48                     l157:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;main.c: 283: {;main.c: 284: i=mem;
  3629  007A48  C0C2  F0C5         	movff	enleveTuilesAutour@mem,enleveTuilesAutour@i
  3630                           
  3631                           ;main.c: 285: while(i<=x && i<20)
  3632  007A4C  EF96  F03D         	goto	l2013
  3633  007A50                     l2005:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;main.c: 286: {;main.c: 287: if(m_tabMines[j][i]!=2 && m_tabVue[j][i]!=3)
  3637  007A50  0100               	movlb	0	; force () banked
  3638  007A52  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3639  007A54  0D15               	mullw	21
  3640  007A56  0E60               	movlw	low _m_tabMines
  3641  007A58  0100               	movlb	0	; force () banked
  3642  007A5A  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3643  007A5C  0E00               	movlw	high _m_tabMines
  3644  007A5E  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3645  007A60  50F3               	movf	243,w,c
  3646  007A62  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3647  007A64  50F4               	movf	244,w,c
  3648  007A66  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3649  007A68  0100               	movlb	0	; force () banked
  3650  007A6A  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3651  007A6C  0100               	movlb	0	; force () banked
  3652  007A6E  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3653  007A70  6ED9               	movwf	fsr2l,c
  3654  007A72  0100               	movlb	0	; force () banked
  3655  007A74  0E00               	movlw	0
  3656  007A76  0100               	movlb	0	; force () banked
  3657  007A78  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3658  007A7A  6EDA               	movwf	fsr2h,c
  3659  007A7C  0E02               	movlw	2
  3660  007A7E  18DE               	xorwf	postinc2,w,c
  3661  007A80  B4D8               	btfsc	status,2,c
  3662  007A82  EF45  F03D         	goto	u1021
  3663  007A86  EF47  F03D         	goto	u1020
  3664  007A8A                     u1021:
  3665  007A8A  EF94  F03D         	goto	l2011
  3666  007A8E                     u1020:
  3667  007A8E                     
  3668                           ; BSR set to: 0
  3669  007A8E  0100               	movlb	0	; force () banked
  3670  007A90  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3671  007A92  0D15               	mullw	21
  3672  007A94  0E00               	movlw	low _m_tabVue
  3673  007A96  0100               	movlb	0	; force () banked
  3674  007A98  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3675  007A9A  0E01               	movlw	high _m_tabVue
  3676  007A9C  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3677  007A9E  50F3               	movf	243,w,c
  3678  007AA0  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3679  007AA2  50F4               	movf	244,w,c
  3680  007AA4  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3681  007AA6  0100               	movlb	0	; force () banked
  3682  007AA8  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3683  007AAA  0100               	movlb	0	; force () banked
  3684  007AAC  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3685  007AAE  6ED9               	movwf	fsr2l,c
  3686  007AB0  0100               	movlb	0	; force () banked
  3687  007AB2  0E00               	movlw	0
  3688  007AB4  0100               	movlb	0	; force () banked
  3689  007AB6  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3690  007AB8  6EDA               	movwf	fsr2h,c
  3691  007ABA  0E03               	movlw	3
  3692  007ABC  18DE               	xorwf	postinc2,w,c
  3693  007ABE  B4D8               	btfsc	status,2,c
  3694  007AC0  EF64  F03D         	goto	u1031
  3695  007AC4  EF66  F03D         	goto	u1030
  3696  007AC8                     u1031:
  3697  007AC8  EF94  F03D         	goto	l2011
  3698  007ACC                     u1030:
  3699  007ACC                     
  3700                           ; BSR set to: 0
  3701                           ;main.c: 288: m_tabVue[j][i]=m_tabMines[j][i];
  3702  007ACC  0100               	movlb	0	; force () banked
  3703  007ACE  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3704  007AD0  0D15               	mullw	21
  3705  007AD2  0E60               	movlw	low _m_tabMines
  3706  007AD4  0100               	movlb	0	; force () banked
  3707  007AD6  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3708  007AD8  0E00               	movlw	high _m_tabMines
  3709  007ADA  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3710  007ADC  50F3               	movf	243,w,c
  3711  007ADE  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3712  007AE0  50F4               	movf	244,w,c
  3713  007AE2  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3714  007AE4  0100               	movlb	0	; force () banked
  3715  007AE6  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3716  007AE8  0100               	movlb	0	; force () banked
  3717  007AEA  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3718  007AEC  6ED9               	movwf	fsr2l,c
  3719  007AEE  0100               	movlb	0	; force () banked
  3720  007AF0  0E00               	movlw	0
  3721  007AF2  0100               	movlb	0	; force () banked
  3722  007AF4  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3723  007AF6  6EDA               	movwf	fsr2h,c
  3724  007AF8  0100               	movlb	0	; force () banked
  3725  007AFA  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3726  007AFC  0D15               	mullw	21
  3727  007AFE  0E00               	movlw	low _m_tabVue
  3728  007B00  0100               	movlb	0	; force () banked
  3729  007B02  6FC0               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3730  007B04  0E01               	movlw	high _m_tabVue
  3731  007B06  6FC1               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3732  007B08  50F3               	movf	243,w,c
  3733  007B0A  27C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3734  007B0C  50F4               	movf	244,w,c
  3735  007B0E  23C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3736  007B10  0100               	movlb	0	; force () banked
  3737  007B12  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3738  007B14  0100               	movlb	0	; force () banked
  3739  007B16  25C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3740  007B18  6EE1               	movwf	fsr1l,c
  3741  007B1A  0100               	movlb	0	; force () banked
  3742  007B1C  0E00               	movlw	0
  3743  007B1E  0100               	movlb	0	; force () banked
  3744  007B20  21C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3745  007B22  6EE2               	movwf	fsr1h,c
  3746  007B24  CFDF FFE7          	movff	indf2,indf1
  3747  007B28                     l2011:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;main.c: 289: i++;
  3751  007B28  0100               	movlb	0	; force () banked
  3752  007B2A  2BC5               	incf	enleveTuilesAutour@i& (0+255),f,b
  3753  007B2C                     l2013:
  3754                           
  3755                           ; BSR set to: 0
  3756  007B2C  0100               	movlb	0	; force () banked
  3757  007B2E  51C3               	movf	enleveTuilesAutour@x& (0+255),w,b
  3758  007B30  0100               	movlb	0	; force () banked
  3759  007B32  BFC5               	btfsc	enleveTuilesAutour@i& (0+255),7,b
  3760  007B34  EFA5  F03D         	goto	u1040
  3761  007B38  0AFF               	xorlw	255
  3762  007B3A  25C5               	addwf	enleveTuilesAutour@i& (0+255),w,b
  3763  007B3C  B0D8               	btfsc	status,0,c
  3764  007B3E  EFA3  F03D         	goto	u1041
  3765  007B42  EFA5  F03D         	goto	u1040
  3766  007B46                     u1041:
  3767  007B46  EFB0  F03D         	goto	l2017
  3768  007B4A                     u1040:
  3769  007B4A                     
  3770                           ; BSR set to: 0
  3771  007B4A  0100               	movlb	0	; force () banked
  3772  007B4C  51C5               	movf	enleveTuilesAutour@i& (0+255),w,b
  3773  007B4E  0A80               	xorlw	128
  3774  007B50  0F6C               	addlw	-148
  3775  007B52  A0D8               	btfss	status,0,c
  3776  007B54  EFAE  F03D         	goto	u1051
  3777  007B58  EFB0  F03D         	goto	u1050
  3778  007B5C                     u1051:
  3779  007B5C  EF28  F03D         	goto	l2005
  3780  007B60                     u1050:
  3781  007B60                     l2017:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;main.c: 290: };main.c: 291: j++;
  3785  007B60  0100               	movlb	0	; force () banked
  3786  007B62  2BC4               	incf	enleveTuilesAutour@j& (0+255),f,b
  3787  007B64                     l2019:
  3788                           
  3789                           ; BSR set to: 0
  3790  007B64  0100               	movlb	0	; force () banked
  3791  007B66  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3792  007B68  0100               	movlb	0	; force () banked
  3793  007B6A  BFC4               	btfsc	enleveTuilesAutour@j& (0+255),7,b
  3794  007B6C  EFC1  F03D         	goto	u1060
  3795  007B70  0AFF               	xorlw	255
  3796  007B72  25C4               	addwf	enleveTuilesAutour@j& (0+255),w,b
  3797  007B74  B0D8               	btfsc	status,0,c
  3798  007B76  EFBF  F03D         	goto	u1061
  3799  007B7A  EFC1  F03D         	goto	u1060
  3800  007B7E                     u1061:
  3801  007B7E  EFCC  F03D         	goto	l2023
  3802  007B82                     u1060:
  3803  007B82                     
  3804                           ; BSR set to: 0
  3805  007B82  0100               	movlb	0	; force () banked
  3806  007B84  51C4               	movf	enleveTuilesAutour@j& (0+255),w,b
  3807  007B86  0A80               	xorlw	128
  3808  007B88  0F7C               	addlw	-132
  3809  007B8A  A0D8               	btfss	status,0,c
  3810  007B8C  EFCA  F03D         	goto	u1071
  3811  007B90  EFCC  F03D         	goto	u1070
  3812  007B94                     u1071:
  3813  007B94  EF24  F03D         	goto	l157
  3814  007B98                     u1070:
  3815  007B98                     l2023:
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;main.c: 292: };main.c: 293: afficheTabVue();
  3819  007B98  EC3C  F036         	call	_afficheTabVue	;wreg free
  3820  007B9C  0012               	return		;funcret
  3821  007B9E                     __end_of_enleveTuilesAutour:
  3822                           	opt callstack 0
  3823                           
  3824 ;; *************** function _afficheTabVue *****************
  3825 ;; Defined at:
  3826 ;;		line 342 in file "main.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  i               1    8[BANK0 ] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3840 ;;      Params:         0       0       0       0       0       0       0
  3841 ;;      Locals:         0       1       0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0
  3843 ;;      Totals:         0       1       0       0       0       0       0
  3844 ;;Total ram usage:        1 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    5
  3847 ;; This function calls:
  3848 ;;		_lcd_gotoXY
  3849 ;;		_lcd_putMessage
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;;		_demine
  3853 ;;		_enleveTuilesAutour
  3854 ;;		_metOuEnleveDrapeau
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text21
  3859  006C78                     __ptext21:
  3860                           	opt callstack 0
  3861  006C78                     _afficheTabVue:
  3862                           	opt callstack 24
  3863  006C78                     
  3864                           ;main.c: 344: for (char i = 0; i < 4; i++) {
  3865  006C78  0E00               	movlw	0
  3866  006C7A  0100               	movlb	0	; force () banked
  3867  006C7C  6FBC               	movwf	afficheTabVue@i& (0+255),b
  3868  006C7E                     
  3869                           ; BSR set to: 0
  3870  006C7E  0E03               	movlw	3
  3871  006C80  0100               	movlb	0	; force () banked
  3872  006C82  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3873  006C84  EF46  F036         	goto	u891
  3874  006C88  EF48  F036         	goto	u890
  3875  006C8C                     u891:
  3876  006C8C  EF4A  F036         	goto	l1927
  3877  006C90                     u890:
  3878  006C90  EF68  F036         	goto	l190
  3879  006C94                     l1927:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;main.c: 345: lcd_gotoXY(1, i + 1);
  3883  006C94  0100               	movlb	0	; force () banked
  3884  006C96  29BC               	incf	afficheTabVue@i& (0+255),w,b
  3885  006C98  0100               	movlb	0	; force () banked
  3886  006C9A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3887  006C9C  0E01               	movlw	1
  3888  006C9E  EC39  F037         	call	_lcd_gotoXY
  3889  006CA2                     
  3890                           ;main.c: 346: lcd_putMessage(m_tabVue[i]);
  3891  006CA2  0100               	movlb	0	; force () banked
  3892  006CA4  51BC               	movf	afficheTabVue@i& (0+255),w,b
  3893  006CA6  0D15               	mullw	21
  3894  006CA8  0E00               	movlw	low _m_tabVue
  3895  006CAA  24F3               	addwf	243,w,c
  3896  006CAC  0100               	movlb	0	; force () banked
  3897  006CAE  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3898  006CB0  0E01               	movlw	high _m_tabVue
  3899  006CB2  20F4               	addwfc	prodh,w,c
  3900  006CB4  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3901  006CB6  EC93  F035         	call	_lcd_putMessage	;wreg free
  3902  006CBA  0100               	movlb	0	; force () banked
  3903  006CBC  2BBC               	incf	afficheTabVue@i& (0+255),f,b
  3904  006CBE                     
  3905                           ; BSR set to: 0
  3906  006CBE  0E03               	movlw	3
  3907  006CC0  0100               	movlb	0	; force () banked
  3908  006CC2  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3909  006CC4  EF66  F036         	goto	u901
  3910  006CC8  EF68  F036         	goto	u900
  3911  006CCC                     u901:
  3912  006CCC  EF4A  F036         	goto	l1927
  3913  006CD0                     u900:
  3914  006CD0                     l190:
  3915                           
  3916                           ; BSR set to: 0
  3917  006CD0  0012               	return		;funcret
  3918  006CD2                     __end_of_afficheTabVue:
  3919                           	opt callstack 0
  3920                           
  3921 ;; *************** function _afficheTabMines *****************
  3922 ;; Defined at:
  3923 ;;		line 355 in file "main.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  i               1    8[BANK0 ] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3937 ;;      Params:         0       0       0       0       0       0       0
  3938 ;;      Locals:         0       1       0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0
  3940 ;;      Totals:         0       1       0       0       0       0       0
  3941 ;;Total ram usage:        1 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    5
  3944 ;; This function calls:
  3945 ;;		_lcd_gotoXY
  3946 ;;		_lcd_putMessage
  3947 ;; This function is called by:
  3948 ;;		_main
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text22
  3953  006C1E                     __ptext22:
  3954                           	opt callstack 0
  3955  006C1E                     _afficheTabMines:
  3956                           	opt callstack 25
  3957  006C1E                     
  3958                           ;main.c: 357: for (char i = 0; i < 4; i++) {
  3959  006C1E  0E00               	movlw	0
  3960  006C20  0100               	movlb	0	; force () banked
  3961  006C22  6FBC               	movwf	afficheTabMines@i& (0+255),b
  3962  006C24                     
  3963                           ; BSR set to: 0
  3964  006C24  0E03               	movlw	3
  3965  006C26  0100               	movlb	0	; force () banked
  3966  006C28  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3967  006C2A  EF19  F036         	goto	u1521
  3968  006C2E  EF1B  F036         	goto	u1520
  3969  006C32                     u1521:
  3970  006C32  EF1D  F036         	goto	l2327
  3971  006C36                     u1520:
  3972  006C36  EF3B  F036         	goto	l195
  3973  006C3A                     l2327:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 358: lcd_gotoXY(1, i + 1);
  3977  006C3A  0100               	movlb	0	; force () banked
  3978  006C3C  29BC               	incf	afficheTabMines@i& (0+255),w,b
  3979  006C3E  0100               	movlb	0	; force () banked
  3980  006C40  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3981  006C42  0E01               	movlw	1
  3982  006C44  EC39  F037         	call	_lcd_gotoXY
  3983  006C48                     
  3984                           ;main.c: 359: lcd_putMessage(m_tabMines[i]);
  3985  006C48  0100               	movlb	0	; force () banked
  3986  006C4A  51BC               	movf	afficheTabMines@i& (0+255),w,b
  3987  006C4C  0D15               	mullw	21
  3988  006C4E  0E60               	movlw	low _m_tabMines
  3989  006C50  24F3               	addwf	243,w,c
  3990  006C52  0100               	movlb	0	; force () banked
  3991  006C54  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3992  006C56  0E00               	movlw	high _m_tabMines
  3993  006C58  20F4               	addwfc	prodh,w,c
  3994  006C5A  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3995  006C5C  EC93  F035         	call	_lcd_putMessage	;wreg free
  3996  006C60  0100               	movlb	0	; force () banked
  3997  006C62  2BBC               	incf	afficheTabMines@i& (0+255),f,b
  3998  006C64                     
  3999                           ; BSR set to: 0
  4000  006C64  0E03               	movlw	3
  4001  006C66  0100               	movlb	0	; force () banked
  4002  006C68  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  4003  006C6A  EF39  F036         	goto	u1531
  4004  006C6E  EF3B  F036         	goto	u1530
  4005  006C72                     u1531:
  4006  006C72  EF1D  F036         	goto	l2327
  4007  006C76                     u1530:
  4008  006C76                     l195:
  4009                           
  4010                           ; BSR set to: 0
  4011  006C76  0012               	return		;funcret
  4012  006C78                     __end_of_afficheTabMines:
  4013                           	opt callstack 0
  4014                           
  4015 ;; *************** function _lcd_putMessage *****************
  4016 ;; Defined at:
  4017 ;;		line 387 in file "Lcd4Lignes.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
  4020 ;;		 -> m_tabMines(84), m_tabVue(84), 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  j               1    7[BANK0 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4032 ;;      Params:         0       2       0       0       0       0       0
  4033 ;;      Locals:         0       1       0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0
  4035 ;;      Totals:         0       3       0       0       0       0       0
  4036 ;;Total ram usage:        3 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    4
  4039 ;; This function calls:
  4040 ;;		_lcd_ecritChar
  4041 ;; This function is called by:
  4042 ;;		_afficheTabVue
  4043 ;;		_afficheTabMines
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text23
  4048  006B26                     __ptext23:
  4049                           	opt callstack 0
  4050  006B26                     _lcd_putMessage:
  4051                           	opt callstack 24
  4052  006B26                     
  4053                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  4054  006B26  0E00               	movlw	0
  4055  006B28  0100               	movlb	0	; force () banked
  4056  006B2A  6FBB               	movwf	lcd_putMessage@j& (0+255),b
  4057  006B2C  EFA7  F035         	goto	l1919
  4058  006B30                     l1915:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  4062  006B30  0100               	movlb	0	; force () banked
  4063  006B32  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  4064  006B34  0100               	movlb	0	; force () banked
  4065  006B36  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4066  006B38  6ED9               	movwf	fsr2l,c
  4067  006B3A  0100               	movlb	0	; force () banked
  4068  006B3C  0E00               	movlw	0
  4069  006B3E  0100               	movlb	0	; force () banked
  4070  006B40  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4071  006B42  6EDA               	movwf	fsr2h,c
  4072  006B44  50DF               	movf	indf2,w,c
  4073  006B46  ECBA  F035         	call	_lcd_ecritChar
  4074  006B4A  0100               	movlb	0	; force () banked
  4075  006B4C  2BBB               	incf	lcd_putMessage@j& (0+255),f,b
  4076  006B4E                     l1919:
  4077                           
  4078                           ; BSR set to: 0
  4079  006B4E  0100               	movlb	0	; force () banked
  4080  006B50  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  4081  006B52  0100               	movlb	0	; force () banked
  4082  006B54  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4083  006B56  6ED9               	movwf	fsr2l,c
  4084  006B58  0100               	movlb	0	; force () banked
  4085  006B5A  0E00               	movlw	0
  4086  006B5C  0100               	movlb	0	; force () banked
  4087  006B5E  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4088  006B60  6EDA               	movwf	fsr2h,c
  4089  006B62  50DF               	movf	indf2,w,c
  4090  006B64  A4D8               	btfss	status,2,c
  4091  006B66  EFB7  F035         	goto	u881
  4092  006B6A  EFB9  F035         	goto	u880
  4093  006B6E                     u881:
  4094  006B6E  EF98  F035         	goto	l1915
  4095  006B72                     u880:
  4096  006B72                     
  4097                           ; BSR set to: 0
  4098  006B72  0012               	return		;funcret
  4099  006B74                     __end_of_lcd_putMessage:
  4100                           	opt callstack 0
  4101                           
  4102 ;; *************** function _lcd_ecritChar *****************
  4103 ;; Defined at:
  4104 ;;		line 359 in file "Lcd4Lignes.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  car             1    wreg     unsigned char 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  car             1    3[BANK0 ] unsigned char 
  4109 ;;  posRam          1    4[BANK0 ] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4119 ;;      Params:         0       0       0       0       0       0       0
  4120 ;;      Locals:         0       2       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0
  4122 ;;      Totals:         0       2       0       0       0       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    3
  4126 ;; This function calls:
  4127 ;;		_lcd_wrCom
  4128 ;;		_lcd_wrData
  4129 ;; This function is called by:
  4130 ;;		_lcd_putMessage
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text24
  4135  006B74                     __ptext24:
  4136                           	opt callstack 0
  4137  006B74                     _lcd_ecritChar:
  4138                           	opt callstack 24
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;incstack = 0
  4142                           ;lcd_ecritChar@car stored from wreg
  4143  006B74  0100               	movlb	0	; force () banked
  4144  006B76  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  4145  006B78                     
  4146                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  4147  006B78  0100               	movlb	0	; force () banked
  4148  006B7A  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  4149  006B7C  EC1E  F035         	call	_lcd_wrData
  4150  006B80  0100               	movlb	0	; force () banked
  4151  006B82  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  4152                           
  4153                           ;Lcd4Lignes.c: 364: switch(posRam)
  4154  006B84  EFD3  F035         	goto	l1897
  4155  006B88                     l1889:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  4159  006B88  0EC0               	movlw	192
  4160  006B8A  ECCD  F036         	call	_lcd_wrCom
  4161                           
  4162                           ;Lcd4Lignes.c: 368: break;
  4163  006B8E  EFE3  F035         	goto	l278
  4164  006B92                     l1891:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  4168  006B92  0E94               	movlw	148
  4169  006B94  ECCD  F036         	call	_lcd_wrCom
  4170                           
  4171                           ;Lcd4Lignes.c: 371: break;
  4172  006B98  EFE3  F035         	goto	l278
  4173  006B9C                     l1893:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  4177  006B9C  0ED4               	movlw	212
  4178  006B9E  ECCD  F036         	call	_lcd_wrCom
  4179                           
  4180                           ;Lcd4Lignes.c: 374: break;
  4181  006BA2  EFE3  F035         	goto	l278
  4182  006BA6                     l1897:
  4183                           
  4184                           ; BSR set to: 0
  4185  006BA6  0100               	movlb	0	; force () banked
  4186  006BA8  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  4187                           
  4188                           ; Switch size 1, requested type "simple"
  4189                           ; Number of cases is 3, Range of values is 148 to 212
  4190                           ; switch strategies available:
  4191                           ; Name         Instructions Cycles
  4192                           ; simple_byte           10     6 (average)
  4193                           ;	Chosen strategy is simple_byte
  4194  006BAA  0A94               	xorlw	148	; case 148
  4195  006BAC  B4D8               	btfsc	status,2,c
  4196  006BAE  EFC4  F035         	goto	l1889
  4197  006BB2  0A54               	xorlw	84	; case 192
  4198  006BB4  B4D8               	btfsc	status,2,c
  4199  006BB6  EFCE  F035         	goto	l1893
  4200  006BBA  0A14               	xorlw	20	; case 212
  4201  006BBC  B4D8               	btfsc	status,2,c
  4202  006BBE  EFC9  F035         	goto	l1891
  4203  006BC2  EFE3  F035         	goto	l278
  4204  006BC6                     l278:
  4205  006BC6  0012               	return		;funcret
  4206  006BC8                     __end_of_lcd_ecritChar:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _lcd_wrData *****************
  4210 ;; Defined at:
  4211 ;;		line 188 in file "Lcd4Lignes.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  caractere       1    wreg     unsigned char 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  caractere       1    2[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      unsigned char 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4225 ;;      Params:         0       0       0       0       0       0       0
  4226 ;;      Locals:         0       1       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0
  4228 ;;      Totals:         0       1       0       0       0       0       0
  4229 ;;Total ram usage:        1 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    2
  4232 ;; This function calls:
  4233 ;;		_lcd_busy
  4234 ;;		_lcd_ecrireDonnees
  4235 ;;		_lcd_strobeEnableBit
  4236 ;; This function is called by:
  4237 ;;		_lcd_ecritChar
  4238 ;;		_lcd_initCGRam
  4239 ;;		_lcd_effaceChar
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text25
  4244  006A3C                     __ptext25:
  4245                           	opt callstack 0
  4246  006A3C                     _lcd_wrData:
  4247                           	opt callstack 24
  4248                           
  4249                           ;incstack = 0
  4250                           ;lcd_wrData@caractere stored from wreg
  4251  006A3C  0100               	movlb	0	; force () banked
  4252  006A3E  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  4253  006A40                     
  4254                           ;Lcd4Lignes.c: 190: lcd_busy();
  4255  006A40  EC72  F035         	call	_lcd_busy	;wreg free
  4256  006A44                     
  4257                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  4258  006A44  0E00               	movlw	0
  4259  006A46  6E95               	movwf	149,c	;volatile
  4260  006A48                     
  4261                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  4262  006A48  8080               	bsf	128,0,c	;volatile
  4263  006A4A                     
  4264                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  4265  006A4A  9280               	bcf	128,1,c	;volatile
  4266  006A4C                     
  4267                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  4268  006A4C  0100               	movlb	0	; force () banked
  4269  006A4E  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  4270  006A50  0B0F               	andlw	15
  4271  006A52  ECD2  F034         	call	_lcd_ecrireDonnees
  4272  006A56                     
  4273                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4274  006A56  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  4275  006A5A                     
  4276                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4277  006A5A  0100               	movlb	0	; force () banked
  4278  006A5C  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  4279  006A5E  ECD2  F034         	call	_lcd_ecrireDonnees
  4280  006A62                     
  4281                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4282  006A62  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  4283  006A66                     
  4284                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4285  006A66  0E0F               	movlw	15
  4286  006A68  6E95               	movwf	149,c	;volatile
  4287  006A6A                     
  4288                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4289                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4290  006A6A  EC72  F035         	call	_lcd_busy	;wreg free
  4291  006A6E  0012               	return		;funcret
  4292  006A70                     __end_of_lcd_wrData:
  4293                           	opt callstack 0
  4294                           
  4295 ;; *************** function _lcd_gotoXY *****************
  4296 ;; Defined at:
  4297 ;;		line 314 in file "Lcd4Lignes.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  x               1    wreg     unsigned char 
  4300 ;;  y               1    3[BANK0 ] unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  x               1    4[BANK0 ] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4312 ;;      Params:         0       1       0       0       0       0       0
  4313 ;;      Locals:         0       1       0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0
  4315 ;;      Totals:         0       2       0       0       0       0       0
  4316 ;;Total ram usage:        2 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    3
  4319 ;; This function calls:
  4320 ;;		_lcd_wrCom
  4321 ;; This function is called by:
  4322 ;;		_deplace
  4323 ;;		_afficheTabVue
  4324 ;;		_afficheTabMines
  4325 ;;		_lcd_effaceLigne
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text26
  4330  006E72                     __ptext26:
  4331                           	opt callstack 0
  4332  006E72                     _lcd_gotoXY:
  4333                           	opt callstack 25
  4334                           
  4335                           ;incstack = 0
  4336                           ;lcd_gotoXY@x stored from wreg
  4337  006E72  0100               	movlb	0	; force () banked
  4338  006E74  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  4339  006E76                     
  4340                           ;Lcd4Lignes.c: 316: switch(y)
  4341  006E76  EF5D  F037         	goto	l1911
  4342  006E7A                     l1901:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4346  006E7A  0100               	movlb	0	; force () banked
  4347  006E7C  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4348  006E7E  0F7F               	addlw	127
  4349  006E80  0980               	iorlw	128
  4350  006E82  ECCD  F036         	call	_lcd_wrCom
  4351                           
  4352                           ;Lcd4Lignes.c: 320: break;
  4353  006E86  EF71  F037         	goto	l267
  4354  006E8A                     l1903:
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4358  006E8A  0100               	movlb	0	; force () banked
  4359  006E8C  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4360  006E8E  0FBF               	addlw	191
  4361  006E90  0980               	iorlw	128
  4362  006E92  ECCD  F036         	call	_lcd_wrCom
  4363                           
  4364                           ;Lcd4Lignes.c: 323: break;
  4365  006E96  EF71  F037         	goto	l267
  4366  006E9A                     l1905:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4370  006E9A  0100               	movlb	0	; force () banked
  4371  006E9C  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4372  006E9E  0F93               	addlw	147
  4373  006EA0  0980               	iorlw	128
  4374  006EA2  ECCD  F036         	call	_lcd_wrCom
  4375                           
  4376                           ;Lcd4Lignes.c: 326: break;
  4377  006EA6  EF71  F037         	goto	l267
  4378  006EAA                     l1907:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4382  006EAA  0100               	movlb	0	; force () banked
  4383  006EAC  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  4384  006EAE  0FD3               	addlw	211
  4385  006EB0  0980               	iorlw	128
  4386  006EB2  ECCD  F036         	call	_lcd_wrCom
  4387                           
  4388                           ;Lcd4Lignes.c: 329: break;
  4389  006EB6  EF71  F037         	goto	l267
  4390  006EBA                     l1911:
  4391  006EBA  0100               	movlb	0	; force () banked
  4392  006EBC  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  4393                           
  4394                           ; Switch size 1, requested type "simple"
  4395                           ; Number of cases is 4, Range of values is 1 to 4
  4396                           ; switch strategies available:
  4397                           ; Name         Instructions Cycles
  4398                           ; simple_byte           13     7 (average)
  4399                           ;	Chosen strategy is simple_byte
  4400  006EBE  0A01               	xorlw	1	; case 1
  4401  006EC0  B4D8               	btfsc	status,2,c
  4402  006EC2  EF3D  F037         	goto	l1901
  4403  006EC6  0A03               	xorlw	3	; case 2
  4404  006EC8  B4D8               	btfsc	status,2,c
  4405  006ECA  EF45  F037         	goto	l1903
  4406  006ECE  0A01               	xorlw	1	; case 3
  4407  006ED0  B4D8               	btfsc	status,2,c
  4408  006ED2  EF4D  F037         	goto	l1905
  4409  006ED6  0A07               	xorlw	7	; case 4
  4410  006ED8  B4D8               	btfsc	status,2,c
  4411  006EDA  EF55  F037         	goto	l1907
  4412  006EDE  EF71  F037         	goto	l267
  4413  006EE2                     l267:
  4414  006EE2  0012               	return		;funcret
  4415  006EE4                     __end_of_lcd_gotoXY:
  4416                           	opt callstack 0
  4417                           
  4418 ;; *************** function _lcd_wrCom *****************
  4419 ;; Defined at:
  4420 ;;		line 156 in file "Lcd4Lignes.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  commande        1    wreg     unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  commande        1    2[BANK0 ] unsigned char 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      unsigned char 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4434 ;;      Params:         0       0       0       0       0       0       0
  4435 ;;      Locals:         0       1       0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0
  4437 ;;      Totals:         0       1       0       0       0       0       0
  4438 ;;Total ram usage:        1 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    2
  4441 ;; This function calls:
  4442 ;;		_lcd_busy
  4443 ;;		_lcd_ecrireDonnees
  4444 ;;		_lcd_strobeEnableBit
  4445 ;; This function is called by:
  4446 ;;		_lcd_init
  4447 ;;		_lcd_curseurHome
  4448 ;;		_lcd_gotoXY
  4449 ;;		_lcd_ecritChar
  4450 ;;		_lcd_initCGRam
  4451 ;;		_lcd_effaceAffichage
  4452 ;;		_lcd_cacheCurseur
  4453 ;;		_lcd_montreCurseur
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text27
  4458  006D9A                     __ptext27:
  4459                           	opt callstack 0
  4460  006D9A                     _lcd_wrCom:
  4461                           	opt callstack 24
  4462                           
  4463                           ;incstack = 0
  4464                           ;lcd_wrCom@commande stored from wreg
  4465  006D9A  0100               	movlb	0	; force () banked
  4466  006D9C  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  4467  006D9E                     
  4468                           ;Lcd4Lignes.c: 158: lcd_busy();
  4469  006D9E  EC72  F035         	call	_lcd_busy	;wreg free
  4470  006DA2                     
  4471                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4472  006DA2  0E00               	movlw	0
  4473  006DA4  6E95               	movwf	149,c	;volatile
  4474  006DA6                     
  4475                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4476  006DA6  9080               	bcf	128,0,c	;volatile
  4477  006DA8                     
  4478                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4479  006DA8  9280               	bcf	128,1,c	;volatile
  4480  006DAA                     
  4481                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4482  006DAA  0100               	movlb	0	; force () banked
  4483  006DAC  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  4484  006DAE  0B0F               	andlw	15
  4485  006DB0  ECD2  F034         	call	_lcd_ecrireDonnees
  4486  006DB4                     
  4487                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4488  006DB4  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  4489  006DB8                     
  4490                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4491  006DB8  0100               	movlb	0	; force () banked
  4492  006DBA  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  4493  006DBC  ECD2  F034         	call	_lcd_ecrireDonnees
  4494  006DC0                     
  4495                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4496  006DC0  ECC2  F034         	call	_lcd_strobeEnableBit	;wreg free
  4497  006DC4                     
  4498                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4499  006DC4  0E03               	movlw	3
  4500  006DC6                     u1697:
  4501  006DC6  2EE8               	decfsz	wreg,f,c
  4502  006DC8  D7FE               	bra	u1697
  4503  006DCA  F000               	nop	
  4504  006DCC                     
  4505                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4506  006DCC  0100               	movlb	0	; force () banked
  4507  006DCE  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  4508  006DD0  B4D8               	btfsc	status,2,c
  4509  006DD2  EFED  F036         	goto	u861
  4510  006DD6  EFEF  F036         	goto	u860
  4511  006DDA                     u861:
  4512  006DDA  EFF9  F036         	goto	l1849
  4513  006DDE                     u860:
  4514  006DDE                     
  4515                           ; BSR set to: 0
  4516  006DDE  0E02               	movlw	2
  4517  006DE0  0100               	movlb	0	; force () banked
  4518  006DE2  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4519  006DE4  A4D8               	btfss	status,2,c
  4520  006DE6  EFF7  F036         	goto	u871
  4521  006DEA  EFF9  F036         	goto	u870
  4522  006DEE                     u871:
  4523  006DEE  EFFE  F036         	goto	l1851
  4524  006DF2                     u870:
  4525  006DF2                     l1849:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4529  006DF2  0EA6               	movlw	166
  4530  006DF4                     u1707:
  4531  006DF4  2EE8               	decfsz	wreg,f,c
  4532  006DF6  D7FE               	bra	u1707
  4533  006DF8  F000 F000          	nop2	
  4534  006DFC                     l1851:
  4535                           
  4536                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4537  006DFC  0E0F               	movlw	15
  4538  006DFE  6E95               	movwf	149,c	;volatile
  4539  006E00                     
  4540                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4541  006E00  EC72  F035         	call	_lcd_busy	;wreg free
  4542  006E04  0012               	return		;funcret
  4543  006E06                     __end_of_lcd_wrCom:
  4544                           	opt callstack 0
  4545                           
  4546 ;; *************** function _lcd_strobeEnableBit *****************
  4547 ;; Defined at:
  4548 ;;		line 431 in file "Lcd4Lignes.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		None
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4562 ;;      Params:         0       0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0
  4565 ;;      Totals:         0       0       0       0       0       0       0
  4566 ;;Total ram usage:        0 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_lcd_wrCom
  4572 ;;		_lcd_wrData
  4573 ;;		_lcd_resetSequence
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text28
  4578  006984                     __ptext28:
  4579                           	opt callstack 0
  4580  006984                     _lcd_strobeEnableBit:
  4581                           	opt callstack 25
  4582  006984                     
  4583                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4584  006984  8480               	bsf	128,2,c	;volatile
  4585                           
  4586                           ;Lcd4Lignes.c: 434: __nop();
  4587  006986  F000               	nop	
  4588                           
  4589                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4590  006988  9480               	bcf	128,2,c	;volatile
  4591  00698A  0012               	return		;funcret
  4592  00698C                     __end_of_lcd_strobeEnableBit:
  4593                           	opt callstack 0
  4594                           
  4595 ;; *************** function _lcd_ecrireDonnees *****************
  4596 ;; Defined at:
  4597 ;;		line 107 in file "Lcd4Lignes.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  donnee          1    wreg     unsigned char 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  donnee          1    1[BANK0 ] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4611 ;;      Params:         0       0       0       0       0       0       0
  4612 ;;      Locals:         0       1       0       0       0       0       0
  4613 ;;      Temps:          0       1       0       0       0       0       0
  4614 ;;      Totals:         0       2       0       0       0       0       0
  4615 ;;Total ram usage:        2 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_lcd_wrCom
  4621 ;;		_lcd_wrData
  4622 ;;		_lcd_resetSequence
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text29
  4627  0069A4                     __ptext29:
  4628                           	opt callstack 0
  4629  0069A4                     _lcd_ecrireDonnees:
  4630                           	opt callstack 25
  4631                           
  4632                           ;incstack = 0
  4633                           ;lcd_ecrireDonnees@donnee stored from wreg
  4634  0069A4  0100               	movlb	0	; force () banked
  4635  0069A6  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4636  0069A8                     
  4637                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4638  0069A8  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4639  0069AC  0EF0               	movlw	240
  4640  0069AE  0100               	movlb	0	; force () banked
  4641  0069B0  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4642  0069B2  0100               	movlb	0	; force () banked
  4643  0069B4  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4644  0069B6  0B0F               	andlw	15
  4645  0069B8  0100               	movlb	0	; force () banked
  4646  0069BA  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4647  0069BC  6E83               	movwf	131,c	;volatile
  4648  0069BE                     
  4649                           ; BSR set to: 0
  4650  0069BE  0012               	return		;funcret
  4651  0069C0                     __end_of_lcd_ecrireDonnees:
  4652                           	opt callstack 0
  4653                           
  4654 ;; *************** function _lcd_busy *****************
  4655 ;; Defined at:
  4656 ;;		line 124 in file "Lcd4Lignes.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  adresse         1    1[BANK0 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4670 ;;      Params:         0       0       0       0       0       0       0
  4671 ;;      Locals:         0       1       0       0       0       0       0
  4672 ;;      Temps:          0       1       0       0       0       0       0
  4673 ;;      Totals:         0       2       0       0       0       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    1
  4677 ;; This function calls:
  4678 ;;		_lcd_lireDonnees
  4679 ;; This function is called by:
  4680 ;;		_lcd_wrCom
  4681 ;;		_lcd_wrData
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text30
  4686  006AE4                     __ptext30:
  4687                           	opt callstack 0
  4688  006AE4                     _lcd_busy:
  4689                           	opt callstack 24
  4690  006AE4                     
  4691                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4692  006AE4  9080               	bcf	128,0,c	;volatile
  4693                           
  4694                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4695  006AE6  8280               	bsf	128,1,c	;volatile
  4696  006AE8                     l229:
  4697                           
  4698                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4699  006AE8  8480               	bsf	128,2,c	;volatile
  4700                           
  4701                           ;Lcd4Lignes.c: 134: __nop();
  4702  006AEA  F000               	nop	
  4703  006AEC                     
  4704                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4705  006AEC  ECBF  F034         	call	_lcd_lireDonnees	;wreg free
  4706  006AF0  0100               	movlb	0	; force () banked
  4707  006AF2  6FB4               	movwf	??_lcd_busy& (0+255),b
  4708  006AF4  39B4               	swapf	??_lcd_busy& (0+255),w,b
  4709  006AF6  0BF0               	andlw	240
  4710  006AF8  0100               	movlb	0	; force () banked
  4711  006AFA  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  4712  006AFC                     
  4713                           ; BSR set to: 0
  4714                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4715  006AFC  9480               	bcf	128,2,c	;volatile
  4716  006AFE                     
  4717                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4718  006AFE  8480               	bsf	128,2,c	;volatile
  4719  006B00                     
  4720                           ;Lcd4Lignes.c: 139: __nop();
  4721  006B00  F000               	nop	
  4722                           
  4723                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4724  006B02  ECBF  F034         	call	_lcd_lireDonnees	;wreg free
  4725  006B06  0100               	movlb	0	; force () banked
  4726  006B08  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  4727  006B0A                     
  4728                           ; BSR set to: 0
  4729                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4730  006B0A  9480               	bcf	128,2,c	;volatile
  4731  006B0C                     
  4732                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4733  006B0C  0100               	movlb	0	; force () banked
  4734  006B0E  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  4735  006B10  EF8C  F035         	goto	u851
  4736  006B14  EF8E  F035         	goto	u850
  4737  006B18                     u851:
  4738  006B18  EF74  F035         	goto	l229
  4739  006B1C                     u850:
  4740  006B1C                     
  4741                           ; BSR set to: 0
  4742                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4743  006B1C  9280               	bcf	128,1,c	;volatile
  4744  006B1E                     
  4745                           ; BSR set to: 0
  4746                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4747  006B1E  0100               	movlb	0	; force () banked
  4748  006B20  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  4749  006B22  0B7F               	andlw	127
  4750  006B24                     
  4751                           ; BSR set to: 0
  4752  006B24  0012               	return		;funcret
  4753  006B26                     __end_of_lcd_busy:
  4754                           	opt callstack 0
  4755                           
  4756 ;; *************** function _lcd_lireDonnees *****************
  4757 ;; Defined at:
  4758 ;;		line 93 in file "Lcd4Lignes.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      unsigned char 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4772 ;;      Params:         0       0       0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_lcd_busy
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text31
  4786  00697E                     __ptext31:
  4787                           	opt callstack 0
  4788  00697E                     _lcd_lireDonnees:
  4789                           	opt callstack 24
  4790  00697E                     
  4791                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4792  00697E  5083               	movf	131,w,c	;volatile
  4793  006980  0B0F               	andlw	15
  4794  006982  0012               	return		;funcret
  4795  006984                     __end_of_lcd_lireDonnees:
  4796                           	opt callstack 0
  4797  0000                     
  4798                           	psect	param0
  4799  0000                     tosu	equ	0xFFF
  4800                           tosh	equ	0xFFE
  4801                           tosl	equ	0xFFD
  4802                           stkptr	equ	0xFFC
  4803                           pclatu	equ	0xFFB
  4804                           pclath	equ	0xFFA
  4805                           pcl	equ	0xFF9
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           indf0	equ	0xFEF
  4813                           postinc0	equ	0xFEE
  4814                           postdec0	equ	0xFED
  4815                           preinc0	equ	0xFEC
  4816                           plusw0	equ	0xFEB
  4817                           fsr0h	equ	0xFEA
  4818                           fsr0l	equ	0xFE9
  4819                           wreg	equ	0xFE8
  4820                           indf1	equ	0xFE7
  4821                           postinc1	equ	0xFE6
  4822                           postdec1	equ	0xFE5
  4823                           preinc1	equ	0xFE4
  4824                           plusw1	equ	0xFE3
  4825                           fsr1h	equ	0xFE2
  4826                           fsr1l	equ	0xFE1
  4827                           bsr	equ	0xFE0
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           preinc2	equ	0xFDC
  4832                           plusw2	equ	0xFDB
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     36     124
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMine(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    main@nbMine	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posY	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posX	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _metOuEnleveDrapeau->_afficheTabVue
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->_afficheTabVue
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   13630
                                             29 BANK0      7     7      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                           _lcd_init
                 _metOuEnleveDrapeau
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1219
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1993
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4    1681
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1211
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _metOuEnleveDrapeau                                   7     6      1    1543
                                              9 BANK0      7     6      1
                      _afficheTabVue
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _gagne                                                9     7      2     324
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              7     3      4    1299
                                              5 BANK0      7     3      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                              10     9      1    3446
                                             18 BANK0     10     9      1
                      _afficheTabVue
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                   9     8      1    1815
                                              9 BANK0      9     8      1
                      _afficheTabVue
 ---------------------------------------------------------------------------------
 (2) _afficheTabVue                                        1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (3) _lcd_putMessage                                       3     1      2     555
                                              5 BANK0      3     1      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (4) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (5) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (5) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (6) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (7) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _afficheTabVue
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         _lcd_ecritChar
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
     _enleveTuilesAutour
       _afficheTabVue
         _lcd_gotoXY
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
         _lcd_putMessage
           _lcd_ecritChar
             _lcd_wrCom
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
             _lcd_wrData
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
   _initTabVue
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metOuEnleveDrapeau
     _afficheTabVue
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_putMessage
         _lcd_ecritChar
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
           _lcd_wrData
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     24      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      14        0.0%
DATA                 0      0     110      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 14:46:32 2019

 __end_of_calculToucheCombien 7D40                            l94 7030                            l78 7186  
                          l87 6AA2          ??_enleveTuilesAutour 00BE           ___wmul@multiplicand 00B6  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l201 7430  
                         l105 759A                           l130 7D3E                           l114 76F8  
                         l123 7C7E                           l300 698A                           l204 743E  
                         l230 6B1C                           l223 6982                           l231 6B24  
                         l143 7872                           l240 6A6E                           l226 69BE  
                         l147 79FA                           l243 6D98                           l252 6992  
                         l229 6AE8                           l237 6E04                           l157 7A48  
                         l190 6CD0                           l182 6A2A                           l174 729C  
                         l246 69E6                           l350 6A0E                           l167 7B9C  
                         l185 6A3A                           l361 6E60                           l178 7308  
                         l362 6E70                           l267 6EE2                           l195 6C76  
                         l284 6B72                           l278 6BC6                           l297 6F84  
                         l594 70E2                  __CFG_CPB$OFF 000000                           u160 6A38  
                         u161 6A34                  __CFG_CPD$OFF 000000                           u900 6CD0  
                         u901 6CCC                           u910 6E26                           u911 6E22  
                         u920 6E60                           u921 6E5C                           u850 6B1C  
                         u930 7BDC                           u851 6B18                           u931 7BD8  
                         u860 6DDE                           u940 7BF6                           u861 6DDA  
                         u941 7BF2                           u870 6DF2                           u950 7C7A  
                         u871 6DEE                           u951 7C76                           u880 6B72  
                         u960 7CBE                           u881 6B6E                           u961 7CBA  
                         u890 6C90                           u970 7CDC                           u891 6C8C  
                         u971 7CD8                           u980 7D1C                           u981 7D18  
                         u990 7D3A                           u991 7D36                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                           prod 000FF3                   lcd_gotoXY@x 00B8  
                         wreg 000FE8                   lcd_gotoXY@y 00B7    __end_of_metOuEnleveDrapeau 7440  
                __CFG_LVP$OFF 000000                          l1014 69A2                          l2001 7A3A  
                        l1017 6C1C                          l2011 7B28                          l2003 7A40  
                        l2021 7B82                          l2005 7A50                          l2013 7B2C  
                        l2101 7082                          l2023 7B98                          l2015 7B4A  
                        l2007 7A8E                          l2031 6D4A                          l2111 70BC  
                        l2103 708A                          l2017 7B60                          l2009 7ACC  
                        l2121 6A70                          l2041 6D64                          l2033 6D4C  
                        l2025 6D30                          l2201 759C                          l2105 7098  
                        l2113 70C2                          l2019 7B64                          l2131 6A92  
                        l2123 6A78                          l2051 6D82                          l2043 6D68  
                        l2035 6D52                          l2027 6D34                          l2203 75A2  
                        l2115 70D2                          l2107 70AE                          l2301 72A0  
                        l2133 6A94                          l2125 6A82                          l2061 6EEA  
                        l2053 6D88                          l2045 6D70                          l2037 6D56  
                        l2029 6D48                          l2141 69C0                          l2221 76CC  
                        l2213 75D4                          l2117 70DA                          l2109 70B6  
                        l1351 6A38                          l2231 770E                          l2311 7300  
                        l2303 72B2                          l2151 6FA2                          l2135 6A98  
                        l2127 6A84                          l2063 6EF0                          l2055 6D8C  
                        l2047 6D76                          l2039 6D5E                          l2143 69E2  
                        l2223 76D0                          l2215 7612                          l2207 75B8  
                        l2321 6C1E                          l1345 6A14                          l2241 7774  
                        l2233 7720                          l2305 72B6                          l2161 6FF2  
                        l2153 6FA8                          l2145 6F86                          l2137 6A9A  
                        l2129 6A90                          l2081 6F6E                          l2073 6F22  
                        l2057 6D94                          l2049 6D7A                          l2217 765E  
                        l2225 76E2                          l2209 75BE                          l2331 6C60  
                        l2323 6C24                          l1347 6A28                          l2251 77F6  
                        l2243 77A6                          l2235 773A                          l2307 72C8  
                        l2163 7004                          l2147 6F8C                          l2139 6A9E  
                        l2075 6F54                          l2083 6F80                          l2067 6F06  
                        l2059 6EE4                          l2227 76E6                          l2219 769C  
                        l2091 704E                          l2171 7446                          l2333 6C64  
                        l2261 7878                          l1349 6A28                          l2253 7806  
                        l2237 7752                          l2245 77B2                          l2229 76FA  
                        l2309 72F2                          l2317 7306                          l2165 701A  
                        l2157 6FBE                          l2077 6F58                          l2069 6F0C  
                        l2341 73EC                          l2093 7052                          l2085 7032  
                        l2181 7478                          l2327 6C3A                          l2271 791A  
                        l2263 78C6                          l2255 7818                          l2247 77C4  
                        l2239 7762                          l2167 701E                          l2159 6FEE  
                        l2079 6F6A                          l2343 742C                          l2335 730E  
                        l2095 7060                          l2087 7038                          l2191 74D8  
                        l2183 74A8                          l2175 745C                          l1801 6AEC  
                        l2329 6C48                          l2273 792A                          l2257 784A  
                        l2249 77DE                          l2337 735A                          l2097 7068  
                        l2089 7046                          l2193 7508                          l2185 74AC  
                        l2177 7462                          l2169 7440                          l2361 710E  
                        l2353 70E4                          l1811 6B0A                          l1803 6AFC  
                        l2275 7978                          l2259 7856                          l2291 7208  
                        l2283 71E0                          l2339 739E                          l2099 707A  
                        l2195 7546                          l2187 74BE                          l2371 7148  
                        l2363 711A                          l2355 7102                          l1813 6B0C  
                        l1805 6AFE                          l1821 6984                          l1901 6E7A  
                        l2277 79F4                          l2269 78CC                          l2285 71EC  
                        l2197 7576                          l2189 74C2                          l2381 71BA  
                        l2373 7164                          l2365 711E                          l2357 7106  
                        l1815 6B0C                          l1807 6AFE                          l1831 6DA8  
                        l1823 6D9E                          l1903 6E8A                          l1911 6EBA  
                        l2279 79F8                          l2295 721E                          l2199 757E  
                        l2383 71C6                          l2375 7182                          l2367 7122  
                        l2359 710A                          l1817 6B1E                          l1809 6B00  
                        l1841 6DC0                          l1833 6DAA                          l1825 6DA2  
                        l1905 6E9A                          l1913 6B26                          l1921 6C78  
                        l2297 725A                          l2289 7202                          l2377 7194  
                        l2369 713A                          l1851 6DFC                          l1843 6DC4  
                        l1835 6DB4                          l1827 6DA6                          l1907 6EAA  
                        l1915 6B30                          l1931 6CBA                          l1923 6C7E  
                        l2299 7298                          l2379 71AC                          l1853 6E00  
                        l1845 6DCC                          l1837 6DB8                          l1829 6DA6  
                        l1861 6A44                          l1917 6B4A                          l1933 6CBE  
                        l1855 6E00                          l1847 6DDE                          l1839 6DB8  
                        l1871 6A56                          l1863 6A48                          l1919 6B4E  
                        l1927 6C94                          l1935 698C                          l1951 6E40  
                        l1943 6E06                          l1793 697E                          l1849 6DF2  
                        l1881 6A66                          l1873 6A5A                          l1865 6A48  
                        l1929 6CA2                          l1953 6994                          l1937 69E8  
                        l1945 6E18                          l1883 6A6A                          l1875 6A5A  
                        l1867 6A4A                          l1859 6A40                          l1891 6B92  
                        l1939 6A06                          l1971 7BE6                          l1963 7B9E  
                        l1947 6E26                          l1955 6BC8                          l1797 69A8  
                        l1877 6A62                          l1869 6A4C                          l1893 6B9C  
                        l1981 7C84                          l1973 7BF6                          l1965 7BC6  
                        l1949 6E36                          l1957 6BFE                          l1799 6AE4  
                        l1879 6A66                          l1887 6B78                          l1991 7D3A  
                        l1983 7CBE                          l1975 7C04                          l1967 7BCC  
                        l1959 6C10                          l1889 6B88                          l1897 6BA6  
                        l1985 7CDC                          l1977 7C24                          l1969 7BDC  
                        l1899 6E76                          l1995 7A00                          l1979 7C7A  
                        l1987 7CE2                          l1997 7A24                          l1989 7D1C  
                        l1999 7A2A                          u1000 7A24                          u1001 7A20  
                        u1010 7A3A                          u1011 7A36                          u1020 7A8E  
                        u1100 6F6A                          u1021 7A8A                          u1101 6F66  
                        u1030 7ACC                          u1110 6F80                          u1031 7AC8  
                        u1111 6F7C                          u1040 7B4A                          u1200 7004  
                        u1120 7046                          u1041 7B46                          u1201 7000  
                        u1121 7042                          u1050 7B60                          u1210 7030  
                        u1130 7060                          u1051 7B5C                          u1211 702C  
                        u1131 705C                          u1060 7B82                          u1300 7612  
                        u1140 707A                          u1220 7458                          u1061 7B7E  
                        u1301 760E                          u1141 7076                          u1221 7454  
                        u1070 7B98                          u1310 769C                          u1150 7098  
                        u1230 7474                          u1071 7B94                          u1311 7698  
                        u1151 7094                          u1231 7470                          u1400 7818  
                        u1080 6F02                          u1320 76E2                          u1160 70AE  
                        u1240 74BE                          u1401 7814                          u1081 6EFE  
                        u1321 76DE                          u1161 70AA                          u1241 74BA  
                        u1410 784A                          u1090 6F1E                          u1330 76F8  
                        u1170 70D2                          u1250 74D4                          u1411 7846  
                        u1091 6F1A                          u1331 76F4                          u1171 70CE  
                        u1251 74D0                          u1420 78C6                          u1340 7720  
                        u1500 72C8                          u1180 6F9E                          u1260 7546  
                        u1421 78C2                          u1341 771C                          u1501 72C4  
                        u1181 6F9A                          u1261 7542                          u1430 791A  
                        u1350 7752                          u1510 72F2                          u1190 6FBA  
                        u1270 759A                          u1431 7916                          u1351 774E  
                        u1511 72EE                          u1191 6FB6                          u1271 7596  
                        u1520 6C36                          u1440 7978                          u1360 7774  
                        u1280 75B4                          u1600 7182                          u1521 6C32  
                        u1441 7974                          u1361 7770                          u1281 75B0  
                        u1601 717E                          u1530 6C76                          u1370 77A6  
                        u1450 71FE                          u1290 75D0                          u1610 7194  
                        u1531 6C72                          u1371 77A2                          u1451 71FA  
                        u1291 75CC                          u1611 7190                          u1380 77C4  
                        u1460 721A                          u1540 735A                          u1620 71BA  
                        u1381 77C0                          u1461 7216                          u1541 7356  
                        u1621 71B6                          u1390 77F6                          u1470 725A  
                        u1550 73EC                          u1391 77F2                          u1471 7256  
                        u1551 73E8                          u1480 7298                          u1560 743E  
                        u1481 7294                          u1561 743A                          u1490 72B2  
                        u1707 6DF4                          u1491 72AE                          u1580 7148  
                        u1637 71CE                          u1581 7144                          u1590 7164  
                        u1647 6D3C                          u1591 7160                          u1657 6D58  
                        u1667 6D6A                          u1677 6D7C                          u1687 6D8E  
                        u1697 6DC6                          _RCIF 007CF5                          _TMR1 000FCE  
            ??_initialisation 00B6                          _main 70E4                          _rand 6BC8  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ?_lcd_putMessage 00B9  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             ??_lcd_ecritChar 00B7                         ?_main 00B4                         ?_rand 00C0  
             __end_of___awmod 70E4                         _ANSEL 000F7E         gagne@nbTuileEtDrapeau 00BA  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 7874  
         ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7  
                       _gagne 71E0                         _randx 00D8                         _srand 6994  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
           ??_afficheTabMines 00BC                __CFG_PBADEN$ON 000000              _metToucheCombien 759C  
             __initialization 6CD2                  __end_of_main 71E0                  __end_of_rand 6C1E  
         enleveTuilesAutour@i 00C5           enleveTuilesAutour@j 00C4           enleveTuilesAutour@x 00C3  
         enleveTuilesAutour@y 00BD    calculToucheCombien@nbMines 00C1          lcd_putMessage@chaine 00B9  
  calculToucheCombien@colonne 00BC                        ??_main 00D1                        ??_rand 00C2  
               __activetblptr 000003                        ?_gagne 00B4                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        ?_srand 00B4                        _ANSELH 000F7F  
                 initTabVue@i 00B7                   initTabVue@j 00B6                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 00C8                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA                getAnalog@canal 00B5  
            __end_of_lcd_busy 6B26              __end_of_lcd_init 69E8                        ___lmul 6E06  
                      ___wmul 69E8                __CFG_STVREN$ON 000000                     ??___awmod 00C6  
                      _demine 7874                        gagne@i 00BB                        gagne@j 00BC  
                      clear_0 6D18                        clear_1 6D24               ___awmod@divisor 00C4  
                   ??_deplace 00BD               ___awmod@counter 00C6                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        srand@x 00B4  
      __size_of_afficheTabVue 005A             _lcd_resetSequence 6D30                    __accesstop 0060  
     __end_of__initialization 6D2A           _lcd_strobeEnableBit 6984            ?_lcd_resetSequence 00B4  
               ___rparam_used 000000                deplace@analogX 00BE                deplace@analogY 00BF  
                __pidataBANK0 697A                  __pidataBANK1 6AA4           ??_lcd_resetSequence 00B6  
               __end_of_gagne 730A                 __end_of_srand 69A4          ?_lcd_strobeEnableBit 00B4  
          __size_of_getAnalog 002C            __size_of_lcd_wrCom 006C                       ??_gagne 00B6  
   __end_of_lcd_resetSequence 6D9A                       ??_srand 00B6      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 69A4                    __pbssBANK0 0060                    __pbssBANK1 0100  
            ??_lcd_putMessage 00BB            ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008  
          _metOuEnleveDrapeau 730A           ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4  
                     ?___wmul 00B4                       ?_demine 00C6           ?_metOuEnleveDrapeau 00BD  
               _afficheTabVue 6C78                ___lmul@product 00BC   __size_of_enleveTuilesAutour 01A2  
       ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 01A2      __end_of_metToucheCombien 76FA  
                  _lcd_gotoXY 6E72                    _lcd_wrData 6A3C               _afficheTabMines 6C1E  
   __end_of_lcd_ecrireDonnees 69C0          ??_metOuEnleveDrapeau 00BE                     ?_lcd_busy 00B4  
                   ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060  
           __end_of_getAnalog 6A3C          __size_of_rempliMines 015C                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 6F86             __end_of_lcd_wrCom 6E06  
              ?_afficheTabVue 00B4               __size_of___lmul 006C                       ___awmod 7032  
             __size_of___wmul 0028               __size_of_demine 0188                       __pcinit 6CD2  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 76FA  
                     __ptext0 70E4                       __ptext1 7440                       __ptext2 6BC8  
                     __ptext3 6E06                       __ptext4 7032                       __ptext5 759C  
                     __ptext6 7B9E                       __ptext7 69E8                       __ptext8 730A  
                     __ptext9 69C0         __end_of_lcd_ecritChar 6BC8               lcd_busy@adresse 00B5  
                   _T1CONbits 000FCD              ___awmod@dividend 00C2                       demine@x 00CF  
                     demine@y 00C6              lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4  
                  ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A          end_of_initialization 6D2A  
       __end_of_lcd_initCGRam 6F86             ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0034             ??_lcd_curseurHome 00B7  
         lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80                     _PORTBbits 000F81  
     __end_of_afficheTabMines 6C78                   ?_lcd_gotoXY 00B7                     _TRISCbits 000F94  
                 ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C                    main@nbMine 00D2  
                   _TXSTAbits 000FAC               ??_afficheTabVue 00BC                   ?_initTabVue 00B4  
              __end_of___lmul 6E72                __end_of___wmul 6A10                   _BAUDCONbits 000FB8  
              __end_of_demine 79FC           start_initialization 6CD2         enleveTuilesAutour@mem 00C2  
         _calculToucheCombien 7B9E           metOuEnleveDrapeau@x 00C3           metOuEnleveDrapeau@y 00BD  
         __size_of_lcd_gotoXY 0072                      ??___lmul 00BC                      ??___wmul 00B8  
               rempliMines@nb 00C8           __size_of_lcd_wrData 0034                      ??_demine 00C7  
                 __pdataBANK0 00D8                   __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 00BA              ?_afficheTabMines 00B4                 __pcstackBANK0 00B4  
           ?_metToucheCombien 00B4              afficheTabMines@i 00BC           __size_of_initTabVue 00AC  
          ??_metToucheCombien 00C6             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 6A10   __end_of_lcd_strobeEnableBit 698C  
              _initialisation 6A70    __end_of_enleveTuilesAutour 7B9E                      ?___awmod 00C2  
                    ?_deplace 00B9                     _lcd_wrCom 6D9A         ??_calculToucheCombien 00BE  
              __size_of_gagne 012A               _lcd_lireDonnees 697E           lcd_wrData@caractere 00B6  
 __size_of_metOuEnleveDrapeau 0136                __size_of_srand 0010                 ??_rempliMines 00CA  
             _lcd_curseurHome 698C                ___wmul@product 00B8        __end_of_initialisation 6AA4  
                  ?_getAnalog 00B4              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 004E  
                  ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 6CE6  
                   copy_data1 6D06                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 759C  
                ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CF  
                rempliMines@j 00D0                  rempliMines@x 00CD                  rempliMines@y 00CE  
          __end_of_lcd_gotoXY 6EE4            __end_of_lcd_wrData 6A70              __size_of___awmod 00B2  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00BB              __size_of_deplace 017A  
     __end_of_lcd_lireDonnees 6984                      _matCGRAM 0154       __end_of_lcd_curseurHome 6994  
                    __ptext10 6D30                      __ptext11 6EE4                      __ptext20 79FC  
                    __ptext12 698C                      __ptext21 6C78                      __ptext13 6A70  
                    __ptext30 6AE4                      __ptext22 6C1E                      __ptext14 6994  
                    __ptext31 697E                      __ptext23 6B26                      __ptext15 6F86  
                    __ptext24 6B74                      __ptext16 71E0                      __ptext25 6A3C  
                    __ptext17 76FA                      __ptext26 6E72                      __ptext18 6A10  
                    __ptext27 6D9A                      __ptext19 7874                      __ptext28 6984  
                    __ptext29 69A4             metToucheCombien@i 00C9             metToucheCombien@j 00CA  
                    _lcd_busy 6AE4                      _lcd_init 69C0            __end_of_initTabVue 7032  
    calculToucheCombien@ligne 00BA                      _m_tabVue 0100                 __size_of_main 00FC  
               __size_of_rand 0056                   gagne@pMines 00B4                      deplace@x 00B9  
                    deplace@y 00BB                   ??_getAnalog 00B4         __end_of_afficheTabVue 6CD2  
                    main@posX 00D4                      main@posY 00D6                   ??_lcd_wrCom 00B6  
               _lcd_ecritChar 6B74                afficheTabVue@i 00BC                 _lcd_initCGRam 6EE4  
                 _rempliMines 7440          calculToucheCombien@i 00C2          calculToucheCombien@j 00C4  
   __size_of_metToucheCombien 015E                _lcd_putMessage 6B26                ?_lcd_ecritChar 00B4  
            ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 79FC              ?_lcd_curseurHome 00B4  
    __size_of_afficheTabMines 005A                ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BD  
           __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 6B74  
