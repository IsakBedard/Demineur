

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 16:08:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F45K20 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataBANK0
    79  001456                     __pidataBANK0:
    80                           	opt callstack 0
    81                           
    82                           ;initializer for _randx
    83  001456  0001               	dw	1
    84  001458  0000               	dw	0
    85                           
    86                           	psect	idataBANK1
    87  0012F0                     __pidataBANK1:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _matCGRAM
    91  0012F0  08                 	db	8
    92  0012F1  04                 	db	4
    93  0012F2  04                 	db	4
    94  0012F3  0A                 	db	10
    95  0012F4  11                 	db	17
    96  0012F5  1F                 	db	31
    97  0012F6  11                 	db	17
    98  0012F7  00                 	db	0
    99  0012F8  1F                 	db	31
   100  0012F9  1B                 	db	27
   101  0012FA  11                 	db	17
   102  0012FB  11                 	db	17
   103  0012FC  11                 	db	17
   104  0012FD  11                 	db	17
   105  0012FE  1B                 	db	27
   106  0012FF  1F                 	db	31
   107  001300  00                 	db	0
   108  001301  15                 	db	21
   109  001302  0E                 	db	14
   110  001303  1F                 	db	31
   111  001304  1F                 	db	31
   112  001305  0E                 	db	14
   113  001306  15                 	db	21
   114  001307  00                 	db	0
   115  001308  0E                 	db	14
   116  001309  11                 	db	17
   117  00130A  15                 	db	21
   118  00130B  15                 	db	21
   119  00130C  15                 	db	21
   120  00130D  0E                 	db	14
   121  00130E  15                 	db	21
   122  00130F  04                 	db	4
   123  001310  04                 	db	4
   124  001311  04                 	db	4
   125  001312  04                 	db	4
   126  001313  04                 	db	4
   127  001314  0E                 	db	14
   128  001315  0E                 	db	14
   129  001316  1B                 	db	27
   130  001317  11                 	db	17
   131  001318  04                 	db	4
   132  001319  0A                 	db	10
   133  00131A  0E                 	db	14
   134  00131B  11                 	db	17
   135  00131C  1F                 	db	31
   136  00131D  10                 	db	16
   137  00131E  0E                 	db	14
   138  00131F  00                 	db	0
   139  001320  08                 	db	8
   140  001321  04                 	db	4
   141  001322  0E                 	db	14
   142  001323  01                 	db	1
   143  001324  0F                 	db	15
   144  001325  11                 	db	17
   145  001326  0F                 	db	15
   146  001327  00                 	db	0
   147  001328  04                 	db	4
   148  001329  0A                 	db	10
   149  00132A  0E                 	db	14
   150  00132B  01                 	db	1
   151  00132C  0F                 	db	15
   152  00132D  11                 	db	17
   153  00132E  0F                 	db	15
   154  00132F  00                 	db	0
   155  0000                     _TRISCbits	set	3988
   156  0000                     _PORTAbits	set	3968
   157  0000                     _PORTD	set	3971
   158  0000                     _ANSELbits	set	3966
   159  0000                     _TRISA	set	3986
   160  0000                     _ANSEL	set	3966
   161  0000                     _TRISB	set	3987
   162  0000                     _ANSELH	set	3967
   163  0000                     _TRISD	set	3989
   164  0000                     _TMR1	set	4046
   165  0000                     _RCREG	set	4014
   166  0000                     _TXREG	set	4013
   167  0000                     _RCSTAbits	set	4011
   168  0000                     _TXSTAbits	set	4012
   169  0000                     _BAUDCONbits	set	4024
   170  0000                     _SPBRG	set	4015
   171  0000                     _SPBRGH	set	4016
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADCON2bits	set	4032
   174  0000                     _ADCON1	set	4033
   175  0000                     _ADCON0bits	set	4034
   176  0000                     _T1CONbits	set	4045
   177  0000                     _RCIF	set	31989
   178                           
   179                           	psect	smallconst
   180  000600                     __psmallconst:
   181                           	opt callstack 0
   182  000600  00                 	db	0
   183  000601                     STR_1:
   184  000601  4C                 	db	76	;'L'
   185  000602  41                 	db	65	;'A'
   186  000603  42                 	db	66	;'B'
   187  000604  36                 	db	54	;'6'
   188  000605  20                 	db	32
   189  000606  49                 	db	73	;'I'
   190  000607  73                 	db	115	;'s'
   191  000608  61                 	db	97	;'a'
   192  000609  6B                 	db	107	;'k'
   193  00060A  20                 	db	32
   194  00060B  42                 	db	66	;'B'
   195  00060C  65                 	db	101	;'e'
   196  00060D  64                 	db	100	;'d'
   197  00060E  61                 	db	97	;'a'
   198  00060F  72                 	db	114	;'r'
   199  000610  64                 	db	100	;'d'
   200  000611  00                 	db	0
   201                           
   202                           ; #config settings
   203  000612  00                 	db	0	; dummy byte at the end
   204  0000                     
   205                           	psect	cinit
   206  0011A6                     __pcinit:
   207                           	opt callstack 0
   208  0011A6                     start_initialization:
   209                           	opt callstack 0
   210  0011A6                     __initialization:
   211                           	opt callstack 0
   212                           
   213                           ; Initialize objects allocated to BANK1 (64 bytes)
   214                           ; load TBLPTR registers with __pidataBANK1
   215  0011A6  0EF0               	movlw	low __pidataBANK1
   216  0011A8  6EF6               	movwf	tblptrl,c
   217  0011AA  0E12               	movlw	high __pidataBANK1
   218  0011AC  6EF7               	movwf	tblptrh,c
   219  0011AE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   220  0011B0  6EF8               	movwf	tblptru,c
   221  0011B2  EE01  F054         	lfsr	0,__pdataBANK1
   222  0011B6  EE10 F040          	lfsr	1,64
   223  0011BA                     copy_data0:
   224  0011BA  0009               	tblrd		*+
   225  0011BC  CFF5 FFEE          	movff	tablat,postinc0
   226  0011C0  50E5               	movf	postdec1,w,c
   227  0011C2  50E1               	movf	fsr1l,w,c
   228  0011C4  E1FA               	bnz	copy_data0
   229                           
   230                           ; Initialize objects allocated to BANK0 (4 bytes)
   231                           ; load TBLPTR registers with __pidataBANK0
   232  0011C6  0E56               	movlw	low __pidataBANK0
   233  0011C8  6EF6               	movwf	tblptrl,c
   234  0011CA  0E14               	movlw	high __pidataBANK0
   235  0011CC  6EF7               	movwf	tblptrh,c
   236  0011CE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   237  0011D0  6EF8               	movwf	tblptru,c
   238  0011D2  EE00  F0D9         	lfsr	0,__pdataBANK0
   239  0011D6  EE10 F004          	lfsr	1,4
   240  0011DA                     copy_data1:
   241  0011DA  0009               	tblrd		*+
   242  0011DC  CFF5 FFEE          	movff	tablat,postinc0
   243  0011E0  50E5               	movf	postdec1,w,c
   244  0011E2  50E1               	movf	fsr1l,w,c
   245  0011E4  E1FA               	bnz	copy_data1
   246                           
   247                           ; Clear objects allocated to BANK1 (84 bytes)
   248  0011E6  EE01  F000         	lfsr	0,__pbssBANK1
   249  0011EA  0E54               	movlw	84
   250  0011EC                     clear_0:
   251  0011EC  6AEE               	clrf	postinc0,c
   252  0011EE  06E8               	decf	wreg,f,c
   253  0011F0  E1FD               	bnz	clear_0
   254                           
   255                           ; Clear objects allocated to BANK0 (84 bytes)
   256  0011F2  EE00  F060         	lfsr	0,__pbssBANK0
   257  0011F6  0E54               	movlw	84
   258  0011F8                     clear_1:
   259  0011F8  6AEE               	clrf	postinc0,c
   260  0011FA  06E8               	decf	wreg,f,c
   261  0011FC  E1FD               	bnz	clear_1
   262  0011FE                     end_of_initialization:
   263                           	opt callstack 0
   264  0011FE                     __end_of__initialization:
   265                           	opt callstack 0
   266  0011FE  0100               	movlb	0
   267  001200  EFF5  F005         	goto	_main	;jump to C main() function
   268                           
   269                           	psect	bssBANK0
   270  000060                     __pbssBANK0:
   271                           	opt callstack 0
   272  000060                     _m_tabMines:
   273                           	opt callstack 0
   274  000060                     	ds	84
   275                           
   276                           	psect	dataBANK0
   277  0000D9                     __pdataBANK0:
   278                           	opt callstack 0
   279  0000D9                     _randx:
   280                           	opt callstack 0
   281  0000D9                     	ds	4
   282                           
   283                           	psect	bssBANK1
   284  000100                     __pbssBANK1:
   285                           	opt callstack 0
   286  000100                     _m_tabVue:
   287                           	opt callstack 0
   288  000100                     	ds	84
   289                           
   290                           	psect	dataBANK1
   291  000154                     __pdataBANK1:
   292                           	opt callstack 0
   293  000154                     _matCGRAM:
   294                           	opt callstack 0
   295  000154                     	ds	64
   296                           
   297                           	psect	cstackBANK0
   298  0000B4                     __pcstackBANK0:
   299                           	opt callstack 0
   300  0000B4                     ??_initTabVue:
   301  0000B4                     ??_getAnalog:
   302  0000B4                     ??_lcd_ecrireDonnees:
   303  0000B4                     ??_lcd_busy:
   304  0000B4                     ?___wmul:
   305                           	opt callstack 0
   306  0000B4                     ?___lmul:
   307                           	opt callstack 0
   308  0000B4                     ___wmul@multiplier:
   309                           	opt callstack 0
   310  0000B4                     srand@x:
   311                           	opt callstack 0
   312  0000B4                     ___lmul@multiplier:
   313                           	opt callstack 0
   314                           
   315                           ; 4 bytes @ 0x0
   316  0000B4                     	ds	1
   317  0000B5                     getAnalog@canal:
   318                           	opt callstack 0
   319  0000B5                     lcd_ecrireDonnees@donnee:
   320                           	opt callstack 0
   321  0000B5                     lcd_busy@adresse:
   322                           	opt callstack 0
   323                           
   324                           ; 1 bytes @ 0x1
   325  0000B5                     	ds	1
   326  0000B6                     ??_lcd_resetSequence:
   327  0000B6                     initTabVue@j:
   328                           	opt callstack 0
   329  0000B6                     lcd_wrCom@commande:
   330                           	opt callstack 0
   331  0000B6                     lcd_wrData@caractere:
   332                           	opt callstack 0
   333  0000B6                     ___wmul@multiplicand:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0x2
   337  0000B6                     	ds	1
   338  0000B7                     ??_lcd_initCGRam:
   339  0000B7                     initTabVue@i:
   340                           	opt callstack 0
   341  0000B7                     lcd_gotoXY@y:
   342                           	opt callstack 0
   343  0000B7                     lcd_ecritChar@car:
   344                           	opt callstack 0
   345                           
   346                           ; 1 bytes @ 0x3
   347  0000B7                     	ds	1
   348  0000B8                     lcd_gotoXY@x:
   349                           	opt callstack 0
   350  0000B8                     lcd_ecritChar@posRam:
   351                           	opt callstack 0
   352  0000B8                     ___wmul@product:
   353                           	opt callstack 0
   354  0000B8                     ___lmul@multiplicand:
   355                           	opt callstack 0
   356                           
   357                           ; 4 bytes @ 0x4
   358  0000B8                     	ds	1
   359  0000B9                     lcd_initCGRam@i:
   360                           	opt callstack 0
   361  0000B9                     deplace@x:
   362                           	opt callstack 0
   363  0000B9                     lcd_putMessage@chaine:
   364                           	opt callstack 0
   365                           
   366                           ; 3 bytes @ 0x5
   367  0000B9                     	ds	1
   368  0000BA                     lcd_initCGRam@j:
   369                           	opt callstack 0
   370  0000BA                     calculToucheCombien@ligne:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x6
   374  0000BA                     	ds	1
   375  0000BB                     deplace@y:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x7
   379  0000BB                     	ds	1
   380  0000BC                     ??_lcd_putMessage:
   381  0000BC                     calculToucheCombien@colonne:
   382                           	opt callstack 0
   383  0000BC                     ___lmul@product:
   384                           	opt callstack 0
   385                           
   386                           ; 4 bytes @ 0x8
   387  0000BC                     	ds	1
   388  0000BD                     ??_deplace:
   389                           
   390                           ; 1 bytes @ 0x9
   391  0000BD                     	ds	1
   392  0000BE                     ??_calculToucheCombien:
   393  0000BE                     deplace@analogX:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0xA
   397  0000BE                     	ds	1
   398  0000BF                     deplace@analogY:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0xB
   402  0000BF                     	ds	1
   403  0000C0                     ?_rand:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0xC
   407  0000C0                     	ds	1
   408  0000C1                     calculToucheCombien@nbMines:
   409                           	opt callstack 0
   410  0000C1                     lcd_putMessage@j:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0xD
   414  0000C1                     	ds	1
   415  0000C2                     ?___awmod:
   416                           	opt callstack 0
   417  0000C2                     calculToucheCombien@i:
   418                           	opt callstack 0
   419  0000C2                     ___awmod@dividend:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0xE
   423  0000C2                     	ds	2
   424  0000C4                     calculToucheCombien@j:
   425                           	opt callstack 0
   426  0000C4                     ___awmod@divisor:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x10
   430  0000C4                     	ds	2
   431  0000C6                     ??_metToucheCombien:
   432  0000C6                     ___awmod@counter:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x12
   436  0000C6                     	ds	1
   437  0000C7                     ___awmod@sign:
   438                           	opt callstack 0
   439                           
   440                           ; 1 bytes @ 0x13
   441  0000C7                     	ds	1
   442  0000C8                     rempliMines@nb:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x14
   446  0000C8                     	ds	1
   447  0000C9                     metToucheCombien@i:
   448                           	opt callstack 0
   449                           
   450                           ; 1 bytes @ 0x15
   451  0000C9                     	ds	1
   452  0000CA                     ??_rempliMines:
   453  0000CA                     metToucheCombien@j:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x16
   457  0000CA                     	ds	3
   458  0000CD                     rempliMines@x:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x19
   462  0000CD                     	ds	1
   463  0000CE                     rempliMines@y:
   464                           	opt callstack 0
   465                           
   466                           ; 1 bytes @ 0x1A
   467  0000CE                     	ds	1
   468  0000CF                     rempliMines@i:
   469                           	opt callstack 0
   470                           
   471                           ; 1 bytes @ 0x1B
   472  0000CF                     	ds	1
   473  0000D0                     rempliMines@j:
   474                           	opt callstack 0
   475                           
   476                           ; 1 bytes @ 0x1C
   477  0000D0                     	ds	1
   478  0000D1                     ??_main:
   479                           
   480                           ; 1 bytes @ 0x1D
   481  0000D1                     	ds	2
   482  0000D3                     main@posX:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x1F
   486  0000D3                     	ds	2
   487  0000D5                     main@posY:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x21
   491  0000D5                     	ds	2
   492  0000D7                     main@i:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0x23
   496  0000D7                     	ds	1
   497  0000D8                     main@i_278:
   498                           	opt callstack 0
   499                           
   500                           ; 1 bytes @ 0x24
   501  0000D8                     	ds	1
   502                           
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 48 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  i               1   36[BANK0 ] unsigned char 
   513 ;;  i               1   35[BANK0 ] unsigned char 
   514 ;;  posY            2   33[BANK0 ] PTR unsigned char 
   515 ;;		 -> RAM(1535), 
   516 ;;  posX            2   31[BANK0 ] PTR unsigned char 
   517 ;;		 -> RAM(1535), 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   527 ;;      Params:         0       0       0       0       0       0       0
   528 ;;      Locals:         0       6       0       0       0       0       0
   529 ;;      Temps:          0       2       0       0       0       0       0
   530 ;;      Totals:         0       8       0       0       0       0       0
   531 ;;Total ram usage:        8 bytes
   532 ;; Hardware stack levels required when called:    6
   533 ;; This function calls:
   534 ;;		_deplace
   535 ;;		_initTabVue
   536 ;;		_initialisation
   537 ;;		_lcd_gotoXY
   538 ;;		_lcd_init
   539 ;;		_lcd_putMessage
   540 ;;		_metToucheCombien
   541 ;;		_rempliMines
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548  000BEA                     __ptext0:
   549                           	opt callstack 0
   550  000BEA                     _main:
   551                           	opt callstack 25
   552  000BEA                     
   553                           ;main.c: 50: char* posX = 10;
   554  000BEA  0E0A               	movlw	10
   555  000BEC  0100               	movlb	0	; force () banked
   556  000BEE  6FD3               	movwf	main@posX& (0+255),b
   557  000BF0  0E00               	movlw	0
   558  000BF2  6FD4               	movwf	(main@posX+1)& (0+255),b
   559                           
   560                           ;main.c: 51: char* posY = 2;
   561  000BF4  0E02               	movlw	2
   562  000BF6  0100               	movlb	0	; force () banked
   563  000BF8  6FD5               	movwf	main@posY& (0+255),b
   564  000BFA  0E00               	movlw	0
   565  000BFC  6FD6               	movwf	(main@posY+1)& (0+255),b
   566  000BFE                     
   567                           ; BSR set to: 0
   568                           ;main.c: 53: initialisation();
   569  000BFE  ECB2  F009         	call	_initialisation	;wreg free
   570  000C02                     
   571                           ;main.c: 54: lcd_init();
   572  000C02  ECF6  F009         	call	_lcd_init	;wreg free
   573  000C06                     
   574                           ;main.c: 55: lcd_putMessage("LAB6 Isak Bedard");
   575  000C06  0E01               	movlw	low STR_1
   576  000C08  0100               	movlb	0	; force () banked
   577  000C0A  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
   578  000C0C  0E06               	movlw	high STR_1
   579  000C0E  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   580  000C10  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   581  000C12  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   582  000C14  A4D8               	btfss	status,2,c
   583  000C16  0E00               	movlw	low (__mediumconst shr (0+16))
   584  000C18  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   585  000C1A  EC9F  F006         	call	_lcd_putMessage	;wreg free
   586  000C1E                     
   587                           ;main.c: 56: initTabVue();
   588  000C1E  EC52  F007         	call	_initTabVue	;wreg free
   589  000C22                     
   590                           ;main.c: 57: rempliMines(15);
   591  000C22  0E00               	movlw	0
   592  000C24  0100               	movlb	0	; force () banked
   593  000C26  6FC9               	movwf	(rempliMines@nb+1)& (0+255),b
   594  000C28  0E0F               	movlw	15
   595  000C2A  6FC8               	movwf	rempliMines@nb& (0+255),b
   596  000C2C  EC47  F005         	call	_rempliMines	;wreg free
   597  000C30                     
   598                           ;main.c: 58: metToucheCombien();
   599  000C30  EC98  F004         	call	_metToucheCombien	;wreg free
   600  000C34                     
   601                           ;main.c: 60: for (char i = 0; i < 4; i++)
   602  000C34  0E00               	movlw	0
   603  000C36  0100               	movlb	0	; force () banked
   604  000C38  6FD7               	movwf	main@i& (0+255),b
   605  000C3A                     
   606                           ; BSR set to: 0
   607  000C3A  0E03               	movlw	3
   608  000C3C  0100               	movlb	0	; force () banked
   609  000C3E  65D7               	cpfsgt	main@i& (0+255),b
   610  000C40  EF24  F006         	goto	u1121
   611  000C44  EF26  F006         	goto	u1120
   612  000C48                     u1121:
   613  000C48  EF28  F006         	goto	l2077
   614  000C4C                     u1120:
   615  000C4C  EF50  F006         	goto	l2085
   616  000C50                     l2077:
   617                           
   618                           ; BSR set to: 0
   619                           ;main.c: 61: {;main.c: 62: lcd_gotoXY(1,i+1);
   620  000C50  0100               	movlb	0	; force () banked
   621  000C52  29D7               	incf	main@i& (0+255),w,b
   622  000C54  0100               	movlb	0	; force () banked
   623  000C56  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
   624  000C58  0E01               	movlw	1
   625  000C5A  ECF9  F007         	call	_lcd_gotoXY
   626  000C5E                     
   627                           ;main.c: 63: lcd_putMessage(m_tabVue[i]);
   628  000C5E  0100               	movlb	0	; force () banked
   629  000C60  51D7               	movf	main@i& (0+255),w,b
   630  000C62  0D15               	mullw	21
   631  000C64  0E00               	movlw	low _m_tabVue
   632  000C66  24F3               	addwf	243,w,c
   633  000C68  0100               	movlb	0	; force () banked
   634  000C6A  6FD1               	movwf	??_main& (0+255),b
   635  000C6C  0E01               	movlw	high _m_tabVue
   636  000C6E  20F4               	addwfc	prodh,w,c
   637  000C70  6FD2               	movwf	(??_main+1)& (0+255),b
   638  000C72  C0D1  F0B9         	movff	??_main,lcd_putMessage@chaine
   639  000C76  C0D2  F0BA         	movff	??_main+1,lcd_putMessage@chaine+1
   640  000C7A  0100               	movlb	0	; force () banked
   641  000C7C  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   642  000C7E  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   643  000C80  A4D8               	btfss	status,2,c
   644  000C82  0E20               	movlw	32
   645  000C84  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   646  000C86  EC9F  F006         	call	_lcd_putMessage	;wreg free
   647  000C8A  0100               	movlb	0	; force () banked
   648  000C8C  2BD7               	incf	main@i& (0+255),f,b
   649  000C8E                     
   650                           ; BSR set to: 0
   651  000C8E  0E03               	movlw	3
   652  000C90  0100               	movlb	0	; force () banked
   653  000C92  65D7               	cpfsgt	main@i& (0+255),b
   654  000C94  EF4E  F006         	goto	u1131
   655  000C98  EF50  F006         	goto	u1130
   656  000C9C                     u1131:
   657  000C9C  EF28  F006         	goto	l2077
   658  000CA0                     u1130:
   659  000CA0                     l2085:
   660                           
   661                           ; BSR set to: 0
   662                           ;main.c: 64: };main.c: 66: for (char i = 0; i < 4; i++)
   663  000CA0  0E00               	movlw	0
   664  000CA2  0100               	movlb	0	; force () banked
   665  000CA4  6FD8               	movwf	main@i_278& (0+255),b
   666  000CA6                     
   667                           ; BSR set to: 0
   668  000CA6  0E03               	movlw	3
   669  000CA8  0100               	movlb	0	; force () banked
   670  000CAA  65D8               	cpfsgt	main@i_278& (0+255),b
   671  000CAC  EF5A  F006         	goto	u1141
   672  000CB0  EF5C  F006         	goto	u1140
   673  000CB4                     u1141:
   674  000CB4  EF5E  F006         	goto	l2091
   675  000CB8                     u1140:
   676  000CB8  EF86  F006         	goto	l2099
   677  000CBC                     l2091:
   678                           
   679                           ; BSR set to: 0
   680                           ;main.c: 67: {;main.c: 68: lcd_gotoXY(1,i+1);
   681  000CBC  0100               	movlb	0	; force () banked
   682  000CBE  29D8               	incf	main@i_278& (0+255),w,b
   683  000CC0  0100               	movlb	0	; force () banked
   684  000CC2  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
   685  000CC4  0E01               	movlw	1
   686  000CC6  ECF9  F007         	call	_lcd_gotoXY
   687  000CCA                     
   688                           ;main.c: 69: lcd_putMessage(m_tabMines[i]);
   689  000CCA  0100               	movlb	0	; force () banked
   690  000CCC  51D8               	movf	main@i_278& (0+255),w,b
   691  000CCE  0D15               	mullw	21
   692  000CD0  0E60               	movlw	low _m_tabMines
   693  000CD2  24F3               	addwf	243,w,c
   694  000CD4  0100               	movlb	0	; force () banked
   695  000CD6  6FD1               	movwf	??_main& (0+255),b
   696  000CD8  0E00               	movlw	high _m_tabMines
   697  000CDA  20F4               	addwfc	prodh,w,c
   698  000CDC  6FD2               	movwf	(??_main+1)& (0+255),b
   699  000CDE  C0D1  F0B9         	movff	??_main,lcd_putMessage@chaine
   700  000CE2  C0D2  F0BA         	movff	??_main+1,lcd_putMessage@chaine+1
   701  000CE6  0100               	movlb	0	; force () banked
   702  000CE8  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   703  000CEA  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   704  000CEC  A4D8               	btfss	status,2,c
   705  000CEE  0E20               	movlw	32
   706  000CF0  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   707  000CF2  EC9F  F006         	call	_lcd_putMessage	;wreg free
   708  000CF6  0100               	movlb	0	; force () banked
   709  000CF8  2BD8               	incf	main@i_278& (0+255),f,b
   710  000CFA                     
   711                           ; BSR set to: 0
   712  000CFA  0E03               	movlw	3
   713  000CFC  0100               	movlb	0	; force () banked
   714  000CFE  65D8               	cpfsgt	main@i_278& (0+255),b
   715  000D00  EF84  F006         	goto	u1151
   716  000D04  EF86  F006         	goto	u1150
   717  000D08                     u1151:
   718  000D08  EF5E  F006         	goto	l2091
   719  000D0C                     u1150:
   720  000D0C                     l2099:
   721                           
   722                           ;main.c: 72: {;main.c: 73: deplace(&posX, &posY);
   723  000D0C  0ED3               	movlw	low main@posX
   724  000D0E  0100               	movlb	0	; force () banked
   725  000D10  6FB9               	movwf	deplace@x& (0+255),b
   726  000D12  0E00               	movlw	high main@posX
   727  000D14  6FBA               	movwf	(deplace@x+1)& (0+255),b
   728  000D16  0ED5               	movlw	low main@posY
   729  000D18  0100               	movlb	0	; force () banked
   730  000D1A  6FBB               	movwf	deplace@y& (0+255),b
   731  000D1C  0E00               	movlw	high main@posY
   732  000D1E  6FBC               	movwf	(deplace@y+1)& (0+255),b
   733  000D20  ECDB  F003         	call	_deplace	;wreg free
   734  000D24                     
   735                           ;main.c: 74: _delay((unsigned long)((100)*(1000000/4000.0)));
   736  000D24  0E21               	movlw	33
   737  000D26  0100               	movlb	0	; force () banked
   738  000D28  6FD1               	movwf	??_main& (0+255),b
   739  000D2A  0E76               	movlw	118
   740  000D2C                     u1167:
   741  000D2C  2EE8               	decfsz	wreg,f,c
   742  000D2E  D7FE               	bra	u1167
   743  000D30  2FD1               	decfsz	??_main& (0+255),f,b
   744  000D32  D7FC               	bra	u1167
   745  000D34  F000               	nop	
   746  000D36  EF86  F006         	goto	l2099
   747  000D3A  EF00  F000         	goto	start
   748  000D3E                     __end_of_main:
   749                           	opt callstack 0
   750                           
   751 ;; *************** function _rempliMines *****************
   752 ;; Defined at:
   753 ;;		line 130 in file "main.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  nb              2   20[BANK0 ] int 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  j               1   28[BANK0 ] unsigned char 
   758 ;;  i               1   27[BANK0 ] unsigned char 
   759 ;;  y               1   26[BANK0 ] unsigned char 
   760 ;;  x               1   25[BANK0 ] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   770 ;;      Params:         0       2       0       0       0       0       0
   771 ;;      Locals:         0       4       0       0       0       0       0
   772 ;;      Temps:          0       3       0       0       0       0       0
   773 ;;      Totals:         0       9       0       0       0       0       0
   774 ;;Total ram usage:        9 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    2
   777 ;; This function calls:
   778 ;;		___awmod
   779 ;;		_rand
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text1
   786  000A8E                     __ptext1:
   787                           	opt callstack 0
   788  000A8E                     _rempliMines:
   789                           	opt callstack 28
   790  000A8E                     
   791                           ;main.c: 132: char x,y;;main.c: 134: for (char i = 0; i < 4; i++)
   792  000A8E  0E00               	movlw	0
   793  000A90  0100               	movlb	0	; force () banked
   794  000A92  6FCF               	movwf	rempliMines@i& (0+255),b
   795  000A94                     
   796                           ; BSR set to: 0
   797  000A94  0E03               	movlw	3
   798  000A96  0100               	movlb	0	; force () banked
   799  000A98  65CF               	cpfsgt	rempliMines@i& (0+255),b
   800  000A9A  EF51  F005         	goto	u911
   801  000A9E  EF53  F005         	goto	u910
   802  000AA2                     u911:
   803  000AA2  EF55  F005         	goto	l1963
   804  000AA6                     u910:
   805  000AA6  EFE6  F005         	goto	l1987
   806  000AAA                     l1963:
   807                           
   808                           ; BSR set to: 0
   809                           ;main.c: 135: {;main.c: 136: for(char j=0;j<20;j++)
   810  000AAA  0E00               	movlw	0
   811  000AAC  0100               	movlb	0	; force () banked
   812  000AAE  6FD0               	movwf	rempliMines@j& (0+255),b
   813  000AB0                     
   814                           ; BSR set to: 0
   815  000AB0  0E13               	movlw	19
   816  000AB2  0100               	movlb	0	; force () banked
   817  000AB4  65D0               	cpfsgt	rempliMines@j& (0+255),b
   818  000AB6  EF5F  F005         	goto	u921
   819  000ABA  EF61  F005         	goto	u920
   820  000ABE                     u921:
   821  000ABE  EF63  F005         	goto	l1969
   822  000AC2                     u920:
   823  000AC2  EF86  F005         	goto	l1975
   824  000AC6                     l1969:
   825                           
   826                           ; BSR set to: 0
   827                           ;main.c: 137: {;main.c: 138: m_tabMines[i][j]=' ';
   828  000AC6  0100               	movlb	0	; force () banked
   829  000AC8  51CF               	movf	rempliMines@i& (0+255),w,b
   830  000ACA  0D15               	mullw	21
   831  000ACC  0E60               	movlw	low _m_tabMines
   832  000ACE  0100               	movlb	0	; force () banked
   833  000AD0  6FCA               	movwf	??_rempliMines& (0+255),b
   834  000AD2  0E00               	movlw	high _m_tabMines
   835  000AD4  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   836  000AD6  50F3               	movf	243,w,c
   837  000AD8  27CA               	addwf	??_rempliMines& (0+255),f,b
   838  000ADA  50F4               	movf	244,w,c
   839  000ADC  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   840  000ADE  0100               	movlb	0	; force () banked
   841  000AE0  51D0               	movf	rempliMines@j& (0+255),w,b
   842  000AE2  0100               	movlb	0	; force () banked
   843  000AE4  25CA               	addwf	??_rempliMines& (0+255),w,b
   844  000AE6  6ED9               	movwf	fsr2l,c
   845  000AE8  0100               	movlb	0	; force () banked
   846  000AEA  0E00               	movlw	0
   847  000AEC  0100               	movlb	0	; force () banked
   848  000AEE  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   849  000AF0  6EDA               	movwf	fsr2h,c
   850  000AF2  0E20               	movlw	32
   851  000AF4  6EDF               	movwf	indf2,c
   852  000AF6                     
   853                           ; BSR set to: 0
   854  000AF6  0100               	movlb	0	; force () banked
   855  000AF8  2BD0               	incf	rempliMines@j& (0+255),f,b
   856  000AFA                     
   857                           ; BSR set to: 0
   858  000AFA  0E13               	movlw	19
   859  000AFC  0100               	movlb	0	; force () banked
   860  000AFE  65D0               	cpfsgt	rempliMines@j& (0+255),b
   861  000B00  EF84  F005         	goto	u931
   862  000B04  EF86  F005         	goto	u930
   863  000B08                     u931:
   864  000B08  EF63  F005         	goto	l1969
   865  000B0C                     u930:
   866  000B0C                     l1975:
   867                           
   868                           ; BSR set to: 0
   869  000B0C  0100               	movlb	0	; force () banked
   870  000B0E  2BCF               	incf	rempliMines@i& (0+255),f,b
   871  000B10                     
   872                           ; BSR set to: 0
   873  000B10  0E03               	movlw	3
   874  000B12  0100               	movlb	0	; force () banked
   875  000B14  65CF               	cpfsgt	rempliMines@i& (0+255),b
   876  000B16  EF8F  F005         	goto	u941
   877  000B1A  EF91  F005         	goto	u940
   878  000B1E                     u941:
   879  000B1E  EF55  F005         	goto	l1963
   880  000B22                     u940:
   881  000B22  EFE6  F005         	goto	l1987
   882  000B26                     l1979:
   883                           
   884                           ; BSR set to: 0
   885                           ;main.c: 142: {;main.c: 143: x=rand()%20;
   886  000B26  EC02  F009         	call	_rand	;wreg free
   887  000B2A  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   888  000B2E  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   889  000B32  0E00               	movlw	0
   890  000B34  0100               	movlb	0	; force () banked
   891  000B36  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   892  000B38  0E14               	movlw	20
   893  000B3A  6FC4               	movwf	___awmod@divisor& (0+255),b
   894  000B3C  ECF9  F006         	call	___awmod	;wreg free
   895  000B40  0100               	movlb	0	; force () banked
   896  000B42  51C2               	movf	?___awmod& (0+255),w,b
   897  000B44  0100               	movlb	0	; force () banked
   898  000B46  6FCD               	movwf	rempliMines@x& (0+255),b
   899                           
   900                           ;main.c: 144: y=rand()%4;
   901  000B48  EC02  F009         	call	_rand	;wreg free
   902  000B4C  0100               	movlb	0	; force () banked
   903  000B4E  51C0               	movf	?_rand& (0+255),w,b
   904  000B50  0B03               	andlw	3
   905  000B52  0100               	movlb	0	; force () banked
   906  000B54  6FCE               	movwf	rempliMines@y& (0+255),b
   907  000B56                     
   908                           ; BSR set to: 0
   909                           ;main.c: 145: if (m_tabMines[y][x]!=2)
   910  000B56  0100               	movlb	0	; force () banked
   911  000B58  51CE               	movf	rempliMines@y& (0+255),w,b
   912  000B5A  0D15               	mullw	21
   913  000B5C  0E60               	movlw	low _m_tabMines
   914  000B5E  0100               	movlb	0	; force () banked
   915  000B60  6FCA               	movwf	??_rempliMines& (0+255),b
   916  000B62  0E00               	movlw	high _m_tabMines
   917  000B64  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   918  000B66  50F3               	movf	243,w,c
   919  000B68  27CA               	addwf	??_rempliMines& (0+255),f,b
   920  000B6A  50F4               	movf	244,w,c
   921  000B6C  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   922  000B6E  0100               	movlb	0	; force () banked
   923  000B70  51CD               	movf	rempliMines@x& (0+255),w,b
   924  000B72  0100               	movlb	0	; force () banked
   925  000B74  25CA               	addwf	??_rempliMines& (0+255),w,b
   926  000B76  6ED9               	movwf	fsr2l,c
   927  000B78  0100               	movlb	0	; force () banked
   928  000B7A  0E00               	movlw	0
   929  000B7C  0100               	movlb	0	; force () banked
   930  000B7E  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   931  000B80  6EDA               	movwf	fsr2h,c
   932  000B82  0E02               	movlw	2
   933  000B84  18DE               	xorwf	postinc2,w,c
   934  000B86  B4D8               	btfsc	status,2,c
   935  000B88  EFC8  F005         	goto	u951
   936  000B8C  EFCA  F005         	goto	u950
   937  000B90                     u951:
   938  000B90  EFE6  F005         	goto	l1987
   939  000B94                     u950:
   940  000B94                     
   941                           ; BSR set to: 0
   942                           ;main.c: 146: {;main.c: 147: m_tabMines[y][x]=2;
   943  000B94  0100               	movlb	0	; force () banked
   944  000B96  51CE               	movf	rempliMines@y& (0+255),w,b
   945  000B98  0D15               	mullw	21
   946  000B9A  0E60               	movlw	low _m_tabMines
   947  000B9C  0100               	movlb	0	; force () banked
   948  000B9E  6FCA               	movwf	??_rempliMines& (0+255),b
   949  000BA0  0E00               	movlw	high _m_tabMines
   950  000BA2  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   951  000BA4  50F3               	movf	243,w,c
   952  000BA6  27CA               	addwf	??_rempliMines& (0+255),f,b
   953  000BA8  50F4               	movf	244,w,c
   954  000BAA  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   955  000BAC  0100               	movlb	0	; force () banked
   956  000BAE  51CD               	movf	rempliMines@x& (0+255),w,b
   957  000BB0  0100               	movlb	0	; force () banked
   958  000BB2  25CA               	addwf	??_rempliMines& (0+255),w,b
   959  000BB4  6ED9               	movwf	fsr2l,c
   960  000BB6  0100               	movlb	0	; force () banked
   961  000BB8  0E00               	movlw	0
   962  000BBA  0100               	movlb	0	; force () banked
   963  000BBC  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   964  000BBE  6EDA               	movwf	fsr2h,c
   965  000BC0  0E02               	movlw	2
   966  000BC2  6EDF               	movwf	indf2,c
   967  000BC4                     
   968                           ; BSR set to: 0
   969                           ;main.c: 148: nb--;
   970  000BC4  0100               	movlb	0	; force () banked
   971  000BC6  07C8               	decf	rempliMines@nb& (0+255),f,b
   972  000BC8  A0D8               	btfss	status,0,c
   973  000BCA  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   974  000BCC                     l1987:
   975                           
   976                           ; BSR set to: 0
   977  000BCC  0100               	movlb	0	; force () banked
   978  000BCE  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   979  000BD0  EFF4  F005         	goto	u960
   980  000BD4  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   981  000BD6  E106               	bnz	u961
   982  000BD8  05C8               	decf	rempliMines@nb& (0+255),w,b
   983  000BDA  B0D8               	btfsc	status,0,c
   984  000BDC  EFF2  F005         	goto	u961
   985  000BE0  EFF4  F005         	goto	u960
   986  000BE4                     u961:
   987  000BE4  EF93  F005         	goto	l1979
   988  000BE8                     u960:
   989  000BE8                     
   990                           ; BSR set to: 0
   991  000BE8  0012               	return		;funcret
   992  000BEA                     __end_of_rempliMines:
   993                           	opt callstack 0
   994                           
   995 ;; *************** function _rand *****************
   996 ;; Defined at:
   997 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2   12[BANK0 ] int 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1011 ;;      Params:         0       2       0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0
  1014 ;;      Totals:         0       2       0       0       0       0       0
  1015 ;;Total ram usage:        2 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    1
  1018 ;; This function calls:
  1019 ;;		___lmul
  1020 ;; This function is called by:
  1021 ;;		_rempliMines
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text2
  1026  001204                     __ptext2:
  1027                           	opt callstack 0
  1028  001204                     _rand:
  1029                           	opt callstack 28
  1030  001204  C0D9  F0B4         	movff	_randx,___lmul@multiplier
  1031  001208  C0DA  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1032  00120C  C0DB  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1033  001210  C0DC  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1034  001214  0E6D               	movlw	109
  1035  001216  0100               	movlb	0	; () banked
  1036  001218  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1037  00121A  0E4E               	movlw	78
  1038  00121C  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1039  00121E  0EC6               	movlw	198
  1040  001220  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1041  001222  0E41               	movlw	65
  1042  001224  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1043  001226  EC32  F008         	call	___lmul	;wreg free
  1044  00122A  C0B4  F0D9         	movff	?___lmul,_randx
  1045  00122E  C0B5  F0DA         	movff	?___lmul+1,_randx+1
  1046  001232  C0B6  F0DB         	movff	?___lmul+2,_randx+2
  1047  001236  C0B7  F0DC         	movff	?___lmul+3,_randx+3
  1048  00123A  0E39               	movlw	57
  1049  00123C  0100               	movlb	0	; () banked
  1050  00123E  27D9               	addwf	_randx& (0+255),f,b
  1051  001240  0E30               	movlw	48
  1052  001242  23DA               	addwfc	(_randx+1)& (0+255),f,b
  1053  001244  0E00               	movlw	0
  1054  001246  23DB               	addwfc	(_randx+2)& (0+255),f,b
  1055  001248  0E00               	movlw	0
  1056  00124A  23DC               	addwfc	(_randx+3)& (0+255),f,b
  1057  00124C                     
  1058                           ; BSR set to: 0
  1059  00124C  0EFF               	movlw	255
  1060  00124E  15DB               	andwf	(_randx+2)& (0+255),w,b
  1061  001250  6FC0               	movwf	?_rand& (0+255),b
  1062  001252  0E7F               	movlw	127
  1063  001254  15DC               	andwf	(_randx+3)& (0+255),w,b
  1064  001256  6FC1               	movwf	(?_rand+1)& (0+255),b
  1065  001258                     
  1066                           ; BSR set to: 0
  1067  001258  0012               	return		;funcret
  1068  00125A                     __end_of_rand:
  1069                           	opt callstack 0
  1070                           
  1071 ;; *************** function ___lmul *****************
  1072 ;; Defined at:
  1073 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1076 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  product         4    8[BANK0 ] unsigned long 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  4    0[BANK0 ] unsigned long 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1088 ;;      Params:         0       8       0       0       0       0       0
  1089 ;;      Locals:         0       4       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0
  1091 ;;      Totals:         0      12       0       0       0       0       0
  1092 ;;Total ram usage:       12 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_rand
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text3
  1102  001064                     __ptext3:
  1103                           	opt callstack 0
  1104  001064                     ___lmul:
  1105                           	opt callstack 28
  1106  001064  0E00               	movlw	0
  1107  001066  0100               	movlb	0	; () banked
  1108  001068  6FBC               	movwf	___lmul@product& (0+255),b
  1109  00106A  0E00               	movlw	0
  1110  00106C  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1111  00106E  0E00               	movlw	0
  1112  001070  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1113  001072  0E00               	movlw	0
  1114  001074  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1115  001076                     l1719:
  1116                           
  1117                           ; BSR set to: 0
  1118  001076  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1119  001078  EF40  F008         	goto	u641
  1120  00107C  EF42  F008         	goto	u640
  1121  001080                     u641:
  1122  001080  EF4A  F008         	goto	l1723
  1123  001084                     u640:
  1124  001084                     
  1125                           ; BSR set to: 0
  1126  001084  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1127  001086  27BC               	addwf	___lmul@product& (0+255),f,b
  1128  001088  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1129  00108A  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1130  00108C  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1131  00108E  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1132  001090  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1133  001092  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1134  001094                     l1723:
  1135                           
  1136                           ; BSR set to: 0
  1137  001094  90D8               	bcf	status,0,c
  1138  001096  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1139  001098  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1140  00109A  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1141  00109C  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1142  00109E                     
  1143                           ; BSR set to: 0
  1144  00109E  90D8               	bcf	status,0,c
  1145  0010A0  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1146  0010A2  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1147  0010A4  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1148  0010A6  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1149  0010A8  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1150  0010AA  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1151  0010AC  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1152  0010AE  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1153  0010B0  A4D8               	btfss	status,2,c
  1154  0010B2  EF5D  F008         	goto	u651
  1155  0010B6  EF5F  F008         	goto	u650
  1156  0010BA                     u651:
  1157  0010BA  EF3B  F008         	goto	l1719
  1158  0010BE                     u650:
  1159  0010BE                     
  1160                           ; BSR set to: 0
  1161  0010BE  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1162  0010C2  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1163  0010C6  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1164  0010CA  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1165  0010CE                     
  1166                           ; BSR set to: 0
  1167  0010CE  0012               	return		;funcret
  1168  0010D0                     __end_of___lmul:
  1169                           	opt callstack 0
  1170                           
  1171 ;; *************** function ___awmod *****************
  1172 ;; Defined at:
  1173 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  dividend        2   14[BANK0 ] int 
  1176 ;;  divisor         2   16[BANK0 ] int 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  sign            1   19[BANK0 ] unsigned char 
  1179 ;;  counter         1   18[BANK0 ] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  2   14[BANK0 ] int 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1189 ;;      Params:         0       4       0       0       0       0       0
  1190 ;;      Locals:         0       2       0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0
  1192 ;;      Totals:         0       6       0       0       0       0       0
  1193 ;;Total ram usage:        6 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_rempliMines
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text4
  1203  000DF2                     __ptext4:
  1204                           	opt callstack 0
  1205  000DF2                     ___awmod:
  1206                           	opt callstack 29
  1207  000DF2  0E00               	movlw	0
  1208  000DF4  0100               	movlb	0	; () banked
  1209  000DF6  6FC7               	movwf	___awmod@sign& (0+255),b
  1210  000DF8                     
  1211                           ; BSR set to: 0
  1212  000DF8  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1213  000DFA  EF03  F007         	goto	u780
  1214  000DFE  EF01  F007         	goto	u781
  1215  000E02                     u781:
  1216  000E02  EF09  F007         	goto	l1873
  1217  000E06                     u780:
  1218  000E06                     
  1219                           ; BSR set to: 0
  1220  000E06  6DC2               	negf	___awmod@dividend& (0+255),b
  1221  000E08  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1222  000E0A  B0D8               	btfsc	status,0,c
  1223  000E0C  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1224  000E0E                     
  1225                           ; BSR set to: 0
  1226  000E0E  0E01               	movlw	1
  1227  000E10  6FC7               	movwf	___awmod@sign& (0+255),b
  1228  000E12                     l1873:
  1229                           
  1230                           ; BSR set to: 0
  1231  000E12  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1232  000E14  EF10  F007         	goto	u790
  1233  000E18  EF0E  F007         	goto	u791
  1234  000E1C                     u791:
  1235  000E1C  EF14  F007         	goto	l1877
  1236  000E20                     u790:
  1237  000E20                     
  1238                           ; BSR set to: 0
  1239  000E20  6DC4               	negf	___awmod@divisor& (0+255),b
  1240  000E22  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1241  000E24  B0D8               	btfsc	status,0,c
  1242  000E26  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1243  000E28                     l1877:
  1244                           
  1245                           ; BSR set to: 0
  1246  000E28  51C4               	movf	___awmod@divisor& (0+255),w,b
  1247  000E2A  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1248  000E2C  B4D8               	btfsc	status,2,c
  1249  000E2E  EF1B  F007         	goto	u801
  1250  000E32  EF1D  F007         	goto	u800
  1251  000E36                     u801:
  1252  000E36  EF41  F007         	goto	l1893
  1253  000E3A                     u800:
  1254  000E3A                     
  1255                           ; BSR set to: 0
  1256  000E3A  0E01               	movlw	1
  1257  000E3C  6FC6               	movwf	___awmod@counter& (0+255),b
  1258  000E3E  EF25  F007         	goto	l1883
  1259  000E42                     l1881:
  1260                           
  1261                           ; BSR set to: 0
  1262  000E42  90D8               	bcf	status,0,c
  1263  000E44  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1264  000E46  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1265  000E48  2BC6               	incf	___awmod@counter& (0+255),f,b
  1266  000E4A                     l1883:
  1267                           
  1268                           ; BSR set to: 0
  1269  000E4A  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1270  000E4C  EF2A  F007         	goto	u811
  1271  000E50  EF2C  F007         	goto	u810
  1272  000E54                     u811:
  1273  000E54  EF21  F007         	goto	l1881
  1274  000E58                     u810:
  1275  000E58                     l1885:
  1276                           
  1277                           ; BSR set to: 0
  1278  000E58  51C4               	movf	___awmod@divisor& (0+255),w,b
  1279  000E5A  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1280  000E5C  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1281  000E5E  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1282  000E60  A0D8               	btfss	status,0,c
  1283  000E62  EF35  F007         	goto	u821
  1284  000E66  EF37  F007         	goto	u820
  1285  000E6A                     u821:
  1286  000E6A  EF3B  F007         	goto	l1889
  1287  000E6E                     u820:
  1288  000E6E                     
  1289                           ; BSR set to: 0
  1290  000E6E  51C4               	movf	___awmod@divisor& (0+255),w,b
  1291  000E70  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1292  000E72  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1293  000E74  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1294  000E76                     l1889:
  1295                           
  1296                           ; BSR set to: 0
  1297  000E76  90D8               	bcf	status,0,c
  1298  000E78  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1299  000E7A  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1300  000E7C                     
  1301                           ; BSR set to: 0
  1302  000E7C  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1303  000E7E  EF2C  F007         	goto	l1885
  1304  000E82                     l1893:
  1305                           
  1306                           ; BSR set to: 0
  1307  000E82  51C7               	movf	___awmod@sign& (0+255),w,b
  1308  000E84  B4D8               	btfsc	status,2,c
  1309  000E86  EF47  F007         	goto	u831
  1310  000E8A  EF49  F007         	goto	u830
  1311  000E8E                     u831:
  1312  000E8E  EF4D  F007         	goto	l1897
  1313  000E92                     u830:
  1314  000E92                     
  1315                           ; BSR set to: 0
  1316  000E92  6DC2               	negf	___awmod@dividend& (0+255),b
  1317  000E94  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1318  000E96  B0D8               	btfsc	status,0,c
  1319  000E98  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1320  000E9A                     l1897:
  1321                           
  1322                           ; BSR set to: 0
  1323  000E9A  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1324  000E9E  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1325  000EA2                     
  1326                           ; BSR set to: 0
  1327  000EA2  0012               	return		;funcret
  1328  000EA4                     __end_of___awmod:
  1329                           	opt callstack 0
  1330                           
  1331 ;; *************** function _metToucheCombien *****************
  1332 ;; Defined at:
  1333 ;;		line 162 in file "main.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  j               1   22[BANK0 ] unsigned char 
  1338 ;;  i               1   21[BANK0 ] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         0       0       0       0       0       0       0
  1349 ;;      Locals:         0       2       0       0       0       0       0
  1350 ;;      Temps:          0       3       0       0       0       0       0
  1351 ;;      Totals:         0       5       0       0       0       0       0
  1352 ;;Total ram usage:        5 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    2
  1355 ;; This function calls:
  1356 ;;		_calculToucheCombien
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text5
  1363  000930                     __ptext5:
  1364                           	opt callstack 0
  1365  000930                     _metToucheCombien:
  1366                           	opt callstack 28
  1367  000930                     
  1368                           ;main.c: 164: for (char i = 0; i < 4; i++)
  1369  000930  0E00               	movlw	0
  1370  000932  0100               	movlb	0	; force () banked
  1371  000934  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1372  000936                     
  1373                           ; BSR set to: 0
  1374  000936  0E03               	movlw	3
  1375  000938  0100               	movlb	0	; force () banked
  1376  00093A  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1377  00093C  EFA2  F004         	goto	u971
  1378  000940  EFA4  F004         	goto	u970
  1379  000944                     u971:
  1380  000944  EFA6  F004         	goto	l1995
  1381  000948                     u970:
  1382  000948  EF46  F005         	goto	l96
  1383  00094C                     l1995:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;main.c: 165: {;main.c: 166: for(char j=0;j<20;j++)
  1387  00094C  0E00               	movlw	0
  1388  00094E  0100               	movlb	0	; force () banked
  1389  000950  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1390  000952                     
  1391                           ; BSR set to: 0
  1392  000952  0E13               	movlw	19
  1393  000954  0100               	movlb	0	; force () banked
  1394  000956  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1395  000958  EFB0  F004         	goto	u981
  1396  00095C  EFB2  F004         	goto	u980
  1397  000960                     u981:
  1398  000960  EFB4  F004         	goto	l2001
  1399  000964                     u980:
  1400  000964  EF3B  F005         	goto	l2013
  1401  000968                     l2001:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;main.c: 167: {;main.c: 168: if(m_tabMines[i][j]!=2)
  1405  000968  0100               	movlb	0	; force () banked
  1406  00096A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1407  00096C  0D15               	mullw	21
  1408  00096E  0E60               	movlw	low _m_tabMines
  1409  000970  0100               	movlb	0	; force () banked
  1410  000972  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1411  000974  0E00               	movlw	high _m_tabMines
  1412  000976  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1413  000978  50F3               	movf	243,w,c
  1414  00097A  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1415  00097C  50F4               	movf	244,w,c
  1416  00097E  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1417  000980  0100               	movlb	0	; force () banked
  1418  000982  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1419  000984  0100               	movlb	0	; force () banked
  1420  000986  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1421  000988  6ED9               	movwf	fsr2l,c
  1422  00098A  0100               	movlb	0	; force () banked
  1423  00098C  0E00               	movlw	0
  1424  00098E  0100               	movlb	0	; force () banked
  1425  000990  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1426  000992  6EDA               	movwf	fsr2h,c
  1427  000994  0E02               	movlw	2
  1428  000996  18DE               	xorwf	postinc2,w,c
  1429  000998  B4D8               	btfsc	status,2,c
  1430  00099A  EFD1  F004         	goto	u991
  1431  00099E  EFD3  F004         	goto	u990
  1432  0009A2                     u991:
  1433  0009A2  EFF9  F004         	goto	l2005
  1434  0009A6                     u990:
  1435  0009A6                     
  1436                           ; BSR set to: 0
  1437                           ;main.c: 169: m_tabMines[i][j]=calculToucheCombien(i,j)+48;
  1438  0009A6  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1439  0009AA  0100               	movlb	0	; force () banked
  1440  0009AC  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1441  0009AE  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1442  0009B2  0100               	movlb	0	; force () banked
  1443  0009B4  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1444  0009B6  EC0A  F003         	call	_calculToucheCombien	;wreg free
  1445  0009BA  0100               	movlb	0	; force () banked
  1446  0009BC  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1447  0009BE  0E30               	movlw	48
  1448  0009C0  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1449  0009C2  0100               	movlb	0	; force () banked
  1450  0009C4  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1451  0009C6  0D15               	mullw	21
  1452  0009C8  0E60               	movlw	low _m_tabMines
  1453  0009CA  0100               	movlb	0	; force () banked
  1454  0009CC  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1455  0009CE  0E00               	movlw	high _m_tabMines
  1456  0009D0  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1457  0009D2  50F3               	movf	243,w,c
  1458  0009D4  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1459  0009D6  50F4               	movf	244,w,c
  1460  0009D8  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1461  0009DA  0100               	movlb	0	; force () banked
  1462  0009DC  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1463  0009DE  0100               	movlb	0	; force () banked
  1464  0009E0  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1465  0009E2  6ED9               	movwf	fsr2l,c
  1466  0009E4  0100               	movlb	0	; force () banked
  1467  0009E6  0E00               	movlw	0
  1468  0009E8  0100               	movlb	0	; force () banked
  1469  0009EA  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1470  0009EC  6EDA               	movwf	fsr2h,c
  1471  0009EE  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1472  0009F2                     l2005:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;main.c: 170: if(m_tabMines[i][j]=='0')
  1476  0009F2  0100               	movlb	0	; force () banked
  1477  0009F4  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1478  0009F6  0D15               	mullw	21
  1479  0009F8  0E60               	movlw	low _m_tabMines
  1480  0009FA  0100               	movlb	0	; force () banked
  1481  0009FC  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1482  0009FE  0E00               	movlw	high _m_tabMines
  1483  000A00  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1484  000A02  50F3               	movf	243,w,c
  1485  000A04  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1486  000A06  50F4               	movf	244,w,c
  1487  000A08  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1488  000A0A  0100               	movlb	0	; force () banked
  1489  000A0C  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1490  000A0E  0100               	movlb	0	; force () banked
  1491  000A10  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1492  000A12  6ED9               	movwf	fsr2l,c
  1493  000A14  0100               	movlb	0	; force () banked
  1494  000A16  0E00               	movlw	0
  1495  000A18  0100               	movlb	0	; force () banked
  1496  000A1A  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1497  000A1C  6EDA               	movwf	fsr2h,c
  1498  000A1E  0E30               	movlw	48
  1499  000A20  18DE               	xorwf	postinc2,w,c
  1500  000A22  A4D8               	btfss	status,2,c
  1501  000A24  EF16  F005         	goto	u1001
  1502  000A28  EF18  F005         	goto	u1000
  1503  000A2C                     u1001:
  1504  000A2C  EF30  F005         	goto	l2009
  1505  000A30                     u1000:
  1506  000A30                     
  1507                           ; BSR set to: 0
  1508                           ;main.c: 171: m_tabMines[i][j]=' ';
  1509  000A30  0100               	movlb	0	; force () banked
  1510  000A32  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1511  000A34  0D15               	mullw	21
  1512  000A36  0E60               	movlw	low _m_tabMines
  1513  000A38  0100               	movlb	0	; force () banked
  1514  000A3A  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1515  000A3C  0E00               	movlw	high _m_tabMines
  1516  000A3E  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1517  000A40  50F3               	movf	243,w,c
  1518  000A42  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1519  000A44  50F4               	movf	244,w,c
  1520  000A46  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1521  000A48  0100               	movlb	0	; force () banked
  1522  000A4A  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1523  000A4C  0100               	movlb	0	; force () banked
  1524  000A4E  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1525  000A50  6ED9               	movwf	fsr2l,c
  1526  000A52  0100               	movlb	0	; force () banked
  1527  000A54  0E00               	movlw	0
  1528  000A56  0100               	movlb	0	; force () banked
  1529  000A58  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1530  000A5A  6EDA               	movwf	fsr2h,c
  1531  000A5C  0E20               	movlw	32
  1532  000A5E  6EDF               	movwf	indf2,c
  1533  000A60                     l2009:
  1534                           
  1535                           ; BSR set to: 0
  1536  000A60  0100               	movlb	0	; force () banked
  1537  000A62  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1538  000A64                     
  1539                           ; BSR set to: 0
  1540  000A64  0E13               	movlw	19
  1541  000A66  0100               	movlb	0	; force () banked
  1542  000A68  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1543  000A6A  EF39  F005         	goto	u1011
  1544  000A6E  EF3B  F005         	goto	u1010
  1545  000A72                     u1011:
  1546  000A72  EFB4  F004         	goto	l2001
  1547  000A76                     u1010:
  1548  000A76                     l2013:
  1549                           
  1550                           ; BSR set to: 0
  1551  000A76  0100               	movlb	0	; force () banked
  1552  000A78  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1553  000A7A                     
  1554                           ; BSR set to: 0
  1555  000A7A  0E03               	movlw	3
  1556  000A7C  0100               	movlb	0	; force () banked
  1557  000A7E  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1558  000A80  EF44  F005         	goto	u1021
  1559  000A84  EF46  F005         	goto	u1020
  1560  000A88                     u1021:
  1561  000A88  EFA6  F004         	goto	l1995
  1562  000A8C                     u1020:
  1563  000A8C                     l96:
  1564                           
  1565                           ; BSR set to: 0
  1566  000A8C  0012               	return		;funcret
  1567  000A8E                     __end_of_metToucheCombien:
  1568                           	opt callstack 0
  1569                           
  1570 ;; *************** function _calculToucheCombien *****************
  1571 ;; Defined at:
  1572 ;;		line 180 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  ligne           2    6[BANK0 ] int 
  1575 ;;  colonne         2    8[BANK0 ] int 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  j               2   16[BANK0 ] int 
  1578 ;;  i               2   14[BANK0 ] int 
  1579 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      unsigned char 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1589 ;;      Params:         0       4       0       0       0       0       0
  1590 ;;      Locals:         0       5       0       0       0       0       0
  1591 ;;      Temps:          0       3       0       0       0       0       0
  1592 ;;      Totals:         0      12       0       0       0       0       0
  1593 ;;Total ram usage:       12 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    1
  1596 ;; This function calls:
  1597 ;;		___wmul
  1598 ;; This function is called by:
  1599 ;;		_metToucheCombien
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text6
  1604  000614                     __ptext6:
  1605                           	opt callstack 0
  1606  000614                     _calculToucheCombien:
  1607                           	opt callstack 28
  1608  000614                     
  1609                           ;main.c: 182: int i=ligne-1;
  1610  000614  0EFF               	movlw	255
  1611  000616  0100               	movlb	0	; force () banked
  1612  000618  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1613  00061A  0100               	movlb	0	; force () banked
  1614  00061C  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1615  00061E  0EFF               	movlw	255
  1616  000620  0100               	movlb	0	; force () banked
  1617  000622  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1618  000624  0100               	movlb	0	; force () banked
  1619  000626  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1620                           
  1621                           ;main.c: 183: int j=colonne-1;
  1622  000628  0EFF               	movlw	255
  1623  00062A  0100               	movlb	0	; force () banked
  1624  00062C  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1625  00062E  0100               	movlb	0	; force () banked
  1626  000630  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1627  000632  0EFF               	movlw	255
  1628  000634  0100               	movlb	0	; force () banked
  1629  000636  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1630  000638  0100               	movlb	0	; force () banked
  1631  00063A  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1632  00063C                     
  1633                           ; BSR set to: 0
  1634                           ;main.c: 184: char nbMines=0;
  1635  00063C  0E00               	movlw	0
  1636  00063E  0100               	movlb	0	; force () banked
  1637  000640  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1638  000642                     
  1639                           ; BSR set to: 0
  1640                           ;main.c: 186: if(i<0)
  1641  000642  0100               	movlb	0	; force () banked
  1642  000644  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1643  000646  EF29  F003         	goto	u660
  1644  00064A  EF27  F003         	goto	u661
  1645  00064E                     u661:
  1646  00064E  EF2E  F003         	goto	l1759
  1647  000652                     u660:
  1648  000652                     
  1649                           ; BSR set to: 0
  1650                           ;main.c: 187: i=0;
  1651  000652  0E00               	movlw	0
  1652  000654  0100               	movlb	0	; force () banked
  1653  000656  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1654  000658  0E00               	movlw	0
  1655  00065A  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1656  00065C                     l1759:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;main.c: 188: if(j<0)
  1660  00065C  0100               	movlb	0	; force () banked
  1661  00065E  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1662  000660  EF36  F003         	goto	u670
  1663  000664  EF34  F003         	goto	u671
  1664  000668                     u671:
  1665  000668  EFAC  F003         	goto	l1775
  1666  00066C                     u670:
  1667  00066C                     
  1668                           ; BSR set to: 0
  1669                           ;main.c: 189: j=0;
  1670  00066C  0E00               	movlw	0
  1671  00066E  0100               	movlb	0	; force () banked
  1672  000670  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1673  000672  0E00               	movlw	0
  1674  000674  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1675  000676  EFAC  F003         	goto	l1775
  1676  00067A                     l1763:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 192: {;main.c: 193: for(j=j=colonne-1;(j<=(colonne+1))&&(j<20);j++)
  1680  00067A  0EFF               	movlw	255
  1681  00067C  0100               	movlb	0	; force () banked
  1682  00067E  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1683  000680  0100               	movlb	0	; force () banked
  1684  000682  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1685  000684  0EFF               	movlw	255
  1686  000686  0100               	movlb	0	; force () banked
  1687  000688  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1688  00068A  0100               	movlb	0	; force () banked
  1689  00068C  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1690  00068E  C0C4  F0C4         	movff	calculToucheCombien@j,calculToucheCombien@j
  1691  000692  C0C5  F0C5         	movff	calculToucheCombien@j+1,calculToucheCombien@j+1
  1692  000696  EF7D  F003         	goto	l1769
  1693  00069A                     l1765:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;main.c: 194: {;main.c: 195: if (m_tabMines[i][j]==2)
  1697  00069A  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1698  00069E  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1699  0006A2  0E00               	movlw	0
  1700  0006A4  0100               	movlb	0	; force () banked
  1701  0006A6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1702  0006A8  0E15               	movlw	21
  1703  0006AA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1704  0006AC  ECE2  F009         	call	___wmul	;wreg free
  1705  0006B0  0E60               	movlw	low _m_tabMines
  1706  0006B2  0100               	movlb	0	; force () banked
  1707  0006B4  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1708  0006B6  0E00               	movlw	high _m_tabMines
  1709  0006B8  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1710  0006BA  0100               	movlb	0	; force () banked
  1711  0006BC  51B4               	movf	?___wmul& (0+255),w,b
  1712  0006BE  0100               	movlb	0	; force () banked
  1713  0006C0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1714  0006C2  0100               	movlb	0	; force () banked
  1715  0006C4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1716  0006C6  0100               	movlb	0	; force () banked
  1717  0006C8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1718  0006CA  0100               	movlb	0	; force () banked
  1719  0006CC  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1720  0006CE  0100               	movlb	0	; force () banked
  1721  0006D0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1722  0006D2  6ED9               	movwf	fsr2l,c
  1723  0006D4  0100               	movlb	0	; force () banked
  1724  0006D6  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1725  0006D8  0100               	movlb	0	; force () banked
  1726  0006DA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1727  0006DC  6EDA               	movwf	fsr2h,c
  1728  0006DE  0E02               	movlw	2
  1729  0006E0  18DE               	xorwf	postinc2,w,c
  1730  0006E2  A4D8               	btfss	status,2,c
  1731  0006E4  EF76  F003         	goto	u681
  1732  0006E8  EF78  F003         	goto	u680
  1733  0006EC                     u681:
  1734  0006EC  EF7A  F003         	goto	l105
  1735  0006F0                     u680:
  1736  0006F0                     
  1737                           ; BSR set to: 0
  1738                           ;main.c: 196: nbMines++;
  1739  0006F0  0100               	movlb	0	; force () banked
  1740  0006F2  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1741  0006F4                     l105:
  1742                           
  1743                           ; BSR set to: 0
  1744  0006F4  0100               	movlb	0	; force () banked
  1745  0006F6  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1746  0006F8  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1747  0006FA                     l1769:
  1748                           
  1749                           ; BSR set to: 0
  1750  0006FA  0E01               	movlw	1
  1751  0006FC  0100               	movlb	0	; force () banked
  1752  0006FE  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1753  000700  0100               	movlb	0	; force () banked
  1754  000702  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1755  000704  0E00               	movlw	0
  1756  000706  0100               	movlb	0	; force () banked
  1757  000708  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1758  00070A  0100               	movlb	0	; force () banked
  1759  00070C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1760  00070E  0100               	movlb	0	; force () banked
  1761  000710  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1762  000712  0100               	movlb	0	; force () banked
  1763  000714  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1764  000716  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1765  000718  0A80               	xorlw	128
  1766  00071A  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1767  00071C  0100               	movlb	0	; force () banked
  1768  00071E  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1769  000720  0A80               	xorlw	128
  1770  000722  0100               	movlb	0	; force () banked
  1771  000724  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1772  000726  A0D8               	btfss	status,0,c
  1773  000728  EF98  F003         	goto	u691
  1774  00072C  EF9A  F003         	goto	u690
  1775  000730                     u691:
  1776  000730  EFA9  F003         	goto	l1773
  1777  000734                     u690:
  1778  000734                     
  1779                           ; BSR set to: 0
  1780  000734  0100               	movlb	0	; force () banked
  1781  000736  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1782  000738  EFA7  F003         	goto	u701
  1783  00073C  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1784  00073E  E109               	bnz	u700
  1785  000740  0E14               	movlw	20
  1786  000742  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1787  000744  A0D8               	btfss	status,0,c
  1788  000746  EFA7  F003         	goto	u701
  1789  00074A  EFA9  F003         	goto	u700
  1790  00074E                     u701:
  1791  00074E  EF4D  F003         	goto	l1765
  1792  000752                     u700:
  1793  000752                     l1773:
  1794                           
  1795                           ; BSR set to: 0
  1796  000752  0100               	movlb	0	; force () banked
  1797  000754  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1798  000756  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1799  000758                     l1775:
  1800                           
  1801                           ; BSR set to: 0
  1802  000758  0E01               	movlw	1
  1803  00075A  0100               	movlb	0	; force () banked
  1804  00075C  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1805  00075E  0100               	movlb	0	; force () banked
  1806  000760  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1807  000762  0E00               	movlw	0
  1808  000764  0100               	movlb	0	; force () banked
  1809  000766  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1810  000768  0100               	movlb	0	; force () banked
  1811  00076A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1812  00076C  0100               	movlb	0	; force () banked
  1813  00076E  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1814  000770  0100               	movlb	0	; force () banked
  1815  000772  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1816  000774  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1817  000776  0A80               	xorlw	128
  1818  000778  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1819  00077A  0100               	movlb	0	; force () banked
  1820  00077C  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1821  00077E  0A80               	xorlw	128
  1822  000780  0100               	movlb	0	; force () banked
  1823  000782  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1824  000784  A0D8               	btfss	status,0,c
  1825  000786  EFC7  F003         	goto	u711
  1826  00078A  EFC9  F003         	goto	u710
  1827  00078E                     u711:
  1828  00078E  EFD8  F003         	goto	l1779
  1829  000792                     u710:
  1830  000792                     
  1831                           ; BSR set to: 0
  1832  000792  0100               	movlb	0	; force () banked
  1833  000794  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1834  000796  EFD6  F003         	goto	u721
  1835  00079A  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1836  00079C  E109               	bnz	u720
  1837  00079E  0E04               	movlw	4
  1838  0007A0  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1839  0007A2  A0D8               	btfss	status,0,c
  1840  0007A4  EFD6  F003         	goto	u721
  1841  0007A8  EFD8  F003         	goto	u720
  1842  0007AC                     u721:
  1843  0007AC  EF3D  F003         	goto	l1763
  1844  0007B0                     u720:
  1845  0007B0                     l1779:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;main.c: 197: };main.c: 198: };main.c: 199: return nbMines;
  1849  0007B0  0100               	movlb	0	; force () banked
  1850  0007B2  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1851  0007B4                     
  1852                           ; BSR set to: 0
  1853  0007B4  0012               	return		;funcret
  1854  0007B6                     __end_of_calculToucheCombien:
  1855                           	opt callstack 0
  1856                           
  1857 ;; *************** function ___wmul *****************
  1858 ;; Defined at:
  1859 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1862 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  product         2    4[BANK0 ] unsigned int 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2    0[BANK0 ] unsigned int 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, prodl, prodh
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1874 ;;      Params:         0       4       0       0       0       0       0
  1875 ;;      Locals:         0       2       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0
  1877 ;;      Totals:         0       6       0       0       0       0       0
  1878 ;;Total ram usage:        6 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_calculToucheCombien
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text7
  1888  0013C4                     __ptext7:
  1889                           	opt callstack 0
  1890  0013C4                     ___wmul:
  1891                           	opt callstack 28
  1892  0013C4  0100               	movlb	0	; () banked
  1893  0013C6  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1894  0013C8  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1895  0013CA  CFF3 F0B8          	movff	prodl,___wmul@product
  1896  0013CE  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1897  0013D2  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1898  0013D4  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1899  0013D6  50F3               	movf	243,w,c
  1900  0013D8  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1901  0013DA  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1902  0013DC  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1903  0013DE  50F3               	movf	243,w,c
  1904  0013E0  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1905  0013E2                     
  1906                           ; BSR set to: 0
  1907  0013E2  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1908  0013E6  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1909  0013EA                     
  1910                           ; BSR set to: 0
  1911  0013EA  0012               	return		;funcret
  1912  0013EC                     __end_of___wmul:
  1913                           	opt callstack 0
  1914                           
  1915 ;; *************** function _lcd_putMessage *****************
  1916 ;; Defined at:
  1917 ;;		line 387 in file "Lcd4Lignes.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  1920 ;;		 -> m_tabMines(84), m_tabVue(84), STR_1(17), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  j               1   13[BANK0 ] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         0       3       0       0       0       0       0
  1933 ;;      Locals:         0       1       0       0       0       0       0
  1934 ;;      Temps:          0       5       0       0       0       0       0
  1935 ;;      Totals:         0       9       0       0       0       0       0
  1936 ;;Total ram usage:        9 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    4
  1939 ;; This function calls:
  1940 ;;		_lcd_ecritChar
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text8
  1947  000D3E                     __ptext8:
  1948                           	opt callstack 0
  1949  000D3E                     _lcd_putMessage:
  1950                           	opt callstack 26
  1951  000D3E                     
  1952                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  1953  000D3E  0E00               	movlw	0
  1954  000D40  0100               	movlb	0	; force () banked
  1955  000D42  6FC1               	movwf	lcd_putMessage@j& (0+255),b
  1956  000D44  EFCC  F006         	goto	l1931
  1957  000D48                     l1927:
  1958                           
  1959                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  1960  000D48  0100               	movlb	0	; force () banked
  1961  000D4A  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  1962  000D4C  0100               	movlb	0	; force () banked
  1963  000D4E  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  1964  000D50  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  1965  000D52  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  1966  000D54  0100               	movlb	0	; force () banked
  1967  000D56  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1968  000D58  0100               	movlb	0	; force () banked
  1969  000D5A  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  1970  000D5C  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  1971  000D5E  0100               	movlb	0	; force () banked
  1972  000D60  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1973  000D62  0100               	movlb	0	; force () banked
  1974  000D64  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  1975  000D66  0E00               	movlw	0
  1976  000D68  0100               	movlb	0	; force () banked
  1977  000D6A  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  1978  000D6C  0100               	movlb	0	; force () banked
  1979  000D6E  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  1980  000D70  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  1981  000D74  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  1982  000D78  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  1983  000D7C  BAF8               	btfsc	tblptru,5,c
  1984  000D7E  D003               	bra	u847
  1985  000D80  0008               	tblrd		*
  1986  000D82  50F5               	movf	tablat,w,c
  1987  000D84  D005               	bra	u840
  1988  000D86                     u847:
  1989  000D86  CFF6 FFD9          	movff	tblptrl,fsr2l
  1990  000D8A  CFF7 FFDA          	movff	tblptrh,fsr2h
  1991  000D8E  50DF               	movf	indf2,w,c
  1992  000D90                     u840:
  1993  000D90  EC2D  F009         	call	_lcd_ecritChar
  1994  000D94  0100               	movlb	0	; force () banked
  1995  000D96  2BC1               	incf	lcd_putMessage@j& (0+255),f,b
  1996  000D98                     l1931:
  1997                           
  1998                           ; BSR set to: 0
  1999  000D98  0100               	movlb	0	; force () banked
  2000  000D9A  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  2001  000D9C  0100               	movlb	0	; force () banked
  2002  000D9E  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  2003  000DA0  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  2004  000DA2  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  2005  000DA4  0100               	movlb	0	; force () banked
  2006  000DA6  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  2007  000DA8  0100               	movlb	0	; force () banked
  2008  000DAA  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  2009  000DAC  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  2010  000DAE  0100               	movlb	0	; force () banked
  2011  000DB0  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  2012  000DB2  0100               	movlb	0	; force () banked
  2013  000DB4  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  2014  000DB6  0E00               	movlw	0
  2015  000DB8  0100               	movlb	0	; force () banked
  2016  000DBA  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  2017  000DBC  0100               	movlb	0	; force () banked
  2018  000DBE  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  2019  000DC0  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  2020  000DC4  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  2021  000DC8  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  2022  000DCC  BAF8               	btfsc	tblptru,5,c
  2023  000DCE  D003               	bra	u857
  2024  000DD0  0008               	tblrd		*
  2025  000DD2  50F5               	movf	tablat,w,c
  2026  000DD4  D005               	bra	u850
  2027  000DD6                     u857:
  2028  000DD6  CFF6 FFD9          	movff	tblptrl,fsr2l
  2029  000DDA  CFF7 FFDA          	movff	tblptrh,fsr2h
  2030  000DDE  50DF               	movf	indf2,w,c
  2031  000DE0                     u850:
  2032  000DE0  0900               	iorlw	0
  2033  000DE2  A4D8               	btfss	status,2,c
  2034  000DE4  EFF6  F006         	goto	u861
  2035  000DE8  EFF8  F006         	goto	u860
  2036  000DEC                     u861:
  2037  000DEC  EFA4  F006         	goto	l1927
  2038  000DF0                     u860:
  2039  000DF0  0012               	return		;funcret
  2040  000DF2                     __end_of_lcd_putMessage:
  2041                           	opt callstack 0
  2042                           
  2043 ;; *************** function _lcd_ecritChar *****************
  2044 ;; Defined at:
  2045 ;;		line 359 in file "Lcd4Lignes.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  car             1    wreg     unsigned char 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  car             1    3[BANK0 ] unsigned char 
  2050 ;;  posRam          1    4[BANK0 ] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2060 ;;      Params:         0       0       0       0       0       0       0
  2061 ;;      Locals:         0       2       0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0
  2063 ;;      Totals:         0       2       0       0       0       0       0
  2064 ;;Total ram usage:        2 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    3
  2067 ;; This function calls:
  2068 ;;		_lcd_wrCom
  2069 ;;		_lcd_wrData
  2070 ;; This function is called by:
  2071 ;;		_lcd_putMessage
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text9
  2076  00125A                     __ptext9:
  2077                           	opt callstack 0
  2078  00125A                     _lcd_ecritChar:
  2079                           	opt callstack 26
  2080                           
  2081                           ;incstack = 0
  2082                           ;lcd_ecritChar@car stored from wreg
  2083  00125A  0100               	movlb	0	; force () banked
  2084  00125C  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  2085  00125E                     
  2086                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  2087  00125E  0100               	movlb	0	; force () banked
  2088  001260  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  2089  001262  EC98  F009         	call	_lcd_wrData
  2090  001266  0100               	movlb	0	; force () banked
  2091  001268  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  2092                           
  2093                           ;Lcd4Lignes.c: 364: switch(posRam)
  2094  00126A  EF46  F009         	goto	l1863
  2095  00126E                     l1855:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  2099  00126E  0EC0               	movlw	192
  2100  001270  EC68  F008         	call	_lcd_wrCom
  2101                           
  2102                           ;Lcd4Lignes.c: 368: break;
  2103  001274  EF56  F009         	goto	l214
  2104  001278                     l1857:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  2108  001278  0E94               	movlw	148
  2109  00127A  EC68  F008         	call	_lcd_wrCom
  2110                           
  2111                           ;Lcd4Lignes.c: 371: break;
  2112  00127E  EF56  F009         	goto	l214
  2113  001282                     l1859:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  2117  001282  0ED4               	movlw	212
  2118  001284  EC68  F008         	call	_lcd_wrCom
  2119                           
  2120                           ;Lcd4Lignes.c: 374: break;
  2121  001288  EF56  F009         	goto	l214
  2122  00128C                     l1863:
  2123                           
  2124                           ; BSR set to: 0
  2125  00128C  0100               	movlb	0	; force () banked
  2126  00128E  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  2127                           
  2128                           ; Switch size 1, requested type "simple"
  2129                           ; Number of cases is 3, Range of values is 148 to 212
  2130                           ; switch strategies available:
  2131                           ; Name         Instructions Cycles
  2132                           ; simple_byte           10     6 (average)
  2133                           ;	Chosen strategy is simple_byte
  2134  001290  0A94               	xorlw	148	; case 148
  2135  001292  B4D8               	btfsc	status,2,c
  2136  001294  EF37  F009         	goto	l1855
  2137  001298  0A54               	xorlw	84	; case 192
  2138  00129A  B4D8               	btfsc	status,2,c
  2139  00129C  EF41  F009         	goto	l1859
  2140  0012A0  0A14               	xorlw	20	; case 212
  2141  0012A2  B4D8               	btfsc	status,2,c
  2142  0012A4  EF3C  F009         	goto	l1857
  2143  0012A8  EF56  F009         	goto	l214
  2144  0012AC                     l214:
  2145  0012AC  0012               	return		;funcret
  2146  0012AE                     __end_of_lcd_ecritChar:
  2147                           	opt callstack 0
  2148                           
  2149 ;; *************** function _lcd_init *****************
  2150 ;; Defined at:
  2151 ;;		line 258 in file "Lcd4Lignes.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2165 ;;      Params:         0       0       0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0
  2168 ;;      Totals:         0       0       0       0       0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    5
  2172 ;; This function calls:
  2173 ;;		_lcd_initCGRam
  2174 ;;		_lcd_resetSequence
  2175 ;;		_lcd_wrCom
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text10
  2182  0013EC                     __ptext10:
  2183                           	opt callstack 0
  2184  0013EC                     _lcd_init:
  2185                           	opt callstack 25
  2186  0013EC                     
  2187                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2188  0013EC  EC9E  F008         	call	_lcd_resetSequence	;wreg free
  2189                           
  2190                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2191  0013F0  0E28               	movlw	40
  2192  0013F2  EC68  F008         	call	_lcd_wrCom
  2193                           
  2194                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2195  0013F6  0E0F               	movlw	15
  2196  0013F8  EC68  F008         	call	_lcd_wrCom
  2197                           
  2198                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2199  0013FC  0E01               	movlw	1
  2200  0013FE  EC68  F008         	call	_lcd_wrCom
  2201                           
  2202                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2203  001402  0E06               	movlw	6
  2204  001404  EC68  F008         	call	_lcd_wrCom
  2205                           
  2206                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2207  001408  0E80               	movlw	128
  2208  00140A  EC68  F008         	call	_lcd_wrCom
  2209  00140E                     
  2210                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2211  00140E  ECA8  F007         	call	_lcd_initCGRam	;wreg free
  2212  001412  0012               	return		;funcret
  2213  001414                     __end_of_lcd_init:
  2214                           	opt callstack 0
  2215                           
  2216 ;; *************** function _lcd_resetSequence *****************
  2217 ;; Defined at:
  2218 ;;		line 221 in file "Lcd4Lignes.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2232 ;;      Params:         0       0       0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0
  2234 ;;      Temps:          0       1       0       0       0       0       0
  2235 ;;      Totals:         0       1       0       0       0       0       0
  2236 ;;Total ram usage:        1 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    1
  2239 ;; This function calls:
  2240 ;;		_lcd_ecrireDonnees
  2241 ;;		_lcd_strobeEnableBit
  2242 ;; This function is called by:
  2243 ;;		_lcd_init
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text11
  2248  00113C                     __ptext11:
  2249                           	opt callstack 0
  2250  00113C                     _lcd_resetSequence:
  2251                           	opt callstack 28
  2252  00113C                     
  2253                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2254  00113C  0E00               	movlw	0
  2255  00113E  6E95               	movwf	149,c	;volatile
  2256  001140                     
  2257                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2258  001140  0E0D               	movlw	13
  2259  001142  0100               	movlb	0	; force () banked
  2260  001144  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2261  001146  0EFB               	movlw	251
  2262  001148                     u1177:
  2263  001148  2EE8               	decfsz	wreg,f,c
  2264  00114A  D7FE               	bra	u1177
  2265  00114C  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2266  00114E  D7FC               	bra	u1177
  2267  001150  F000 F000          	nop2	
  2268  001154                     
  2269                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2270  001154  9080               	bcf	128,0,c	;volatile
  2271  001156                     
  2272                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2273  001156  9280               	bcf	128,1,c	;volatile
  2274  001158                     
  2275                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2276  001158  0E03               	movlw	3
  2277  00115A  EC0A  F00A         	call	_lcd_ecrireDonnees
  2278  00115E                     
  2279                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2280  00115E  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  2281  001162                     
  2282                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2283  001162  0E03               	movlw	3
  2284  001164                     u1187:
  2285  001164  2EE8               	decfsz	wreg,f,c
  2286  001166  D7FE               	bra	u1187
  2287  001168  F000               	nop	
  2288  00116A                     
  2289                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2290  00116A  0E03               	movlw	3
  2291  00116C  EC0A  F00A         	call	_lcd_ecrireDonnees
  2292  001170                     
  2293                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2294  001170  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  2295  001174                     
  2296                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2297  001174  0E03               	movlw	3
  2298  001176                     u1197:
  2299  001176  2EE8               	decfsz	wreg,f,c
  2300  001178  D7FE               	bra	u1197
  2301  00117A  F000               	nop	
  2302  00117C                     
  2303                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2304  00117C  0E03               	movlw	3
  2305  00117E  EC0A  F00A         	call	_lcd_ecrireDonnees
  2306  001182                     
  2307                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2308  001182  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  2309  001186                     
  2310                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2311  001186  0E03               	movlw	3
  2312  001188                     u1207:
  2313  001188  2EE8               	decfsz	wreg,f,c
  2314  00118A  D7FE               	bra	u1207
  2315  00118C  F000               	nop	
  2316  00118E                     
  2317                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2318  00118E  0E02               	movlw	2
  2319  001190  EC0A  F00A         	call	_lcd_ecrireDonnees
  2320  001194                     
  2321                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2322  001194  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  2323  001198                     
  2324                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2325  001198  0E03               	movlw	3
  2326  00119A                     u1217:
  2327  00119A  2EE8               	decfsz	wreg,f,c
  2328  00119C  D7FE               	bra	u1217
  2329  00119E  F000               	nop	
  2330  0011A0                     
  2331                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2332  0011A0  0E0F               	movlw	15
  2333  0011A2  6E95               	movwf	149,c	;volatile
  2334  0011A4  0012               	return		;funcret
  2335  0011A6                     __end_of_lcd_resetSequence:
  2336                           	opt callstack 0
  2337                           
  2338 ;; *************** function _lcd_initCGRam *****************
  2339 ;; Defined at:
  2340 ;;		line 417 in file "Lcd4Lignes.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  j               1    6[BANK0 ] unsigned char 
  2345 ;;  i               1    5[BANK0 ] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2355 ;;      Params:         0       0       0       0       0       0       0
  2356 ;;      Locals:         0       2       0       0       0       0       0
  2357 ;;      Temps:          0       2       0       0       0       0       0
  2358 ;;      Totals:         0       4       0       0       0       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    4
  2362 ;; This function calls:
  2363 ;;		_lcd_curseurHome
  2364 ;;		_lcd_wrCom
  2365 ;;		_lcd_wrData
  2366 ;; This function is called by:
  2367 ;;		_lcd_init
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text12
  2372  000F50                     __ptext12:
  2373                           	opt callstack 0
  2374  000F50                     _lcd_initCGRam:
  2375                           	opt callstack 25
  2376  000F50                     
  2377                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2378  000F50  0E40               	movlw	64
  2379  000F52  EC68  F008         	call	_lcd_wrCom
  2380  000F56                     
  2381                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2382  000F56  0E00               	movlw	0
  2383  000F58  0100               	movlb	0	; force () banked
  2384  000F5A  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2385  000F5C                     
  2386                           ; BSR set to: 0
  2387  000F5C  0E07               	movlw	7
  2388  000F5E  0100               	movlb	0	; force () banked
  2389  000F60  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2390  000F62  EFB5  F007         	goto	u741
  2391  000F66  EFB7  F007         	goto	u740
  2392  000F6A                     u741:
  2393  000F6A  EFB9  F007         	goto	l1835
  2394  000F6E                     u740:
  2395  000F6E  EFF6  F007         	goto	l1851
  2396  000F72                     l1835:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2400  000F72  0E00               	movlw	0
  2401  000F74  0100               	movlb	0	; force () banked
  2402  000F76  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2403  000F78                     
  2404                           ; BSR set to: 0
  2405  000F78  0E07               	movlw	7
  2406  000F7A  0100               	movlb	0	; force () banked
  2407  000F7C  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2408  000F7E  EFC3  F007         	goto	u751
  2409  000F82  EFC5  F007         	goto	u750
  2410  000F86                     u751:
  2411  000F86  EFC7  F007         	goto	l1841
  2412  000F8A                     u750:
  2413  000F8A  EFEB  F007         	goto	l1847
  2414  000F8E                     l1841:
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2418  000F8E  0100               	movlb	0	; force () banked
  2419  000F90  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2420  000F92  0D08               	mullw	8
  2421  000F94  0E54               	movlw	low _matCGRAM
  2422  000F96  0100               	movlb	0	; force () banked
  2423  000F98  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2424  000F9A  0E01               	movlw	high _matCGRAM
  2425  000F9C  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2426  000F9E  50F3               	movf	243,w,c
  2427  000FA0  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2428  000FA2  50F4               	movf	244,w,c
  2429  000FA4  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2430  000FA6  0100               	movlb	0	; force () banked
  2431  000FA8  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2432  000FAA  0100               	movlb	0	; force () banked
  2433  000FAC  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2434  000FAE  6ED9               	movwf	fsr2l,c
  2435  000FB0  0100               	movlb	0	; force () banked
  2436  000FB2  0E00               	movlw	0
  2437  000FB4  0100               	movlb	0	; force () banked
  2438  000FB6  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2439  000FB8  6EDA               	movwf	fsr2h,c
  2440  000FBA  50DF               	movf	indf2,w,c
  2441  000FBC  EC98  F009         	call	_lcd_wrData
  2442  000FC0  0100               	movlb	0	; force () banked
  2443  000FC2  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2444  000FC4                     
  2445                           ; BSR set to: 0
  2446  000FC4  0E07               	movlw	7
  2447  000FC6  0100               	movlb	0	; force () banked
  2448  000FC8  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2449  000FCA  EFE9  F007         	goto	u761
  2450  000FCE  EFEB  F007         	goto	u760
  2451  000FD2                     u761:
  2452  000FD2  EFC7  F007         	goto	l1841
  2453  000FD6                     u760:
  2454  000FD6                     l1847:
  2455                           
  2456                           ; BSR set to: 0
  2457  000FD6  0100               	movlb	0	; force () banked
  2458  000FD8  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2459  000FDA                     
  2460                           ; BSR set to: 0
  2461  000FDA  0E07               	movlw	7
  2462  000FDC  0100               	movlb	0	; force () banked
  2463  000FDE  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2464  000FE0  EFF4  F007         	goto	u771
  2465  000FE4  EFF6  F007         	goto	u770
  2466  000FE8                     u771:
  2467  000FE8  EFB9  F007         	goto	l1835
  2468  000FEC                     u770:
  2469  000FEC                     l1851:
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2473  000FEC  EC20  F00A         	call	_lcd_curseurHome	;wreg free
  2474  000FF0  0012               	return		;funcret
  2475  000FF2                     __end_of_lcd_initCGRam:
  2476                           	opt callstack 0
  2477                           
  2478 ;; *************** function _lcd_wrData *****************
  2479 ;; Defined at:
  2480 ;;		line 188 in file "Lcd4Lignes.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  caractere       1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  caractere       1    2[BANK0 ] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      unsigned char 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         0       0       0       0       0       0       0
  2495 ;;      Locals:         0       1       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0
  2497 ;;      Totals:         0       1       0       0       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    2
  2501 ;; This function calls:
  2502 ;;		_lcd_busy
  2503 ;;		_lcd_ecrireDonnees
  2504 ;;		_lcd_strobeEnableBit
  2505 ;; This function is called by:
  2506 ;;		_lcd_ecritChar
  2507 ;;		_lcd_initCGRam
  2508 ;;		_lcd_effaceChar
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text13
  2513  001330                     __ptext13:
  2514                           	opt callstack 0
  2515  001330                     _lcd_wrData:
  2516                           	opt callstack 26
  2517                           
  2518                           ;incstack = 0
  2519                           ;lcd_wrData@caractere stored from wreg
  2520  001330  0100               	movlb	0	; force () banked
  2521  001332  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  2522  001334                     
  2523                           ;Lcd4Lignes.c: 190: lcd_busy();
  2524  001334  EC57  F009         	call	_lcd_busy	;wreg free
  2525  001338                     
  2526                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  2527  001338  0E00               	movlw	0
  2528  00133A  6E95               	movwf	149,c	;volatile
  2529  00133C                     
  2530                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  2531  00133C  8080               	bsf	128,0,c	;volatile
  2532  00133E                     
  2533                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  2534  00133E  9280               	bcf	128,1,c	;volatile
  2535  001340                     
  2536                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  2537  001340  0100               	movlb	0	; force () banked
  2538  001342  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  2539  001344  0B0F               	andlw	15
  2540  001346  EC0A  F00A         	call	_lcd_ecrireDonnees
  2541  00134A                     
  2542                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  2543  00134A  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  2544  00134E                     
  2545                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  2546  00134E  0100               	movlb	0	; force () banked
  2547  001350  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  2548  001352  EC0A  F00A         	call	_lcd_ecrireDonnees
  2549  001356                     
  2550                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  2551  001356  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  2552  00135A                     
  2553                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  2554  00135A  0E0F               	movlw	15
  2555  00135C  6E95               	movwf	149,c	;volatile
  2556  00135E                     
  2557                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  2558                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  2559  00135E  EC57  F009         	call	_lcd_busy	;wreg free
  2560  001362  0012               	return		;funcret
  2561  001364                     __end_of_lcd_wrData:
  2562                           	opt callstack 0
  2563                           
  2564 ;; *************** function _lcd_curseurHome *****************
  2565 ;; Defined at:
  2566 ;;		line 288 in file "Lcd4Lignes.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         0       0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    3
  2587 ;; This function calls:
  2588 ;;		_lcd_wrCom
  2589 ;; This function is called by:
  2590 ;;		_lcd_initCGRam
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text14
  2595  001440                     __ptext14:
  2596                           	opt callstack 0
  2597  001440                     _lcd_curseurHome:
  2598                           	opt callstack 25
  2599  001440                     
  2600                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2601  001440  0E02               	movlw	2
  2602  001442  EC68  F008         	call	_lcd_wrCom
  2603  001446  0012               	return		;funcret
  2604  001448                     __end_of_lcd_curseurHome:
  2605                           	opt callstack 0
  2606                           
  2607 ;; *************** function _initialisation *****************
  2608 ;; Defined at:
  2609 ;;		line 83 in file "main.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2623 ;;      Params:         0       0       0       0       0       0       0
  2624 ;;      Locals:         0       0       0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0
  2626 ;;      Totals:         0       0       0       0       0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    1
  2630 ;; This function calls:
  2631 ;;		_srand
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text15
  2638  001364                     __ptext15:
  2639                           	opt callstack 0
  2640  001364                     _initialisation:
  2641                           	opt callstack 29
  2642  001364                     
  2643                           ;main.c: 85: TRISD = 0;
  2644  001364  0E00               	movlw	0
  2645  001366  6E95               	movwf	149,c	;volatile
  2646                           
  2647                           ;main.c: 86: ANSELH = 0;
  2648  001368  0E00               	movlw	0
  2649  00136A  6E7F               	movwf	127,c	;volatile
  2650  00136C                     
  2651                           ;main.c: 87: TRISB = 0xFF;
  2652  00136C  6893               	setf	147,c	;volatile
  2653                           
  2654                           ;main.c: 88: ANSEL = 0;
  2655  00136E  0E00               	movlw	0
  2656  001370  6E7E               	movwf	126,c	;volatile
  2657                           
  2658                           ;main.c: 89: TRISA = 0;
  2659  001372  0E00               	movlw	0
  2660  001374  6E92               	movwf	146,c	;volatile
  2661  001376                     
  2662                           ;main.c: 93: T1CONbits.TMR1ON = 1;
  2663  001376  80CD               	bsf	205,0,c	;volatile
  2664  001378                     
  2665                           ;main.c: 94: srand(TMR1);
  2666  001378  CFCE F0B4          	movff	4046,srand@x	;volatile
  2667  00137C  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2668  001380  EC18  F00A         	call	_srand	;wreg free
  2669  001384                     
  2670                           ;main.c: 96: ANSELbits.ANS7 = 1;
  2671  001384  8E7E               	bsf	126,7,c	;volatile
  2672  001386                     
  2673                           ;main.c: 97: ADCON0bits.ADON = 1;
  2674  001386  80C2               	bsf	194,0,c	;volatile
  2675  001388                     
  2676                           ;main.c: 98: ADCON1 = 0;
  2677  001388  0E00               	movlw	0
  2678  00138A  6EC1               	movwf	193,c	;volatile
  2679  00138C                     
  2680                           ;main.c: 99: ADCON2bits.ADFM = 0;
  2681  00138C  9EC0               	bcf	192,7,c	;volatile
  2682  00138E                     
  2683                           ;main.c: 100: ADCON2bits.ACQT = 0;
  2684  00138E  0EC7               	movlw	-57
  2685  001390  16C0               	andwf	192,f,c	;volatile
  2686  001392                     
  2687                           ;main.c: 101: ADCON2bits.ADCS = 0;
  2688  001392  0EF8               	movlw	-8
  2689  001394  16C0               	andwf	192,f,c	;volatile
  2690  001396  0012               	return		;funcret
  2691  001398                     __end_of_initialisation:
  2692                           	opt callstack 0
  2693                           
  2694 ;; *************** function _srand *****************
  2695 ;; Defined at:
  2696 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  x               2    0[BANK0 ] unsigned int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		status,2
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2710 ;;      Params:         0       2       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0
  2713 ;;      Totals:         0       2       0       0       0       0       0
  2714 ;;Total ram usage:        2 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_initialisation
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text16
  2724  001430                     __ptext16:
  2725                           	opt callstack 0
  2726  001430                     _srand:
  2727                           	opt callstack 29
  2728  001430  C0B4  F0D9         	movff	srand@x,_randx
  2729  001434  C0B5  F0DA         	movff	srand@x+1,_randx+1
  2730  001438  0100               	movlb	0	; () banked
  2731  00143A  6BDB               	clrf	(_randx+2)& (0+255),b
  2732  00143C  6BDC               	clrf	(_randx+3)& (0+255),b
  2733  00143E                     
  2734                           ; BSR set to: 0
  2735  00143E  0012               	return		;funcret
  2736  001440                     __end_of_srand:
  2737                           	opt callstack 0
  2738                           
  2739 ;; *************** function _initTabVue *****************
  2740 ;; Defined at:
  2741 ;;		line 111 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  j               1    2[BANK0 ] unsigned char 
  2746 ;;  i               1    3[BANK0 ] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2756 ;;      Params:         0       0       0       0       0       0       0
  2757 ;;      Locals:         0       2       0       0       0       0       0
  2758 ;;      Temps:          0       2       0       0       0       0       0
  2759 ;;      Totals:         0       4       0       0       0       0       0
  2760 ;;Total ram usage:        4 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text17
  2770  000EA4                     __ptext17:
  2771                           	opt callstack 0
  2772  000EA4                     _initTabVue:
  2773                           	opt callstack 30
  2774  000EA4                     
  2775                           ;main.c: 113: for (char i = 0; i < 4; i++)
  2776  000EA4  0E00               	movlw	0
  2777  000EA6  0100               	movlb	0	; force () banked
  2778  000EA8  6FB7               	movwf	initTabVue@i& (0+255),b
  2779  000EAA                     
  2780                           ; BSR set to: 0
  2781  000EAA  0E03               	movlw	3
  2782  000EAC  0100               	movlb	0	; force () banked
  2783  000EAE  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2784  000EB0  EF5C  F007         	goto	u871
  2785  000EB4  EF5E  F007         	goto	u870
  2786  000EB8                     u871:
  2787  000EB8  EF60  F007         	goto	l1939
  2788  000EBC                     u870:
  2789  000EBC  EFA7  F007         	goto	l76
  2790  000EC0                     l1939:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;main.c: 114: {;main.c: 115: for(char j=0;j<20;j++)
  2794  000EC0  0E00               	movlw	0
  2795  000EC2  0100               	movlb	0	; force () banked
  2796  000EC4  6FB6               	movwf	initTabVue@j& (0+255),b
  2797  000EC6                     
  2798                           ; BSR set to: 0
  2799  000EC6  0E13               	movlw	19
  2800  000EC8  0100               	movlb	0	; force () banked
  2801  000ECA  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2802  000ECC  EF6A  F007         	goto	u881
  2803  000ED0  EF6C  F007         	goto	u880
  2804  000ED4                     u881:
  2805  000ED4  EF6E  F007         	goto	l1945
  2806  000ED8                     u880:
  2807  000ED8  EF91  F007         	goto	l1951
  2808  000EDC                     l1945:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;main.c: 116: {;main.c: 117: m_tabVue[i][j]=1;
  2812  000EDC  0100               	movlb	0	; force () banked
  2813  000EDE  51B7               	movf	initTabVue@i& (0+255),w,b
  2814  000EE0  0D15               	mullw	21
  2815  000EE2  0E00               	movlw	low _m_tabVue
  2816  000EE4  0100               	movlb	0	; force () banked
  2817  000EE6  6FB4               	movwf	??_initTabVue& (0+255),b
  2818  000EE8  0E01               	movlw	high _m_tabVue
  2819  000EEA  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  2820  000EEC  50F3               	movf	243,w,c
  2821  000EEE  27B4               	addwf	??_initTabVue& (0+255),f,b
  2822  000EF0  50F4               	movf	244,w,c
  2823  000EF2  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2824  000EF4  0100               	movlb	0	; force () banked
  2825  000EF6  51B6               	movf	initTabVue@j& (0+255),w,b
  2826  000EF8  0100               	movlb	0	; force () banked
  2827  000EFA  25B4               	addwf	??_initTabVue& (0+255),w,b
  2828  000EFC  6ED9               	movwf	fsr2l,c
  2829  000EFE  0100               	movlb	0	; force () banked
  2830  000F00  0E00               	movlw	0
  2831  000F02  0100               	movlb	0	; force () banked
  2832  000F04  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2833  000F06  6EDA               	movwf	fsr2h,c
  2834  000F08  0E01               	movlw	1
  2835  000F0A  6EDF               	movwf	indf2,c
  2836  000F0C                     
  2837                           ; BSR set to: 0
  2838  000F0C  0100               	movlb	0	; force () banked
  2839  000F0E  2BB6               	incf	initTabVue@j& (0+255),f,b
  2840  000F10                     
  2841                           ; BSR set to: 0
  2842  000F10  0E13               	movlw	19
  2843  000F12  0100               	movlb	0	; force () banked
  2844  000F14  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2845  000F16  EF8F  F007         	goto	u891
  2846  000F1A  EF91  F007         	goto	u890
  2847  000F1E                     u891:
  2848  000F1E  EF6E  F007         	goto	l1945
  2849  000F22                     u890:
  2850  000F22                     l1951:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;main.c: 118: };main.c: 119: m_tabVue[i][20]=0;
  2854  000F22  0100               	movlb	0	; force () banked
  2855  000F24  51B7               	movf	initTabVue@i& (0+255),w,b
  2856  000F26  0D15               	mullw	21
  2857  000F28  0E14               	movlw	low (_m_tabVue+20)
  2858  000F2A  24F3               	addwf	243,w,c
  2859  000F2C  6ED9               	movwf	fsr2l,c
  2860  000F2E  0E01               	movlw	high (_m_tabVue+20)
  2861  000F30  20F4               	addwfc	prodh,w,c
  2862  000F32  6EDA               	movwf	fsr2h,c
  2863  000F34  0E00               	movlw	0
  2864  000F36  6EDF               	movwf	indf2,c
  2865  000F38                     
  2866                           ; BSR set to: 0
  2867  000F38  0100               	movlb	0	; force () banked
  2868  000F3A  2BB7               	incf	initTabVue@i& (0+255),f,b
  2869  000F3C                     
  2870                           ; BSR set to: 0
  2871  000F3C  0E03               	movlw	3
  2872  000F3E  0100               	movlb	0	; force () banked
  2873  000F40  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2874  000F42  EFA5  F007         	goto	u901
  2875  000F46  EFA7  F007         	goto	u900
  2876  000F4A                     u901:
  2877  000F4A  EF60  F007         	goto	l1939
  2878  000F4E                     u900:
  2879  000F4E                     l76:
  2880                           
  2881                           ; BSR set to: 0
  2882  000F4E  0012               	return		;funcret
  2883  000F50                     __end_of_initTabVue:
  2884                           	opt callstack 0
  2885                           
  2886 ;; *************** function _deplace *****************
  2887 ;; Defined at:
  2888 ;;		line 207 in file "main.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2891 ;;		 -> main@posX(2), 
  2892 ;;  y               2    7[BANK0 ] PTR unsigned char 
  2893 ;;		 -> main@posY(2), 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  analogY         1   11[BANK0 ] unsigned char 
  2896 ;;  analogX         1   10[BANK0 ] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2906 ;;      Params:         0       4       0       0       0       0       0
  2907 ;;      Locals:         0       2       0       0       0       0       0
  2908 ;;      Temps:          0       1       0       0       0       0       0
  2909 ;;      Totals:         0       7       0       0       0       0       0
  2910 ;;Total ram usage:        7 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    4
  2913 ;; This function calls:
  2914 ;;		_getAnalog
  2915 ;;		_lcd_gotoXY
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text18
  2922  0007B6                     __ptext18:
  2923                           	opt callstack 0
  2924  0007B6                     _deplace:
  2925                           	opt callstack 26
  2926  0007B6                     
  2927                           ;main.c: 209: unsigned char analogX = getAnalog(7);
  2928  0007B6  0E07               	movlw	7
  2929  0007B8  ECCC  F009         	call	_getAnalog
  2930  0007BC  0100               	movlb	0	; force () banked
  2931  0007BE  6FBE               	movwf	deplace@analogX& (0+255),b
  2932                           
  2933                           ;main.c: 212: if (0 <= analogX && analogX <= 80)
  2934  0007C0  0E06               	movlw	6
  2935  0007C2  ECCC  F009         	call	_getAnalog
  2936  0007C6  0100               	movlb	0	; force () banked
  2937  0007C8  6FBF               	movwf	deplace@analogY& (0+255),b
  2938  0007CA                     
  2939                           ; BSR set to: 0
  2940  0007CA  0E51               	movlw	81
  2941  0007CC  0100               	movlb	0	; force () banked
  2942  0007CE  61BE               	cpfslt	deplace@analogX& (0+255),b
  2943  0007D0  EFEC  F003         	goto	u1031
  2944  0007D4  EFEE  F003         	goto	u1030
  2945  0007D8                     u1031:
  2946  0007D8  EF0F  F004         	goto	l2027
  2947  0007DC                     u1030:
  2948  0007DC                     
  2949                           ; BSR set to: 0
  2950                           ;main.c: 213: {;main.c: 214: *x = (*x)-1;
  2951  0007DC  C0B9  FFD9         	movff	deplace@x,fsr2l
  2952  0007E0  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2953  0007E4  50DF               	movf	indf2,w,c
  2954  0007E6  0100               	movlb	0	; force () banked
  2955  0007E8  6FBD               	movwf	??_deplace& (0+255),b
  2956  0007EA  05BD               	decf	??_deplace& (0+255),w,b
  2957  0007EC  C0B9  FFD9         	movff	deplace@x,fsr2l
  2958  0007F0  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2959  0007F4  6EDF               	movwf	indf2,c
  2960  0007F6                     
  2961                           ; BSR set to: 0
  2962                           ;main.c: 215: if ((*x)<=0)
  2963  0007F6  C0B9  FFD9         	movff	deplace@x,fsr2l
  2964  0007FA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2965  0007FE  50DF               	movf	indf2,w,c
  2966  000800  A4D8               	btfss	status,2,c
  2967  000802  EF05  F004         	goto	u1041
  2968  000806  EF07  F004         	goto	u1040
  2969  00080A                     u1041:
  2970  00080A  EF37  F004         	goto	l2033
  2971  00080E                     u1040:
  2972  00080E                     
  2973                           ; BSR set to: 0
  2974                           ;main.c: 216: *x=20;
  2975  00080E  C0B9  FFD9         	movff	deplace@x,fsr2l
  2976  000812  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2977  000816  0E14               	movlw	20
  2978  000818  6EDF               	movwf	indf2,c
  2979  00081A  EF37  F004         	goto	l2033
  2980  00081E                     l2027:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;main.c: 218: else if (175 <= analogX && analogX <= 255)
  2984  00081E  0EAE               	movlw	174
  2985  000820  0100               	movlb	0	; force () banked
  2986  000822  65BE               	cpfsgt	deplace@analogX& (0+255),b
  2987  000824  EF16  F004         	goto	u1051
  2988  000828  EF18  F004         	goto	u1050
  2989  00082C                     u1051:
  2990  00082C  EF37  F004         	goto	l2033
  2991  000830                     u1050:
  2992  000830                     
  2993                           ; BSR set to: 0
  2994                           ;main.c: 219: {;main.c: 220: *x = (*x)+1;
  2995  000830  C0B9  FFD9         	movff	deplace@x,fsr2l
  2996  000834  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2997  000838  50DF               	movf	indf2,w,c
  2998  00083A  0100               	movlb	0	; force () banked
  2999  00083C  6FBD               	movwf	??_deplace& (0+255),b
  3000  00083E  29BD               	incf	??_deplace& (0+255),w,b
  3001  000840  C0B9  FFD9         	movff	deplace@x,fsr2l
  3002  000844  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3003  000848  6EDF               	movwf	indf2,c
  3004                           
  3005                           ;main.c: 221: if ((*x)>=21)
  3006  00084A  C0B9  FFD9         	movff	deplace@x,fsr2l
  3007  00084E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3008  000852  0E14               	movlw	20
  3009  000854  64DF               	cpfsgt	indf2,c
  3010  000856  EF2F  F004         	goto	u1061
  3011  00085A  EF31  F004         	goto	u1060
  3012  00085E                     u1061:
  3013  00085E  EF37  F004         	goto	l2033
  3014  000862                     u1060:
  3015  000862                     
  3016                           ; BSR set to: 0
  3017                           ;main.c: 222: *x=1;
  3018  000862  C0B9  FFD9         	movff	deplace@x,fsr2l
  3019  000866  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3020  00086A  0E01               	movlw	1
  3021  00086C  6EDF               	movwf	indf2,c
  3022  00086E                     l2033:
  3023                           
  3024                           ; BSR set to: 0
  3025  00086E  0E51               	movlw	81
  3026  000870  0100               	movlb	0	; force () banked
  3027  000872  61BF               	cpfslt	deplace@analogY& (0+255),b
  3028  000874  EF3E  F004         	goto	u1071
  3029  000878  EF40  F004         	goto	u1070
  3030  00087C                     u1071:
  3031  00087C  EF61  F004         	goto	l2041
  3032  000880                     u1070:
  3033  000880                     
  3034                           ; BSR set to: 0
  3035                           ;main.c: 226: {;main.c: 227: *y = (*y)-1;
  3036  000880  C0BB  FFD9         	movff	deplace@y,fsr2l
  3037  000884  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3038  000888  50DF               	movf	indf2,w,c
  3039  00088A  0100               	movlb	0	; force () banked
  3040  00088C  6FBD               	movwf	??_deplace& (0+255),b
  3041  00088E  05BD               	decf	??_deplace& (0+255),w,b
  3042  000890  C0BB  FFD9         	movff	deplace@y,fsr2l
  3043  000894  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3044  000898  6EDF               	movwf	indf2,c
  3045  00089A                     
  3046                           ; BSR set to: 0
  3047                           ;main.c: 228: if ((*y)<=0)
  3048  00089A  C0BB  FFD9         	movff	deplace@y,fsr2l
  3049  00089E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3050  0008A2  50DF               	movf	indf2,w,c
  3051  0008A4  A4D8               	btfss	status,2,c
  3052  0008A6  EF57  F004         	goto	u1081
  3053  0008AA  EF59  F004         	goto	u1080
  3054  0008AE                     u1081:
  3055  0008AE  EF89  F004         	goto	l2047
  3056  0008B2                     u1080:
  3057  0008B2                     
  3058                           ; BSR set to: 0
  3059                           ;main.c: 229: *y=4;
  3060  0008B2  C0BB  FFD9         	movff	deplace@y,fsr2l
  3061  0008B6  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3062  0008BA  0E04               	movlw	4
  3063  0008BC  6EDF               	movwf	indf2,c
  3064  0008BE  EF89  F004         	goto	l2047
  3065  0008C2                     l2041:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;main.c: 231: else if (175 <= analogY && analogY <= 255)
  3069  0008C2  0EAE               	movlw	174
  3070  0008C4  0100               	movlb	0	; force () banked
  3071  0008C6  65BF               	cpfsgt	deplace@analogY& (0+255),b
  3072  0008C8  EF68  F004         	goto	u1091
  3073  0008CC  EF6A  F004         	goto	u1090
  3074  0008D0                     u1091:
  3075  0008D0  EF89  F004         	goto	l2047
  3076  0008D4                     u1090:
  3077  0008D4                     
  3078                           ; BSR set to: 0
  3079                           ;main.c: 232: {;main.c: 233: *y = (*y)+1;
  3080  0008D4  C0BB  FFD9         	movff	deplace@y,fsr2l
  3081  0008D8  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3082  0008DC  50DF               	movf	indf2,w,c
  3083  0008DE  0100               	movlb	0	; force () banked
  3084  0008E0  6FBD               	movwf	??_deplace& (0+255),b
  3085  0008E2  29BD               	incf	??_deplace& (0+255),w,b
  3086  0008E4  C0BB  FFD9         	movff	deplace@y,fsr2l
  3087  0008E8  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3088  0008EC  6EDF               	movwf	indf2,c
  3089                           
  3090                           ;main.c: 234: if ((*y)>=5)
  3091  0008EE  C0BB  FFD9         	movff	deplace@y,fsr2l
  3092  0008F2  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3093  0008F6  0E04               	movlw	4
  3094  0008F8  64DF               	cpfsgt	indf2,c
  3095  0008FA  EF81  F004         	goto	u1101
  3096  0008FE  EF83  F004         	goto	u1100
  3097  000902                     u1101:
  3098  000902  EF89  F004         	goto	l2047
  3099  000906                     u1100:
  3100  000906                     
  3101                           ; BSR set to: 0
  3102                           ;main.c: 235: *y=1;
  3103  000906  C0BB  FFD9         	movff	deplace@y,fsr2l
  3104  00090A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3105  00090E  0E01               	movlw	1
  3106  000910  6EDF               	movwf	indf2,c
  3107  000912                     l2047:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;main.c: 236: };main.c: 237: lcd_gotoXY(*x, *y);
  3111  000912  C0BB  FFD9         	movff	deplace@y,fsr2l
  3112  000916  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  3113  00091A  50DF               	movf	indf2,w,c
  3114  00091C  0100               	movlb	0	; force () banked
  3115  00091E  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3116  000920  C0B9  FFD9         	movff	deplace@x,fsr2l
  3117  000924  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  3118  000928  50DF               	movf	indf2,w,c
  3119  00092A  ECF9  F007         	call	_lcd_gotoXY
  3120  00092E  0012               	return		;funcret
  3121  000930                     __end_of_deplace:
  3122                           	opt callstack 0
  3123                           
  3124 ;; *************** function _lcd_gotoXY *****************
  3125 ;; Defined at:
  3126 ;;		line 314 in file "Lcd4Lignes.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  x               1    wreg     unsigned char 
  3129 ;;  y               1    3[BANK0 ] unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  x               1    4[BANK0 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3141 ;;      Params:         0       1       0       0       0       0       0
  3142 ;;      Locals:         0       1       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0
  3144 ;;      Totals:         0       2       0       0       0       0       0
  3145 ;;Total ram usage:        2 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    3
  3148 ;; This function calls:
  3149 ;;		_lcd_wrCom
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;;		_deplace
  3153 ;;		_lcd_effaceLigne
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text19
  3158  000FF2                     __ptext19:
  3159                           	opt callstack 0
  3160  000FF2                     _lcd_gotoXY:
  3161                           	opt callstack 27
  3162                           
  3163                           ;incstack = 0
  3164                           ;lcd_gotoXY@x stored from wreg
  3165  000FF2  0100               	movlb	0	; force () banked
  3166  000FF4  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  3167  000FF6                     
  3168                           ;Lcd4Lignes.c: 316: switch(y)
  3169  000FF6  EF1D  F008         	goto	l1739
  3170  000FFA                     l1729:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  3174  000FFA  0100               	movlb	0	; force () banked
  3175  000FFC  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3176  000FFE  0F7F               	addlw	127
  3177  001000  0980               	iorlw	128
  3178  001002  EC68  F008         	call	_lcd_wrCom
  3179                           
  3180                           ;Lcd4Lignes.c: 320: break;
  3181  001006  EF31  F008         	goto	l203
  3182  00100A                     l1731:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  3186  00100A  0100               	movlb	0	; force () banked
  3187  00100C  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3188  00100E  0FBF               	addlw	191
  3189  001010  0980               	iorlw	128
  3190  001012  EC68  F008         	call	_lcd_wrCom
  3191                           
  3192                           ;Lcd4Lignes.c: 323: break;
  3193  001016  EF31  F008         	goto	l203
  3194  00101A                     l1733:
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  3198  00101A  0100               	movlb	0	; force () banked
  3199  00101C  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3200  00101E  0F93               	addlw	147
  3201  001020  0980               	iorlw	128
  3202  001022  EC68  F008         	call	_lcd_wrCom
  3203                           
  3204                           ;Lcd4Lignes.c: 326: break;
  3205  001026  EF31  F008         	goto	l203
  3206  00102A                     l1735:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  3210  00102A  0100               	movlb	0	; force () banked
  3211  00102C  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3212  00102E  0FD3               	addlw	211
  3213  001030  0980               	iorlw	128
  3214  001032  EC68  F008         	call	_lcd_wrCom
  3215                           
  3216                           ;Lcd4Lignes.c: 329: break;
  3217  001036  EF31  F008         	goto	l203
  3218  00103A                     l1739:
  3219  00103A  0100               	movlb	0	; force () banked
  3220  00103C  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  3221                           
  3222                           ; Switch size 1, requested type "simple"
  3223                           ; Number of cases is 4, Range of values is 1 to 4
  3224                           ; switch strategies available:
  3225                           ; Name         Instructions Cycles
  3226                           ; simple_byte           13     7 (average)
  3227                           ;	Chosen strategy is simple_byte
  3228  00103E  0A01               	xorlw	1	; case 1
  3229  001040  B4D8               	btfsc	status,2,c
  3230  001042  EFFD  F007         	goto	l1729
  3231  001046  0A03               	xorlw	3	; case 2
  3232  001048  B4D8               	btfsc	status,2,c
  3233  00104A  EF05  F008         	goto	l1731
  3234  00104E  0A01               	xorlw	1	; case 3
  3235  001050  B4D8               	btfsc	status,2,c
  3236  001052  EF0D  F008         	goto	l1733
  3237  001056  0A07               	xorlw	7	; case 4
  3238  001058  B4D8               	btfsc	status,2,c
  3239  00105A  EF15  F008         	goto	l1735
  3240  00105E  EF31  F008         	goto	l203
  3241  001062                     l203:
  3242  001062  0012               	return		;funcret
  3243  001064                     __end_of_lcd_gotoXY:
  3244                           	opt callstack 0
  3245                           
  3246 ;; *************** function _lcd_wrCom *****************
  3247 ;; Defined at:
  3248 ;;		line 156 in file "Lcd4Lignes.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  commande        1    wreg     unsigned char 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  commande        1    2[BANK0 ] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      unsigned char 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3262 ;;      Params:         0       0       0       0       0       0       0
  3263 ;;      Locals:         0       1       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0
  3265 ;;      Totals:         0       1       0       0       0       0       0
  3266 ;;Total ram usage:        1 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    2
  3269 ;; This function calls:
  3270 ;;		_lcd_busy
  3271 ;;		_lcd_ecrireDonnees
  3272 ;;		_lcd_strobeEnableBit
  3273 ;; This function is called by:
  3274 ;;		_lcd_init
  3275 ;;		_lcd_curseurHome
  3276 ;;		_lcd_gotoXY
  3277 ;;		_lcd_ecritChar
  3278 ;;		_lcd_initCGRam
  3279 ;;		_lcd_effaceAffichage
  3280 ;;		_lcd_cacheCurseur
  3281 ;;		_lcd_montreCurseur
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text20
  3286  0010D0                     __ptext20:
  3287                           	opt callstack 0
  3288  0010D0                     _lcd_wrCom:
  3289                           	opt callstack 26
  3290                           
  3291                           ;incstack = 0
  3292                           ;lcd_wrCom@commande stored from wreg
  3293  0010D0  0100               	movlb	0	; force () banked
  3294  0010D2  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  3295  0010D4                     
  3296                           ;Lcd4Lignes.c: 158: lcd_busy();
  3297  0010D4  EC57  F009         	call	_lcd_busy	;wreg free
  3298  0010D8                     
  3299                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  3300  0010D8  0E00               	movlw	0
  3301  0010DA  6E95               	movwf	149,c	;volatile
  3302  0010DC                     
  3303                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  3304  0010DC  9080               	bcf	128,0,c	;volatile
  3305  0010DE                     
  3306                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  3307  0010DE  9280               	bcf	128,1,c	;volatile
  3308  0010E0                     
  3309                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  3310  0010E0  0100               	movlb	0	; force () banked
  3311  0010E2  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  3312  0010E4  0B0F               	andlw	15
  3313  0010E6  EC0A  F00A         	call	_lcd_ecrireDonnees
  3314  0010EA                     
  3315                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  3316  0010EA  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  3317  0010EE                     
  3318                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  3319  0010EE  0100               	movlb	0	; force () banked
  3320  0010F0  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  3321  0010F2  EC0A  F00A         	call	_lcd_ecrireDonnees
  3322  0010F6                     
  3323                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  3324  0010F6  EC24  F00A         	call	_lcd_strobeEnableBit	;wreg free
  3325  0010FA                     
  3326                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3327  0010FA  0E03               	movlw	3
  3328  0010FC                     u1227:
  3329  0010FC  2EE8               	decfsz	wreg,f,c
  3330  0010FE  D7FE               	bra	u1227
  3331  001100  F000               	nop	
  3332  001102                     
  3333                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  3334  001102  0100               	movlb	0	; force () banked
  3335  001104  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  3336  001106  B4D8               	btfsc	status,2,c
  3337  001108  EF88  F008         	goto	u621
  3338  00110C  EF8A  F008         	goto	u620
  3339  001110                     u621:
  3340  001110  EF94  F008         	goto	l1671
  3341  001114                     u620:
  3342  001114                     
  3343                           ; BSR set to: 0
  3344  001114  0E02               	movlw	2
  3345  001116  0100               	movlb	0	; force () banked
  3346  001118  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  3347  00111A  A4D8               	btfss	status,2,c
  3348  00111C  EF92  F008         	goto	u631
  3349  001120  EF94  F008         	goto	u630
  3350  001124                     u631:
  3351  001124  EF99  F008         	goto	l1673
  3352  001128                     u630:
  3353  001128                     l1671:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  3357  001128  0EA6               	movlw	166
  3358  00112A                     u1237:
  3359  00112A  2EE8               	decfsz	wreg,f,c
  3360  00112C  D7FE               	bra	u1237
  3361  00112E  F000 F000          	nop2	
  3362  001132                     l1673:
  3363                           
  3364                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  3365  001132  0E0F               	movlw	15
  3366  001134  6E95               	movwf	149,c	;volatile
  3367  001136                     
  3368                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  3369  001136  EC57  F009         	call	_lcd_busy	;wreg free
  3370  00113A  0012               	return		;funcret
  3371  00113C                     __end_of_lcd_wrCom:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _lcd_strobeEnableBit *****************
  3375 ;; Defined at:
  3376 ;;		line 431 in file "Lcd4Lignes.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		None
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3390 ;;      Params:         0       0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_lcd_wrCom
  3400 ;;		_lcd_wrData
  3401 ;;		_lcd_resetSequence
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text21
  3406  001448                     __ptext21:
  3407                           	opt callstack 0
  3408  001448                     _lcd_strobeEnableBit:
  3409                           	opt callstack 27
  3410  001448                     
  3411                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  3412  001448  8480               	bsf	128,2,c	;volatile
  3413                           
  3414                           ;Lcd4Lignes.c: 434: __nop();
  3415  00144A  F000               	nop	
  3416                           
  3417                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  3418  00144C  9480               	bcf	128,2,c	;volatile
  3419  00144E  0012               	return		;funcret
  3420  001450                     __end_of_lcd_strobeEnableBit:
  3421                           	opt callstack 0
  3422                           
  3423 ;; *************** function _lcd_ecrireDonnees *****************
  3424 ;; Defined at:
  3425 ;;		line 107 in file "Lcd4Lignes.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  donnee          1    wreg     unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  donnee          1    1[BANK0 ] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3439 ;;      Params:         0       0       0       0       0       0       0
  3440 ;;      Locals:         0       1       0       0       0       0       0
  3441 ;;      Temps:          0       1       0       0       0       0       0
  3442 ;;      Totals:         0       2       0       0       0       0       0
  3443 ;;Total ram usage:        2 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_lcd_wrCom
  3449 ;;		_lcd_wrData
  3450 ;;		_lcd_resetSequence
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text22
  3455  001414                     __ptext22:
  3456                           	opt callstack 0
  3457  001414                     _lcd_ecrireDonnees:
  3458                           	opt callstack 27
  3459                           
  3460                           ;incstack = 0
  3461                           ;lcd_ecrireDonnees@donnee stored from wreg
  3462  001414  0100               	movlb	0	; force () banked
  3463  001416  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  3464  001418                     
  3465                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  3466  001418  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  3467  00141C  0EF0               	movlw	240
  3468  00141E  0100               	movlb	0	; force () banked
  3469  001420  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  3470  001422  0100               	movlb	0	; force () banked
  3471  001424  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  3472  001426  0B0F               	andlw	15
  3473  001428  0100               	movlb	0	; force () banked
  3474  00142A  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  3475  00142C  6E83               	movwf	131,c	;volatile
  3476  00142E                     
  3477                           ; BSR set to: 0
  3478  00142E  0012               	return		;funcret
  3479  001430                     __end_of_lcd_ecrireDonnees:
  3480                           	opt callstack 0
  3481                           
  3482 ;; *************** function _lcd_busy *****************
  3483 ;; Defined at:
  3484 ;;		line 124 in file "Lcd4Lignes.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  adresse         1    1[BANK0 ] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      unsigned char 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3498 ;;      Params:         0       0       0       0       0       0       0
  3499 ;;      Locals:         0       1       0       0       0       0       0
  3500 ;;      Temps:          0       1       0       0       0       0       0
  3501 ;;      Totals:         0       2       0       0       0       0       0
  3502 ;;Total ram usage:        2 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    1
  3505 ;; This function calls:
  3506 ;;		_lcd_lireDonnees
  3507 ;; This function is called by:
  3508 ;;		_lcd_wrCom
  3509 ;;		_lcd_wrData
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text23
  3514  0012AE                     __ptext23:
  3515                           	opt callstack 0
  3516  0012AE                     _lcd_busy:
  3517                           	opt callstack 26
  3518  0012AE                     
  3519                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  3520  0012AE  9080               	bcf	128,0,c	;volatile
  3521                           
  3522                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  3523  0012B0  8280               	bsf	128,1,c	;volatile
  3524  0012B2                     l165:
  3525                           
  3526                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  3527  0012B2  8480               	bsf	128,2,c	;volatile
  3528                           
  3529                           ;Lcd4Lignes.c: 134: __nop();
  3530  0012B4  F000               	nop	
  3531  0012B6                     
  3532                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  3533  0012B6  EC28  F00A         	call	_lcd_lireDonnees	;wreg free
  3534  0012BA  0100               	movlb	0	; force () banked
  3535  0012BC  6FB4               	movwf	??_lcd_busy& (0+255),b
  3536  0012BE  39B4               	swapf	??_lcd_busy& (0+255),w,b
  3537  0012C0  0BF0               	andlw	240
  3538  0012C2  0100               	movlb	0	; force () banked
  3539  0012C4  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  3540  0012C6                     
  3541                           ; BSR set to: 0
  3542                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  3543  0012C6  9480               	bcf	128,2,c	;volatile
  3544  0012C8                     
  3545                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  3546  0012C8  8480               	bsf	128,2,c	;volatile
  3547  0012CA                     
  3548                           ;Lcd4Lignes.c: 139: __nop();
  3549  0012CA  F000               	nop	
  3550                           
  3551                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  3552  0012CC  EC28  F00A         	call	_lcd_lireDonnees	;wreg free
  3553  0012D0  0100               	movlb	0	; force () banked
  3554  0012D2  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  3555  0012D4                     
  3556                           ; BSR set to: 0
  3557                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  3558  0012D4  9480               	bcf	128,2,c	;volatile
  3559  0012D6                     
  3560                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  3561  0012D6  0100               	movlb	0	; force () banked
  3562  0012D8  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  3563  0012DA  EF71  F009         	goto	u611
  3564  0012DE  EF73  F009         	goto	u610
  3565  0012E2                     u611:
  3566  0012E2  EF59  F009         	goto	l165
  3567  0012E6                     u610:
  3568  0012E6                     
  3569                           ; BSR set to: 0
  3570                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  3571  0012E6  9280               	bcf	128,1,c	;volatile
  3572  0012E8                     
  3573                           ; BSR set to: 0
  3574                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  3575  0012E8  0100               	movlb	0	; force () banked
  3576  0012EA  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  3577  0012EC  0B7F               	andlw	127
  3578  0012EE                     
  3579                           ; BSR set to: 0
  3580  0012EE  0012               	return		;funcret
  3581  0012F0                     __end_of_lcd_busy:
  3582                           	opt callstack 0
  3583                           
  3584 ;; *************** function _lcd_lireDonnees *****************
  3585 ;; Defined at:
  3586 ;;		line 93 in file "Lcd4Lignes.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      unsigned char 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3600 ;;      Params:         0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_lcd_busy
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text24
  3614  001450                     __ptext24:
  3615                           	opt callstack 0
  3616  001450                     _lcd_lireDonnees:
  3617                           	opt callstack 26
  3618  001450                     
  3619                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  3620  001450  5083               	movf	131,w,c	;volatile
  3621  001452  0B0F               	andlw	15
  3622  001454  0012               	return		;funcret
  3623  001456                     __end_of_lcd_lireDonnees:
  3624                           	opt callstack 0
  3625                           
  3626 ;; *************** function _getAnalog *****************
  3627 ;; Defined at:
  3628 ;;		line 278 in file "main.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  canal           1    wreg     unsigned char 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  canal           1    1[BANK0 ] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      unsigned char 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3642 ;;      Params:         0       0       0       0       0       0       0
  3643 ;;      Locals:         0       1       0       0       0       0       0
  3644 ;;      Temps:          0       1       0       0       0       0       0
  3645 ;;      Totals:         0       2       0       0       0       0       0
  3646 ;;Total ram usage:        2 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_deplace
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text25
  3656  001398                     __ptext25:
  3657                           	opt callstack 0
  3658  001398                     _getAnalog:
  3659                           	opt callstack 29
  3660                           
  3661                           ;incstack = 0
  3662                           ;getAnalog@canal stored from wreg
  3663  001398  0100               	movlb	0	; force () banked
  3664  00139A  6FB5               	movwf	getAnalog@canal& (0+255),b
  3665  00139C                     
  3666                           ;main.c: 280: ADCON0bits.CHS = canal;
  3667  00139C  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  3668  0013A0  0100               	movlb	0	; force () banked
  3669  0013A2  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3670  0013A4  47B4               	rlncf	??_getAnalog& (0+255),f,b
  3671  0013A6  50C2               	movf	194,w,c	;volatile
  3672  0013A8  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3673  0013AA  0BC3               	andlw	-61
  3674  0013AC  19B4               	xorwf	??_getAnalog& (0+255),w,b
  3675  0013AE  6EC2               	movwf	194,c	;volatile
  3676  0013B0                     
  3677                           ;main.c: 282: ADCON0bits.GO_DONE = 1;
  3678  0013B0  82C2               	bsf	194,1,c	;volatile
  3679  0013B2                     l137:
  3680  0013B2  B2C2               	btfsc	194,1,c	;volatile
  3681  0013B4  EFDE  F009         	goto	u731
  3682  0013B8  EFE0  F009         	goto	u730
  3683  0013BC                     u731:
  3684  0013BC  EFD9  F009         	goto	l137
  3685  0013C0                     u730:
  3686  0013C0                     
  3687                           ;main.c: 284: return ADRESH;
  3688  0013C0  50C4               	movf	196,w,c	;volatile
  3689  0013C2  0012               	return		;funcret
  3690  0013C4                     __end_of_getAnalog:
  3691                           	opt callstack 0
  3692                           
  3693                           	psect	param0
  3694  0000                     tosu	equ	0xFFF
  3695                           tosh	equ	0xFFE
  3696                           tosl	equ	0xFFD
  3697                           stkptr	equ	0xFFC
  3698                           pclatu	equ	0xFFB
  3699                           pclath	equ	0xFFA
  3700                           pcl	equ	0xFF9
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           indf0	equ	0xFEF
  3708                           postinc0	equ	0xFEE
  3709                           postdec0	equ	0xFED
  3710                           preinc0	equ	0xFEC
  3711                           plusw0	equ	0xFEB
  3712                           fsr0h	equ	0xFEA
  3713                           fsr0l	equ	0xFE9
  3714                           wreg	equ	0xFE8
  3715                           indf1	equ	0xFE7
  3716                           postinc1	equ	0xFE6
  3717                           postdec1	equ	0xFE5
  3718                           preinc1	equ	0xFE4
  3719                           plusw1	equ	0xFE3
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           bsr	equ	0xFE0
  3723                           indf2	equ	0xFDF
  3724                           postinc2	equ	0xFDE
  3725                           postdec2	equ	0xFDD
  3726                           preinc2	equ	0xFDC
  3727                           plusw2	equ	0xFDB
  3728                           fsr2h	equ	0xFDA
  3729                           fsr2l	equ	0xFD9
  3730                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     37     125
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), STR_1(CODE[17]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    main@posY	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posX	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _deplace->_lcd_gotoXY
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    6065
                                             29 BANK0      8     8      0
                            _deplace
                         _initTabVue
                     _initialisation
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1143
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1093
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4     781
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     631
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _deplace                                              7     3      4    1306
                                              5 BANK0      7     3      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
   _initialisation
     _srand
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     25      7D       4       78.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     111      14        0.0%
DATA                 0      0     111      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 16:08:11 2019

 __end_of_calculToucheCombien 07B6                            l76 0F4E                            l69 1396  
                          l87 0BE8                            l96 0A8C           ___wmul@multiplicand 00B6  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l112 07B4  
                         l105 06F4                           l203 1062                           l140 13C2  
                         l220 0DF0                           l125 092E                           l214 12AC  
                         l137 13B2                           l233 0FF0                           l162 142E  
                         l236 144E                           l165 12B2                           l173 113A  
                         l166 12E6                           l182 1412                           l159 1454  
                         l167 12EE                           l176 1362                           l530 0EA2  
                         l179 11A4                           l188 1446                           l286 13EA  
                         l297 10BE                           l298 10CE                           l950 143E  
                         l953 1258                  __CFG_CPB$OFF 000000                           u610 12E6  
                __CFG_CPD$OFF 000000                           u611 12E2                           u620 1114  
                         u700 0752                           u621 1110                           u701 074E  
                         u630 1128                           u710 0792                           u631 1124  
                         u711 078E                           u720 07B0                           u800 0E3A  
                         u640 1084                           u721 07AC                           u801 0E36  
                         u641 1080                           u730 13C0                           u810 0E58  
                         u650 10BE                           u731 13BC                           u811 0E54  
                         u651 10BA                           u900 0F4E                           u740 0F6E  
                         u660 0652                           u820 0E6E                           u901 0F4A  
                         u741 0F6A                           u661 064E                           u821 0E6A  
                         u750 0F8A                           u670 066C                           u830 0E92  
                         u910 0AA6                           u751 0F86                           u671 0668  
                         u831 0E8E                           u911 0AA2                           u760 0FD6  
                         u840 0D90                           u680 06F0                           u920 0AC2  
                         u761 0FD2                           u681 06EC                           u921 0ABE  
                         u770 0FEC                           u850 0DE0                           u690 0734  
                         u930 0B0C                           u771 0FE8                           u691 0730  
                         u931 0B08                           u860 0DF0                           u780 0E06  
                         u940 0B22                           u861 0DEC                           u781 0E02  
                         u941 0B1E                           u870 0EBC                           u790 0E20  
                         u950 0B94                           u871 0EB8                           u847 0D86  
                         u791 0E1C                           u951 0B90                           u880 0ED8  
                         u960 0BE8                           u881 0ED4                           u857 0DD6  
                         u961 0BE4                           u890 0F22                           u970 0948  
                         u891 0F1E                           u971 0944                           u980 0964  
                         u981 0960                           u990 09A6                           u991 09A2  
                __CFG_BORV$18 000000                  ___awmod@sign 00C7                           prod 000FF3  
                 lcd_gotoXY@x 00B8                           wreg 000FE8                   lcd_gotoXY@y 00B7  
                __CFG_LVP$OFF 000000                          l2001 0968                          l2011 0A64  
                        l2003 09A6                          l2021 07DC                          l2005 09F2  
                        l2013 0A76                          l2101 0D24                          l2031 0862  
                        l2023 07F6                          l2015 0A7A                          l2007 0A30  
                        l2041 08C2                          l2025 080E                          l2033 086E  
                        l2017 07B6                          l2009 0A60                          l2043 08D4  
                        l2035 0880                          l2027 081E                          l2019 07CA  
                        l2045 0906                          l2037 089A                          l2029 0830  
                        l2061 0C02                          l2039 08B2                          l2047 0912  
                        l2071 0C34                          l2063 0C06                          l2081 0C8A  
                        l2073 0C3A                          l2065 0C1E                          l2057 0BEA  
                        l2091 0CBC                          l2083 0C8E                          l2067 0C22  
                        l2059 0BFE                          l1621 12AE                          l1701 135A  
                        l2093 0CCA                          l2085 0CA0                          l2077 0C50  
                        l2069 0C30                          l1615 1450                          l1631 12CA  
                        l1623 12B6                          l1703 135A                          l1711 13C4  
                        l2095 0CF6                          l2087 0CA6                          l2079 0C5E  
                        l1633 12D4                          l1625 12C6                          l1705 135E  
                        l1801 1158                          l1713 13E2                          l1721 1084  
                        l2097 0CFA                          l1635 12D6                          l1627 12C8  
                        l1619 1418                          l1643 1448                          l1651 10DC  
                        l1731 100A                          l1811 1174                          l1803 115E  
                        l1723 1094                          l2099 0D0C                          l1637 12D6  
                        l1629 12C8                          l1661 10EE                          l1653 10DE  
                        l1645 10D4                          l1733 101A                          l1741 1430  
                        l1901 1364                          l1709 1440                          l1821 1194  
                        l1813 117C                          l1805 1162                          l1725 109E  
                        l1717 1064                          l1639 12E8                          l1671 1128  
                        l1663 10F6                          l1655 10E0                          l1647 10D8  
                        l1735 102A                          l1727 0FF6                          l1911 1386  
                        l1903 136C                          l1831 0F5C                          l1823 1198  
                        l1815 1182                          l1807 116A                          l1751 0614  
                        l1719 1076                          l1743 1204                          l1673 1132  
                        l1665 10FA                          l1657 10EA                          l1649 10DC  
                        l1729 0FFA                          l1913 1388                          l1905 1376  
                        l1681 1334                          l1841 0F8E                          l1825 11A0  
                        l1817 1186                          l1809 1170                          l1921 13EC  
                        l1761 066C                          l1753 063C                          l1745 123A  
                        l1675 1136                          l1667 1102                          l1659 10EE  
                        l1739 103A                          l1915 138C                          l1907 1378  
                        l1691 1340                          l1683 1338                          l1843 0FC0  
                        l1851 0FEC                          l1835 0F72                          l1827 0F50  
                        l1819 118E                          l1923 140E                          l1931 0D98  
                        l1771 0734                          l1763 067A                          l1755 0642  
                        l1747 124C                          l1677 1136                          l1669 1114  
                        l1941 0EC6                          l1933 0EA4                          l1917 138E  
                        l1909 1384                          l1693 134A                          l1685 133C  
                        l1845 0FC4                          l1837 0F78                          l1829 0F56  
                        l1853 125E                          l1925 0D3E                          l1773 0752  
                        l1765 069A                          l1757 0652                          l1783 139C  
                        l1951 0F22                          l1935 0EAA                          l1919 1392  
                        l1695 134E                          l1687 133C                          l1847 0FD6  
                        l1855 126E                          l1863 128C                          l1927 0D48  
                        l1767 06F0                          l1775 0758                          l1759 065C  
                        l1871 0E0E                          l1785 13B0                          l1953 0F38  
                        l1945 0EDC                          l1697 134E                          l1689 133E  
                        l1849 0FDA                          l1793 113C                          l1857 1278  
                        l1929 0D94                          l1777 0792                          l1769 06FA  
                        l1881 0E42                          l1873 0E12                          l1865 0DF2  
                        l1787 13B0                          l1955 0F3C                          l1947 0F0C  
                        l1939 0EC0                          l1699 1356                          l1795 1140  
                        l1859 1282                          l1779 07B0                          l1891 0E7C  
                        l1883 0E4A                          l1875 0E20                          l1867 0DF8  
                        l1971 0AF6                          l1963 0AAA                          l1789 13C0  
                        l1949 0F10                          l1797 1154                          l1885 0E58  
                        l1893 0E82                          l1877 0E28                          l1869 0E06  
                        l1981 0B56                          l1973 0AFA                          l1965 0AB0  
                        l1957 0A8E                          l1799 1156                          l1991 0936  
                        l1895 0E92                          l1887 0E6E                          l1879 0E3A  
                        l1983 0B94                          l1975 0B0C                          l1959 0A94  
                        l1897 0E9A                          l1889 0E76                          l1985 0BC4  
                        l1977 0B10                          l1969 0AC6                          l1995 094C  
                        l1979 0B26                          l1987 0BCC                          l1997 0952  
                        l1989 0930                          STR_1 0601                          u1000 0A30  
                        u1001 0A2C                          u1010 0A76                          u1011 0A72  
                        u1100 0906                          u1020 0A8C                          u1101 0902  
                        u1021 0A88                          u1030 07DC                          u1031 07D8  
                        u1040 080E                          u1120 0C4C                          u1041 080A  
                        u1121 0C48                          u1050 0830                          u1130 0CA0  
                        u1051 082C                          u1131 0C9C                          u1060 0862  
                        u1140 0CB8                          u1061 085E                          u1141 0CB4  
                        u1070 0880                          u1150 0D0C                          u1071 087C  
                        u1207 1188                          u1151 0D08                          u1080 08B2  
                        u1081 08AE                          u1217 119A                          u1090 08D4  
                        u1227 10FC                          u1091 08D0                          u1237 112A  
                        u1167 0D2C                          u1177 1148                          u1187 1164  
                        u1197 1176                          _RCIF 007CF5                          _TMR1 000FCE  
            ??_initialisation 00B6                          _main 0BEA                          _rand 1204  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00B9                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 00B7  
                       ?_main 00B4                         ?_rand 00C0               __end_of___awmod 0EA4  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 0930           ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00B7                         _randx 00D9                         _srand 1430  
                       main@i 00D7                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000              _metToucheCombien 0930  
             __initialization 11A6                  __end_of_main 0D3E                  __end_of_rand 125A  
  calculToucheCombien@nbMines 00C1          lcd_putMessage@chaine 00B9    calculToucheCombien@colonne 00BC  
                      ??_main 00D1                        ??_rand 00C2                 __activetblptr 000003  
                      _ADCON1 000FC1                        _ADRESH 000FC4                        ?_srand 00B4  
                      _ANSELH 000F7F                   initTabVue@i 00B7                   initTabVue@j 00B6  
              __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA  
              getAnalog@canal 00B5              __end_of_lcd_busy 12F0              __end_of_lcd_init 1414  
                      ___lmul 1064                        ___wmul 13C4                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        clear_0 11EC                        clear_1 11F8  
             ___awmod@divisor 00C4                     ??_deplace 00BD               ___awmod@counter 00C6  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        srand@x 00B4             _lcd_resetSequence 113C  
                  __accesstop 0060       __end_of__initialization 11FE           _lcd_strobeEnableBit 1448  
          ?_lcd_resetSequence 00B4                 ___rparam_used 000000                deplace@analogX 00BE  
              deplace@analogY 00BF                  __pidataBANK0 1456                  __pidataBANK1 12F0  
         ??_lcd_resetSequence 00B6                 __end_of_srand 1440          ?_lcd_strobeEnableBit 00B4  
          __size_of_getAnalog 002C            __size_of_lcd_wrCom 006C     __end_of_lcd_resetSequence 11A6  
                     ??_srand 00B6      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 1414  
                  __pbssBANK0 0060                    __pbssBANK1 0100              ??_lcd_putMessage 00BC  
          ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4  
                     ?___lmul 00B4                       ?___wmul 00B4                ___lmul@product 00BC  
       ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 01A2      __end_of_metToucheCombien 0A8E  
                  _lcd_gotoXY 0FF2                    _lcd_wrData 1330     __end_of_lcd_ecrireDonnees 1430  
                   ?_lcd_busy 00B4                     ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5  
                  _m_tabMines 0060             __end_of_getAnalog 13C4          __size_of_rempliMines 015C  
                     __Hparam 0000                       __Lparam 0000                    _initTabVue 0EA4  
           __end_of_lcd_wrCom 113C               __size_of___lmul 006C                       ___awmod 0DF2  
             __size_of___wmul 0028                  __psmallconst 0600                       __pcinit 11A6  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 07B6  
                     __ptext0 0BEA                       __ptext1 0A8E                       __ptext2 1204  
                     __ptext3 1064                       __ptext4 0DF2                       __ptext5 0930  
                     __ptext6 0614                       __ptext7 13C4                       __ptext8 0D3E  
                     __ptext9 125A         __end_of_lcd_ecritChar 12AE               lcd_busy@adresse 00B5  
                   _T1CONbits 000FCD              ___awmod@dividend 00C2              lcd_ecritChar@car 00B7  
                  ??_lcd_busy 00B4                    ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A  
        end_of_initialization 11FE         __end_of_lcd_initCGRam 0FF2             ??_lcd_lireDonnees 00B4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0034             ??_lcd_curseurHome 00B7  
         lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80                   ?_lcd_gotoXY 00B7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC                   ?_initTabVue 00B4                __end_of___lmul 10D0  
              __end_of___wmul 13EC                   _BAUDCONbits 000FB8           start_initialization 11A6  
         _calculToucheCombien 0614           __size_of_lcd_gotoXY 0072                      ??___lmul 00BC  
                    ??___wmul 00B8                 rempliMines@nb 00C8           __size_of_lcd_wrData 0034  
                 __pdataBANK0 00D9                   __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 00BA                 __pcstackBANK0 00B4             ?_metToucheCombien 00B4  
         __size_of_initTabVue 00AC            ??_metToucheCombien 00C6             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000                     _getAnalog 1398  
 __end_of_lcd_strobeEnableBit 1450                _initialisation 1364                      ?___awmod 00C2  
                    ?_deplace 00B9                     _lcd_wrCom 10D0         ??_calculToucheCombien 00BE  
                 __smallconst 0600               _lcd_lireDonnees 1450           lcd_wrData@caractere 00B6  
              __size_of_srand 0010                 ??_rempliMines 00CA               _lcd_curseurHome 1440  
              ___wmul@product 00B8        __end_of_initialisation 1398                    ?_getAnalog 00B4  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4                    ?_lcd_wrCom 00B4  
                  _ADCON0bits 000FC2                    _ADCON2bits 000FC0                     main@i_278 00D8  
           ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 11BA  
                   copy_data1 11DA                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 0BEA  
                ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CF  
                rempliMines@j 00D0                  rempliMines@x 00CD                  rempliMines@y 00CE  
          __end_of_lcd_gotoXY 1064            __end_of_lcd_wrData 1364              __size_of___awmod 00B2  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C1              __size_of_deplace 017A  
     __end_of_lcd_lireDonnees 1456                      _matCGRAM 0154       __end_of_lcd_curseurHome 1448  
                    __ptext10 13EC                      __ptext11 113C                      __ptext20 10D0  
                    __ptext12 0F50                      __ptext21 1448                      __ptext13 1330  
                    __ptext22 1414                      __ptext14 1440                      __ptext23 12AE  
                    __ptext15 1364                      __ptext24 1450                      __ptext16 1430  
                    __ptext25 1398                      __ptext17 0EA4                      __ptext18 07B6  
                    __ptext19 0FF2             metToucheCombien@i 00C9             metToucheCombien@j 00CA  
                    _lcd_busy 12AE                      _lcd_init 13EC            __end_of_initTabVue 0F50  
    calculToucheCombien@ligne 00BA                      _m_tabVue 0100                 __size_of_main 0154  
               __size_of_rand 0056                      deplace@x 00B9                      deplace@y 00BB  
                 ??_getAnalog 00B4                      main@posX 00D3                      main@posY 00D5  
                 ??_lcd_wrCom 00B6                 _lcd_ecritChar 125A                 _lcd_initCGRam 0F50  
                 _rempliMines 0A8E          calculToucheCombien@i 00C2          calculToucheCombien@j 00C4  
   __size_of_metToucheCombien 015E                _lcd_putMessage 0D3E                ?_lcd_ecritChar 00B4  
            ?_lcd_lireDonnees 00B4              ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4  
           __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 0DF2  
