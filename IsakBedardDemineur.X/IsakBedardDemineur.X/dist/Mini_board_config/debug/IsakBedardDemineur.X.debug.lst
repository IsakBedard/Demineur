

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 14:27:47 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 2.10
    42                           ; Generated 31/07/2019 GMT
    43                           ; 
    44                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataBANK0
    77  001224                     __pidataBANK0:
    78                           	opt callstack 0
    79                           
    80                           ;initializer for _randx
    81  001224  0001               	dw	1
    82  001226  0000               	dw	0
    83                           
    84                           	psect	idataBANK1
    85  0010EA                     __pidataBANK1:
    86                           	opt callstack 0
    87                           
    88                           ;initializer for _matCGRAM
    89  0010EA  08                 	db	8
    90  0010EB  04                 	db	4
    91  0010EC  04                 	db	4
    92  0010ED  0A                 	db	10
    93  0010EE  11                 	db	17
    94  0010EF  1F                 	db	31
    95  0010F0  11                 	db	17
    96  0010F1  00                 	db	0
    97  0010F2  1F                 	db	31
    98  0010F3  1B                 	db	27
    99  0010F4  11                 	db	17
   100  0010F5  11                 	db	17
   101  0010F6  11                 	db	17
   102  0010F7  11                 	db	17
   103  0010F8  1B                 	db	27
   104  0010F9  1F                 	db	31
   105  0010FA  00                 	db	0
   106  0010FB  15                 	db	21
   107  0010FC  0E                 	db	14
   108  0010FD  1F                 	db	31
   109  0010FE  1F                 	db	31
   110  0010FF  0E                 	db	14
   111  001100  15                 	db	21
   112  001101  00                 	db	0
   113  001102  0E                 	db	14
   114  001103  11                 	db	17
   115  001104  15                 	db	21
   116  001105  15                 	db	21
   117  001106  15                 	db	21
   118  001107  0E                 	db	14
   119  001108  15                 	db	21
   120  001109  04                 	db	4
   121  00110A  04                 	db	4
   122  00110B  04                 	db	4
   123  00110C  04                 	db	4
   124  00110D  04                 	db	4
   125  00110E  0E                 	db	14
   126  00110F  0E                 	db	14
   127  001110  1B                 	db	27
   128  001111  11                 	db	17
   129  001112  04                 	db	4
   130  001113  0A                 	db	10
   131  001114  0E                 	db	14
   132  001115  11                 	db	17
   133  001116  1F                 	db	31
   134  001117  10                 	db	16
   135  001118  0E                 	db	14
   136  001119  00                 	db	0
   137  00111A  08                 	db	8
   138  00111B  04                 	db	4
   139  00111C  0E                 	db	14
   140  00111D  01                 	db	1
   141  00111E  0F                 	db	15
   142  00111F  11                 	db	17
   143  001120  0F                 	db	15
   144  001121  00                 	db	0
   145  001122  04                 	db	4
   146  001123  0A                 	db	10
   147  001124  0E                 	db	14
   148  001125  01                 	db	1
   149  001126  0F                 	db	15
   150  001127  11                 	db	17
   151  001128  0F                 	db	15
   152  001129  00                 	db	0
   153  0000                     _TRISCbits	set	3988
   154  0000                     _PORTAbits	set	3968
   155  0000                     _PORTD	set	3971
   156  0000                     _ANSELbits	set	3966
   157  0000                     _TRISA	set	3986
   158  0000                     _ANSEL	set	3966
   159  0000                     _TRISB	set	3987
   160  0000                     _ANSELH	set	3967
   161  0000                     _TRISD	set	3989
   162  0000                     _TMR1	set	4046
   163  0000                     _RCREG	set	4014
   164  0000                     _TXREG	set	4013
   165  0000                     _RCSTAbits	set	4011
   166  0000                     _TXSTAbits	set	4012
   167  0000                     _BAUDCONbits	set	4024
   168  0000                     _SPBRG	set	4015
   169  0000                     _SPBRGH	set	4016
   170  0000                     _ADCON2bits	set	4032
   171  0000                     _ADCON1	set	4033
   172  0000                     _ADCON0bits	set	4034
   173  0000                     _T1CONbits	set	4045
   174  0000                     _RCIF	set	31989
   175                           
   176                           	psect	smallconst
   177  000600                     __psmallconst:
   178                           	opt callstack 0
   179  000600  00                 	db	0
   180  000601                     STR_1:
   181                           
   182                           ; BSR set to: 0
   183  000601  4C                 	db	76	;'L'
   184  000602  41                 	db	65	;'A'
   185  000603  42                 	db	66	;'B'
   186  000604  36                 	db	54	;'6'
   187  000605  20                 	db	32
   188  000606  49                 	db	73	;'I'
   189  000607  73                 	db	115	;'s'
   190  000608  61                 	db	97	;'a'
   191  000609  6B                 	db	107	;'k'
   192  00060A  20                 	db	32
   193  00060B  42                 	db	66	;'B'
   194  00060C  65                 	db	101	;'e'
   195  00060D  64                 	db	100	;'d'
   196  00060E  61                 	db	97	;'a'
   197  00060F  72                 	db	114	;'r'
   198  000610  64                 	db	100	;'d'
   199  000611  00                 	db	0
   200                           
   201                           ; #config settings
   202  000612  00                 	db	0	; dummy byte at the end
   203  0000                     
   204                           	psect	cinit
   205  000FA0                     __pcinit:
   206                           	opt callstack 0
   207  000FA0                     start_initialization:
   208                           	opt callstack 0
   209  000FA0                     __initialization:
   210                           	opt callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK1 (64 bytes)
   213                           ; load TBLPTR registers with __pidataBANK1
   214  000FA0  0EEA               	movlw	low __pidataBANK1
   215  000FA2  6EF6               	movwf	tblptrl,c
   216  000FA4  0E10               	movlw	high __pidataBANK1
   217  000FA6  6EF7               	movwf	tblptrh,c
   218  000FA8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   219  000FAA  6EF8               	movwf	tblptru,c
   220  000FAC  EE01  F054         	lfsr	0,__pdataBANK1
   221  000FB0  EE10 F040          	lfsr	1,64
   222  000FB4                     copy_data0:
   223  000FB4  0009               	tblrd		*+
   224  000FB6  CFF5 FFEE          	movff	tablat,postinc0
   225  000FBA  50E5               	movf	postdec1,w,c
   226  000FBC  50E1               	movf	fsr1l,w,c
   227  000FBE  E1FA               	bnz	copy_data0
   228                           
   229                           ; Initialize objects allocated to BANK0 (4 bytes)
   230                           ; load TBLPTR registers with __pidataBANK0
   231  000FC0  0E24               	movlw	low __pidataBANK0
   232  000FC2  6EF6               	movwf	tblptrl,c
   233  000FC4  0E12               	movlw	high __pidataBANK0
   234  000FC6  6EF7               	movwf	tblptrh,c
   235  000FC8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   236  000FCA  6EF8               	movwf	tblptru,c
   237  000FCC  EE00  F0D4         	lfsr	0,__pdataBANK0
   238  000FD0  EE10 F004          	lfsr	1,4
   239  000FD4                     copy_data1:
   240  000FD4  0009               	tblrd		*+
   241  000FD6  CFF5 FFEE          	movff	tablat,postinc0
   242  000FDA  50E5               	movf	postdec1,w,c
   243  000FDC  50E1               	movf	fsr1l,w,c
   244  000FDE  E1FA               	bnz	copy_data1
   245                           
   246                           ; Clear objects allocated to BANK1 (84 bytes)
   247  000FE0  EE01  F000         	lfsr	0,__pbssBANK1
   248  000FE4  0E54               	movlw	84
   249  000FE6                     clear_0:
   250  000FE6  6AEE               	clrf	postinc0,c
   251  000FE8  06E8               	decf	wreg,f,c
   252  000FEA  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (84 bytes)
   255  000FEC  EE00  F060         	lfsr	0,__pbssBANK0
   256  000FF0  0E54               	movlw	84
   257  000FF2                     clear_1:
   258  000FF2  6AEE               	clrf	postinc0,c
   259  000FF4  06E8               	decf	wreg,f,c
   260  000FF6  E1FD               	bnz	clear_1
   261  000FF8                     end_of_initialization:
   262                           	opt callstack 0
   263  000FF8                     __end_of__initialization:
   264                           	opt callstack 0
   265  000FF8  0100               	movlb	0
   266  000FFA  EF3E  F005         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269  000060                     __pbssBANK0:
   270                           	opt callstack 0
   271  000060                     _m_tabMines:
   272                           	opt callstack 0
   273  000060                     	ds	84
   274                           
   275                           	psect	dataBANK0
   276  0000D4                     __pdataBANK0:
   277                           	opt callstack 0
   278  0000D4                     _randx:
   279                           	opt callstack 0
   280  0000D4                     	ds	4
   281                           
   282                           	psect	bssBANK1
   283  000100                     __pbssBANK1:
   284                           	opt callstack 0
   285  000100                     _m_tabVue:
   286                           	opt callstack 0
   287  000100                     	ds	84
   288                           
   289                           	psect	dataBANK1
   290  000154                     __pdataBANK1:
   291                           	opt callstack 0
   292  000154                     _matCGRAM:
   293                           	opt callstack 0
   294  000154                     	ds	64
   295                           
   296                           	psect	cstackBANK0
   297  0000B4                     __pcstackBANK0:
   298                           	opt callstack 0
   299  0000B4                     ??_initTabVue:
   300  0000B4                     ??_lcd_ecrireDonnees:
   301  0000B4                     ??_lcd_busy:
   302  0000B4                     ?___wmul:
   303                           	opt callstack 0
   304  0000B4                     ?___lmul:
   305                           	opt callstack 0
   306  0000B4                     ___wmul@multiplier:
   307                           	opt callstack 0
   308  0000B4                     srand@x:
   309                           	opt callstack 0
   310  0000B4                     ___lmul@multiplier:
   311                           	opt callstack 0
   312                           
   313                           ; 4 bytes @ 0x0
   314  0000B4                     	ds	1
   315  0000B5                     lcd_ecrireDonnees@donnee:
   316                           	opt callstack 0
   317  0000B5                     lcd_busy@adresse:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  0000B5                     	ds	1
   322  0000B6                     ??_lcd_resetSequence:
   323  0000B6                     initTabVue@j:
   324                           	opt callstack 0
   325  0000B6                     lcd_wrCom@commande:
   326                           	opt callstack 0
   327  0000B6                     lcd_wrData@caractere:
   328                           	opt callstack 0
   329  0000B6                     ___wmul@multiplicand:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333  0000B6                     	ds	1
   334  0000B7                     ??_lcd_initCGRam:
   335  0000B7                     initTabVue@i:
   336                           	opt callstack 0
   337  0000B7                     lcd_gotoXY@y:
   338                           	opt callstack 0
   339  0000B7                     lcd_ecritChar@car:
   340                           	opt callstack 0
   341                           
   342                           ; 1 bytes @ 0x3
   343  0000B7                     	ds	1
   344  0000B8                     lcd_gotoXY@x:
   345                           	opt callstack 0
   346  0000B8                     lcd_ecritChar@posRam:
   347                           	opt callstack 0
   348  0000B8                     ___wmul@product:
   349                           	opt callstack 0
   350  0000B8                     ___lmul@multiplicand:
   351                           	opt callstack 0
   352                           
   353                           ; 4 bytes @ 0x4
   354  0000B8                     	ds	1
   355  0000B9                     lcd_initCGRam@i:
   356                           	opt callstack 0
   357  0000B9                     lcd_putMessage@chaine:
   358                           	opt callstack 0
   359                           
   360                           ; 3 bytes @ 0x5
   361  0000B9                     	ds	1
   362  0000BA                     lcd_initCGRam@j:
   363                           	opt callstack 0
   364  0000BA                     calculToucheCombien@ligne:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x6
   368  0000BA                     	ds	1
   369  0000BB                     
   370                           ; 1 bytes @ 0x7
   371  0000BB                     	ds	1
   372  0000BC                     ??_lcd_putMessage:
   373  0000BC                     calculToucheCombien@colonne:
   374                           	opt callstack 0
   375  0000BC                     ___lmul@product:
   376                           	opt callstack 0
   377                           
   378                           ; 4 bytes @ 0x8
   379  0000BC                     	ds	2
   380  0000BE                     ??_calculToucheCombien:
   381                           
   382                           ; 1 bytes @ 0xA
   383  0000BE                     	ds	2
   384  0000C0                     ?_rand:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0xC
   388  0000C0                     	ds	1
   389  0000C1                     calculToucheCombien@nbMines:
   390                           	opt callstack 0
   391  0000C1                     lcd_putMessage@j:
   392                           	opt callstack 0
   393                           
   394                           ; 1 bytes @ 0xD
   395  0000C1                     	ds	1
   396  0000C2                     ?___awmod:
   397                           	opt callstack 0
   398  0000C2                     calculToucheCombien@ligneVar:
   399                           	opt callstack 0
   400  0000C2                     ___awmod@dividend:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0xE
   404  0000C2                     	ds	2
   405  0000C4                     calculToucheCombien@colonneVar:
   406                           	opt callstack 0
   407  0000C4                     ___awmod@divisor:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x10
   411  0000C4                     	ds	2
   412  0000C6                     ??_metToucheCombien:
   413  0000C6                     ___awmod@counter:
   414                           	opt callstack 0
   415                           
   416                           ; 1 bytes @ 0x12
   417  0000C6                     	ds	1
   418  0000C7                     ___awmod@sign:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x13
   422  0000C7                     	ds	1
   423  0000C8                     rempliMines@nb:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x14
   427  0000C8                     	ds	1
   428  0000C9                     metToucheCombien@i:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x15
   432  0000C9                     	ds	1
   433  0000CA                     ??_rempliMines:
   434  0000CA                     metToucheCombien@j:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x16
   438  0000CA                     	ds	3
   439  0000CD                     rempliMines@x:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x19
   443  0000CD                     	ds	1
   444  0000CE                     rempliMines@y:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x1A
   448  0000CE                     	ds	1
   449  0000CF                     rempliMines@i:
   450                           	opt callstack 0
   451                           
   452                           ; 1 bytes @ 0x1B
   453  0000CF                     	ds	1
   454  0000D0                     rempliMines@j:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0x1C
   458  0000D0                     	ds	1
   459  0000D1                     ??_main:
   460                           
   461                           ; 1 bytes @ 0x1D
   462  0000D1                     	ds	2
   463  0000D3                     main@i:
   464                           	opt callstack 0
   465                           
   466                           ; 1 bytes @ 0x1F
   467  0000D3                     	ds	1
   468                           
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 47 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  i               1   31[BANK0 ] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   488 ;;      Params:         0       0       0       0       0       0       0
   489 ;;      Locals:         0       1       0       0       0       0       0
   490 ;;      Temps:          0       2       0       0       0       0       0
   491 ;;      Totals:         0       3       0       0       0       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels required when called:    6
   494 ;; This function calls:
   495 ;;		_initTabVue
   496 ;;		_initialisation
   497 ;;		_lcd_gotoXY
   498 ;;		_lcd_init
   499 ;;		_lcd_putMessage
   500 ;;		_metToucheCombien
   501 ;;		_rempliMines
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text0
   508  000A7C                     __ptext0:
   509                           	opt callstack 0
   510  000A7C                     _main:
   511                           	opt callstack 25
   512  000A7C                     
   513                           ;main.c: 49: initialisation();
   514  000A7C  ECAF  F008         	call	_initialisation	;wreg free
   515  000A80                     
   516                           ;main.c: 50: lcd_init();
   517  000A80  ECDD  F008         	call	_lcd_init	;wreg free
   518  000A84                     
   519                           ;main.c: 51: lcd_putMessage("LAB6 Isak Bedard");
   520  000A84  0E01               	movlw	low STR_1
   521  000A86  0100               	movlb	0	; force () banked
   522  000A88  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
   523  000A8A  0E06               	movlw	high STR_1
   524  000A8C  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   525  000A8E  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   526  000A90  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   527  000A92  A4D8               	btfss	status,2,c
   528  000A94  0E00               	movlw	low (__mediumconst shr (0+16))
   529  000A96  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   530  000A98  EC9C  F005         	call	_lcd_putMessage	;wreg free
   531  000A9C                     
   532                           ;main.c: 52: initTabVue();
   533  000A9C  EC4F  F006         	call	_initTabVue	;wreg free
   534  000AA0                     
   535                           ;main.c: 53: rempliMines(3);
   536  000AA0  0E00               	movlw	0
   537  000AA2  0100               	movlb	0	; force () banked
   538  000AA4  6FC9               	movwf	(rempliMines@nb+1)& (0+255),b
   539  000AA6  0E03               	movlw	3
   540  000AA8  6FC8               	movwf	rempliMines@nb& (0+255),b
   541  000AAA  EC90  F004         	call	_rempliMines	;wreg free
   542  000AAE                     
   543                           ;main.c: 54: metToucheCombien();
   544  000AAE  ECE1  F003         	call	_metToucheCombien	;wreg free
   545  000AB2                     
   546                           ;main.c: 55: for (char i = 0; i < 4; i++)
   547  000AB2  0E00               	movlw	0
   548  000AB4  0100               	movlb	0	; force () banked
   549  000AB6  6FD3               	movwf	main@i& (0+255),b
   550  000AB8                     
   551                           ; BSR set to: 0
   552  000AB8  0E03               	movlw	3
   553  000ABA  0100               	movlb	0	; force () banked
   554  000ABC  65D3               	cpfsgt	main@i& (0+255),b
   555  000ABE  EF63  F005         	goto	u961
   556  000AC2  EF65  F005         	goto	u960
   557  000AC6                     u961:
   558  000AC6  EF67  F005         	goto	l1943
   559  000ACA                     u960:
   560  000ACA  EF8F  F005         	goto	l1951
   561  000ACE                     l1943:
   562                           
   563                           ; BSR set to: 0
   564                           ;main.c: 56: {;main.c: 57: lcd_gotoXY(1,i+1);
   565  000ACE  0100               	movlb	0	; force () banked
   566  000AD0  29D3               	incf	main@i& (0+255),w,b
   567  000AD2  0100               	movlb	0	; force () banked
   568  000AD4  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
   569  000AD6  0E01               	movlw	1
   570  000AD8  ECF6  F006         	call	_lcd_gotoXY
   571  000ADC                     
   572                           ;main.c: 58: lcd_putMessage(m_tabMines[i]);
   573  000ADC  0100               	movlb	0	; force () banked
   574  000ADE  51D3               	movf	main@i& (0+255),w,b
   575  000AE0  0D15               	mullw	21
   576  000AE2  0E60               	movlw	low _m_tabMines
   577  000AE4  24F3               	addwf	243,w,c
   578  000AE6  0100               	movlb	0	; force () banked
   579  000AE8  6FD1               	movwf	??_main& (0+255),b
   580  000AEA  0E00               	movlw	high _m_tabMines
   581  000AEC  20F4               	addwfc	prodh,w,c
   582  000AEE  6FD2               	movwf	(??_main+1)& (0+255),b
   583  000AF0  C0D1  F0B9         	movff	??_main,lcd_putMessage@chaine
   584  000AF4  C0D2  F0BA         	movff	??_main+1,lcd_putMessage@chaine+1
   585  000AF8  0100               	movlb	0	; force () banked
   586  000AFA  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   587  000AFC  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   588  000AFE  A4D8               	btfss	status,2,c
   589  000B00  0E20               	movlw	32
   590  000B02  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   591  000B04  EC9C  F005         	call	_lcd_putMessage	;wreg free
   592  000B08  0100               	movlb	0	; force () banked
   593  000B0A  2BD3               	incf	main@i& (0+255),f,b
   594  000B0C                     
   595                           ; BSR set to: 0
   596  000B0C  0E03               	movlw	3
   597  000B0E  0100               	movlb	0	; force () banked
   598  000B10  65D3               	cpfsgt	main@i& (0+255),b
   599  000B12  EF8D  F005         	goto	u971
   600  000B16  EF8F  F005         	goto	u970
   601  000B1A                     u971:
   602  000B1A  EF67  F005         	goto	l1943
   603  000B1E                     u970:
   604  000B1E                     l1951:
   605                           
   606                           ;main.c: 61: {;main.c: 62: _delay((unsigned long)((100)*(1000000/4000.0)));
   607  000B1E  0E21               	movlw	33
   608  000B20  0100               	movlb	0	; force () banked
   609  000B22  6FD1               	movwf	??_main& (0+255),b
   610  000B24  0E76               	movlw	118
   611  000B26                     u987:
   612  000B26  2EE8               	decfsz	wreg,f,c
   613  000B28  D7FE               	bra	u987
   614  000B2A  2FD1               	decfsz	??_main& (0+255),f,b
   615  000B2C  D7FC               	bra	u987
   616  000B2E  F000               	nop	
   617  000B30  EF8F  F005         	goto	l1951
   618  000B34  EF00  F000         	goto	start
   619  000B38                     __end_of_main:
   620                           	opt callstack 0
   621                           
   622 ;; *************** function _rempliMines *****************
   623 ;; Defined at:
   624 ;;		line 118 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  nb              2   20[BANK0 ] int 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  j               1   28[BANK0 ] unsigned char 
   629 ;;  i               1   27[BANK0 ] unsigned char 
   630 ;;  y               1   26[BANK0 ] unsigned char 
   631 ;;  x               1   25[BANK0 ] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       2       0       0       0       0       0
   642 ;;      Locals:         0       4       0       0       0       0       0
   643 ;;      Temps:          0       3       0       0       0       0       0
   644 ;;      Totals:         0       9       0       0       0       0       0
   645 ;;Total ram usage:        9 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		___awmod
   650 ;;		_rand
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text1
   657  000920                     __ptext1:
   658                           	opt callstack 0
   659  000920                     _rempliMines:
   660                           	opt callstack 28
   661  000920                     
   662                           ;main.c: 120: char x,y;;main.c: 122: for (char i = 0; i < 4; i++)
   663  000920  0E00               	movlw	0
   664  000922  0100               	movlb	0	; force () banked
   665  000924  6FCF               	movwf	rempliMines@i& (0+255),b
   666  000926                     
   667                           ; BSR set to: 0
   668  000926  0E03               	movlw	3
   669  000928  0100               	movlb	0	; force () banked
   670  00092A  65CF               	cpfsgt	rempliMines@i& (0+255),b
   671  00092C  EF9A  F004         	goto	u831
   672  000930  EF9C  F004         	goto	u830
   673  000934                     u831:
   674  000934  EF9E  F004         	goto	l1849
   675  000938                     u830:
   676  000938  EF2F  F005         	goto	l1873
   677  00093C                     l1849:
   678                           
   679                           ; BSR set to: 0
   680                           ;main.c: 123: {;main.c: 124: for(char j=0;j<20;j++)
   681  00093C  0E00               	movlw	0
   682  00093E  0100               	movlb	0	; force () banked
   683  000940  6FD0               	movwf	rempliMines@j& (0+255),b
   684  000942                     
   685                           ; BSR set to: 0
   686  000942  0E13               	movlw	19
   687  000944  0100               	movlb	0	; force () banked
   688  000946  65D0               	cpfsgt	rempliMines@j& (0+255),b
   689  000948  EFA8  F004         	goto	u841
   690  00094C  EFAA  F004         	goto	u840
   691  000950                     u841:
   692  000950  EFAC  F004         	goto	l1855
   693  000954                     u840:
   694  000954  EFCF  F004         	goto	l1861
   695  000958                     l1855:
   696                           
   697                           ; BSR set to: 0
   698                           ;main.c: 125: {;main.c: 126: m_tabMines[i][j]=' ';
   699  000958  0100               	movlb	0	; force () banked
   700  00095A  51CF               	movf	rempliMines@i& (0+255),w,b
   701  00095C  0D15               	mullw	21
   702  00095E  0E60               	movlw	low _m_tabMines
   703  000960  0100               	movlb	0	; force () banked
   704  000962  6FCA               	movwf	??_rempliMines& (0+255),b
   705  000964  0E00               	movlw	high _m_tabMines
   706  000966  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   707  000968  50F3               	movf	243,w,c
   708  00096A  27CA               	addwf	??_rempliMines& (0+255),f,b
   709  00096C  50F4               	movf	244,w,c
   710  00096E  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   711  000970  0100               	movlb	0	; force () banked
   712  000972  51D0               	movf	rempliMines@j& (0+255),w,b
   713  000974  0100               	movlb	0	; force () banked
   714  000976  25CA               	addwf	??_rempliMines& (0+255),w,b
   715  000978  6ED9               	movwf	fsr2l,c
   716  00097A  0100               	movlb	0	; force () banked
   717  00097C  0E00               	movlw	0
   718  00097E  0100               	movlb	0	; force () banked
   719  000980  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   720  000982  6EDA               	movwf	fsr2h,c
   721  000984  0E20               	movlw	32
   722  000986  6EDF               	movwf	indf2,c
   723  000988                     
   724                           ; BSR set to: 0
   725  000988  0100               	movlb	0	; force () banked
   726  00098A  2BD0               	incf	rempliMines@j& (0+255),f,b
   727  00098C                     
   728                           ; BSR set to: 0
   729  00098C  0E13               	movlw	19
   730  00098E  0100               	movlb	0	; force () banked
   731  000990  65D0               	cpfsgt	rempliMines@j& (0+255),b
   732  000992  EFCD  F004         	goto	u851
   733  000996  EFCF  F004         	goto	u850
   734  00099A                     u851:
   735  00099A  EFAC  F004         	goto	l1855
   736  00099E                     u850:
   737  00099E                     l1861:
   738                           
   739                           ; BSR set to: 0
   740  00099E  0100               	movlb	0	; force () banked
   741  0009A0  2BCF               	incf	rempliMines@i& (0+255),f,b
   742  0009A2                     
   743                           ; BSR set to: 0
   744  0009A2  0E03               	movlw	3
   745  0009A4  0100               	movlb	0	; force () banked
   746  0009A6  65CF               	cpfsgt	rempliMines@i& (0+255),b
   747  0009A8  EFD8  F004         	goto	u861
   748  0009AC  EFDA  F004         	goto	u860
   749  0009B0                     u861:
   750  0009B0  EF9E  F004         	goto	l1849
   751  0009B4                     u860:
   752  0009B4  EF2F  F005         	goto	l1873
   753  0009B8                     l1865:
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 130: {;main.c: 131: x=rand()%20;
   757  0009B8  ECFF  F007         	call	_rand	;wreg free
   758  0009BC  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   759  0009C0  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   760  0009C4  0E00               	movlw	0
   761  0009C6  0100               	movlb	0	; force () banked
   762  0009C8  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   763  0009CA  0E14               	movlw	20
   764  0009CC  6FC4               	movwf	___awmod@divisor& (0+255),b
   765  0009CE  ECF6  F005         	call	___awmod	;wreg free
   766  0009D2  0100               	movlb	0	; force () banked
   767  0009D4  51C2               	movf	?___awmod& (0+255),w,b
   768  0009D6  0100               	movlb	0	; force () banked
   769  0009D8  6FCD               	movwf	rempliMines@x& (0+255),b
   770                           
   771                           ;main.c: 132: y=rand()%4;
   772  0009DA  ECFF  F007         	call	_rand	;wreg free
   773  0009DE  0100               	movlb	0	; force () banked
   774  0009E0  51C0               	movf	?_rand& (0+255),w,b
   775  0009E2  0B03               	andlw	3
   776  0009E4  0100               	movlb	0	; force () banked
   777  0009E6  6FCE               	movwf	rempliMines@y& (0+255),b
   778  0009E8                     
   779                           ; BSR set to: 0
   780                           ;main.c: 133: if (m_tabMines[y][x]!=2)
   781  0009E8  0100               	movlb	0	; force () banked
   782  0009EA  51CE               	movf	rempliMines@y& (0+255),w,b
   783  0009EC  0D15               	mullw	21
   784  0009EE  0E60               	movlw	low _m_tabMines
   785  0009F0  0100               	movlb	0	; force () banked
   786  0009F2  6FCA               	movwf	??_rempliMines& (0+255),b
   787  0009F4  0E00               	movlw	high _m_tabMines
   788  0009F6  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   789  0009F8  50F3               	movf	243,w,c
   790  0009FA  27CA               	addwf	??_rempliMines& (0+255),f,b
   791  0009FC  50F4               	movf	244,w,c
   792  0009FE  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   793  000A00  0100               	movlb	0	; force () banked
   794  000A02  51CD               	movf	rempliMines@x& (0+255),w,b
   795  000A04  0100               	movlb	0	; force () banked
   796  000A06  25CA               	addwf	??_rempliMines& (0+255),w,b
   797  000A08  6ED9               	movwf	fsr2l,c
   798  000A0A  0100               	movlb	0	; force () banked
   799  000A0C  0E00               	movlw	0
   800  000A0E  0100               	movlb	0	; force () banked
   801  000A10  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   802  000A12  6EDA               	movwf	fsr2h,c
   803  000A14  0E02               	movlw	2
   804  000A16  18DE               	xorwf	postinc2,w,c
   805  000A18  B4D8               	btfsc	status,2,c
   806  000A1A  EF11  F005         	goto	u871
   807  000A1E  EF13  F005         	goto	u870
   808  000A22                     u871:
   809  000A22  EF2F  F005         	goto	l1873
   810  000A26                     u870:
   811  000A26                     
   812                           ; BSR set to: 0
   813                           ;main.c: 134: {;main.c: 135: m_tabMines[y][x]=2;
   814  000A26  0100               	movlb	0	; force () banked
   815  000A28  51CE               	movf	rempliMines@y& (0+255),w,b
   816  000A2A  0D15               	mullw	21
   817  000A2C  0E60               	movlw	low _m_tabMines
   818  000A2E  0100               	movlb	0	; force () banked
   819  000A30  6FCA               	movwf	??_rempliMines& (0+255),b
   820  000A32  0E00               	movlw	high _m_tabMines
   821  000A34  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   822  000A36  50F3               	movf	243,w,c
   823  000A38  27CA               	addwf	??_rempliMines& (0+255),f,b
   824  000A3A  50F4               	movf	244,w,c
   825  000A3C  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   826  000A3E  0100               	movlb	0	; force () banked
   827  000A40  51CD               	movf	rempliMines@x& (0+255),w,b
   828  000A42  0100               	movlb	0	; force () banked
   829  000A44  25CA               	addwf	??_rempliMines& (0+255),w,b
   830  000A46  6ED9               	movwf	fsr2l,c
   831  000A48  0100               	movlb	0	; force () banked
   832  000A4A  0E00               	movlw	0
   833  000A4C  0100               	movlb	0	; force () banked
   834  000A4E  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   835  000A50  6EDA               	movwf	fsr2h,c
   836  000A52  0E02               	movlw	2
   837  000A54  6EDF               	movwf	indf2,c
   838  000A56                     
   839                           ; BSR set to: 0
   840                           ;main.c: 136: nb--;
   841  000A56  0100               	movlb	0	; force () banked
   842  000A58  07C8               	decf	rempliMines@nb& (0+255),f,b
   843  000A5A  A0D8               	btfss	status,0,c
   844  000A5C  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   845  000A5E                     l1873:
   846                           
   847                           ; BSR set to: 0
   848  000A5E  0100               	movlb	0	; force () banked
   849  000A60  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   850  000A62  EF3D  F005         	goto	u880
   851  000A66  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   852  000A68  E106               	bnz	u881
   853  000A6A  05C8               	decf	rempliMines@nb& (0+255),w,b
   854  000A6C  B0D8               	btfsc	status,0,c
   855  000A6E  EF3B  F005         	goto	u881
   856  000A72  EF3D  F005         	goto	u880
   857  000A76                     u881:
   858  000A76  EFDC  F004         	goto	l1865
   859  000A7A                     u880:
   860  000A7A                     
   861                           ; BSR set to: 0
   862  000A7A  0012               	return		;funcret
   863  000A7C                     __end_of_rempliMines:
   864                           	opt callstack 0
   865                           
   866 ;; *************** function _rand *****************
   867 ;; Defined at:
   868 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  2   12[BANK0 ] int 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         0       2       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0
   885 ;;      Totals:         0       2       0       0       0       0       0
   886 ;;Total ram usage:        2 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    1
   889 ;; This function calls:
   890 ;;		___lmul
   891 ;; This function is called by:
   892 ;;		_rempliMines
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text2
   897  000FFE                     __ptext2:
   898                           	opt callstack 0
   899  000FFE                     _rand:
   900                           	opt callstack 28
   901  000FFE  C0D4  F0B4         	movff	_randx,___lmul@multiplier
   902  001002  C0D5  F0B5         	movff	_randx+1,___lmul@multiplier+1
   903  001006  C0D6  F0B6         	movff	_randx+2,___lmul@multiplier+2
   904  00100A  C0D7  F0B7         	movff	_randx+3,___lmul@multiplier+3
   905  00100E  0E6D               	movlw	109
   906  001010  0100               	movlb	0	; () banked
   907  001012  6FB8               	movwf	___lmul@multiplicand& (0+255),b
   908  001014  0E4E               	movlw	78
   909  001016  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   910  001018  0EC6               	movlw	198
   911  00101A  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   912  00101C  0E41               	movlw	65
   913  00101E  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   914  001020  EC2F  F007         	call	___lmul	;wreg free
   915  001024  C0B4  F0D4         	movff	?___lmul,_randx
   916  001028  C0B5  F0D5         	movff	?___lmul+1,_randx+1
   917  00102C  C0B6  F0D6         	movff	?___lmul+2,_randx+2
   918  001030  C0B7  F0D7         	movff	?___lmul+3,_randx+3
   919  001034  0E39               	movlw	57
   920  001036  0100               	movlb	0	; () banked
   921  001038  27D4               	addwf	_randx& (0+255),f,b
   922  00103A  0E30               	movlw	48
   923  00103C  23D5               	addwfc	(_randx+1)& (0+255),f,b
   924  00103E  0E00               	movlw	0
   925  001040  23D6               	addwfc	(_randx+2)& (0+255),f,b
   926  001042  0E00               	movlw	0
   927  001044  23D7               	addwfc	(_randx+3)& (0+255),f,b
   928  001046                     
   929                           ; BSR set to: 0
   930  001046  0EFF               	movlw	255
   931  001048  15D6               	andwf	(_randx+2)& (0+255),w,b
   932  00104A  6FC0               	movwf	?_rand& (0+255),b
   933  00104C  0E7F               	movlw	127
   934  00104E  15D7               	andwf	(_randx+3)& (0+255),w,b
   935  001050  6FC1               	movwf	(?_rand+1)& (0+255),b
   936  001052                     
   937                           ; BSR set to: 0
   938  001052  0012               	return		;funcret
   939  001054                     __end_of_rand:
   940                           	opt callstack 0
   941                           
   942 ;; *************** function ___lmul *****************
   943 ;; Defined at:
   944 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  multiplier      4    0[BANK0 ] unsigned long 
   947 ;;  multiplicand    4    4[BANK0 ] unsigned long 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  product         4    8[BANK0 ] unsigned long 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  4    0[BANK0 ] unsigned long 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   959 ;;      Params:         0       8       0       0       0       0       0
   960 ;;      Locals:         0       4       0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0
   962 ;;      Totals:         0      12       0       0       0       0       0
   963 ;;Total ram usage:       12 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_rand
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text3
   973  000E5E                     __ptext3:
   974                           	opt callstack 0
   975  000E5E                     ___lmul:
   976                           	opt callstack 28
   977  000E5E  0E00               	movlw	0
   978  000E60  0100               	movlb	0	; () banked
   979  000E62  6FBC               	movwf	___lmul@product& (0+255),b
   980  000E64  0E00               	movlw	0
   981  000E66  6FBD               	movwf	(___lmul@product+1)& (0+255),b
   982  000E68  0E00               	movlw	0
   983  000E6A  6FBE               	movwf	(___lmul@product+2)& (0+255),b
   984  000E6C  0E00               	movlw	0
   985  000E6E  6FBF               	movwf	(___lmul@product+3)& (0+255),b
   986  000E70                     l1631:
   987                           
   988                           ; BSR set to: 0
   989  000E70  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
   990  000E72  EF3D  F007         	goto	u551
   991  000E76  EF3F  F007         	goto	u550
   992  000E7A                     u551:
   993  000E7A  EF47  F007         	goto	l1635
   994  000E7E                     u550:
   995  000E7E                     
   996                           ; BSR set to: 0
   997  000E7E  51B8               	movf	___lmul@multiplicand& (0+255),w,b
   998  000E80  27BC               	addwf	___lmul@product& (0+255),f,b
   999  000E82  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1000  000E84  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1001  000E86  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1002  000E88  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1003  000E8A  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1004  000E8C  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1005  000E8E                     l1635:
  1006                           
  1007                           ; BSR set to: 0
  1008  000E8E  90D8               	bcf	status,0,c
  1009  000E90  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1010  000E92  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1011  000E94  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1012  000E96  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1013  000E98                     
  1014                           ; BSR set to: 0
  1015  000E98  90D8               	bcf	status,0,c
  1016  000E9A  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1017  000E9C  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1018  000E9E  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1019  000EA0  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1020  000EA2  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1021  000EA4  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1022  000EA6  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1023  000EA8  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1024  000EAA  A4D8               	btfss	status,2,c
  1025  000EAC  EF5A  F007         	goto	u561
  1026  000EB0  EF5C  F007         	goto	u560
  1027  000EB4                     u561:
  1028  000EB4  EF38  F007         	goto	l1631
  1029  000EB8                     u560:
  1030  000EB8                     
  1031                           ; BSR set to: 0
  1032  000EB8  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1033  000EBC  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1034  000EC0  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1035  000EC4  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1036  000EC8                     
  1037                           ; BSR set to: 0
  1038  000EC8  0012               	return		;funcret
  1039  000ECA                     __end_of___lmul:
  1040                           	opt callstack 0
  1041                           
  1042 ;; *************** function ___awmod *****************
  1043 ;; Defined at:
  1044 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  dividend        2   14[BANK0 ] int 
  1047 ;;  divisor         2   16[BANK0 ] int 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  sign            1   19[BANK0 ] unsigned char 
  1050 ;;  counter         1   18[BANK0 ] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2   14[BANK0 ] int 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1060 ;;      Params:         0       4       0       0       0       0       0
  1061 ;;      Locals:         0       2       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0
  1063 ;;      Totals:         0       6       0       0       0       0       0
  1064 ;;Total ram usage:        6 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_rempliMines
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text4
  1074  000BEC                     __ptext4:
  1075                           	opt callstack 0
  1076  000BEC                     ___awmod:
  1077                           	opt callstack 29
  1078  000BEC  0E00               	movlw	0
  1079  000BEE  0100               	movlb	0	; () banked
  1080  000BF0  6FC7               	movwf	___awmod@sign& (0+255),b
  1081  000BF2                     
  1082                           ; BSR set to: 0
  1083  000BF2  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1084  000BF4  EF00  F006         	goto	u700
  1085  000BF8  EFFE  F005         	goto	u701
  1086  000BFC                     u701:
  1087  000BFC  EF06  F006         	goto	l1759
  1088  000C00                     u700:
  1089  000C00                     
  1090                           ; BSR set to: 0
  1091  000C00  6DC2               	negf	___awmod@dividend& (0+255),b
  1092  000C02  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1093  000C04  B0D8               	btfsc	status,0,c
  1094  000C06  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1095  000C08                     
  1096                           ; BSR set to: 0
  1097  000C08  0E01               	movlw	1
  1098  000C0A  6FC7               	movwf	___awmod@sign& (0+255),b
  1099  000C0C                     l1759:
  1100                           
  1101                           ; BSR set to: 0
  1102  000C0C  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1103  000C0E  EF0D  F006         	goto	u710
  1104  000C12  EF0B  F006         	goto	u711
  1105  000C16                     u711:
  1106  000C16  EF11  F006         	goto	l1763
  1107  000C1A                     u710:
  1108  000C1A                     
  1109                           ; BSR set to: 0
  1110  000C1A  6DC4               	negf	___awmod@divisor& (0+255),b
  1111  000C1C  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1112  000C1E  B0D8               	btfsc	status,0,c
  1113  000C20  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1114  000C22                     l1763:
  1115                           
  1116                           ; BSR set to: 0
  1117  000C22  51C4               	movf	___awmod@divisor& (0+255),w,b
  1118  000C24  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1119  000C26  B4D8               	btfsc	status,2,c
  1120  000C28  EF18  F006         	goto	u721
  1121  000C2C  EF1A  F006         	goto	u720
  1122  000C30                     u721:
  1123  000C30  EF3E  F006         	goto	l1779
  1124  000C34                     u720:
  1125  000C34                     
  1126                           ; BSR set to: 0
  1127  000C34  0E01               	movlw	1
  1128  000C36  6FC6               	movwf	___awmod@counter& (0+255),b
  1129  000C38  EF22  F006         	goto	l1769
  1130  000C3C                     l1767:
  1131                           
  1132                           ; BSR set to: 0
  1133  000C3C  90D8               	bcf	status,0,c
  1134  000C3E  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1135  000C40  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1136  000C42  2BC6               	incf	___awmod@counter& (0+255),f,b
  1137  000C44                     l1769:
  1138                           
  1139                           ; BSR set to: 0
  1140  000C44  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1141  000C46  EF27  F006         	goto	u731
  1142  000C4A  EF29  F006         	goto	u730
  1143  000C4E                     u731:
  1144  000C4E  EF1E  F006         	goto	l1767
  1145  000C52                     u730:
  1146  000C52                     l1771:
  1147                           
  1148                           ; BSR set to: 0
  1149  000C52  51C4               	movf	___awmod@divisor& (0+255),w,b
  1150  000C54  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1151  000C56  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1152  000C58  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1153  000C5A  A0D8               	btfss	status,0,c
  1154  000C5C  EF32  F006         	goto	u741
  1155  000C60  EF34  F006         	goto	u740
  1156  000C64                     u741:
  1157  000C64  EF38  F006         	goto	l1775
  1158  000C68                     u740:
  1159  000C68                     
  1160                           ; BSR set to: 0
  1161  000C68  51C4               	movf	___awmod@divisor& (0+255),w,b
  1162  000C6A  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1163  000C6C  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1164  000C6E  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1165  000C70                     l1775:
  1166                           
  1167                           ; BSR set to: 0
  1168  000C70  90D8               	bcf	status,0,c
  1169  000C72  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1170  000C74  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1171  000C76                     
  1172                           ; BSR set to: 0
  1173  000C76  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1174  000C78  EF29  F006         	goto	l1771
  1175  000C7C                     l1779:
  1176                           
  1177                           ; BSR set to: 0
  1178  000C7C  51C7               	movf	___awmod@sign& (0+255),w,b
  1179  000C7E  B4D8               	btfsc	status,2,c
  1180  000C80  EF44  F006         	goto	u751
  1181  000C84  EF46  F006         	goto	u750
  1182  000C88                     u751:
  1183  000C88  EF4A  F006         	goto	l1783
  1184  000C8C                     u750:
  1185  000C8C                     
  1186                           ; BSR set to: 0
  1187  000C8C  6DC2               	negf	___awmod@dividend& (0+255),b
  1188  000C8E  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1189  000C90  B0D8               	btfsc	status,0,c
  1190  000C92  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1191  000C94                     l1783:
  1192                           
  1193                           ; BSR set to: 0
  1194  000C94  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1195  000C98  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1196  000C9C                     
  1197                           ; BSR set to: 0
  1198  000C9C  0012               	return		;funcret
  1199  000C9E                     __end_of___awmod:
  1200                           	opt callstack 0
  1201                           
  1202 ;; *************** function _metToucheCombien *****************
  1203 ;; Defined at:
  1204 ;;		line 150 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  j               1   22[BANK0 ] unsigned char 
  1209 ;;  i               1   21[BANK0 ] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1219 ;;      Params:         0       0       0       0       0       0       0
  1220 ;;      Locals:         0       2       0       0       0       0       0
  1221 ;;      Temps:          0       3       0       0       0       0       0
  1222 ;;      Totals:         0       5       0       0       0       0       0
  1223 ;;Total ram usage:        5 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    2
  1226 ;; This function calls:
  1227 ;;		_calculToucheCombien
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text5
  1234  0007C2                     __ptext5:
  1235                           	opt callstack 0
  1236  0007C2                     _metToucheCombien:
  1237                           	opt callstack 28
  1238  0007C2                     
  1239                           ;main.c: 152: for (char i = 0; i < 4; i++)
  1240  0007C2  0E00               	movlw	0
  1241  0007C4  0100               	movlb	0	; force () banked
  1242  0007C6  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1243  0007C8                     
  1244                           ; BSR set to: 0
  1245  0007C8  0E03               	movlw	3
  1246  0007CA  0100               	movlb	0	; force () banked
  1247  0007CC  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1248  0007CE  EFEB  F003         	goto	u891
  1249  0007D2  EFED  F003         	goto	u890
  1250  0007D6                     u891:
  1251  0007D6  EFEF  F003         	goto	l1881
  1252  0007DA                     u890:
  1253  0007DA  EF8F  F004         	goto	l88
  1254  0007DE                     l1881:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;main.c: 153: {;main.c: 154: for(char j=0;j<20;j++)
  1258  0007DE  0E00               	movlw	0
  1259  0007E0  0100               	movlb	0	; force () banked
  1260  0007E2  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1261  0007E4                     
  1262                           ; BSR set to: 0
  1263  0007E4  0E13               	movlw	19
  1264  0007E6  0100               	movlb	0	; force () banked
  1265  0007E8  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1266  0007EA  EFF9  F003         	goto	u901
  1267  0007EE  EFFB  F003         	goto	u900
  1268  0007F2                     u901:
  1269  0007F2  EFFD  F003         	goto	l1887
  1270  0007F6                     u900:
  1271  0007F6  EF84  F004         	goto	l1899
  1272  0007FA                     l1887:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 155: {;main.c: 156: if(m_tabMines[i][j]!=2)
  1276  0007FA  0100               	movlb	0	; force () banked
  1277  0007FC  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1278  0007FE  0D15               	mullw	21
  1279  000800  0E60               	movlw	low _m_tabMines
  1280  000802  0100               	movlb	0	; force () banked
  1281  000804  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1282  000806  0E00               	movlw	high _m_tabMines
  1283  000808  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1284  00080A  50F3               	movf	243,w,c
  1285  00080C  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1286  00080E  50F4               	movf	244,w,c
  1287  000810  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1288  000812  0100               	movlb	0	; force () banked
  1289  000814  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1290  000816  0100               	movlb	0	; force () banked
  1291  000818  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1292  00081A  6ED9               	movwf	fsr2l,c
  1293  00081C  0100               	movlb	0	; force () banked
  1294  00081E  0E00               	movlw	0
  1295  000820  0100               	movlb	0	; force () banked
  1296  000822  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1297  000824  6EDA               	movwf	fsr2h,c
  1298  000826  0E02               	movlw	2
  1299  000828  18DE               	xorwf	postinc2,w,c
  1300  00082A  B4D8               	btfsc	status,2,c
  1301  00082C  EF1A  F004         	goto	u911
  1302  000830  EF1C  F004         	goto	u910
  1303  000834                     u911:
  1304  000834  EF42  F004         	goto	l1891
  1305  000838                     u910:
  1306  000838                     
  1307                           ; BSR set to: 0
  1308                           ;main.c: 157: m_tabMines[i][j]=calculToucheCombien(i,j)+48;
  1309  000838  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1310  00083C  0100               	movlb	0	; force () banked
  1311  00083E  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1312  000840  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1313  000844  0100               	movlb	0	; force () banked
  1314  000846  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1315  000848  EC0A  F003         	call	_calculToucheCombien	;wreg free
  1316  00084C  0100               	movlb	0	; force () banked
  1317  00084E  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1318  000850  0E30               	movlw	48
  1319  000852  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1320  000854  0100               	movlb	0	; force () banked
  1321  000856  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1322  000858  0D15               	mullw	21
  1323  00085A  0E60               	movlw	low _m_tabMines
  1324  00085C  0100               	movlb	0	; force () banked
  1325  00085E  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1326  000860  0E00               	movlw	high _m_tabMines
  1327  000862  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1328  000864  50F3               	movf	243,w,c
  1329  000866  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1330  000868  50F4               	movf	244,w,c
  1331  00086A  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1332  00086C  0100               	movlb	0	; force () banked
  1333  00086E  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1334  000870  0100               	movlb	0	; force () banked
  1335  000872  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1336  000874  6ED9               	movwf	fsr2l,c
  1337  000876  0100               	movlb	0	; force () banked
  1338  000878  0E00               	movlw	0
  1339  00087A  0100               	movlb	0	; force () banked
  1340  00087C  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1341  00087E  6EDA               	movwf	fsr2h,c
  1342  000880  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1343  000884                     l1891:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 158: if(m_tabMines[i][j]=='0')
  1347  000884  0100               	movlb	0	; force () banked
  1348  000886  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1349  000888  0D15               	mullw	21
  1350  00088A  0E60               	movlw	low _m_tabMines
  1351  00088C  0100               	movlb	0	; force () banked
  1352  00088E  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1353  000890  0E00               	movlw	high _m_tabMines
  1354  000892  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1355  000894  50F3               	movf	243,w,c
  1356  000896  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1357  000898  50F4               	movf	244,w,c
  1358  00089A  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1359  00089C  0100               	movlb	0	; force () banked
  1360  00089E  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1361  0008A0  0100               	movlb	0	; force () banked
  1362  0008A2  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1363  0008A4  6ED9               	movwf	fsr2l,c
  1364  0008A6  0100               	movlb	0	; force () banked
  1365  0008A8  0E00               	movlw	0
  1366  0008AA  0100               	movlb	0	; force () banked
  1367  0008AC  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1368  0008AE  6EDA               	movwf	fsr2h,c
  1369  0008B0  0E30               	movlw	48
  1370  0008B2  18DE               	xorwf	postinc2,w,c
  1371  0008B4  A4D8               	btfss	status,2,c
  1372  0008B6  EF5F  F004         	goto	u921
  1373  0008BA  EF61  F004         	goto	u920
  1374  0008BE                     u921:
  1375  0008BE  EF79  F004         	goto	l1895
  1376  0008C2                     u920:
  1377  0008C2                     
  1378                           ; BSR set to: 0
  1379                           ;main.c: 159: m_tabMines[i][j]=' ';
  1380  0008C2  0100               	movlb	0	; force () banked
  1381  0008C4  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1382  0008C6  0D15               	mullw	21
  1383  0008C8  0E60               	movlw	low _m_tabMines
  1384  0008CA  0100               	movlb	0	; force () banked
  1385  0008CC  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1386  0008CE  0E00               	movlw	high _m_tabMines
  1387  0008D0  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1388  0008D2  50F3               	movf	243,w,c
  1389  0008D4  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1390  0008D6  50F4               	movf	244,w,c
  1391  0008D8  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1392  0008DA  0100               	movlb	0	; force () banked
  1393  0008DC  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1394  0008DE  0100               	movlb	0	; force () banked
  1395  0008E0  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1396  0008E2  6ED9               	movwf	fsr2l,c
  1397  0008E4  0100               	movlb	0	; force () banked
  1398  0008E6  0E00               	movlw	0
  1399  0008E8  0100               	movlb	0	; force () banked
  1400  0008EA  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1401  0008EC  6EDA               	movwf	fsr2h,c
  1402  0008EE  0E20               	movlw	32
  1403  0008F0  6EDF               	movwf	indf2,c
  1404  0008F2                     l1895:
  1405                           
  1406                           ; BSR set to: 0
  1407  0008F2  0100               	movlb	0	; force () banked
  1408  0008F4  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1409  0008F6                     
  1410                           ; BSR set to: 0
  1411  0008F6  0E13               	movlw	19
  1412  0008F8  0100               	movlb	0	; force () banked
  1413  0008FA  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1414  0008FC  EF82  F004         	goto	u931
  1415  000900  EF84  F004         	goto	u930
  1416  000904                     u931:
  1417  000904  EFFD  F003         	goto	l1887
  1418  000908                     u930:
  1419  000908                     l1899:
  1420                           
  1421                           ; BSR set to: 0
  1422  000908  0100               	movlb	0	; force () banked
  1423  00090A  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1424  00090C                     
  1425                           ; BSR set to: 0
  1426  00090C  0E03               	movlw	3
  1427  00090E  0100               	movlb	0	; force () banked
  1428  000910  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1429  000912  EF8D  F004         	goto	u941
  1430  000916  EF8F  F004         	goto	u940
  1431  00091A                     u941:
  1432  00091A  EFEF  F003         	goto	l1881
  1433  00091E                     u940:
  1434  00091E                     l88:
  1435                           
  1436                           ; BSR set to: 0
  1437  00091E  0012               	return		;funcret
  1438  000920                     __end_of_metToucheCombien:
  1439                           	opt callstack 0
  1440                           
  1441 ;; *************** function _calculToucheCombien *****************
  1442 ;; Defined at:
  1443 ;;		line 168 in file "main.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  ligne           2    6[BANK0 ] int 
  1446 ;;  colonne         2    8[BANK0 ] int 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  colonneVar      2   16[BANK0 ] int 
  1449 ;;  ligneVar        2   14[BANK0 ] int 
  1450 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      unsigned char 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1460 ;;      Params:         0       4       0       0       0       0       0
  1461 ;;      Locals:         0       5       0       0       0       0       0
  1462 ;;      Temps:          0       3       0       0       0       0       0
  1463 ;;      Totals:         0      12       0       0       0       0       0
  1464 ;;Total ram usage:       12 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    1
  1467 ;; This function calls:
  1468 ;;		___wmul
  1469 ;; This function is called by:
  1470 ;;		_metToucheCombien
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text6
  1475  000614                     __ptext6:
  1476                           	opt callstack 0
  1477  000614                     _calculToucheCombien:
  1478                           	opt callstack 28
  1479  000614                     
  1480                           ;main.c: 170: int ligneVar=ligne-1;
  1481  000614  0EFF               	movlw	255
  1482  000616  0100               	movlb	0	; force () banked
  1483  000618  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1484  00061A  0100               	movlb	0	; force () banked
  1485  00061C  6FC2               	movwf	calculToucheCombien@ligneVar& (0+255),b
  1486  00061E  0EFF               	movlw	255
  1487  000620  0100               	movlb	0	; force () banked
  1488  000622  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1489  000624  0100               	movlb	0	; force () banked
  1490  000626  6FC3               	movwf	(calculToucheCombien@ligneVar+1)& (0+255),b
  1491                           
  1492                           ;main.c: 171: int colonneVar=colonne-1;
  1493  000628  0EFF               	movlw	255
  1494  00062A  0100               	movlb	0	; force () banked
  1495  00062C  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1496  00062E  0100               	movlb	0	; force () banked
  1497  000630  6FC4               	movwf	calculToucheCombien@colonneVar& (0+255),b
  1498  000632  0EFF               	movlw	255
  1499  000634  0100               	movlb	0	; force () banked
  1500  000636  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1501  000638  0100               	movlb	0	; force () banked
  1502  00063A  6FC5               	movwf	(calculToucheCombien@colonneVar+1)& (0+255),b
  1503  00063C                     
  1504                           ; BSR set to: 0
  1505                           ;main.c: 172: char nbMines=0;
  1506  00063C  0E00               	movlw	0
  1507  00063E  0100               	movlb	0	; force () banked
  1508  000640  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1509  000642  EFC1  F003         	goto	l1673
  1510  000646                     l1653:
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;main.c: 177: {;main.c: 178: if (colonneVar >=0 && colonneVar <20 && ligneVar >=0 && lig
      +                          neVar <4)
  1514  000646  0100               	movlb	0	; force () banked
  1515  000648  BFC5               	btfsc	(calculToucheCombien@colonneVar+1)& (0+255),7,b
  1516  00064A  EF29  F003         	goto	u571
  1517  00064E  EF2B  F003         	goto	u570
  1518  000652                     u571:
  1519  000652  EF9E  F003         	goto	l95
  1520  000656                     u570:
  1521  000656                     
  1522                           ; BSR set to: 0
  1523  000656  0100               	movlb	0	; force () banked
  1524  000658  BFC5               	btfsc	(calculToucheCombien@colonneVar+1)& (0+255),7,b
  1525  00065A  EF3A  F003         	goto	u580
  1526  00065E  51C5               	movf	(calculToucheCombien@colonneVar+1)& (0+255),w,b
  1527  000660  E107               	bnz	u581
  1528  000662  0E14               	movlw	20
  1529  000664  5DC4               	subwf	calculToucheCombien@colonneVar& (0+255),w,b
  1530  000666  B0D8               	btfsc	status,0,c
  1531  000668  EF38  F003         	goto	u581
  1532  00066C  EF3A  F003         	goto	u580
  1533  000670                     u581:
  1534  000670  EF9E  F003         	goto	l95
  1535  000674                     u580:
  1536  000674                     
  1537                           ; BSR set to: 0
  1538  000674  0100               	movlb	0	; force () banked
  1539  000676  BFC3               	btfsc	(calculToucheCombien@ligneVar+1)& (0+255),7,b
  1540  000678  EF40  F003         	goto	u591
  1541  00067C  EF42  F003         	goto	u590
  1542  000680                     u591:
  1543  000680  EF9E  F003         	goto	l95
  1544  000684                     u590:
  1545  000684                     
  1546                           ; BSR set to: 0
  1547  000684  0100               	movlb	0	; force () banked
  1548  000686  BFC3               	btfsc	(calculToucheCombien@ligneVar+1)& (0+255),7,b
  1549  000688  EF51  F003         	goto	u600
  1550  00068C  51C3               	movf	(calculToucheCombien@ligneVar+1)& (0+255),w,b
  1551  00068E  E107               	bnz	u601
  1552  000690  0E04               	movlw	4
  1553  000692  5DC2               	subwf	calculToucheCombien@ligneVar& (0+255),w,b
  1554  000694  B0D8               	btfsc	status,0,c
  1555  000696  EF4F  F003         	goto	u601
  1556  00069A  EF51  F003         	goto	u600
  1557  00069E                     u601:
  1558  00069E  EF9E  F003         	goto	l95
  1559  0006A2                     u600:
  1560  0006A2                     
  1561                           ; BSR set to: 0
  1562                           ;main.c: 179: {;main.c: 180: if (!(colonneVar==colonne && ligneVar==ligne))
  1563  0006A2  0100               	movlb	0	; force () banked
  1564  0006A4  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1565  0006A6  0100               	movlb	0	; force () banked
  1566  0006A8  19C4               	xorwf	calculToucheCombien@colonneVar& (0+255),w,b
  1567  0006AA  E109               	bnz	u611
  1568  0006AC  0100               	movlb	0	; force () banked
  1569  0006AE  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1570  0006B0  0100               	movlb	0	; force () banked
  1571  0006B2  19C5               	xorwf	(calculToucheCombien@colonneVar+1)& (0+255),w,b
  1572  0006B4  A4D8               	btfss	status,2,c
  1573  0006B6  EF5F  F003         	goto	u611
  1574  0006BA  EF61  F003         	goto	u610
  1575  0006BE                     u611:
  1576  0006BE  EF71  F003         	goto	l1665
  1577  0006C2                     u610:
  1578  0006C2                     
  1579                           ; BSR set to: 0
  1580  0006C2  0100               	movlb	0	; force () banked
  1581  0006C4  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  1582  0006C6  0100               	movlb	0	; force () banked
  1583  0006C8  19C2               	xorwf	calculToucheCombien@ligneVar& (0+255),w,b
  1584  0006CA  E10B               	bnz	u620
  1585  0006CC  0100               	movlb	0	; force () banked
  1586  0006CE  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1587  0006D0  0100               	movlb	0	; force () banked
  1588  0006D2  19C3               	xorwf	(calculToucheCombien@ligneVar+1)& (0+255),w,b
  1589  0006D4  B4D8               	btfsc	status,2,c
  1590  0006D6  EF6F  F003         	goto	u621
  1591  0006DA  EF71  F003         	goto	u620
  1592  0006DE                     u621:
  1593  0006DE  EF9E  F003         	goto	l95
  1594  0006E2                     u620:
  1595  0006E2                     l1665:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;main.c: 181: {;main.c: 182: if (m_tabMines[ligneVar][colonneVar]==2)
  1599  0006E2  C0C2  F0B4         	movff	calculToucheCombien@ligneVar,___wmul@multiplier
  1600  0006E6  C0C3  F0B5         	movff	calculToucheCombien@ligneVar+1,___wmul@multiplier+1
  1601  0006EA  0E00               	movlw	0
  1602  0006EC  0100               	movlb	0	; force () banked
  1603  0006EE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1604  0006F0  0E15               	movlw	21
  1605  0006F2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1606  0006F4  ECC9  F008         	call	___wmul	;wreg free
  1607  0006F8  0E60               	movlw	low _m_tabMines
  1608  0006FA  0100               	movlb	0	; force () banked
  1609  0006FC  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1610  0006FE  0E00               	movlw	high _m_tabMines
  1611  000700  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1612  000702  0100               	movlb	0	; force () banked
  1613  000704  51B4               	movf	?___wmul& (0+255),w,b
  1614  000706  0100               	movlb	0	; force () banked
  1615  000708  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1616  00070A  0100               	movlb	0	; force () banked
  1617  00070C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1618  00070E  0100               	movlb	0	; force () banked
  1619  000710  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1620  000712  0100               	movlb	0	; force () banked
  1621  000714  51C4               	movf	calculToucheCombien@colonneVar& (0+255),w,b
  1622  000716  0100               	movlb	0	; force () banked
  1623  000718  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1624  00071A  6ED9               	movwf	fsr2l,c
  1625  00071C  0100               	movlb	0	; force () banked
  1626  00071E  51C5               	movf	(calculToucheCombien@colonneVar+1)& (0+255),w,b
  1627  000720  0100               	movlb	0	; force () banked
  1628  000722  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1629  000724  6EDA               	movwf	fsr2h,c
  1630  000726  0E02               	movlw	2
  1631  000728  18DE               	xorwf	postinc2,w,c
  1632  00072A  A4D8               	btfss	status,2,c
  1633  00072C  EF9A  F003         	goto	u631
  1634  000730  EF9C  F003         	goto	u630
  1635  000734                     u631:
  1636  000734  EF9E  F003         	goto	l95
  1637  000738                     u630:
  1638  000738                     
  1639                           ; BSR set to: 0
  1640                           ;main.c: 183: nbMines++;
  1641  000738  0100               	movlb	0	; force () banked
  1642  00073A  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1643  00073C                     l95:
  1644                           
  1645                           ; BSR set to: 0
  1646  00073C  0100               	movlb	0	; force () banked
  1647  00073E  4BC4               	infsnz	calculToucheCombien@colonneVar& (0+255),f,b
  1648  000740  2BC5               	incf	(calculToucheCombien@colonneVar+1)& (0+255),f,b
  1649  000742                     l1669:
  1650                           
  1651                           ; BSR set to: 0
  1652  000742  0E01               	movlw	1
  1653  000744  0100               	movlb	0	; force () banked
  1654  000746  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1655  000748  0100               	movlb	0	; force () banked
  1656  00074A  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1657  00074C  0E00               	movlw	0
  1658  00074E  0100               	movlb	0	; force () banked
  1659  000750  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1660  000752  0100               	movlb	0	; force () banked
  1661  000754  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1662  000756  0100               	movlb	0	; force () banked
  1663  000758  51C4               	movf	calculToucheCombien@colonneVar& (0+255),w,b
  1664  00075A  0100               	movlb	0	; force () banked
  1665  00075C  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1666  00075E  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1667  000760  0A80               	xorlw	128
  1668  000762  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1669  000764  0100               	movlb	0	; force () banked
  1670  000766  51C5               	movf	(calculToucheCombien@colonneVar+1)& (0+255),w,b
  1671  000768  0A80               	xorlw	128
  1672  00076A  0100               	movlb	0	; force () banked
  1673  00076C  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1674  00076E  B0D8               	btfsc	status,0,c
  1675  000770  EFBC  F003         	goto	u641
  1676  000774  EFBE  F003         	goto	u640
  1677  000778                     u641:
  1678  000778  EF23  F003         	goto	l1653
  1679  00077C                     u640:
  1680  00077C                     
  1681                           ; BSR set to: 0
  1682  00077C  0100               	movlb	0	; force () banked
  1683  00077E  4BC2               	infsnz	calculToucheCombien@ligneVar& (0+255),f,b
  1684  000780  2BC3               	incf	(calculToucheCombien@ligneVar+1)& (0+255),f,b
  1685  000782                     l1673:
  1686                           
  1687                           ; BSR set to: 0
  1688  000782  0E01               	movlw	1
  1689  000784  0100               	movlb	0	; force () banked
  1690  000786  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1691  000788  0100               	movlb	0	; force () banked
  1692  00078A  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1693  00078C  0E00               	movlw	0
  1694  00078E  0100               	movlb	0	; force () banked
  1695  000790  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1696  000792  0100               	movlb	0	; force () banked
  1697  000794  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1698  000796  0100               	movlb	0	; force () banked
  1699  000798  51C2               	movf	calculToucheCombien@ligneVar& (0+255),w,b
  1700  00079A  0100               	movlb	0	; force () banked
  1701  00079C  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1702  00079E  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1703  0007A0  0A80               	xorlw	128
  1704  0007A2  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1705  0007A4  0100               	movlb	0	; force () banked
  1706  0007A6  51C3               	movf	(calculToucheCombien@ligneVar+1)& (0+255),w,b
  1707  0007A8  0A80               	xorlw	128
  1708  0007AA  0100               	movlb	0	; force () banked
  1709  0007AC  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1710  0007AE  B0D8               	btfsc	status,0,c
  1711  0007B0  EFDC  F003         	goto	u651
  1712  0007B4  EFDE  F003         	goto	u650
  1713  0007B8                     u651:
  1714  0007B8  EFA1  F003         	goto	l1669
  1715  0007BC                     u650:
  1716  0007BC                     
  1717                           ; BSR set to: 0
  1718                           ;main.c: 184: };main.c: 185: };main.c: 186: };main.c: 187: };main.c: 188: return nbMines
      +                          ;
  1719  0007BC  0100               	movlb	0	; force () banked
  1720  0007BE  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1721  0007C0                     
  1722                           ; BSR set to: 0
  1723  0007C0  0012               	return		;funcret
  1724  0007C2                     __end_of_calculToucheCombien:
  1725                           	opt callstack 0
  1726                           
  1727 ;; *************** function ___wmul *****************
  1728 ;; Defined at:
  1729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1732 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  product         2    4[BANK0 ] unsigned int 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  2    0[BANK0 ] unsigned int 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, prodl, prodh
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         0       4       0       0       0       0       0
  1745 ;;      Locals:         0       2       0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0
  1747 ;;      Totals:         0       6       0       0       0       0       0
  1748 ;;Total ram usage:        6 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_calculToucheCombien
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text7
  1758  001192                     __ptext7:
  1759                           	opt callstack 0
  1760  001192                     ___wmul:
  1761                           	opt callstack 28
  1762  001192  0100               	movlb	0	; () banked
  1763  001194  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1764  001196  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1765  001198  CFF3 F0B8          	movff	prodl,___wmul@product
  1766  00119C  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1767  0011A0  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1768  0011A2  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1769  0011A4  50F3               	movf	243,w,c
  1770  0011A6  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1771  0011A8  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1772  0011AA  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1773  0011AC  50F3               	movf	243,w,c
  1774  0011AE  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1775  0011B0                     
  1776                           ; BSR set to: 0
  1777  0011B0  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1778  0011B4  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1779  0011B8                     
  1780                           ; BSR set to: 0
  1781  0011B8  0012               	return		;funcret
  1782  0011BA                     __end_of___wmul:
  1783                           	opt callstack 0
  1784                           
  1785 ;; *************** function _lcd_putMessage *****************
  1786 ;; Defined at:
  1787 ;;		line 387 in file "Lcd4Lignes.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  1790 ;;		 -> m_tabMines(84), STR_1(17), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  j               1   13[BANK0 ] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1802 ;;      Params:         0       3       0       0       0       0       0
  1803 ;;      Locals:         0       1       0       0       0       0       0
  1804 ;;      Temps:          0       5       0       0       0       0       0
  1805 ;;      Totals:         0       9       0       0       0       0       0
  1806 ;;Total ram usage:        9 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    4
  1809 ;; This function calls:
  1810 ;;		_lcd_ecritChar
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text8
  1817  000B38                     __ptext8:
  1818                           	opt callstack 0
  1819  000B38                     _lcd_putMessage:
  1820                           	opt callstack 26
  1821  000B38                     
  1822                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  1823  000B38  0E00               	movlw	0
  1824  000B3A  0100               	movlb	0	; force () banked
  1825  000B3C  6FC1               	movwf	lcd_putMessage@j& (0+255),b
  1826  000B3E  EFC9  F005         	goto	l1817
  1827  000B42                     l1813:
  1828                           
  1829                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  1830  000B42  0100               	movlb	0	; force () banked
  1831  000B44  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  1832  000B46  0100               	movlb	0	; force () banked
  1833  000B48  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  1834  000B4A  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  1835  000B4C  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  1836  000B4E  0100               	movlb	0	; force () banked
  1837  000B50  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1838  000B52  0100               	movlb	0	; force () banked
  1839  000B54  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  1840  000B56  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  1841  000B58  0100               	movlb	0	; force () banked
  1842  000B5A  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1843  000B5C  0100               	movlb	0	; force () banked
  1844  000B5E  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  1845  000B60  0E00               	movlw	0
  1846  000B62  0100               	movlb	0	; force () banked
  1847  000B64  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  1848  000B66  0100               	movlb	0	; force () banked
  1849  000B68  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  1850  000B6A  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  1851  000B6E  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  1852  000B72  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  1853  000B76  BAF8               	btfsc	tblptru,5,c
  1854  000B78  D003               	bra	u767
  1855  000B7A  0008               	tblrd		*
  1856  000B7C  50F5               	movf	tablat,w,c
  1857  000B7E  D005               	bra	u760
  1858  000B80                     u767:
  1859  000B80  CFF6 FFD9          	movff	tblptrl,fsr2l
  1860  000B84  CFF7 FFDA          	movff	tblptrh,fsr2h
  1861  000B88  50DF               	movf	indf2,w,c
  1862  000B8A                     u760:
  1863  000B8A  EC2A  F008         	call	_lcd_ecritChar
  1864  000B8E  0100               	movlb	0	; force () banked
  1865  000B90  2BC1               	incf	lcd_putMessage@j& (0+255),f,b
  1866  000B92                     l1817:
  1867                           
  1868                           ; BSR set to: 0
  1869  000B92  0100               	movlb	0	; force () banked
  1870  000B94  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  1871  000B96  0100               	movlb	0	; force () banked
  1872  000B98  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  1873  000B9A  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  1874  000B9C  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  1875  000B9E  0100               	movlb	0	; force () banked
  1876  000BA0  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1877  000BA2  0100               	movlb	0	; force () banked
  1878  000BA4  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  1879  000BA6  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  1880  000BA8  0100               	movlb	0	; force () banked
  1881  000BAA  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1882  000BAC  0100               	movlb	0	; force () banked
  1883  000BAE  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  1884  000BB0  0E00               	movlw	0
  1885  000BB2  0100               	movlb	0	; force () banked
  1886  000BB4  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  1887  000BB6  0100               	movlb	0	; force () banked
  1888  000BB8  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  1889  000BBA  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  1890  000BBE  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  1891  000BC2  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  1892  000BC6  BAF8               	btfsc	tblptru,5,c
  1893  000BC8  D003               	bra	u777
  1894  000BCA  0008               	tblrd		*
  1895  000BCC  50F5               	movf	tablat,w,c
  1896  000BCE  D005               	bra	u770
  1897  000BD0                     u777:
  1898  000BD0  CFF6 FFD9          	movff	tblptrl,fsr2l
  1899  000BD4  CFF7 FFDA          	movff	tblptrh,fsr2h
  1900  000BD8  50DF               	movf	indf2,w,c
  1901  000BDA                     u770:
  1902  000BDA  0900               	iorlw	0
  1903  000BDC  A4D8               	btfss	status,2,c
  1904  000BDE  EFF3  F005         	goto	u781
  1905  000BE2  EFF5  F005         	goto	u780
  1906  000BE6                     u781:
  1907  000BE6  EFA1  F005         	goto	l1813
  1908  000BEA                     u780:
  1909  000BEA  0012               	return		;funcret
  1910  000BEC                     __end_of_lcd_putMessage:
  1911                           	opt callstack 0
  1912                           
  1913 ;; *************** function _lcd_ecritChar *****************
  1914 ;; Defined at:
  1915 ;;		line 359 in file "Lcd4Lignes.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  car             1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  car             1    3[BANK0 ] unsigned char 
  1920 ;;  posRam          1    4[BANK0 ] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1930 ;;      Params:         0       0       0       0       0       0       0
  1931 ;;      Locals:         0       2       0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0
  1933 ;;      Totals:         0       2       0       0       0       0       0
  1934 ;;Total ram usage:        2 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    3
  1937 ;; This function calls:
  1938 ;;		_lcd_wrCom
  1939 ;;		_lcd_wrData
  1940 ;; This function is called by:
  1941 ;;		_lcd_putMessage
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text9
  1946  001054                     __ptext9:
  1947                           	opt callstack 0
  1948  001054                     _lcd_ecritChar:
  1949                           	opt callstack 26
  1950                           
  1951                           ;incstack = 0
  1952                           ;lcd_ecritChar@car stored from wreg
  1953  001054  0100               	movlb	0	; force () banked
  1954  001056  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  1955  001058                     
  1956                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  1957  001058  0100               	movlb	0	; force () banked
  1958  00105A  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  1959  00105C  EC95  F008         	call	_lcd_wrData
  1960  001060  0100               	movlb	0	; force () banked
  1961  001062  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  1962                           
  1963                           ;Lcd4Lignes.c: 364: switch(posRam)
  1964  001064  EF43  F008         	goto	l1749
  1965  001068                     l1741:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  1969  001068  0EC0               	movlw	192
  1970  00106A  EC65  F007         	call	_lcd_wrCom
  1971                           
  1972                           ;Lcd4Lignes.c: 368: break;
  1973  00106E  EF53  F008         	goto	l188
  1974  001072                     l1743:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  1978  001072  0E94               	movlw	148
  1979  001074  EC65  F007         	call	_lcd_wrCom
  1980                           
  1981                           ;Lcd4Lignes.c: 371: break;
  1982  001078  EF53  F008         	goto	l188
  1983  00107C                     l1745:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  1987  00107C  0ED4               	movlw	212
  1988  00107E  EC65  F007         	call	_lcd_wrCom
  1989                           
  1990                           ;Lcd4Lignes.c: 374: break;
  1991  001082  EF53  F008         	goto	l188
  1992  001086                     l1749:
  1993                           
  1994                           ; BSR set to: 0
  1995  001086  0100               	movlb	0	; force () banked
  1996  001088  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  1997                           
  1998                           ; Switch size 1, requested type "simple"
  1999                           ; Number of cases is 3, Range of values is 148 to 212
  2000                           ; switch strategies available:
  2001                           ; Name         Instructions Cycles
  2002                           ; simple_byte           10     6 (average)
  2003                           ;	Chosen strategy is simple_byte
  2004  00108A  0A94               	xorlw	148	; case 148
  2005  00108C  B4D8               	btfsc	status,2,c
  2006  00108E  EF34  F008         	goto	l1741
  2007  001092  0A54               	xorlw	84	; case 192
  2008  001094  B4D8               	btfsc	status,2,c
  2009  001096  EF3E  F008         	goto	l1745
  2010  00109A  0A14               	xorlw	20	; case 212
  2011  00109C  B4D8               	btfsc	status,2,c
  2012  00109E  EF39  F008         	goto	l1743
  2013  0010A2  EF53  F008         	goto	l188
  2014  0010A6                     l188:
  2015  0010A6  0012               	return		;funcret
  2016  0010A8                     __end_of_lcd_ecritChar:
  2017                           	opt callstack 0
  2018                           
  2019 ;; *************** function _lcd_init *****************
  2020 ;; Defined at:
  2021 ;;		line 258 in file "Lcd4Lignes.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2035 ;;      Params:         0       0       0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0
  2038 ;;      Totals:         0       0       0       0       0       0       0
  2039 ;;Total ram usage:        0 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    5
  2042 ;; This function calls:
  2043 ;;		_lcd_initCGRam
  2044 ;;		_lcd_resetSequence
  2045 ;;		_lcd_wrCom
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text10
  2052  0011BA                     __ptext10:
  2053                           	opt callstack 0
  2054  0011BA                     _lcd_init:
  2055                           	opt callstack 25
  2056  0011BA                     
  2057                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2058  0011BA  EC9B  F007         	call	_lcd_resetSequence	;wreg free
  2059                           
  2060                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2061  0011BE  0E28               	movlw	40
  2062  0011C0  EC65  F007         	call	_lcd_wrCom
  2063                           
  2064                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2065  0011C4  0E0F               	movlw	15
  2066  0011C6  EC65  F007         	call	_lcd_wrCom
  2067                           
  2068                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2069  0011CA  0E01               	movlw	1
  2070  0011CC  EC65  F007         	call	_lcd_wrCom
  2071                           
  2072                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2073  0011D0  0E06               	movlw	6
  2074  0011D2  EC65  F007         	call	_lcd_wrCom
  2075                           
  2076                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2077  0011D6  0E80               	movlw	128
  2078  0011D8  EC65  F007         	call	_lcd_wrCom
  2079  0011DC                     
  2080                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2081  0011DC  ECA5  F006         	call	_lcd_initCGRam	;wreg free
  2082  0011E0  0012               	return		;funcret
  2083  0011E2                     __end_of_lcd_init:
  2084                           	opt callstack 0
  2085                           
  2086 ;; *************** function _lcd_resetSequence *****************
  2087 ;; Defined at:
  2088 ;;		line 221 in file "Lcd4Lignes.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2102 ;;      Params:         0       0       0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0
  2104 ;;      Temps:          0       1       0       0       0       0       0
  2105 ;;      Totals:         0       1       0       0       0       0       0
  2106 ;;Total ram usage:        1 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    1
  2109 ;; This function calls:
  2110 ;;		_lcd_ecrireDonnees
  2111 ;;		_lcd_strobeEnableBit
  2112 ;; This function is called by:
  2113 ;;		_lcd_init
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text11
  2118  000F36                     __ptext11:
  2119                           	opt callstack 0
  2120  000F36                     _lcd_resetSequence:
  2121                           	opt callstack 28
  2122  000F36                     
  2123                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2124  000F36  0E00               	movlw	0
  2125  000F38  6E95               	movwf	149,c	;volatile
  2126  000F3A                     
  2127                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2128  000F3A  0E0D               	movlw	13
  2129  000F3C  0100               	movlb	0	; force () banked
  2130  000F3E  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2131  000F40  0EFB               	movlw	251
  2132  000F42                     u997:
  2133  000F42  2EE8               	decfsz	wreg,f,c
  2134  000F44  D7FE               	bra	u997
  2135  000F46  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2136  000F48  D7FC               	bra	u997
  2137  000F4A  F000 F000          	nop2	
  2138  000F4E                     
  2139                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2140  000F4E  9080               	bcf	128,0,c	;volatile
  2141  000F50                     
  2142                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2143  000F50  9280               	bcf	128,1,c	;volatile
  2144  000F52                     
  2145                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2146  000F52  0E03               	movlw	3
  2147  000F54  ECF1  F008         	call	_lcd_ecrireDonnees
  2148  000F58                     
  2149                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2150  000F58  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2151  000F5C                     
  2152                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2153  000F5C  0E03               	movlw	3
  2154  000F5E                     u1007:
  2155  000F5E  2EE8               	decfsz	wreg,f,c
  2156  000F60  D7FE               	bra	u1007
  2157  000F62  F000               	nop	
  2158  000F64                     
  2159                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2160  000F64  0E03               	movlw	3
  2161  000F66  ECF1  F008         	call	_lcd_ecrireDonnees
  2162  000F6A                     
  2163                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2164  000F6A  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2165  000F6E                     
  2166                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2167  000F6E  0E03               	movlw	3
  2168  000F70                     u1017:
  2169  000F70  2EE8               	decfsz	wreg,f,c
  2170  000F72  D7FE               	bra	u1017
  2171  000F74  F000               	nop	
  2172  000F76                     
  2173                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2174  000F76  0E03               	movlw	3
  2175  000F78  ECF1  F008         	call	_lcd_ecrireDonnees
  2176  000F7C                     
  2177                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2178  000F7C  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2179  000F80                     
  2180                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2181  000F80  0E03               	movlw	3
  2182  000F82                     u1027:
  2183  000F82  2EE8               	decfsz	wreg,f,c
  2184  000F84  D7FE               	bra	u1027
  2185  000F86  F000               	nop	
  2186  000F88                     
  2187                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2188  000F88  0E02               	movlw	2
  2189  000F8A  ECF1  F008         	call	_lcd_ecrireDonnees
  2190  000F8E                     
  2191                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2192  000F8E  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2193  000F92                     
  2194                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2195  000F92  0E03               	movlw	3
  2196  000F94                     u1037:
  2197  000F94  2EE8               	decfsz	wreg,f,c
  2198  000F96  D7FE               	bra	u1037
  2199  000F98  F000               	nop	
  2200  000F9A                     
  2201                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2202  000F9A  0E0F               	movlw	15
  2203  000F9C  6E95               	movwf	149,c	;volatile
  2204  000F9E  0012               	return		;funcret
  2205  000FA0                     __end_of_lcd_resetSequence:
  2206                           	opt callstack 0
  2207                           
  2208 ;; *************** function _lcd_initCGRam *****************
  2209 ;; Defined at:
  2210 ;;		line 417 in file "Lcd4Lignes.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  j               1    6[BANK0 ] unsigned char 
  2215 ;;  i               1    5[BANK0 ] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2225 ;;      Params:         0       0       0       0       0       0       0
  2226 ;;      Locals:         0       2       0       0       0       0       0
  2227 ;;      Temps:          0       2       0       0       0       0       0
  2228 ;;      Totals:         0       4       0       0       0       0       0
  2229 ;;Total ram usage:        4 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    4
  2232 ;; This function calls:
  2233 ;;		_lcd_curseurHome
  2234 ;;		_lcd_wrCom
  2235 ;;		_lcd_wrData
  2236 ;; This function is called by:
  2237 ;;		_lcd_init
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text12
  2242  000D4A                     __ptext12:
  2243                           	opt callstack 0
  2244  000D4A                     _lcd_initCGRam:
  2245                           	opt callstack 25
  2246  000D4A                     
  2247                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2248  000D4A  0E40               	movlw	64
  2249  000D4C  EC65  F007         	call	_lcd_wrCom
  2250  000D50                     
  2251                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2252  000D50  0E00               	movlw	0
  2253  000D52  0100               	movlb	0	; force () banked
  2254  000D54  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2255  000D56                     
  2256                           ; BSR set to: 0
  2257  000D56  0E07               	movlw	7
  2258  000D58  0100               	movlb	0	; force () banked
  2259  000D5A  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2260  000D5C  EFB2  F006         	goto	u661
  2261  000D60  EFB4  F006         	goto	u660
  2262  000D64                     u661:
  2263  000D64  EFB6  F006         	goto	l1721
  2264  000D68                     u660:
  2265  000D68  EFF3  F006         	goto	l1737
  2266  000D6C                     l1721:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2270  000D6C  0E00               	movlw	0
  2271  000D6E  0100               	movlb	0	; force () banked
  2272  000D70  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2273  000D72                     
  2274                           ; BSR set to: 0
  2275  000D72  0E07               	movlw	7
  2276  000D74  0100               	movlb	0	; force () banked
  2277  000D76  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2278  000D78  EFC0  F006         	goto	u671
  2279  000D7C  EFC2  F006         	goto	u670
  2280  000D80                     u671:
  2281  000D80  EFC4  F006         	goto	l1727
  2282  000D84                     u670:
  2283  000D84  EFE8  F006         	goto	l1733
  2284  000D88                     l1727:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2288  000D88  0100               	movlb	0	; force () banked
  2289  000D8A  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2290  000D8C  0D08               	mullw	8
  2291  000D8E  0E54               	movlw	low _matCGRAM
  2292  000D90  0100               	movlb	0	; force () banked
  2293  000D92  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2294  000D94  0E01               	movlw	high _matCGRAM
  2295  000D96  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2296  000D98  50F3               	movf	243,w,c
  2297  000D9A  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2298  000D9C  50F4               	movf	244,w,c
  2299  000D9E  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2300  000DA0  0100               	movlb	0	; force () banked
  2301  000DA2  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2302  000DA4  0100               	movlb	0	; force () banked
  2303  000DA6  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2304  000DA8  6ED9               	movwf	fsr2l,c
  2305  000DAA  0100               	movlb	0	; force () banked
  2306  000DAC  0E00               	movlw	0
  2307  000DAE  0100               	movlb	0	; force () banked
  2308  000DB0  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2309  000DB2  6EDA               	movwf	fsr2h,c
  2310  000DB4  50DF               	movf	indf2,w,c
  2311  000DB6  EC95  F008         	call	_lcd_wrData
  2312  000DBA  0100               	movlb	0	; force () banked
  2313  000DBC  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2314  000DBE                     
  2315                           ; BSR set to: 0
  2316  000DBE  0E07               	movlw	7
  2317  000DC0  0100               	movlb	0	; force () banked
  2318  000DC2  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2319  000DC4  EFE6  F006         	goto	u681
  2320  000DC8  EFE8  F006         	goto	u680
  2321  000DCC                     u681:
  2322  000DCC  EFC4  F006         	goto	l1727
  2323  000DD0                     u680:
  2324  000DD0                     l1733:
  2325                           
  2326                           ; BSR set to: 0
  2327  000DD0  0100               	movlb	0	; force () banked
  2328  000DD2  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2329  000DD4                     
  2330                           ; BSR set to: 0
  2331  000DD4  0E07               	movlw	7
  2332  000DD6  0100               	movlb	0	; force () banked
  2333  000DD8  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2334  000DDA  EFF1  F006         	goto	u691
  2335  000DDE  EFF3  F006         	goto	u690
  2336  000DE2                     u691:
  2337  000DE2  EFB6  F006         	goto	l1721
  2338  000DE6                     u690:
  2339  000DE6                     l1737:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2343  000DE6  EC07  F009         	call	_lcd_curseurHome	;wreg free
  2344  000DEA  0012               	return		;funcret
  2345  000DEC                     __end_of_lcd_initCGRam:
  2346                           	opt callstack 0
  2347                           
  2348 ;; *************** function _lcd_wrData *****************
  2349 ;; Defined at:
  2350 ;;		line 188 in file "Lcd4Lignes.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  caractere       1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  caractere       1    2[BANK0 ] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      unsigned char 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2364 ;;      Params:         0       0       0       0       0       0       0
  2365 ;;      Locals:         0       1       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0
  2367 ;;      Totals:         0       1       0       0       0       0       0
  2368 ;;Total ram usage:        1 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    2
  2371 ;; This function calls:
  2372 ;;		_lcd_busy
  2373 ;;		_lcd_ecrireDonnees
  2374 ;;		_lcd_strobeEnableBit
  2375 ;; This function is called by:
  2376 ;;		_lcd_ecritChar
  2377 ;;		_lcd_initCGRam
  2378 ;;		_lcd_effaceChar
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text13
  2383  00112A                     __ptext13:
  2384                           	opt callstack 0
  2385  00112A                     _lcd_wrData:
  2386                           	opt callstack 26
  2387                           
  2388                           ;incstack = 0
  2389                           ;lcd_wrData@caractere stored from wreg
  2390  00112A  0100               	movlb	0	; force () banked
  2391  00112C  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  2392  00112E                     
  2393                           ;Lcd4Lignes.c: 190: lcd_busy();
  2394  00112E  EC54  F008         	call	_lcd_busy	;wreg free
  2395  001132                     
  2396                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  2397  001132  0E00               	movlw	0
  2398  001134  6E95               	movwf	149,c	;volatile
  2399  001136                     
  2400                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  2401  001136  8080               	bsf	128,0,c	;volatile
  2402  001138                     
  2403                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  2404  001138  9280               	bcf	128,1,c	;volatile
  2405  00113A                     
  2406                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  2407  00113A  0100               	movlb	0	; force () banked
  2408  00113C  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  2409  00113E  0B0F               	andlw	15
  2410  001140  ECF1  F008         	call	_lcd_ecrireDonnees
  2411  001144                     
  2412                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  2413  001144  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2414  001148                     
  2415                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  2416  001148  0100               	movlb	0	; force () banked
  2417  00114A  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  2418  00114C  ECF1  F008         	call	_lcd_ecrireDonnees
  2419  001150                     
  2420                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  2421  001150  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2422  001154                     
  2423                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  2424  001154  0E0F               	movlw	15
  2425  001156  6E95               	movwf	149,c	;volatile
  2426  001158                     
  2427                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  2428                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  2429  001158  EC54  F008         	call	_lcd_busy	;wreg free
  2430  00115C  0012               	return		;funcret
  2431  00115E                     __end_of_lcd_wrData:
  2432                           	opt callstack 0
  2433                           
  2434 ;; *************** function _lcd_curseurHome *****************
  2435 ;; Defined at:
  2436 ;;		line 288 in file "Lcd4Lignes.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2450 ;;      Params:         0       0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    3
  2457 ;; This function calls:
  2458 ;;		_lcd_wrCom
  2459 ;; This function is called by:
  2460 ;;		_lcd_initCGRam
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text14
  2465  00120E                     __ptext14:
  2466                           	opt callstack 0
  2467  00120E                     _lcd_curseurHome:
  2468                           	opt callstack 25
  2469  00120E                     
  2470                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2471  00120E  0E02               	movlw	2
  2472  001210  EC65  F007         	call	_lcd_wrCom
  2473  001214  0012               	return		;funcret
  2474  001216                     __end_of_lcd_curseurHome:
  2475                           	opt callstack 0
  2476                           
  2477 ;; *************** function _lcd_gotoXY *****************
  2478 ;; Defined at:
  2479 ;;		line 314 in file "Lcd4Lignes.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  x               1    wreg     unsigned char 
  2482 ;;  y               1    3[BANK0 ] unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  x               1    4[BANK0 ] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         0       1       0       0       0       0       0
  2495 ;;      Locals:         0       1       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0
  2497 ;;      Totals:         0       2       0       0       0       0       0
  2498 ;;Total ram usage:        2 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    3
  2501 ;; This function calls:
  2502 ;;		_lcd_wrCom
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;;		_lcd_effaceLigne
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text15
  2510  000DEC                     __ptext15:
  2511                           	opt callstack 0
  2512  000DEC                     _lcd_gotoXY:
  2513                           	opt callstack 27
  2514                           
  2515                           ;incstack = 0
  2516                           ;lcd_gotoXY@x stored from wreg
  2517  000DEC  0100               	movlb	0	; force () banked
  2518  000DEE  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  2519  000DF0                     
  2520                           ;Lcd4Lignes.c: 316: switch(y)
  2521  000DF0  EF1A  F007         	goto	l1915
  2522  000DF4                     l1905:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  2526  000DF4  0100               	movlb	0	; force () banked
  2527  000DF6  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2528  000DF8  0F7F               	addlw	127
  2529  000DFA  0980               	iorlw	128
  2530  000DFC  EC65  F007         	call	_lcd_wrCom
  2531                           
  2532                           ;Lcd4Lignes.c: 320: break;
  2533  000E00  EF2E  F007         	goto	l177
  2534  000E04                     l1907:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  2538  000E04  0100               	movlb	0	; force () banked
  2539  000E06  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2540  000E08  0FBF               	addlw	191
  2541  000E0A  0980               	iorlw	128
  2542  000E0C  EC65  F007         	call	_lcd_wrCom
  2543                           
  2544                           ;Lcd4Lignes.c: 323: break;
  2545  000E10  EF2E  F007         	goto	l177
  2546  000E14                     l1909:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  2550  000E14  0100               	movlb	0	; force () banked
  2551  000E16  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2552  000E18  0F93               	addlw	147
  2553  000E1A  0980               	iorlw	128
  2554  000E1C  EC65  F007         	call	_lcd_wrCom
  2555                           
  2556                           ;Lcd4Lignes.c: 326: break;
  2557  000E20  EF2E  F007         	goto	l177
  2558  000E24                     l1911:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  2562  000E24  0100               	movlb	0	; force () banked
  2563  000E26  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2564  000E28  0FD3               	addlw	211
  2565  000E2A  0980               	iorlw	128
  2566  000E2C  EC65  F007         	call	_lcd_wrCom
  2567                           
  2568                           ;Lcd4Lignes.c: 329: break;
  2569  000E30  EF2E  F007         	goto	l177
  2570  000E34                     l1915:
  2571  000E34  0100               	movlb	0	; force () banked
  2572  000E36  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  2573                           
  2574                           ; Switch size 1, requested type "simple"
  2575                           ; Number of cases is 4, Range of values is 1 to 4
  2576                           ; switch strategies available:
  2577                           ; Name         Instructions Cycles
  2578                           ; simple_byte           13     7 (average)
  2579                           ;	Chosen strategy is simple_byte
  2580  000E38  0A01               	xorlw	1	; case 1
  2581  000E3A  B4D8               	btfsc	status,2,c
  2582  000E3C  EFFA  F006         	goto	l1905
  2583  000E40  0A03               	xorlw	3	; case 2
  2584  000E42  B4D8               	btfsc	status,2,c
  2585  000E44  EF02  F007         	goto	l1907
  2586  000E48  0A01               	xorlw	1	; case 3
  2587  000E4A  B4D8               	btfsc	status,2,c
  2588  000E4C  EF0A  F007         	goto	l1909
  2589  000E50  0A07               	xorlw	7	; case 4
  2590  000E52  B4D8               	btfsc	status,2,c
  2591  000E54  EF12  F007         	goto	l1911
  2592  000E58  EF2E  F007         	goto	l177
  2593  000E5C                     l177:
  2594  000E5C  0012               	return		;funcret
  2595  000E5E                     __end_of_lcd_gotoXY:
  2596                           	opt callstack 0
  2597                           
  2598 ;; *************** function _lcd_wrCom *****************
  2599 ;; Defined at:
  2600 ;;		line 156 in file "Lcd4Lignes.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  commande        1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  commande        1    2[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      unsigned char 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2614 ;;      Params:         0       0       0       0       0       0       0
  2615 ;;      Locals:         0       1       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0
  2617 ;;      Totals:         0       1       0       0       0       0       0
  2618 ;;Total ram usage:        1 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    2
  2621 ;; This function calls:
  2622 ;;		_lcd_busy
  2623 ;;		_lcd_ecrireDonnees
  2624 ;;		_lcd_strobeEnableBit
  2625 ;; This function is called by:
  2626 ;;		_lcd_init
  2627 ;;		_lcd_curseurHome
  2628 ;;		_lcd_gotoXY
  2629 ;;		_lcd_ecritChar
  2630 ;;		_lcd_initCGRam
  2631 ;;		_lcd_effaceAffichage
  2632 ;;		_lcd_cacheCurseur
  2633 ;;		_lcd_montreCurseur
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text16
  2638  000ECA                     __ptext16:
  2639                           	opt callstack 0
  2640  000ECA                     _lcd_wrCom:
  2641                           	opt callstack 26
  2642                           
  2643                           ;incstack = 0
  2644                           ;lcd_wrCom@commande stored from wreg
  2645  000ECA  0100               	movlb	0	; force () banked
  2646  000ECC  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  2647  000ECE                     
  2648                           ;Lcd4Lignes.c: 158: lcd_busy();
  2649  000ECE  EC54  F008         	call	_lcd_busy	;wreg free
  2650  000ED2                     
  2651                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  2652  000ED2  0E00               	movlw	0
  2653  000ED4  6E95               	movwf	149,c	;volatile
  2654  000ED6                     
  2655                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  2656  000ED6  9080               	bcf	128,0,c	;volatile
  2657  000ED8                     
  2658                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  2659  000ED8  9280               	bcf	128,1,c	;volatile
  2660  000EDA                     
  2661                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  2662  000EDA  0100               	movlb	0	; force () banked
  2663  000EDC  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  2664  000EDE  0B0F               	andlw	15
  2665  000EE0  ECF1  F008         	call	_lcd_ecrireDonnees
  2666  000EE4                     
  2667                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  2668  000EE4  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2669  000EE8                     
  2670                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  2671  000EE8  0100               	movlb	0	; force () banked
  2672  000EEA  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  2673  000EEC  ECF1  F008         	call	_lcd_ecrireDonnees
  2674  000EF0                     
  2675                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  2676  000EF0  EC0B  F009         	call	_lcd_strobeEnableBit	;wreg free
  2677  000EF4                     
  2678                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2679  000EF4  0E03               	movlw	3
  2680  000EF6                     u1047:
  2681  000EF6  2EE8               	decfsz	wreg,f,c
  2682  000EF8  D7FE               	bra	u1047
  2683  000EFA  F000               	nop	
  2684  000EFC                     
  2685                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  2686  000EFC  0100               	movlb	0	; force () banked
  2687  000EFE  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  2688  000F00  B4D8               	btfsc	status,2,c
  2689  000F02  EF85  F007         	goto	u531
  2690  000F06  EF87  F007         	goto	u530
  2691  000F0A                     u531:
  2692  000F0A  EF91  F007         	goto	l1583
  2693  000F0E                     u530:
  2694  000F0E                     
  2695                           ; BSR set to: 0
  2696  000F0E  0E02               	movlw	2
  2697  000F10  0100               	movlb	0	; force () banked
  2698  000F12  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  2699  000F14  A4D8               	btfss	status,2,c
  2700  000F16  EF8F  F007         	goto	u541
  2701  000F1A  EF91  F007         	goto	u540
  2702  000F1E                     u541:
  2703  000F1E  EF96  F007         	goto	l1585
  2704  000F22                     u540:
  2705  000F22                     l1583:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  2709  000F22  0EA6               	movlw	166
  2710  000F24                     u1057:
  2711  000F24  2EE8               	decfsz	wreg,f,c
  2712  000F26  D7FE               	bra	u1057
  2713  000F28  F000 F000          	nop2	
  2714  000F2C                     l1585:
  2715                           
  2716                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  2717  000F2C  0E0F               	movlw	15
  2718  000F2E  6E95               	movwf	149,c	;volatile
  2719  000F30                     
  2720                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  2721  000F30  EC54  F008         	call	_lcd_busy	;wreg free
  2722  000F34  0012               	return		;funcret
  2723  000F36                     __end_of_lcd_wrCom:
  2724                           	opt callstack 0
  2725                           
  2726 ;; *************** function _lcd_strobeEnableBit *****************
  2727 ;; Defined at:
  2728 ;;		line 431 in file "Lcd4Lignes.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		None
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2742 ;;      Params:         0       0       0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0
  2745 ;;      Totals:         0       0       0       0       0       0       0
  2746 ;;Total ram usage:        0 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_lcd_wrCom
  2752 ;;		_lcd_wrData
  2753 ;;		_lcd_resetSequence
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text17
  2758  001216                     __ptext17:
  2759                           	opt callstack 0
  2760  001216                     _lcd_strobeEnableBit:
  2761                           	opt callstack 27
  2762  001216                     
  2763                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  2764  001216  8480               	bsf	128,2,c	;volatile
  2765                           
  2766                           ;Lcd4Lignes.c: 434: __nop();
  2767  001218  F000               	nop	
  2768                           
  2769                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  2770  00121A  9480               	bcf	128,2,c	;volatile
  2771  00121C  0012               	return		;funcret
  2772  00121E                     __end_of_lcd_strobeEnableBit:
  2773                           	opt callstack 0
  2774                           
  2775 ;; *************** function _lcd_ecrireDonnees *****************
  2776 ;; Defined at:
  2777 ;;		line 107 in file "Lcd4Lignes.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  donnee          1    wreg     unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  donnee          1    1[BANK0 ] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2791 ;;      Params:         0       0       0       0       0       0       0
  2792 ;;      Locals:         0       1       0       0       0       0       0
  2793 ;;      Temps:          0       1       0       0       0       0       0
  2794 ;;      Totals:         0       2       0       0       0       0       0
  2795 ;;Total ram usage:        2 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_lcd_wrCom
  2801 ;;		_lcd_wrData
  2802 ;;		_lcd_resetSequence
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text18
  2807  0011E2                     __ptext18:
  2808                           	opt callstack 0
  2809  0011E2                     _lcd_ecrireDonnees:
  2810                           	opt callstack 27
  2811                           
  2812                           ;incstack = 0
  2813                           ;lcd_ecrireDonnees@donnee stored from wreg
  2814  0011E2  0100               	movlb	0	; force () banked
  2815  0011E4  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  2816  0011E6                     
  2817                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  2818  0011E6  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  2819  0011EA  0EF0               	movlw	240
  2820  0011EC  0100               	movlb	0	; force () banked
  2821  0011EE  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  2822  0011F0  0100               	movlb	0	; force () banked
  2823  0011F2  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  2824  0011F4  0B0F               	andlw	15
  2825  0011F6  0100               	movlb	0	; force () banked
  2826  0011F8  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  2827  0011FA  6E83               	movwf	131,c	;volatile
  2828  0011FC                     
  2829                           ; BSR set to: 0
  2830  0011FC  0012               	return		;funcret
  2831  0011FE                     __end_of_lcd_ecrireDonnees:
  2832                           	opt callstack 0
  2833                           
  2834 ;; *************** function _lcd_busy *****************
  2835 ;; Defined at:
  2836 ;;		line 124 in file "Lcd4Lignes.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  adresse         1    1[BANK0 ] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      unsigned char 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2850 ;;      Params:         0       0       0       0       0       0       0
  2851 ;;      Locals:         0       1       0       0       0       0       0
  2852 ;;      Temps:          0       1       0       0       0       0       0
  2853 ;;      Totals:         0       2       0       0       0       0       0
  2854 ;;Total ram usage:        2 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    1
  2857 ;; This function calls:
  2858 ;;		_lcd_lireDonnees
  2859 ;; This function is called by:
  2860 ;;		_lcd_wrCom
  2861 ;;		_lcd_wrData
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text19
  2866  0010A8                     __ptext19:
  2867                           	opt callstack 0
  2868  0010A8                     _lcd_busy:
  2869                           	opt callstack 26
  2870  0010A8                     
  2871                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  2872  0010A8  9080               	bcf	128,0,c	;volatile
  2873                           
  2874                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  2875  0010AA  8280               	bsf	128,1,c	;volatile
  2876  0010AC                     l139:
  2877                           
  2878                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  2879  0010AC  8480               	bsf	128,2,c	;volatile
  2880                           
  2881                           ;Lcd4Lignes.c: 134: __nop();
  2882  0010AE  F000               	nop	
  2883  0010B0                     
  2884                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  2885  0010B0  EC0F  F009         	call	_lcd_lireDonnees	;wreg free
  2886  0010B4  0100               	movlb	0	; force () banked
  2887  0010B6  6FB4               	movwf	??_lcd_busy& (0+255),b
  2888  0010B8  39B4               	swapf	??_lcd_busy& (0+255),w,b
  2889  0010BA  0BF0               	andlw	240
  2890  0010BC  0100               	movlb	0	; force () banked
  2891  0010BE  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  2892  0010C0                     
  2893                           ; BSR set to: 0
  2894                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  2895  0010C0  9480               	bcf	128,2,c	;volatile
  2896  0010C2                     
  2897                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  2898  0010C2  8480               	bsf	128,2,c	;volatile
  2899  0010C4                     
  2900                           ;Lcd4Lignes.c: 139: __nop();
  2901  0010C4  F000               	nop	
  2902                           
  2903                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  2904  0010C6  EC0F  F009         	call	_lcd_lireDonnees	;wreg free
  2905  0010CA  0100               	movlb	0	; force () banked
  2906  0010CC  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  2907  0010CE                     
  2908                           ; BSR set to: 0
  2909                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  2910  0010CE  9480               	bcf	128,2,c	;volatile
  2911  0010D0                     
  2912                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  2913  0010D0  0100               	movlb	0	; force () banked
  2914  0010D2  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  2915  0010D4  EF6E  F008         	goto	u521
  2916  0010D8  EF70  F008         	goto	u520
  2917  0010DC                     u521:
  2918  0010DC  EF56  F008         	goto	l139
  2919  0010E0                     u520:
  2920  0010E0                     
  2921                           ; BSR set to: 0
  2922                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  2923  0010E0  9280               	bcf	128,1,c	;volatile
  2924  0010E2                     
  2925                           ; BSR set to: 0
  2926                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  2927  0010E2  0100               	movlb	0	; force () banked
  2928  0010E4  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  2929  0010E6  0B7F               	andlw	127
  2930  0010E8                     
  2931                           ; BSR set to: 0
  2932  0010E8  0012               	return		;funcret
  2933  0010EA                     __end_of_lcd_busy:
  2934                           	opt callstack 0
  2935                           
  2936 ;; *************** function _lcd_lireDonnees *****************
  2937 ;; Defined at:
  2938 ;;		line 93 in file "Lcd4Lignes.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      unsigned char 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2952 ;;      Params:         0       0       0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0
  2955 ;;      Totals:         0       0       0       0       0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_lcd_busy
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text20
  2966  00121E                     __ptext20:
  2967                           	opt callstack 0
  2968  00121E                     _lcd_lireDonnees:
  2969                           	opt callstack 26
  2970  00121E                     
  2971                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  2972  00121E  5083               	movf	131,w,c	;volatile
  2973  001220  0B0F               	andlw	15
  2974  001222  0012               	return		;funcret
  2975  001224                     __end_of_lcd_lireDonnees:
  2976                           	opt callstack 0
  2977                           
  2978 ;; *************** function _initialisation *****************
  2979 ;; Defined at:
  2980 ;;		line 71 in file "main.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2994 ;;      Params:         0       0       0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		_srand
  3003 ;; This function is called by:
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text21
  3009  00115E                     __ptext21:
  3010                           	opt callstack 0
  3011  00115E                     _initialisation:
  3012                           	opt callstack 29
  3013  00115E                     
  3014                           ;main.c: 73: TRISD = 0;
  3015  00115E  0E00               	movlw	0
  3016  001160  6E95               	movwf	149,c	;volatile
  3017                           
  3018                           ;main.c: 74: ANSELH = 0;
  3019  001162  0E00               	movlw	0
  3020  001164  6E7F               	movwf	127,c	;volatile
  3021  001166                     
  3022                           ;main.c: 75: TRISB = 0xFF;
  3023  001166  6893               	setf	147,c	;volatile
  3024                           
  3025                           ;main.c: 76: ANSEL = 0;
  3026  001168  0E00               	movlw	0
  3027  00116A  6E7E               	movwf	126,c	;volatile
  3028                           
  3029                           ;main.c: 77: TRISA = 0;
  3030  00116C  0E00               	movlw	0
  3031  00116E  6E92               	movwf	146,c	;volatile
  3032  001170                     
  3033                           ;main.c: 81: T1CONbits.TMR1ON = 1;
  3034  001170  80CD               	bsf	205,0,c	;volatile
  3035  001172                     
  3036                           ;main.c: 82: srand(TMR1);
  3037  001172  CFCE F0B4          	movff	4046,srand@x	;volatile
  3038  001176  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  3039  00117A  ECFF  F008         	call	_srand	;wreg free
  3040  00117E                     
  3041                           ;main.c: 84: ANSELbits.ANS7 = 1;
  3042  00117E  8E7E               	bsf	126,7,c	;volatile
  3043  001180                     
  3044                           ;main.c: 85: ADCON0bits.ADON = 1;
  3045  001180  80C2               	bsf	194,0,c	;volatile
  3046  001182                     
  3047                           ;main.c: 86: ADCON1 = 0;
  3048  001182  0E00               	movlw	0
  3049  001184  6EC1               	movwf	193,c	;volatile
  3050  001186                     
  3051                           ;main.c: 87: ADCON2bits.ADFM = 0;
  3052  001186  9EC0               	bcf	192,7,c	;volatile
  3053  001188                     
  3054                           ;main.c: 88: ADCON2bits.ACQT = 0;
  3055  001188  0EC7               	movlw	-57
  3056  00118A  16C0               	andwf	192,f,c	;volatile
  3057  00118C                     
  3058                           ;main.c: 89: ADCON2bits.ADCS = 0;
  3059  00118C  0EF8               	movlw	-8
  3060  00118E  16C0               	andwf	192,f,c	;volatile
  3061  001190  0012               	return		;funcret
  3062  001192                     __end_of_initialisation:
  3063                           	opt callstack 0
  3064                           
  3065 ;; *************** function _srand *****************
  3066 ;; Defined at:
  3067 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  x               2    0[BANK0 ] unsigned int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		status,2
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3081 ;;      Params:         0       2       0       0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0
  3084 ;;      Totals:         0       2       0       0       0       0       0
  3085 ;;Total ram usage:        2 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_initialisation
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text22
  3095  0011FE                     __ptext22:
  3096                           	opt callstack 0
  3097  0011FE                     _srand:
  3098                           	opt callstack 29
  3099  0011FE  C0B4  F0D4         	movff	srand@x,_randx
  3100  001202  C0B5  F0D5         	movff	srand@x+1,_randx+1
  3101  001206  0100               	movlb	0	; () banked
  3102  001208  6BD6               	clrf	(_randx+2)& (0+255),b
  3103  00120A  6BD7               	clrf	(_randx+3)& (0+255),b
  3104  00120C                     
  3105                           ; BSR set to: 0
  3106  00120C  0012               	return		;funcret
  3107  00120E                     __end_of_srand:
  3108                           	opt callstack 0
  3109                           
  3110 ;; *************** function _initTabVue *****************
  3111 ;; Defined at:
  3112 ;;		line 99 in file "main.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  j               1    2[BANK0 ] unsigned char 
  3117 ;;  i               1    3[BANK0 ] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3127 ;;      Params:         0       0       0       0       0       0       0
  3128 ;;      Locals:         0       2       0       0       0       0       0
  3129 ;;      Temps:          0       2       0       0       0       0       0
  3130 ;;      Totals:         0       4       0       0       0       0       0
  3131 ;;Total ram usage:        4 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text23
  3141  000C9E                     __ptext23:
  3142                           	opt callstack 0
  3143  000C9E                     _initTabVue:
  3144                           	opt callstack 30
  3145  000C9E                     
  3146                           ;main.c: 101: for (char i = 0; i < 4; i++)
  3147  000C9E  0E00               	movlw	0
  3148  000CA0  0100               	movlb	0	; force () banked
  3149  000CA2  6FB7               	movwf	initTabVue@i& (0+255),b
  3150  000CA4                     
  3151                           ; BSR set to: 0
  3152  000CA4  0E03               	movlw	3
  3153  000CA6  0100               	movlb	0	; force () banked
  3154  000CA8  65B7               	cpfsgt	initTabVue@i& (0+255),b
  3155  000CAA  EF59  F006         	goto	u791
  3156  000CAE  EF5B  F006         	goto	u790
  3157  000CB2                     u791:
  3158  000CB2  EF5D  F006         	goto	l1825
  3159  000CB6                     u790:
  3160  000CB6  EFA4  F006         	goto	l68
  3161  000CBA                     l1825:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;main.c: 102: {;main.c: 103: for(char j=0;j<20;j++)
  3165  000CBA  0E00               	movlw	0
  3166  000CBC  0100               	movlb	0	; force () banked
  3167  000CBE  6FB6               	movwf	initTabVue@j& (0+255),b
  3168  000CC0                     
  3169                           ; BSR set to: 0
  3170  000CC0  0E13               	movlw	19
  3171  000CC2  0100               	movlb	0	; force () banked
  3172  000CC4  65B6               	cpfsgt	initTabVue@j& (0+255),b
  3173  000CC6  EF67  F006         	goto	u801
  3174  000CCA  EF69  F006         	goto	u800
  3175  000CCE                     u801:
  3176  000CCE  EF6B  F006         	goto	l1831
  3177  000CD2                     u800:
  3178  000CD2  EF8E  F006         	goto	l1837
  3179  000CD6                     l1831:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;main.c: 104: {;main.c: 105: m_tabVue[i][j]=1;
  3183  000CD6  0100               	movlb	0	; force () banked
  3184  000CD8  51B7               	movf	initTabVue@i& (0+255),w,b
  3185  000CDA  0D15               	mullw	21
  3186  000CDC  0E00               	movlw	low _m_tabVue
  3187  000CDE  0100               	movlb	0	; force () banked
  3188  000CE0  6FB4               	movwf	??_initTabVue& (0+255),b
  3189  000CE2  0E01               	movlw	high _m_tabVue
  3190  000CE4  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  3191  000CE6  50F3               	movf	243,w,c
  3192  000CE8  27B4               	addwf	??_initTabVue& (0+255),f,b
  3193  000CEA  50F4               	movf	244,w,c
  3194  000CEC  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3195  000CEE  0100               	movlb	0	; force () banked
  3196  000CF0  51B6               	movf	initTabVue@j& (0+255),w,b
  3197  000CF2  0100               	movlb	0	; force () banked
  3198  000CF4  25B4               	addwf	??_initTabVue& (0+255),w,b
  3199  000CF6  6ED9               	movwf	fsr2l,c
  3200  000CF8  0100               	movlb	0	; force () banked
  3201  000CFA  0E00               	movlw	0
  3202  000CFC  0100               	movlb	0	; force () banked
  3203  000CFE  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3204  000D00  6EDA               	movwf	fsr2h,c
  3205  000D02  0E01               	movlw	1
  3206  000D04  6EDF               	movwf	indf2,c
  3207  000D06                     
  3208                           ; BSR set to: 0
  3209  000D06  0100               	movlb	0	; force () banked
  3210  000D08  2BB6               	incf	initTabVue@j& (0+255),f,b
  3211  000D0A                     
  3212                           ; BSR set to: 0
  3213  000D0A  0E13               	movlw	19
  3214  000D0C  0100               	movlb	0	; force () banked
  3215  000D0E  65B6               	cpfsgt	initTabVue@j& (0+255),b
  3216  000D10  EF8C  F006         	goto	u811
  3217  000D14  EF8E  F006         	goto	u810
  3218  000D18                     u811:
  3219  000D18  EF6B  F006         	goto	l1831
  3220  000D1C                     u810:
  3221  000D1C                     l1837:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;main.c: 106: };main.c: 107: m_tabVue[i][20]=0;
  3225  000D1C  0100               	movlb	0	; force () banked
  3226  000D1E  51B7               	movf	initTabVue@i& (0+255),w,b
  3227  000D20  0D15               	mullw	21
  3228  000D22  0E14               	movlw	low (_m_tabVue+20)
  3229  000D24  24F3               	addwf	243,w,c
  3230  000D26  6ED9               	movwf	fsr2l,c
  3231  000D28  0E01               	movlw	high (_m_tabVue+20)
  3232  000D2A  20F4               	addwfc	prodh,w,c
  3233  000D2C  6EDA               	movwf	fsr2h,c
  3234  000D2E  0E00               	movlw	0
  3235  000D30  6EDF               	movwf	indf2,c
  3236  000D32                     
  3237                           ; BSR set to: 0
  3238  000D32  0100               	movlb	0	; force () banked
  3239  000D34  2BB7               	incf	initTabVue@i& (0+255),f,b
  3240  000D36                     
  3241                           ; BSR set to: 0
  3242  000D36  0E03               	movlw	3
  3243  000D38  0100               	movlb	0	; force () banked
  3244  000D3A  65B7               	cpfsgt	initTabVue@i& (0+255),b
  3245  000D3C  EFA2  F006         	goto	u821
  3246  000D40  EFA4  F006         	goto	u820
  3247  000D44                     u821:
  3248  000D44  EF5D  F006         	goto	l1825
  3249  000D48                     u820:
  3250  000D48                     l68:
  3251                           
  3252                           ; BSR set to: 0
  3253  000D48  0012               	return		;funcret
  3254  000D4A                     __end_of_initTabVue:
  3255                           	opt callstack 0
  3256                           
  3257                           	psect	param0
  3258  0000                     tosu	equ	0xFFF
  3259                           tosh	equ	0xFFE
  3260                           tosl	equ	0xFFD
  3261                           stkptr	equ	0xFFC
  3262                           pclatu	equ	0xFFB
  3263                           pclath	equ	0xFFA
  3264                           pcl	equ	0xFF9
  3265                           tblptru	equ	0xFF8
  3266                           tblptrh	equ	0xFF7
  3267                           tblptrl	equ	0xFF6
  3268                           tablat	equ	0xFF5
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           indf0	equ	0xFEF
  3272                           postinc0	equ	0xFEE
  3273                           postdec0	equ	0xFED
  3274                           preinc0	equ	0xFEC
  3275                           plusw0	equ	0xFEB
  3276                           fsr0h	equ	0xFEA
  3277                           fsr0l	equ	0xFE9
  3278                           wreg	equ	0xFE8
  3279                           indf1	equ	0xFE7
  3280                           postinc1	equ	0xFE6
  3281                           postdec1	equ	0xFE5
  3282                           preinc1	equ	0xFE4
  3283                           plusw1	equ	0xFE3
  3284                           fsr1h	equ	0xFE2
  3285                           fsr1l	equ	0xFE1
  3286                           bsr	equ	0xFE0
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           postdec2	equ	0xFDD
  3290                           preinc2	equ	0xFDC
  3291                           plusw2	equ	0xFDB
  3292                           fsr2h	equ	0xFDA
  3293                           fsr2l	equ	0xFD9
  3294                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     32     120
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabMines(BANK0[84]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    _initialisation->_srand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4431
                                             29 BANK0      3     3      0
                         _initTabVue
                     _initialisation
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1143
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1155
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4     843
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1     494
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initTabVue
   _initialisation
     _srand
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     20      78       4       75.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      14        0.0%
DATA                 0      0     10C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 14:27:47 2019

  __end_of_calculToucheCombien 07C2                             l61 1190                             l68 0D48  
                           l95 073C                             l79 0A7A                             l88 091E  
          ___wmul@multiplicand 00B6                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000   __size_of_lcd_strobeEnableBit 0008  
                          l102 07C0                            l210 121C                            l140 10E0  
                          l133 1222                            l141 10E8                            l150 115C  
                          l207 0DEA                            l136 11FC                            l153 0F9E  
                          l162 1214                            l139 10AC                            l147 0F34  
                          l156 11E0                            l260 11B8                            l271 0EB8  
                          l504 0C9C                            l272 0EC8                            l177 0E5C  
                          l194 0BEA                            l188 10A6                            l924 120C  
                          l927 1052                   __CFG_CPB$OFF 000000                            u520 10E0  
                          u600 06A2                            u521 10DC                            u601 069E  
                          u530 0F0E                            u610 06C2                   __CFG_CPD$OFF 000000  
                          u531 0F0A                            u611 06BE                            u540 0F22  
                          u620 06E2                            u700 0C00                            u541 0F1E  
                          u621 06DE                            u701 0BFC                            u630 0738  
                          u710 0C1A                            u550 0E7E                            u631 0734  
                          u711 0C16                            u551 0E7A                            u800 0CD2  
                          u640 077C                            u720 0C34                            u560 0EB8  
                          u801 0CCE                            u641 0778                            u721 0C30  
                          u561 0EB4                            u810 0D1C                            u650 07BC  
                          u570 0656                            u730 0C52                            u811 0D18  
                          u651 07B8                            u571 0652                            u731 0C4E  
                          u820 0D48                            u660 0D68                            u580 0674  
                          u900 07F6                            u740 0C68                            u821 0D44  
                          u661 0D64                            u581 0670                            u901 07F2  
                          u741 0C64                            u670 0D84                            u590 0684  
                          u910 0838                            u750 0C8C                            u830 0938  
                          u671 0D80                            u591 0680                            u911 0834  
                          u751 0C88                            u831 0934                            u680 0DD0  
                          u760 0B8A                            u920 08C2                            u840 0954  
                          u681 0DCC                            u921 08BE                            u841 0950  
                          u690 0DE6                            u770 0BDA                            u930 0908  
                          u850 099E                            u691 0DE2                            u931 0904  
                          u851 099A                            u780 0BEA                            u940 091E  
                          u860 09B4                            u781 0BE6                            u941 091A  
                          u861 09B0                            u790 0CB6                            u870 0A26  
                          u791 0CB2                            u767 0B80                            u871 0A22  
                          u880 0A7A                            u960 0ACA                            u777 0BD0  
                          u881 0A76                            u961 0AC6                            u890 07DA  
                          u970 0B1E                            u891 07D6                            u971 0B1A  
                          u987 0B26                            u997 0F42                   __CFG_BORV$18 000000  
                 ___awmod@sign 00C7                            prod 000FF3                    lcd_gotoXY@x 00B8  
                          wreg 000FE8                    lcd_gotoXY@y 00B7                   __CFG_LVP$OFF 000000  
                         l1601 1138                           l1531 11E6                           l1611 1150  
                         l1603 113A                           l1541 10C2                           l1533 10A8  
                         l1621 120E                           l1613 1154                           l1605 1144  
                         l1701 0F7C                           l1527 121E                           l1551 10E2  
                         l1543 10C4                           l1535 10B0                           l1615 1154  
                         l1607 1148                           l1711 0F9A                           l1703 0F80  
                         l1623 1192                           l1631 0E70                           l1801 1186  
                         l1545 10CE                           l1537 10C0                           l1561 0ED6  
                         l1617 1158                           l1609 1148                           l1721 0D6C  
                         l1713 0D4A                           l1705 0F88                           l1625 11B0  
                         l1633 0E7E                           l1641 0FFE                           l1803 1188  
                         l1547 10D0                           l1539 10C2                           l1555 1216  
                         l1571 0EE8                           l1563 0ED6                           l1731 0DBE  
                         l1723 0D72                           l1715 0D50                           l1707 0F8E  
                         l1811 0B38                           l1651 063C                           l1635 0E8E  
                         l1643 1034                           l1821 0CA4                           l1805 118C  
                         l1549 10D0                           l1581 0F0E                           l1573 0EE8  
                         l1565 0ED8                           l1557 0ECE                           l1733 0DD0  
                         l1717 0D56                           l1709 0F92                           l1741 1068  
                         l1813 0B42                           l1661 06A2                           l1653 0646  
                         l1901 090C                           l1637 0E98                           l1629 0E5E  
                         l1645 1046                           l1831 0CD6                           l1639 11FE  
                         l1583 0F22                           l1575 0EF0                           l1567 0EDA  
                         l1559 0ED2                           l1911 0E24                           l1903 0DF0  
                         l1735 0DD4                           l1727 0D88                           l1807 11BA  
                         l1743 1072                           l1815 0B8E                           l1671 077C  
                         l1663 06C2                           l1655 0656                           l1751 0BEC  
                         l1841 0D36                           l1833 0D06                           l1825 0CBA  
                         l1585 0F2C                           l1577 0EF4                           l1569 0EE4  
                         l1905 0DF4                           l1593 112E                           l1729 0DBA  
                         l1737 0DE6                           l1681 0F3A                           l1809 11DC  
                         l1745 107C                           l1817 0B92                           l1665 06E2  
                         l1657 0674                           l1673 0782                           l1649 0614  
                         l1761 0C1A                           l1753 0BF2                           l1835 0D0A  
                         l1827 0CC0                           l1819 0C9E                           l1587 0F30  
                         l1579 0EFC                           l1907 0E04                           l1915 0E34  
                         l1595 1132                           l1691 0F5C                           l1683 0F4E  
                         l1739 1058                           l1675 07BC                           l1667 0738  
                         l1659 0684                           l1771 0C52                           l1763 0C22  
                         l1755 0C00                           l1851 0942                           l1843 0920  
                         l1931 0A9C                           l1837 0D1C                           l1589 0F30  
                         l1909 0E14                           l1597 1136                           l1693 0F64  
                         l1685 0F50                           l1749 1086                           l1669 0742  
                         l1781 0C8C                           l1773 0C68                           l1765 0C34  
                         l1757 0C08                           l1861 099E                           l1845 0926  
                         l1933 0AA0                           l1925 0A7C                           l1839 0D32  
                         l1791 1170                           l1599 1136                           l1695 0F6A  
                         l1687 0F52                           l1679 0F36                           l1783 0C94  
                         l1775 0C70                           l1767 0C3C                           l1759 0C0C  
                         l1871 0A56                           l1863 09A2                           l1855 0958  
                         l1951 0B1E                           l1943 0ACE                           l1935 0AAE  
                         l1927 0A80                           l1793 1172                           l1697 0F6E  
                         l1689 0F58                           l1881 07DE                           l1777 0C76  
                         l1769 0C44                           l1865 09B8                           l1857 0988  
                         l1873 0A5E                           l1849 093C                           l1945 0ADC  
                         l1937 0AB2                           l1929 0A84                           l1795 117E  
                         l1787 115E                           l1699 0F76                           l1891 0884  
                         l1883 07E4                           l1875 07C2                           l1779 0C7C  
                         l1867 09E8                           l1859 098C                           l1947 0B08  
                         l1939 0AB8                           l1797 1180                           l1789 1166  
                         l1893 08C2                           l1877 07C8                           l1869 0A26  
                         l1949 0B0C                           l1799 1182                           l1895 08F2  
                         l1887 07FA                           l1897 08F6                           l1889 0838  
                         l1899 0908                           STR_1 0601                           u1007 0F5E  
                         u1017 0F70                           u1027 0F82                           u1037 0F94  
                         u1047 0EF6                           u1057 0F24                           _RCIF 007CF5  
                         _TMR1 000FCE               ??_initialisation 00B6                           _main 0A7C  
                         _rand 0FFE                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           prodh 000FF4  
                         prodl 000FF3                           start 0000                ?_lcd_putMessage 00B9  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000000  
              ??_lcd_ecritChar 00B7                          ?_main 00B4                          ?_rand 00C0  
              __end_of___awmod 0C9E                          _ANSEL 000F7E                          _RCREG 000FAE  
                        _SPBRG 000FAF                          _PORTD 000F83                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISD 000F95                          _TXREG 000FAD  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000            ___lmul@multiplicand 00B8                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
              ??_lcd_initCGRam 00B7                          _randx 00D4                          _srand 11FE  
                        main@i 00D3                          tablat 000FF5                          status 000FD8  
               __CFG_HFOFST$ON 000000                 __CFG_PBADEN$ON 000000               _metToucheCombien 07C2  
              __initialization 0FA0                   __end_of_main 0B38                   __end_of_rand 1054  
   calculToucheCombien@nbMines 00C1           lcd_putMessage@chaine 00B9     calculToucheCombien@colonne 00BC  
                       ??_main 00D1                         ??_rand 00C2                  __activetblptr 000003  
                       _ADCON1 000FC1                         ?_srand 00B4                         _ANSELH 000F7F  
                  initTabVue@i 00B7                    initTabVue@j 00B6                 __CFG_WDTEN$OFF 000000  
                 ?_rempliMines 00C8                         _SPBRGH 000FB0                 __CFG_XINST$OFF 000000  
               lcd_initCGRam@i 00B9                 lcd_initCGRam@j 00BA               __end_of_lcd_busy 10EA  
             __end_of_lcd_init 11E2                         ___lmul 0E5E                         ___wmul 1192  
               __CFG_STVREN$ON 000000                      ??___awmod 00C6                         clear_0 0FE6  
                       clear_1 0FF2                ___awmod@divisor 00C4                ___awmod@counter 00C6  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                         srand@x 00B4              _lcd_resetSequence 0F36  
                   __accesstop 0060        __end_of__initialization 0FF8            _lcd_strobeEnableBit 1216  
           ?_lcd_resetSequence 00B4                  ___rparam_used 000000                   __pidataBANK0 1224  
                 __pidataBANK1 10EA            ??_lcd_resetSequence 00B6                  __end_of_srand 120E  
         ?_lcd_strobeEnableBit 00B4             __size_of_lcd_wrCom 006C    calculToucheCombien@ligneVar 00C2  
    __end_of_lcd_resetSequence 0FA0                        ??_srand 00B6       __size_of_lcd_lireDonnees 0006  
            _lcd_ecrireDonnees 11E2                     __pbssBANK0 0060                     __pbssBANK1 0100  
             ??_lcd_putMessage 00BC             ?_lcd_ecrireDonnees 00B4       __size_of_lcd_curseurHome 0008  
          ??_lcd_ecrireDonnees 00B4                        ?___lmul 00B4                        ?___wmul 00B4  
               ___lmul@product 00BC          ??_lcd_strobeEnableBit 00B4   __size_of_calculToucheCombien 01AE  
     __end_of_metToucheCombien 0920                     _lcd_gotoXY 0DEC                     _lcd_wrData 112A  
    __end_of_lcd_ecrireDonnees 11FE                      ?_lcd_busy 00B4                      ?_lcd_init 00B4  
      lcd_ecrireDonnees@donnee 00B5                     _m_tabMines 0060           __size_of_rempliMines 015C  
                      __Hparam 0000                        __Lparam 0000                     _initTabVue 0C9E  
            __end_of_lcd_wrCom 0F36                __size_of___lmul 006C                        ___awmod 0BEC  
              __size_of___wmul 0028                   __psmallconst 0600                        __pcinit 0FA0  
                    _ANSELbits 000F7E                        __ramtop 0600                        __ptext0 0A7C  
                      __ptext1 0920                        __ptext2 0FFE                        __ptext3 0E5E  
                      __ptext4 0BEC                        __ptext5 07C2                        __ptext6 0614  
                      __ptext7 1192                        __ptext8 0B38                        __ptext9 1054  
        __end_of_lcd_ecritChar 10A8                lcd_busy@adresse 00B5                      _T1CONbits 000FCD  
             ___awmod@dividend 00C2               lcd_ecritChar@car 00B7                     ??_lcd_busy 00B4  
                   ??_lcd_init 00BB     __size_of_lcd_resetSequence 006A           end_of_initialization 0FF8  
        __end_of_lcd_initCGRam 0DEC              ??_lcd_lireDonnees 00B4                      _RCSTAbits 000FAB  
                      postdec1 000FE5                        postinc0 000FEE                        postinc2 000FDE  
      __size_of_initialisation 0034              ??_lcd_curseurHome 00B7            lcd_ecritChar@posRam 00B8  
                    _PORTAbits 000F80                    ?_lcd_gotoXY 00B7                      _TRISCbits 000F94  
                  ?_lcd_wrData 00B4     __size_of_lcd_ecrireDonnees 001C                      _TXSTAbits 000FAC  
                  ?_initTabVue 00B4                 __end_of___lmul 0ECA                 __end_of___wmul 11BA  
                  _BAUDCONbits 000FB8            start_initialization 0FA0            _calculToucheCombien 0614  
          __size_of_lcd_gotoXY 0072                       ??___lmul 00BC                       ??___wmul 00B8  
                rempliMines@nb 00C8            __size_of_lcd_wrData 0034                    __pdataBANK0 00D4  
                  __pdataBANK1 0154               __CFG_LPT1OSC$OFF 000000           ?_calculToucheCombien 00BA  
                __pcstackBANK0 00B4              ?_metToucheCombien 00B4            __size_of_initTabVue 00AC  
           ??_metToucheCombien 00C6              __size_of_lcd_busy 0042              __size_of_lcd_init 0028  
            __CFG_CCP2MX$PORTC 000000    __end_of_lcd_strobeEnableBit 121E                 _initialisation 115E  
                     ?___awmod 00C2                      _lcd_wrCom 0ECA          ??_calculToucheCombien 00BE  
                  __smallconst 0600                _lcd_lireDonnees 121E            lcd_wrData@caractere 00B6  
               __size_of_srand 0010                  ??_rempliMines 00CA                _lcd_curseurHome 120E  
               ___wmul@product 00B8         __end_of_initialisation 1192               __CFG_WDTPS$32768 000000  
      __size_of_lcd_putMessage 00B4                     ?_lcd_wrCom 00B4                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0              ___wmul@multiplier 00B4                   ??_lcd_gotoXY 00B8  
                 ??_lcd_wrData 00B6              lcd_wrCom@commande 00B6              ___lmul@multiplier 00B4  
                    copy_data0 0FB4                      copy_data1 0FD4  calculToucheCombien@colonneVar 00C4  
                     __Hparam0 0000         __size_of_lcd_ecritChar 0054                       __Lparam0 0000  
              ?_initialisation 00B4            __end_of_rempliMines 0A7C                   ??_initTabVue 00B4  
           __CFG_BOREN$SBORDIS 000000                   rempliMines@i 00CF                   rempliMines@j 00D0  
                 rempliMines@x 00CD                   rempliMines@y 00CE             __end_of_lcd_gotoXY 0E5E  
           __end_of_lcd_wrData 115E               __size_of___awmod 00B2         __size_of_lcd_initCGRam 00A2  
              lcd_putMessage@j 00C1        __end_of_lcd_lireDonnees 1224                       _matCGRAM 0154  
      __end_of_lcd_curseurHome 1216                       __ptext10 11BA                       __ptext11 0F36  
                     __ptext20 121E                       __ptext12 0D4A                       __ptext21 115E  
                     __ptext13 112A                       __ptext22 11FE                       __ptext14 120E  
                     __ptext23 0C9E                       __ptext15 0DEC                       __ptext16 0ECA  
                     __ptext17 1216                       __ptext18 11E2                       __ptext19 10A8  
            metToucheCombien@i 00C9              metToucheCombien@j 00CA                       _lcd_busy 10A8  
                     _lcd_init 11BA             __end_of_initTabVue 0D4A       calculToucheCombien@ligne 00BA  
                     _m_tabVue 0100                  __size_of_main 00BC                  __size_of_rand 0056  
                  ??_lcd_wrCom 00B6                  _lcd_ecritChar 1054                  _lcd_initCGRam 0D4A  
                  _rempliMines 0920      __size_of_metToucheCombien 015E                 _lcd_putMessage 0B38  
               ?_lcd_ecritChar 00B4               ?_lcd_lireDonnees 00B4               ?_lcd_curseurHome 00B4  
               ?_lcd_initCGRam 00B4              __CFG_FOSC$INTIO67 000000         __end_of_lcd_putMessage 0BEC  
