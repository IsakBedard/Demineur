

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 30 20:59:52 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F45K20 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  006BDE                     __pidataBANK0:
    84                           	opt callstack 0
    85                           
    86                           ;initializer for _randx
    87  006BDE  0001               	dw	1
    88  006BE0  0000               	dw	0
    89                           
    90                           	psect	idataBANK1
    91  006D08                     __pidataBANK1:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _matCGRAM
    95  006D08  08                 	db	8
    96  006D09  04                 	db	4
    97  006D0A  04                 	db	4
    98  006D0B  0A                 	db	10
    99  006D0C  11                 	db	17
   100  006D0D  1F                 	db	31
   101  006D0E  11                 	db	17
   102  006D0F  00                 	db	0
   103  006D10  1F                 	db	31
   104  006D11  1B                 	db	27
   105  006D12  11                 	db	17
   106  006D13  11                 	db	17
   107  006D14  11                 	db	17
   108  006D15  11                 	db	17
   109  006D16  1B                 	db	27
   110  006D17  1F                 	db	31
   111  006D18  00                 	db	0
   112  006D19  15                 	db	21
   113  006D1A  0E                 	db	14
   114  006D1B  1F                 	db	31
   115  006D1C  1F                 	db	31
   116  006D1D  0E                 	db	14
   117  006D1E  15                 	db	21
   118  006D1F  00                 	db	0
   119  006D20  0E                 	db	14
   120  006D21  11                 	db	17
   121  006D22  15                 	db	21
   122  006D23  15                 	db	21
   123  006D24  15                 	db	21
   124  006D25  0E                 	db	14
   125  006D26  15                 	db	21
   126  006D27  04                 	db	4
   127  006D28  04                 	db	4
   128  006D29  04                 	db	4
   129  006D2A  04                 	db	4
   130  006D2B  04                 	db	4
   131  006D2C  0E                 	db	14
   132  006D2D  0E                 	db	14
   133  006D2E  1B                 	db	27
   134  006D2F  11                 	db	17
   135  006D30  04                 	db	4
   136  006D31  0A                 	db	10
   137  006D32  0E                 	db	14
   138  006D33  11                 	db	17
   139  006D34  1F                 	db	31
   140  006D35  10                 	db	16
   141  006D36  0E                 	db	14
   142  006D37  00                 	db	0
   143  006D38  08                 	db	8
   144  006D39  04                 	db	4
   145  006D3A  0E                 	db	14
   146  006D3B  01                 	db	1
   147  006D3C  0F                 	db	15
   148  006D3D  11                 	db	17
   149  006D3E  0F                 	db	15
   150  006D3F  00                 	db	0
   151  006D40  04                 	db	4
   152  006D41  0A                 	db	10
   153  006D42  0E                 	db	14
   154  006D43  01                 	db	1
   155  006D44  0F                 	db	15
   156  006D45  11                 	db	17
   157  006D46  0F                 	db	15
   158  006D47  00                 	db	0
   159  0000                     _TRISCbits	set	3988
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _ANSELbits	set	3966
   163  0000                     _TRISA	set	3986
   164  0000                     _ANSEL	set	3966
   165  0000                     _TRISB	set	3987
   166  0000                     _ANSELH	set	3967
   167  0000                     _TRISD	set	3989
   168  0000                     _PORTBbits	set	3969
   169  0000                     _TMR1	set	4046
   170  0000                     _RCREG	set	4014
   171  0000                     _TXREG	set	4013
   172  0000                     _RCSTAbits	set	4011
   173  0000                     _TXSTAbits	set	4012
   174  0000                     _BAUDCONbits	set	4024
   175  0000                     _SPBRG	set	4015
   176  0000                     _SPBRGH	set	4016
   177  0000                     _ADRESH	set	4036
   178  0000                     _ADCON2bits	set	4032
   179  0000                     _ADCON1	set	4033
   180  0000                     _ADCON0bits	set	4034
   181  0000                     _T1CONbits	set	4045
   182  0000                     _RCIF	set	31989
   183                           
   184                           ; #config settings
   185  0000                     
   186                           	psect	cinit
   187  006F36                     __pcinit:
   188                           	opt callstack 0
   189  006F36                     start_initialization:
   190                           	opt callstack 0
   191  006F36                     __initialization:
   192                           	opt callstack 0
   193                           
   194                           ; Initialize objects allocated to BANK1 (64 bytes)
   195                           ; load TBLPTR registers with __pidataBANK1
   196  006F36  0E08               	movlw	low __pidataBANK1
   197  006F38  6EF6               	movwf	tblptrl,c
   198  006F3A  0E6D               	movlw	high __pidataBANK1
   199  006F3C  6EF7               	movwf	tblptrh,c
   200  006F3E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   201  006F40  6EF8               	movwf	tblptru,c
   202  006F42  EE01  F054         	lfsr	0,__pdataBANK1
   203  006F46  EE10 F040          	lfsr	1,64
   204  006F4A                     copy_data0:
   205  006F4A  0009               	tblrd		*+
   206  006F4C  CFF5 FFEE          	movff	tablat,postinc0
   207  006F50  50E5               	movf	postdec1,w,c
   208  006F52  50E1               	movf	fsr1l,w,c
   209  006F54  E1FA               	bnz	copy_data0
   210                           
   211                           ; Initialize objects allocated to BANK0 (4 bytes)
   212                           ; load TBLPTR registers with __pidataBANK0
   213  006F56  0EDE               	movlw	low __pidataBANK0
   214  006F58  6EF6               	movwf	tblptrl,c
   215  006F5A  0E6B               	movlw	high __pidataBANK0
   216  006F5C  6EF7               	movwf	tblptrh,c
   217  006F5E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   218  006F60  6EF8               	movwf	tblptru,c
   219  006F62  EE00  F0D8         	lfsr	0,__pdataBANK0
   220  006F66  EE10 F004          	lfsr	1,4
   221  006F6A                     copy_data1:
   222  006F6A  0009               	tblrd		*+
   223  006F6C  CFF5 FFEE          	movff	tablat,postinc0
   224  006F70  50E5               	movf	postdec1,w,c
   225  006F72  50E1               	movf	fsr1l,w,c
   226  006F74  E1FA               	bnz	copy_data1
   227                           
   228                           ; Clear objects allocated to BANK1 (84 bytes)
   229  006F76  EE01  F000         	lfsr	0,__pbssBANK1
   230  006F7A  0E54               	movlw	84
   231  006F7C                     clear_0:
   232  006F7C  6AEE               	clrf	postinc0,c
   233  006F7E  06E8               	decf	wreg,f,c
   234  006F80  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to BANK0 (84 bytes)
   237  006F82  EE00  F060         	lfsr	0,__pbssBANK0
   238  006F86  0E54               	movlw	84
   239  006F88                     clear_1:
   240  006F88  6AEE               	clrf	postinc0,c
   241  006F8A  06E8               	decf	wreg,f,c
   242  006F8C  E1FD               	bnz	clear_1
   243  006F8E                     end_of_initialization:
   244                           	opt callstack 0
   245  006F8E                     __end_of__initialization:
   246                           	opt callstack 0
   247  006F8E  0100               	movlb	0
   248  006F90  EFD8  F039         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssBANK0
   251  000060                     __pbssBANK0:
   252                           	opt callstack 0
   253  000060                     _m_tabMines:
   254                           	opt callstack 0
   255  000060                     	ds	84
   256                           
   257                           	psect	dataBANK0
   258  0000D8                     __pdataBANK0:
   259                           	opt callstack 0
   260  0000D8                     _randx:
   261                           	opt callstack 0
   262  0000D8                     	ds	4
   263                           
   264                           	psect	bssBANK1
   265  000100                     __pbssBANK1:
   266                           	opt callstack 0
   267  000100                     _m_tabVue:
   268                           	opt callstack 0
   269  000100                     	ds	84
   270                           
   271                           	psect	dataBANK1
   272  000154                     __pdataBANK1:
   273                           	opt callstack 0
   274  000154                     _matCGRAM:
   275                           	opt callstack 0
   276  000154                     	ds	64
   277                           
   278                           	psect	cstackBANK0
   279  0000B4                     __pcstackBANK0:
   280                           	opt callstack 0
   281  0000B4                     ??_initTabVue:
   282  0000B4                     ??_getAnalog:
   283  0000B4                     ??_lcd_ecrireDonnees:
   284  0000B4                     ??_lcd_busy:
   285  0000B4                     ?___wmul:
   286                           	opt callstack 0
   287  0000B4                     ?___lmul:
   288                           	opt callstack 0
   289  0000B4                     gagne@pMines:
   290                           	opt callstack 0
   291  0000B4                     ___wmul@multiplier:
   292                           	opt callstack 0
   293  0000B4                     srand@x:
   294                           	opt callstack 0
   295  0000B4                     ___lmul@multiplier:
   296                           	opt callstack 0
   297                           
   298                           ; 4 bytes @ 0x0
   299  0000B4                     	ds	1
   300  0000B5                     getAnalog@canal:
   301                           	opt callstack 0
   302  0000B5                     lcd_ecrireDonnees@donnee:
   303                           	opt callstack 0
   304  0000B5                     lcd_busy@adresse:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x1
   308  0000B5                     	ds	1
   309  0000B6                     ??_gagne:
   310  0000B6                     ??_lcd_resetSequence:
   311  0000B6                     initTabVue@j:
   312                           	opt callstack 0
   313  0000B6                     lcd_wrCom@commande:
   314                           	opt callstack 0
   315  0000B6                     lcd_wrData@caractere:
   316                           	opt callstack 0
   317  0000B6                     ___wmul@multiplicand:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x2
   321  0000B6                     	ds	1
   322  0000B7                     ??_lcd_initCGRam:
   323  0000B7                     initTabVue@i:
   324                           	opt callstack 0
   325  0000B7                     lcd_gotoXY@y:
   326                           	opt callstack 0
   327  0000B7                     lcd_ecritChar@car:
   328                           	opt callstack 0
   329                           
   330                           ; 1 bytes @ 0x3
   331  0000B7                     	ds	1
   332  0000B8                     lcd_gotoXY@x:
   333                           	opt callstack 0
   334  0000B8                     lcd_ecritChar@posRam:
   335                           	opt callstack 0
   336  0000B8                     ___wmul@product:
   337                           	opt callstack 0
   338  0000B8                     ___lmul@multiplicand:
   339                           	opt callstack 0
   340                           
   341                           ; 4 bytes @ 0x4
   342  0000B8                     	ds	1
   343  0000B9                     lcd_initCGRam@i:
   344                           	opt callstack 0
   345  0000B9                     deplace@x:
   346                           	opt callstack 0
   347  0000B9                     lcd_putMessage@chaine:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x5
   351  0000B9                     	ds	1
   352  0000BA                     gagne@nbTuile:
   353                           	opt callstack 0
   354  0000BA                     lcd_initCGRam@j:
   355                           	opt callstack 0
   356  0000BA                     calculToucheCombien@ligne:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x6
   360  0000BA                     	ds	1
   361  0000BB                     gagne@i:
   362                           	opt callstack 0
   363  0000BB                     lcd_putMessage@j:
   364                           	opt callstack 0
   365  0000BB                     deplace@y:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x7
   369  0000BB                     	ds	1
   370  0000BC                     gagne@j:
   371                           	opt callstack 0
   372  0000BC                     afficheTabVue@i:
   373                           	opt callstack 0
   374  0000BC                     afficheTabMines@i:
   375                           	opt callstack 0
   376  0000BC                     calculToucheCombien@colonne:
   377                           	opt callstack 0
   378  0000BC                     ___lmul@product:
   379                           	opt callstack 0
   380                           
   381                           ; 4 bytes @ 0x8
   382  0000BC                     	ds	1
   383  0000BD                     ??_deplace:
   384  0000BD                     enleveTuilesAutour@y:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0x9
   388  0000BD                     	ds	1
   389  0000BE                     ??_calculToucheCombien:
   390  0000BE                     ??_enleveTuilesAutour:
   391  0000BE                     deplace@analogX:
   392                           	opt callstack 0
   393                           
   394                           ; 1 bytes @ 0xA
   395  0000BE                     	ds	1
   396  0000BF                     deplace@analogY:
   397                           	opt callstack 0
   398                           
   399                           ; 1 bytes @ 0xB
   400  0000BF                     	ds	1
   401  0000C0                     ?_rand:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0xC
   405  0000C0                     	ds	1
   406  0000C1                     calculToucheCombien@nbMines:
   407                           	opt callstack 0
   408                           
   409                           ; 1 bytes @ 0xD
   410  0000C1                     	ds	1
   411  0000C2                     ?___awmod:
   412                           	opt callstack 0
   413  0000C2                     enleveTuilesAutour@x:
   414                           	opt callstack 0
   415  0000C2                     calculToucheCombien@i:
   416                           	opt callstack 0
   417  0000C2                     ___awmod@dividend:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xE
   421  0000C2                     	ds	1
   422  0000C3                     enleveTuilesAutour@i:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0xF
   426  0000C3                     	ds	1
   427  0000C4                     calculToucheCombien@j:
   428                           	opt callstack 0
   429  0000C4                     ___awmod@divisor:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x10
   433  0000C4                     	ds	1
   434  0000C5                     enleveTuilesAutour@j:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x11
   438  0000C5                     	ds	1
   439  0000C6                     ??_metToucheCombien:
   440  0000C6                     ___awmod@counter:
   441                           	opt callstack 0
   442                           
   443                           ; 1 bytes @ 0x12
   444  0000C6                     	ds	1
   445  0000C7                     demine@y:
   446                           	opt callstack 0
   447  0000C7                     ___awmod@sign:
   448                           	opt callstack 0
   449                           
   450                           ; 1 bytes @ 0x13
   451  0000C7                     	ds	1
   452  0000C8                     ??_demine:
   453  0000C8                     rempliMines@nb:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x14
   457  0000C8                     	ds	1
   458  0000C9                     metToucheCombien@i:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x15
   462  0000C9                     	ds	1
   463  0000CA                     ??_rempliMines:
   464  0000CA                     metToucheCombien@j:
   465                           	opt callstack 0
   466                           
   467                           ; 1 bytes @ 0x16
   468  0000CA                     	ds	3
   469  0000CD                     rempliMines@x:
   470                           	opt callstack 0
   471  0000CD                     demine@x:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x19
   475  0000CD                     	ds	1
   476  0000CE                     rempliMines@y:
   477                           	opt callstack 0
   478                           
   479                           ; 1 bytes @ 0x1A
   480  0000CE                     	ds	1
   481  0000CF                     rempliMines@i:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0x1B
   485  0000CF                     	ds	1
   486  0000D0                     rempliMines@j:
   487                           	opt callstack 0
   488                           
   489                           ; 1 bytes @ 0x1C
   490  0000D0                     	ds	1
   491  0000D1                     ??_main:
   492                           
   493                           ; 1 bytes @ 0x1D
   494  0000D1                     	ds	1
   495  0000D2                     main@nbMine:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x1E
   499  0000D2                     	ds	2
   500  0000D4                     main@posX:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x20
   504  0000D4                     	ds	2
   505  0000D6                     main@posY:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x22
   509  0000D6                     	ds	2
   510                           
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 49 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  posY            2   34[BANK0 ] PTR unsigned char 
   521 ;;		 -> RAM(1535), 
   522 ;;  posX            2   32[BANK0 ] PTR unsigned char 
   523 ;;		 -> RAM(1535), 
   524 ;;  nbMine          2   30[BANK0 ] PTR int 
   525 ;;		 -> RAM(1535), 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   535 ;;      Params:         0       0       0       0       0       0       0
   536 ;;      Locals:         0       6       0       0       0       0       0
   537 ;;      Temps:          0       1       0       0       0       0       0
   538 ;;      Totals:         0       7       0       0       0       0       0
   539 ;;Total ram usage:        7 bytes
   540 ;; Hardware stack levels required when called:    8
   541 ;; This function calls:
   542 ;;		_afficheTabMines
   543 ;;		_afficheTabVue
   544 ;;		_demine
   545 ;;		_deplace
   546 ;;		_gagne
   547 ;;		_initTabVue
   548 ;;		_initialisation
   549 ;;		_lcd_init
   550 ;;		_metToucheCombien
   551 ;;		_rempliMines
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text0
   558  0073B0                     __ptext0:
   559                           	opt callstack 0
   560  0073B0                     _main:
   561                           	opt callstack 23
   562  0073B0                     
   563                           ;main.c: 51: char* posX = 10;
   564  0073B0  0E0A               	movlw	10
   565  0073B2  0100               	movlb	0	; force () banked
   566  0073B4  6FD4               	movwf	main@posX& (0+255),b
   567  0073B6  0E00               	movlw	0
   568  0073B8  6FD5               	movwf	(main@posX+1)& (0+255),b
   569                           
   570                           ;main.c: 52: char* posY = 2;
   571  0073BA  0E02               	movlw	2
   572  0073BC  0100               	movlb	0	; force () banked
   573  0073BE  6FD6               	movwf	main@posY& (0+255),b
   574  0073C0  0E00               	movlw	0
   575  0073C2  6FD7               	movwf	(main@posY+1)& (0+255),b
   576                           
   577                           ;main.c: 53: int* nbMine = 15;
   578  0073C4  0E0F               	movlw	15
   579  0073C6  0100               	movlb	0	; force () banked
   580  0073C8  6FD2               	movwf	main@nbMine& (0+255),b
   581  0073CA  0E00               	movlw	0
   582  0073CC  6FD3               	movwf	(main@nbMine+1)& (0+255),b
   583  0073CE                     
   584                           ; BSR set to: 0
   585                           ;main.c: 55: initialisation();
   586  0073CE  EC6A  F036         	call	_initialisation	;wreg free
   587  0073D2                     
   588                           ;main.c: 56: lcd_init();
   589  0073D2  EC26  F036         	call	_lcd_init	;wreg free
   590  0073D6                     
   591                           ;main.c: 57: initTabVue();
   592  0073D6  EC29  F039         	call	_initTabVue	;wreg free
   593  0073DA                     
   594                           ;main.c: 58: rempliMines(nbMine);
   595  0073DA  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   596  0073DE  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   597  0073E2  ECBF  F03A         	call	_rempliMines	;wreg free
   598  0073E6                     
   599                           ;main.c: 59: metToucheCombien();
   600  0073E6  EC6D  F03B         	call	_metToucheCombien	;wreg free
   601  0073EA                     
   602                           ;main.c: 60: afficheTabVue();
   603  0073EA  EC6E  F037         	call	_afficheTabVue	;wreg free
   604  0073EE                     l2298:
   605                           
   606                           ;main.c: 63: {;main.c: 64: deplace(&posX, &posY);
   607  0073EE  0ED4               	movlw	low main@posX
   608  0073F0  0100               	movlb	0	; force () banked
   609  0073F2  6FB9               	movwf	deplace@x& (0+255),b
   610  0073F4  0E00               	movlw	high main@posX
   611  0073F6  6FBA               	movwf	(deplace@x+1)& (0+255),b
   612  0073F8  0ED6               	movlw	low main@posY
   613  0073FA  0100               	movlb	0	; force () banked
   614  0073FC  6FBB               	movwf	deplace@y& (0+255),b
   615  0073FE  0E00               	movlw	high main@posY
   616  007400  6FBC               	movwf	(deplace@y+1)& (0+255),b
   617  007402  EC1C  F03C         	call	_deplace	;wreg free
   618  007406                     
   619                           ;main.c: 65: if(PORTBbits.RB1==0)
   620  007406  B281               	btfsc	129,1,c	;volatile
   621  007408  EF08  F03A         	goto	u1431
   622  00740C  EF0A  F03A         	goto	u1430
   623  007410                     u1431:
   624  007410  EF3C  F03A         	goto	l2310
   625  007414                     u1430:
   626  007414                     
   627                           ;main.c: 66: if(demine(posX,posY)==0 || gagne(&nbMine))
   628  007414  C0D6  F0C7         	movff	main@posY,demine@y
   629  007418  0100               	movlb	0	; force () banked
   630  00741A  51D4               	movf	main@posX& (0+255),w,b
   631  00741C  ECCA  F037         	call	_demine
   632  007420  0900               	iorlw	0
   633  007422  B4D8               	btfsc	status,2,c
   634  007424  EF16  F03A         	goto	u1441
   635  007428  EF18  F03A         	goto	u1440
   636  00742C                     u1441:
   637  00742C  EF27  F03A         	goto	l2306
   638  007430                     u1440:
   639  007430  0ED2               	movlw	low main@nbMine
   640  007432  0100               	movlb	0	; force () banked
   641  007434  6FB4               	movwf	gagne@pMines& (0+255),b
   642  007436  0E00               	movlw	high main@nbMine
   643  007438  6FB5               	movwf	(gagne@pMines+1)& (0+255),b
   644  00743A  EC49  F03A         	call	_gagne	;wreg free
   645  00743E  0900               	iorlw	0
   646  007440  B4D8               	btfsc	status,2,c
   647  007442  EF25  F03A         	goto	u1451
   648  007446  EF27  F03A         	goto	u1450
   649  00744A                     u1451:
   650  00744A  EF3C  F03A         	goto	l2310
   651  00744E                     u1450:
   652  00744E                     l2306:
   653                           
   654                           ;main.c: 67: {;main.c: 68: afficheTabMines();
   655  00744E  EC41  F037         	call	_afficheTabMines	;wreg free
   656  007452                     l76:
   657  007452  A281               	btfss	129,1,c	;volatile
   658  007454  EF2E  F03A         	goto	u1461
   659  007458  EF30  F03A         	goto	u1460
   660  00745C                     u1461:
   661  00745C  EF29  F03A         	goto	l76
   662  007460                     u1460:
   663  007460                     
   664                           ;main.c: 70: initTabVue();
   665  007460  EC29  F039         	call	_initTabVue	;wreg free
   666                           
   667                           ;main.c: 71: rempliMines(nbMine);
   668  007464  C0D2  F0C8         	movff	main@nbMine,rempliMines@nb
   669  007468  C0D3  F0C9         	movff	main@nbMine+1,rempliMines@nb+1
   670  00746C  ECBF  F03A         	call	_rempliMines	;wreg free
   671                           
   672                           ;main.c: 72: metToucheCombien();
   673  007470  EC6D  F03B         	call	_metToucheCombien	;wreg free
   674                           
   675                           ;main.c: 73: afficheTabVue();
   676  007474  EC6E  F037         	call	_afficheTabVue	;wreg free
   677  007478                     l2310:
   678                           
   679                           ;main.c: 74: };main.c: 75: _delay((unsigned long)((100)*(1000000/4000.0)));
   680  007478  0E21               	movlw	33
   681  00747A  0100               	movlb	0	; force () banked
   682  00747C  6FD1               	movwf	??_main& (0+255),b
   683  00747E  0E76               	movlw	118
   684  007480                     u1477:
   685  007480  2EE8               	decfsz	wreg,f,c
   686  007482  D7FE               	bra	u1477
   687  007484  2FD1               	decfsz	??_main& (0+255),f,b
   688  007486  D7FC               	bra	u1477
   689  007488  F000               	nop	
   690  00748A  EFF7  F039         	goto	l2298
   691  00748E  EF00  F000         	goto	start
   692  007492                     __end_of_main:
   693                           	opt callstack 0
   694                           
   695 ;; *************** function _rempliMines *****************
   696 ;; Defined at:
   697 ;;		line 129 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  nb              2   20[BANK0 ] int 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  j               1   28[BANK0 ] unsigned char 
   702 ;;  i               1   27[BANK0 ] unsigned char 
   703 ;;  y               1   26[BANK0 ] unsigned char 
   704 ;;  x               1   25[BANK0 ] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   714 ;;      Params:         0       2       0       0       0       0       0
   715 ;;      Locals:         0       4       0       0       0       0       0
   716 ;;      Temps:          0       3       0       0       0       0       0
   717 ;;      Totals:         0       9       0       0       0       0       0
   718 ;;Total ram usage:        9 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    2
   721 ;; This function calls:
   722 ;;		___awmod
   723 ;;		_rand
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text1
   730  00757E                     __ptext1:
   731                           	opt callstack 0
   732  00757E                     _rempliMines:
   733                           	opt callstack 28
   734  00757E                     
   735                           ;main.c: 131: char x, y;;main.c: 133: for (char i = 0; i < 4; i++) {
   736  00757E  0E00               	movlw	0
   737  007580  0100               	movlb	0	; force () banked
   738  007582  6FCF               	movwf	rempliMines@i& (0+255),b
   739  007584                     
   740                           ; BSR set to: 0
   741  007584  0E03               	movlw	3
   742  007586  0100               	movlb	0	; force () banked
   743  007588  65CF               	cpfsgt	rempliMines@i& (0+255),b
   744  00758A  EFC9  F03A         	goto	u1131
   745  00758E  EFCB  F03A         	goto	u1130
   746  007592                     u1131:
   747  007592  EFCD  F03A         	goto	l2126
   748  007596                     u1130:
   749  007596  EF5E  F03B         	goto	l2150
   750  00759A                     l2126:
   751                           
   752                           ; BSR set to: 0
   753                           ;main.c: 134: for (char j = 0; j < 20; j++) {
   754  00759A  0E00               	movlw	0
   755  00759C  0100               	movlb	0	; force () banked
   756  00759E  6FD0               	movwf	rempliMines@j& (0+255),b
   757  0075A0                     
   758                           ; BSR set to: 0
   759  0075A0  0E13               	movlw	19
   760  0075A2  0100               	movlb	0	; force () banked
   761  0075A4  65D0               	cpfsgt	rempliMines@j& (0+255),b
   762  0075A6  EFD7  F03A         	goto	u1141
   763  0075AA  EFD9  F03A         	goto	u1140
   764  0075AE                     u1141:
   765  0075AE  EFDB  F03A         	goto	l2132
   766  0075B2                     u1140:
   767  0075B2  EFFE  F03A         	goto	l2138
   768  0075B6                     l2132:
   769                           
   770                           ; BSR set to: 0
   771                           ;main.c: 135: m_tabMines[i][j] = ' ';
   772  0075B6  0100               	movlb	0	; force () banked
   773  0075B8  51CF               	movf	rempliMines@i& (0+255),w,b
   774  0075BA  0D15               	mullw	21
   775  0075BC  0E60               	movlw	low _m_tabMines
   776  0075BE  0100               	movlb	0	; force () banked
   777  0075C0  6FCA               	movwf	??_rempliMines& (0+255),b
   778  0075C2  0E00               	movlw	high _m_tabMines
   779  0075C4  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   780  0075C6  50F3               	movf	243,w,c
   781  0075C8  27CA               	addwf	??_rempliMines& (0+255),f,b
   782  0075CA  50F4               	movf	244,w,c
   783  0075CC  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   784  0075CE  0100               	movlb	0	; force () banked
   785  0075D0  51D0               	movf	rempliMines@j& (0+255),w,b
   786  0075D2  0100               	movlb	0	; force () banked
   787  0075D4  25CA               	addwf	??_rempliMines& (0+255),w,b
   788  0075D6  6ED9               	movwf	fsr2l,c
   789  0075D8  0100               	movlb	0	; force () banked
   790  0075DA  0E00               	movlw	0
   791  0075DC  0100               	movlb	0	; force () banked
   792  0075DE  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   793  0075E0  6EDA               	movwf	fsr2h,c
   794  0075E2  0E20               	movlw	32
   795  0075E4  6EDF               	movwf	indf2,c
   796  0075E6                     
   797                           ; BSR set to: 0
   798  0075E6  0100               	movlb	0	; force () banked
   799  0075E8  2BD0               	incf	rempliMines@j& (0+255),f,b
   800  0075EA                     
   801                           ; BSR set to: 0
   802  0075EA  0E13               	movlw	19
   803  0075EC  0100               	movlb	0	; force () banked
   804  0075EE  65D0               	cpfsgt	rempliMines@j& (0+255),b
   805  0075F0  EFFC  F03A         	goto	u1151
   806  0075F4  EFFE  F03A         	goto	u1150
   807  0075F8                     u1151:
   808  0075F8  EFDB  F03A         	goto	l2132
   809  0075FC                     u1150:
   810  0075FC                     l2138:
   811                           
   812                           ; BSR set to: 0
   813  0075FC  0100               	movlb	0	; force () banked
   814  0075FE  2BCF               	incf	rempliMines@i& (0+255),f,b
   815  007600                     
   816                           ; BSR set to: 0
   817  007600  0E03               	movlw	3
   818  007602  0100               	movlb	0	; force () banked
   819  007604  65CF               	cpfsgt	rempliMines@i& (0+255),b
   820  007606  EF07  F03B         	goto	u1161
   821  00760A  EF09  F03B         	goto	u1160
   822  00760E                     u1161:
   823  00760E  EFCD  F03A         	goto	l2126
   824  007612                     u1160:
   825  007612  EF5E  F03B         	goto	l2150
   826  007616                     l2142:
   827                           
   828                           ; BSR set to: 0
   829                           ;main.c: 139: x = rand() % 20;
   830  007616  EC16  F037         	call	_rand	;wreg free
   831  00761A  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   832  00761E  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   833  007622  0E00               	movlw	0
   834  007624  0100               	movlb	0	; force () banked
   835  007626  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   836  007628  0E14               	movlw	20
   837  00762A  6FC4               	movwf	___awmod@divisor& (0+255),b
   838  00762C  EC7F  F039         	call	___awmod	;wreg free
   839  007630  0100               	movlb	0	; force () banked
   840  007632  51C2               	movf	?___awmod& (0+255),w,b
   841  007634  0100               	movlb	0	; force () banked
   842  007636  6FCD               	movwf	rempliMines@x& (0+255),b
   843                           
   844                           ;main.c: 140: y = rand() % 4;
   845  007638  EC16  F037         	call	_rand	;wreg free
   846  00763C  0100               	movlb	0	; force () banked
   847  00763E  51C0               	movf	?_rand& (0+255),w,b
   848  007640  0B03               	andlw	3
   849  007642  0100               	movlb	0	; force () banked
   850  007644  6FCE               	movwf	rempliMines@y& (0+255),b
   851  007646                     
   852                           ; BSR set to: 0
   853                           ;main.c: 141: if (m_tabMines[y][x] != 2) {
   854  007646  0100               	movlb	0	; force () banked
   855  007648  51CE               	movf	rempliMines@y& (0+255),w,b
   856  00764A  0D15               	mullw	21
   857  00764C  0E60               	movlw	low _m_tabMines
   858  00764E  0100               	movlb	0	; force () banked
   859  007650  6FCA               	movwf	??_rempliMines& (0+255),b
   860  007652  0E00               	movlw	high _m_tabMines
   861  007654  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   862  007656  50F3               	movf	243,w,c
   863  007658  27CA               	addwf	??_rempliMines& (0+255),f,b
   864  00765A  50F4               	movf	244,w,c
   865  00765C  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   866  00765E  0100               	movlb	0	; force () banked
   867  007660  51CD               	movf	rempliMines@x& (0+255),w,b
   868  007662  0100               	movlb	0	; force () banked
   869  007664  25CA               	addwf	??_rempliMines& (0+255),w,b
   870  007666  6ED9               	movwf	fsr2l,c
   871  007668  0100               	movlb	0	; force () banked
   872  00766A  0E00               	movlw	0
   873  00766C  0100               	movlb	0	; force () banked
   874  00766E  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   875  007670  6EDA               	movwf	fsr2h,c
   876  007672  0E02               	movlw	2
   877  007674  18DE               	xorwf	postinc2,w,c
   878  007676  B4D8               	btfsc	status,2,c
   879  007678  EF40  F03B         	goto	u1171
   880  00767C  EF42  F03B         	goto	u1170
   881  007680                     u1171:
   882  007680  EF5E  F03B         	goto	l2150
   883  007684                     u1170:
   884  007684                     
   885                           ; BSR set to: 0
   886                           ;main.c: 142: m_tabMines[y][x] = 2;
   887  007684  0100               	movlb	0	; force () banked
   888  007686  51CE               	movf	rempliMines@y& (0+255),w,b
   889  007688  0D15               	mullw	21
   890  00768A  0E60               	movlw	low _m_tabMines
   891  00768C  0100               	movlb	0	; force () banked
   892  00768E  6FCA               	movwf	??_rempliMines& (0+255),b
   893  007690  0E00               	movlw	high _m_tabMines
   894  007692  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   895  007694  50F3               	movf	243,w,c
   896  007696  27CA               	addwf	??_rempliMines& (0+255),f,b
   897  007698  50F4               	movf	244,w,c
   898  00769A  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   899  00769C  0100               	movlb	0	; force () banked
   900  00769E  51CD               	movf	rempliMines@x& (0+255),w,b
   901  0076A0  0100               	movlb	0	; force () banked
   902  0076A2  25CA               	addwf	??_rempliMines& (0+255),w,b
   903  0076A4  6ED9               	movwf	fsr2l,c
   904  0076A6  0100               	movlb	0	; force () banked
   905  0076A8  0E00               	movlw	0
   906  0076AA  0100               	movlb	0	; force () banked
   907  0076AC  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   908  0076AE  6EDA               	movwf	fsr2h,c
   909  0076B0  0E02               	movlw	2
   910  0076B2  6EDF               	movwf	indf2,c
   911  0076B4                     
   912                           ; BSR set to: 0
   913                           ;main.c: 143: nb--;
   914  0076B4  0100               	movlb	0	; force () banked
   915  0076B6  07C8               	decf	rempliMines@nb& (0+255),f,b
   916  0076B8  A0D8               	btfss	status,0,c
   917  0076BA  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   918  0076BC                     l2150:
   919                           
   920                           ; BSR set to: 0
   921  0076BC  0100               	movlb	0	; force () banked
   922  0076BE  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   923  0076C0  EF6C  F03B         	goto	u1180
   924  0076C4  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   925  0076C6  E106               	bnz	u1181
   926  0076C8  05C8               	decf	rempliMines@nb& (0+255),w,b
   927  0076CA  B0D8               	btfsc	status,0,c
   928  0076CC  EF6A  F03B         	goto	u1181
   929  0076D0  EF6C  F03B         	goto	u1180
   930  0076D4                     u1181:
   931  0076D4  EF0B  F03B         	goto	l2142
   932  0076D8                     u1180:
   933  0076D8                     
   934                           ; BSR set to: 0
   935  0076D8  0012               	return		;funcret
   936  0076DA                     __end_of_rempliMines:
   937                           	opt callstack 0
   938                           
   939 ;; *************** function _rand *****************
   940 ;; Defined at:
   941 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  2   12[BANK0 ] int 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   955 ;;      Params:         0       2       0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0
   958 ;;      Totals:         0       2       0       0       0       0       0
   959 ;;Total ram usage:        2 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    1
   962 ;; This function calls:
   963 ;;		___lmul
   964 ;; This function is called by:
   965 ;;		_rempliMines
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text2
   970  006E2C                     __ptext2:
   971                           	opt callstack 0
   972  006E2C                     _rand:
   973                           	opt callstack 28
   974  006E2C  C0D8  F0B4         	movff	_randx,___lmul@multiplier
   975  006E30  C0D9  F0B5         	movff	_randx+1,___lmul@multiplier+1
   976  006E34  C0DA  F0B6         	movff	_randx+2,___lmul@multiplier+2
   977  006E38  C0DB  F0B7         	movff	_randx+3,___lmul@multiplier+3
   978  006E3C  0E6D               	movlw	109
   979  006E3E  0100               	movlb	0	; () banked
   980  006E40  6FB8               	movwf	___lmul@multiplicand& (0+255),b
   981  006E42  0E4E               	movlw	78
   982  006E44  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   983  006E46  0EC6               	movlw	198
   984  006E48  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   985  006E4A  0E41               	movlw	65
   986  006E4C  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   987  006E4E  EC69  F038         	call	___lmul	;wreg free
   988  006E52  C0B4  F0D8         	movff	?___lmul,_randx
   989  006E56  C0B5  F0D9         	movff	?___lmul+1,_randx+1
   990  006E5A  C0B6  F0DA         	movff	?___lmul+2,_randx+2
   991  006E5E  C0B7  F0DB         	movff	?___lmul+3,_randx+3
   992  006E62  0E39               	movlw	57
   993  006E64  0100               	movlb	0	; () banked
   994  006E66  27D8               	addwf	_randx& (0+255),f,b
   995  006E68  0E30               	movlw	48
   996  006E6A  23D9               	addwfc	(_randx+1)& (0+255),f,b
   997  006E6C  0E00               	movlw	0
   998  006E6E  23DA               	addwfc	(_randx+2)& (0+255),f,b
   999  006E70  0E00               	movlw	0
  1000  006E72  23DB               	addwfc	(_randx+3)& (0+255),f,b
  1001  006E74                     
  1002                           ; BSR set to: 0
  1003  006E74  0EFF               	movlw	255
  1004  006E76  15DA               	andwf	(_randx+2)& (0+255),w,b
  1005  006E78  6FC0               	movwf	?_rand& (0+255),b
  1006  006E7A  0E7F               	movlw	127
  1007  006E7C  15DB               	andwf	(_randx+3)& (0+255),w,b
  1008  006E7E  6FC1               	movwf	(?_rand+1)& (0+255),b
  1009  006E80                     
  1010                           ; BSR set to: 0
  1011  006E80  0012               	return		;funcret
  1012  006E82                     __end_of_rand:
  1013                           	opt callstack 0
  1014                           
  1015 ;; *************** function ___lmul *****************
  1016 ;; Defined at:
  1017 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1020 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  product         4    8[BANK0 ] unsigned long 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  4    0[BANK0 ] unsigned long 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1032 ;;      Params:         0       8       0       0       0       0       0
  1033 ;;      Locals:         0       4       0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0
  1035 ;;      Totals:         0      12       0       0       0       0       0
  1036 ;;Total ram usage:       12 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_rand
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text3
  1046  0070D2                     __ptext3:
  1047                           	opt callstack 0
  1048  0070D2                     ___lmul:
  1049                           	opt callstack 28
  1050  0070D2  0E00               	movlw	0
  1051  0070D4  0100               	movlb	0	; () banked
  1052  0070D6  6FBC               	movwf	___lmul@product& (0+255),b
  1053  0070D8  0E00               	movlw	0
  1054  0070DA  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1055  0070DC  0E00               	movlw	0
  1056  0070DE  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1057  0070E0  0E00               	movlw	0
  1058  0070E2  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1059  0070E4                     l1900:
  1060                           
  1061                           ; BSR set to: 0
  1062  0070E4  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1063  0070E6  EF77  F038         	goto	u831
  1064  0070EA  EF79  F038         	goto	u830
  1065  0070EE                     u831:
  1066  0070EE  EF81  F038         	goto	l1904
  1067  0070F2                     u830:
  1068  0070F2                     
  1069                           ; BSR set to: 0
  1070  0070F2  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1071  0070F4  27BC               	addwf	___lmul@product& (0+255),f,b
  1072  0070F6  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1073  0070F8  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1074  0070FA  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1075  0070FC  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1076  0070FE  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1077  007100  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1078  007102                     l1904:
  1079                           
  1080                           ; BSR set to: 0
  1081  007102  90D8               	bcf	status,0,c
  1082  007104  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1083  007106  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1084  007108  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1085  00710A  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1086  00710C                     
  1087                           ; BSR set to: 0
  1088  00710C  90D8               	bcf	status,0,c
  1089  00710E  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1090  007110  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1091  007112  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1092  007114  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1093  007116  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1094  007118  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1095  00711A  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1096  00711C  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1097  00711E  A4D8               	btfss	status,2,c
  1098  007120  EF94  F038         	goto	u841
  1099  007124  EF96  F038         	goto	u840
  1100  007128                     u841:
  1101  007128  EF72  F038         	goto	l1900
  1102  00712C                     u840:
  1103  00712C                     
  1104                           ; BSR set to: 0
  1105  00712C  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1106  007130  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1107  007134  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1108  007138  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1109  00713C                     
  1110                           ; BSR set to: 0
  1111  00713C  0012               	return		;funcret
  1112  00713E                     __end_of___lmul:
  1113                           	opt callstack 0
  1114                           
  1115 ;; *************** function ___awmod *****************
  1116 ;; Defined at:
  1117 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  dividend        2   14[BANK0 ] int 
  1120 ;;  divisor         2   16[BANK0 ] int 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  sign            1   19[BANK0 ] unsigned char 
  1123 ;;  counter         1   18[BANK0 ] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   14[BANK0 ] int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1133 ;;      Params:         0       4       0       0       0       0       0
  1134 ;;      Locals:         0       2       0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0
  1136 ;;      Totals:         0       6       0       0       0       0       0
  1137 ;;Total ram usage:        6 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_rempliMines
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text4
  1147  0072FE                     __ptext4:
  1148                           	opt callstack 0
  1149  0072FE                     ___awmod:
  1150                           	opt callstack 29
  1151  0072FE  0E00               	movlw	0
  1152  007300  0100               	movlb	0	; () banked
  1153  007302  6FC7               	movwf	___awmod@sign& (0+255),b
  1154  007304                     
  1155                           ; BSR set to: 0
  1156  007304  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1157  007306  EF89  F039         	goto	u1030
  1158  00730A  EF87  F039         	goto	u1031
  1159  00730E                     u1031:
  1160  00730E  EF8F  F039         	goto	l2044
  1161  007312                     u1030:
  1162  007312                     
  1163                           ; BSR set to: 0
  1164  007312  6DC2               	negf	___awmod@dividend& (0+255),b
  1165  007314  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1166  007316  B0D8               	btfsc	status,0,c
  1167  007318  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1168  00731A                     
  1169                           ; BSR set to: 0
  1170  00731A  0E01               	movlw	1
  1171  00731C  6FC7               	movwf	___awmod@sign& (0+255),b
  1172  00731E                     l2044:
  1173                           
  1174                           ; BSR set to: 0
  1175  00731E  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1176  007320  EF96  F039         	goto	u1040
  1177  007324  EF94  F039         	goto	u1041
  1178  007328                     u1041:
  1179  007328  EF9A  F039         	goto	l2048
  1180  00732C                     u1040:
  1181  00732C                     
  1182                           ; BSR set to: 0
  1183  00732C  6DC4               	negf	___awmod@divisor& (0+255),b
  1184  00732E  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1185  007330  B0D8               	btfsc	status,0,c
  1186  007332  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1187  007334                     l2048:
  1188                           
  1189                           ; BSR set to: 0
  1190  007334  51C4               	movf	___awmod@divisor& (0+255),w,b
  1191  007336  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1192  007338  B4D8               	btfsc	status,2,c
  1193  00733A  EFA1  F039         	goto	u1051
  1194  00733E  EFA3  F039         	goto	u1050
  1195  007342                     u1051:
  1196  007342  EFC7  F039         	goto	l2064
  1197  007346                     u1050:
  1198  007346                     
  1199                           ; BSR set to: 0
  1200  007346  0E01               	movlw	1
  1201  007348  6FC6               	movwf	___awmod@counter& (0+255),b
  1202  00734A  EFAB  F039         	goto	l2054
  1203  00734E                     l2052:
  1204                           
  1205                           ; BSR set to: 0
  1206  00734E  90D8               	bcf	status,0,c
  1207  007350  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1208  007352  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1209  007354  2BC6               	incf	___awmod@counter& (0+255),f,b
  1210  007356                     l2054:
  1211                           
  1212                           ; BSR set to: 0
  1213  007356  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1214  007358  EFB0  F039         	goto	u1061
  1215  00735C  EFB2  F039         	goto	u1060
  1216  007360                     u1061:
  1217  007360  EFA7  F039         	goto	l2052
  1218  007364                     u1060:
  1219  007364                     l2056:
  1220                           
  1221                           ; BSR set to: 0
  1222  007364  51C4               	movf	___awmod@divisor& (0+255),w,b
  1223  007366  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1224  007368  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1225  00736A  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1226  00736C  A0D8               	btfss	status,0,c
  1227  00736E  EFBB  F039         	goto	u1071
  1228  007372  EFBD  F039         	goto	u1070
  1229  007376                     u1071:
  1230  007376  EFC1  F039         	goto	l2060
  1231  00737A                     u1070:
  1232  00737A                     
  1233                           ; BSR set to: 0
  1234  00737A  51C4               	movf	___awmod@divisor& (0+255),w,b
  1235  00737C  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1236  00737E  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1237  007380  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1238  007382                     l2060:
  1239                           
  1240                           ; BSR set to: 0
  1241  007382  90D8               	bcf	status,0,c
  1242  007384  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1243  007386  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1244  007388                     
  1245                           ; BSR set to: 0
  1246  007388  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1247  00738A  EFB2  F039         	goto	l2056
  1248  00738E                     l2064:
  1249                           
  1250                           ; BSR set to: 0
  1251  00738E  51C7               	movf	___awmod@sign& (0+255),w,b
  1252  007390  B4D8               	btfsc	status,2,c
  1253  007392  EFCD  F039         	goto	u1081
  1254  007396  EFCF  F039         	goto	u1080
  1255  00739A                     u1081:
  1256  00739A  EFD3  F039         	goto	l2068
  1257  00739E                     u1080:
  1258  00739E                     
  1259                           ; BSR set to: 0
  1260  00739E  6DC2               	negf	___awmod@dividend& (0+255),b
  1261  0073A0  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1262  0073A2  B0D8               	btfsc	status,0,c
  1263  0073A4  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1264  0073A6                     l2068:
  1265                           
  1266                           ; BSR set to: 0
  1267  0073A6  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1268  0073AA  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1269  0073AE                     
  1270                           ; BSR set to: 0
  1271  0073AE  0012               	return		;funcret
  1272  0073B0                     __end_of___awmod:
  1273                           	opt callstack 0
  1274                           
  1275 ;; *************** function _metToucheCombien *****************
  1276 ;; Defined at:
  1277 ;;		line 157 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  j               1   22[BANK0 ] unsigned char 
  1282 ;;  i               1   21[BANK0 ] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1292 ;;      Params:         0       0       0       0       0       0       0
  1293 ;;      Locals:         0       2       0       0       0       0       0
  1294 ;;      Temps:          0       3       0       0       0       0       0
  1295 ;;      Totals:         0       5       0       0       0       0       0
  1296 ;;Total ram usage:        5 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    2
  1299 ;; This function calls:
  1300 ;;		_calculToucheCombien
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text5
  1307  0076DA                     __ptext5:
  1308                           	opt callstack 0
  1309  0076DA                     _metToucheCombien:
  1310                           	opt callstack 28
  1311  0076DA                     
  1312                           ;main.c: 159: for (char i = 0; i < 4; i++) {
  1313  0076DA  0E00               	movlw	0
  1314  0076DC  0100               	movlb	0	; force () banked
  1315  0076DE  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1316  0076E0                     
  1317                           ; BSR set to: 0
  1318  0076E0  0E03               	movlw	3
  1319  0076E2  0100               	movlb	0	; force () banked
  1320  0076E4  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1321  0076E6  EF77  F03B         	goto	u1191
  1322  0076EA  EF79  F03B         	goto	u1190
  1323  0076EE                     u1191:
  1324  0076EE  EF7B  F03B         	goto	l2158
  1325  0076F2                     u1190:
  1326  0076F2  EF1B  F03C         	goto	l111
  1327  0076F6                     l2158:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 160: for (char j = 0; j < 20; j++) {
  1331  0076F6  0E00               	movlw	0
  1332  0076F8  0100               	movlb	0	; force () banked
  1333  0076FA  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1334  0076FC                     
  1335                           ; BSR set to: 0
  1336  0076FC  0E13               	movlw	19
  1337  0076FE  0100               	movlb	0	; force () banked
  1338  007700  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1339  007702  EF85  F03B         	goto	u1201
  1340  007706  EF87  F03B         	goto	u1200
  1341  00770A                     u1201:
  1342  00770A  EF89  F03B         	goto	l2164
  1343  00770E                     u1200:
  1344  00770E  EF10  F03C         	goto	l2176
  1345  007712                     l2164:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 161: if (m_tabMines[i][j] != 2)
  1349  007712  0100               	movlb	0	; force () banked
  1350  007714  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1351  007716  0D15               	mullw	21
  1352  007718  0E60               	movlw	low _m_tabMines
  1353  00771A  0100               	movlb	0	; force () banked
  1354  00771C  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1355  00771E  0E00               	movlw	high _m_tabMines
  1356  007720  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1357  007722  50F3               	movf	243,w,c
  1358  007724  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1359  007726  50F4               	movf	244,w,c
  1360  007728  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1361  00772A  0100               	movlb	0	; force () banked
  1362  00772C  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1363  00772E  0100               	movlb	0	; force () banked
  1364  007730  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1365  007732  6ED9               	movwf	fsr2l,c
  1366  007734  0100               	movlb	0	; force () banked
  1367  007736  0E00               	movlw	0
  1368  007738  0100               	movlb	0	; force () banked
  1369  00773A  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1370  00773C  6EDA               	movwf	fsr2h,c
  1371  00773E  0E02               	movlw	2
  1372  007740  18DE               	xorwf	postinc2,w,c
  1373  007742  B4D8               	btfsc	status,2,c
  1374  007744  EFA6  F03B         	goto	u1211
  1375  007748  EFA8  F03B         	goto	u1210
  1376  00774C                     u1211:
  1377  00774C  EFCE  F03B         	goto	l2168
  1378  007750                     u1210:
  1379  007750                     
  1380                           ; BSR set to: 0
  1381                           ;main.c: 162: m_tabMines[i][j] = calculToucheCombien(i, j) + 48;
  1382  007750  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1383  007754  0100               	movlb	0	; force () banked
  1384  007756  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1385  007758  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1386  00775C  0100               	movlb	0	; force () banked
  1387  00775E  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1388  007760  ECD9  F03C         	call	_calculToucheCombien	;wreg free
  1389  007764  0100               	movlb	0	; force () banked
  1390  007766  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1391  007768  0E30               	movlw	48
  1392  00776A  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1393  00776C  0100               	movlb	0	; force () banked
  1394  00776E  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1395  007770  0D15               	mullw	21
  1396  007772  0E60               	movlw	low _m_tabMines
  1397  007774  0100               	movlb	0	; force () banked
  1398  007776  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1399  007778  0E00               	movlw	high _m_tabMines
  1400  00777A  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1401  00777C  50F3               	movf	243,w,c
  1402  00777E  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1403  007780  50F4               	movf	244,w,c
  1404  007782  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1405  007784  0100               	movlb	0	; force () banked
  1406  007786  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1407  007788  0100               	movlb	0	; force () banked
  1408  00778A  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1409  00778C  6ED9               	movwf	fsr2l,c
  1410  00778E  0100               	movlb	0	; force () banked
  1411  007790  0E00               	movlw	0
  1412  007792  0100               	movlb	0	; force () banked
  1413  007794  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1414  007796  6EDA               	movwf	fsr2h,c
  1415  007798  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1416  00779C                     l2168:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;main.c: 163: if (m_tabMines[i][j] == '0')
  1420  00779C  0100               	movlb	0	; force () banked
  1421  00779E  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1422  0077A0  0D15               	mullw	21
  1423  0077A2  0E60               	movlw	low _m_tabMines
  1424  0077A4  0100               	movlb	0	; force () banked
  1425  0077A6  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1426  0077A8  0E00               	movlw	high _m_tabMines
  1427  0077AA  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1428  0077AC  50F3               	movf	243,w,c
  1429  0077AE  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1430  0077B0  50F4               	movf	244,w,c
  1431  0077B2  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1432  0077B4  0100               	movlb	0	; force () banked
  1433  0077B6  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1434  0077B8  0100               	movlb	0	; force () banked
  1435  0077BA  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1436  0077BC  6ED9               	movwf	fsr2l,c
  1437  0077BE  0100               	movlb	0	; force () banked
  1438  0077C0  0E00               	movlw	0
  1439  0077C2  0100               	movlb	0	; force () banked
  1440  0077C4  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1441  0077C6  6EDA               	movwf	fsr2h,c
  1442  0077C8  0E30               	movlw	48
  1443  0077CA  18DE               	xorwf	postinc2,w,c
  1444  0077CC  A4D8               	btfss	status,2,c
  1445  0077CE  EFEB  F03B         	goto	u1221
  1446  0077D2  EFED  F03B         	goto	u1220
  1447  0077D6                     u1221:
  1448  0077D6  EF05  F03C         	goto	l2172
  1449  0077DA                     u1220:
  1450  0077DA                     
  1451                           ; BSR set to: 0
  1452                           ;main.c: 164: m_tabMines[i][j] = ' ';
  1453  0077DA  0100               	movlb	0	; force () banked
  1454  0077DC  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1455  0077DE  0D15               	mullw	21
  1456  0077E0  0E60               	movlw	low _m_tabMines
  1457  0077E2  0100               	movlb	0	; force () banked
  1458  0077E4  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1459  0077E6  0E00               	movlw	high _m_tabMines
  1460  0077E8  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1461  0077EA  50F3               	movf	243,w,c
  1462  0077EC  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1463  0077EE  50F4               	movf	244,w,c
  1464  0077F0  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1465  0077F2  0100               	movlb	0	; force () banked
  1466  0077F4  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1467  0077F6  0100               	movlb	0	; force () banked
  1468  0077F8  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1469  0077FA  6ED9               	movwf	fsr2l,c
  1470  0077FC  0100               	movlb	0	; force () banked
  1471  0077FE  0E00               	movlw	0
  1472  007800  0100               	movlb	0	; force () banked
  1473  007802  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1474  007804  6EDA               	movwf	fsr2h,c
  1475  007806  0E20               	movlw	32
  1476  007808  6EDF               	movwf	indf2,c
  1477  00780A                     l2172:
  1478                           
  1479                           ; BSR set to: 0
  1480  00780A  0100               	movlb	0	; force () banked
  1481  00780C  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1482  00780E                     
  1483                           ; BSR set to: 0
  1484  00780E  0E13               	movlw	19
  1485  007810  0100               	movlb	0	; force () banked
  1486  007812  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1487  007814  EF0E  F03C         	goto	u1231
  1488  007818  EF10  F03C         	goto	u1230
  1489  00781C                     u1231:
  1490  00781C  EF89  F03B         	goto	l2164
  1491  007820                     u1230:
  1492  007820                     l2176:
  1493                           
  1494                           ; BSR set to: 0
  1495  007820  0100               	movlb	0	; force () banked
  1496  007822  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1497  007824                     
  1498                           ; BSR set to: 0
  1499  007824  0E03               	movlw	3
  1500  007826  0100               	movlb	0	; force () banked
  1501  007828  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1502  00782A  EF19  F03C         	goto	u1241
  1503  00782E  EF1B  F03C         	goto	u1240
  1504  007832                     u1241:
  1505  007832  EF7B  F03B         	goto	l2158
  1506  007836                     u1240:
  1507  007836                     l111:
  1508                           
  1509                           ; BSR set to: 0
  1510  007836  0012               	return		;funcret
  1511  007838                     __end_of_metToucheCombien:
  1512                           	opt callstack 0
  1513                           
  1514 ;; *************** function _calculToucheCombien *****************
  1515 ;; Defined at:
  1516 ;;		line 174 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  ligne           2    6[BANK0 ] int 
  1519 ;;  colonne         2    8[BANK0 ] int 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  j               2   16[BANK0 ] int 
  1522 ;;  i               2   14[BANK0 ] int 
  1523 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      unsigned char 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1533 ;;      Params:         0       4       0       0       0       0       0
  1534 ;;      Locals:         0       5       0       0       0       0       0
  1535 ;;      Temps:          0       3       0       0       0       0       0
  1536 ;;      Totals:         0      12       0       0       0       0       0
  1537 ;;Total ram usage:       12 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    1
  1540 ;; This function calls:
  1541 ;;		___wmul
  1542 ;; This function is called by:
  1543 ;;		_metToucheCombien
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text6
  1548  0079B2                     __ptext6:
  1549                           	opt callstack 0
  1550  0079B2                     _calculToucheCombien:
  1551                           	opt callstack 28
  1552  0079B2                     
  1553                           ;main.c: 176: int i = ligne - 1;
  1554  0079B2  0EFF               	movlw	255
  1555  0079B4  0100               	movlb	0	; force () banked
  1556  0079B6  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1557  0079B8  0100               	movlb	0	; force () banked
  1558  0079BA  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1559  0079BC  0EFF               	movlw	255
  1560  0079BE  0100               	movlb	0	; force () banked
  1561  0079C0  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1562  0079C2  0100               	movlb	0	; force () banked
  1563  0079C4  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1564                           
  1565                           ;main.c: 177: int j = colonne - 1;
  1566  0079C6  0EFF               	movlw	255
  1567  0079C8  0100               	movlb	0	; force () banked
  1568  0079CA  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1569  0079CC  0100               	movlb	0	; force () banked
  1570  0079CE  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1571  0079D0  0EFF               	movlw	255
  1572  0079D2  0100               	movlb	0	; force () banked
  1573  0079D4  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1574  0079D6  0100               	movlb	0	; force () banked
  1575  0079D8  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1576  0079DA                     
  1577                           ; BSR set to: 0
  1578                           ;main.c: 178: char nbMines = 0;
  1579  0079DA  0E00               	movlw	0
  1580  0079DC  0100               	movlb	0	; force () banked
  1581  0079DE  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1582  0079E0                     
  1583                           ; BSR set to: 0
  1584                           ;main.c: 180: if (i < 0)
  1585  0079E0  0100               	movlb	0	; force () banked
  1586  0079E2  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1587  0079E4  EFF8  F03C         	goto	u850
  1588  0079E8  EFF6  F03C         	goto	u851
  1589  0079EC                     u851:
  1590  0079EC  EFFD  F03C         	goto	l1926
  1591  0079F0                     u850:
  1592  0079F0                     
  1593                           ; BSR set to: 0
  1594                           ;main.c: 181: i = 0;
  1595  0079F0  0E00               	movlw	0
  1596  0079F2  0100               	movlb	0	; force () banked
  1597  0079F4  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1598  0079F6  0E00               	movlw	0
  1599  0079F8  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1600  0079FA                     l1926:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;main.c: 182: if (j < 0)
  1604  0079FA  0100               	movlb	0	; force () banked
  1605  0079FC  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1606  0079FE  EF05  F03D         	goto	u860
  1607  007A02  EF03  F03D         	goto	u861
  1608  007A06                     u861:
  1609  007A06  EF7B  F03D         	goto	l1942
  1610  007A0A                     u860:
  1611  007A0A                     
  1612                           ; BSR set to: 0
  1613                           ;main.c: 183: j = 0;
  1614  007A0A  0E00               	movlw	0
  1615  007A0C  0100               	movlb	0	; force () banked
  1616  007A0E  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1617  007A10  0E00               	movlw	0
  1618  007A12  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1619  007A14  EF7B  F03D         	goto	l1942
  1620  007A18                     l1930:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;main.c: 186: for (j = j = colonne - 1; (j <= (colonne + 1))&&(j < 20); j++) {
  1624  007A18  0EFF               	movlw	255
  1625  007A1A  0100               	movlb	0	; force () banked
  1626  007A1C  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1627  007A1E  0100               	movlb	0	; force () banked
  1628  007A20  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1629  007A22  0EFF               	movlw	255
  1630  007A24  0100               	movlb	0	; force () banked
  1631  007A26  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1632  007A28  0100               	movlb	0	; force () banked
  1633  007A2A  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1634  007A2C  C0C4  F0C4         	movff	calculToucheCombien@j,calculToucheCombien@j
  1635  007A30  C0C5  F0C5         	movff	calculToucheCombien@j+1,calculToucheCombien@j+1
  1636  007A34  EF4C  F03D         	goto	l1936
  1637  007A38                     l1932:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 187: if (m_tabMines[i][j] == 2)
  1641  007A38  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1642  007A3C  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1643  007A40  0E00               	movlw	0
  1644  007A42  0100               	movlb	0	; force () banked
  1645  007A44  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1646  007A46  0E15               	movlw	21
  1647  007A48  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1648  007A4A  EC12  F036         	call	___wmul	;wreg free
  1649  007A4E  0E60               	movlw	low _m_tabMines
  1650  007A50  0100               	movlb	0	; force () banked
  1651  007A52  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1652  007A54  0E00               	movlw	high _m_tabMines
  1653  007A56  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1654  007A58  0100               	movlb	0	; force () banked
  1655  007A5A  51B4               	movf	?___wmul& (0+255),w,b
  1656  007A5C  0100               	movlb	0	; force () banked
  1657  007A5E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1658  007A60  0100               	movlb	0	; force () banked
  1659  007A62  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1660  007A64  0100               	movlb	0	; force () banked
  1661  007A66  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1662  007A68  0100               	movlb	0	; force () banked
  1663  007A6A  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1664  007A6C  0100               	movlb	0	; force () banked
  1665  007A6E  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1666  007A70  6ED9               	movwf	fsr2l,c
  1667  007A72  0100               	movlb	0	; force () banked
  1668  007A74  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1669  007A76  0100               	movlb	0	; force () banked
  1670  007A78  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1671  007A7A  6EDA               	movwf	fsr2h,c
  1672  007A7C  0E02               	movlw	2
  1673  007A7E  18DE               	xorwf	postinc2,w,c
  1674  007A80  A4D8               	btfss	status,2,c
  1675  007A82  EF45  F03D         	goto	u871
  1676  007A86  EF47  F03D         	goto	u870
  1677  007A8A                     u871:
  1678  007A8A  EF49  F03D         	goto	l120
  1679  007A8E                     u870:
  1680  007A8E                     
  1681                           ; BSR set to: 0
  1682                           ;main.c: 188: nbMines++;
  1683  007A8E  0100               	movlb	0	; force () banked
  1684  007A90  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1685  007A92                     l120:
  1686                           
  1687                           ; BSR set to: 0
  1688  007A92  0100               	movlb	0	; force () banked
  1689  007A94  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1690  007A96  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1691  007A98                     l1936:
  1692                           
  1693                           ; BSR set to: 0
  1694  007A98  0E01               	movlw	1
  1695  007A9A  0100               	movlb	0	; force () banked
  1696  007A9C  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1697  007A9E  0100               	movlb	0	; force () banked
  1698  007AA0  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1699  007AA2  0E00               	movlw	0
  1700  007AA4  0100               	movlb	0	; force () banked
  1701  007AA6  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1702  007AA8  0100               	movlb	0	; force () banked
  1703  007AAA  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1704  007AAC  0100               	movlb	0	; force () banked
  1705  007AAE  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1706  007AB0  0100               	movlb	0	; force () banked
  1707  007AB2  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1708  007AB4  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1709  007AB6  0A80               	xorlw	128
  1710  007AB8  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1711  007ABA  0100               	movlb	0	; force () banked
  1712  007ABC  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1713  007ABE  0A80               	xorlw	128
  1714  007AC0  0100               	movlb	0	; force () banked
  1715  007AC2  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1716  007AC4  A0D8               	btfss	status,0,c
  1717  007AC6  EF67  F03D         	goto	u881
  1718  007ACA  EF69  F03D         	goto	u880
  1719  007ACE                     u881:
  1720  007ACE  EF78  F03D         	goto	l1940
  1721  007AD2                     u880:
  1722  007AD2                     
  1723                           ; BSR set to: 0
  1724  007AD2  0100               	movlb	0	; force () banked
  1725  007AD4  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1726  007AD6  EF76  F03D         	goto	u891
  1727  007ADA  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1728  007ADC  E109               	bnz	u890
  1729  007ADE  0E14               	movlw	20
  1730  007AE0  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1731  007AE2  A0D8               	btfss	status,0,c
  1732  007AE4  EF76  F03D         	goto	u891
  1733  007AE8  EF78  F03D         	goto	u890
  1734  007AEC                     u891:
  1735  007AEC  EF1C  F03D         	goto	l1932
  1736  007AF0                     u890:
  1737  007AF0                     l1940:
  1738                           
  1739                           ; BSR set to: 0
  1740  007AF0  0100               	movlb	0	; force () banked
  1741  007AF2  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1742  007AF4  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1743  007AF6                     l1942:
  1744                           
  1745                           ; BSR set to: 0
  1746  007AF6  0E01               	movlw	1
  1747  007AF8  0100               	movlb	0	; force () banked
  1748  007AFA  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1749  007AFC  0100               	movlb	0	; force () banked
  1750  007AFE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1751  007B00  0E00               	movlw	0
  1752  007B02  0100               	movlb	0	; force () banked
  1753  007B04  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1754  007B06  0100               	movlb	0	; force () banked
  1755  007B08  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1756  007B0A  0100               	movlb	0	; force () banked
  1757  007B0C  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1758  007B0E  0100               	movlb	0	; force () banked
  1759  007B10  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1760  007B12  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1761  007B14  0A80               	xorlw	128
  1762  007B16  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1763  007B18  0100               	movlb	0	; force () banked
  1764  007B1A  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1765  007B1C  0A80               	xorlw	128
  1766  007B1E  0100               	movlb	0	; force () banked
  1767  007B20  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1768  007B22  A0D8               	btfss	status,0,c
  1769  007B24  EF96  F03D         	goto	u901
  1770  007B28  EF98  F03D         	goto	u900
  1771  007B2C                     u901:
  1772  007B2C  EFA7  F03D         	goto	l1946
  1773  007B30                     u900:
  1774  007B30                     
  1775                           ; BSR set to: 0
  1776  007B30  0100               	movlb	0	; force () banked
  1777  007B32  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1778  007B34  EFA5  F03D         	goto	u911
  1779  007B38  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1780  007B3A  E109               	bnz	u910
  1781  007B3C  0E04               	movlw	4
  1782  007B3E  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1783  007B40  A0D8               	btfss	status,0,c
  1784  007B42  EFA5  F03D         	goto	u911
  1785  007B46  EFA7  F03D         	goto	u910
  1786  007B4A                     u911:
  1787  007B4A  EF0C  F03D         	goto	l1930
  1788  007B4E                     u910:
  1789  007B4E                     l1946:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;main.c: 189: };main.c: 190: };main.c: 191: return nbMines;
  1793  007B4E  0100               	movlb	0	; force () banked
  1794  007B50  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1795  007B52                     
  1796                           ; BSR set to: 0
  1797  007B52  0012               	return		;funcret
  1798  007B54                     __end_of_calculToucheCombien:
  1799                           	opt callstack 0
  1800                           
  1801 ;; *************** function _lcd_init *****************
  1802 ;; Defined at:
  1803 ;;		line 258 in file "Lcd4Lignes.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1817 ;;      Params:         0       0       0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    5
  1824 ;; This function calls:
  1825 ;;		_lcd_initCGRam
  1826 ;;		_lcd_resetSequence
  1827 ;;		_lcd_wrCom
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text7
  1834  006C4C                     __ptext7:
  1835                           	opt callstack 0
  1836  006C4C                     _lcd_init:
  1837                           	opt callstack 25
  1838  006C4C                     
  1839                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1840  006C4C  ECFE  F037         	call	_lcd_resetSequence	;wreg free
  1841                           
  1842                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1843  006C50  0E28               	movlw	40
  1844  006C52  EC33  F038         	call	_lcd_wrCom
  1845                           
  1846                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1847  006C56  0E0F               	movlw	15
  1848  006C58  EC33  F038         	call	_lcd_wrCom
  1849                           
  1850                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1851  006C5C  0E01               	movlw	1
  1852  006C5E  EC33  F038         	call	_lcd_wrCom
  1853                           
  1854                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1855  006C62  0E06               	movlw	6
  1856  006C64  EC33  F038         	call	_lcd_wrCom
  1857                           
  1858                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1859  006C68  0E80               	movlw	128
  1860  006C6A  EC33  F038         	call	_lcd_wrCom
  1861  006C6E                     
  1862                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1863  006C6E  ECD8  F038         	call	_lcd_initCGRam	;wreg free
  1864  006C72  0012               	return		;funcret
  1865  006C74                     __end_of_lcd_init:
  1866                           	opt callstack 0
  1867                           
  1868 ;; *************** function _lcd_resetSequence *****************
  1869 ;; Defined at:
  1870 ;;		line 221 in file "Lcd4Lignes.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1884 ;;      Params:         0       0       0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0
  1886 ;;      Temps:          0       1       0       0       0       0       0
  1887 ;;      Totals:         0       1       0       0       0       0       0
  1888 ;;Total ram usage:        1 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    1
  1891 ;; This function calls:
  1892 ;;		_lcd_ecrireDonnees
  1893 ;;		_lcd_strobeEnableBit
  1894 ;; This function is called by:
  1895 ;;		_lcd_init
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text8
  1900  006FFC                     __ptext8:
  1901                           	opt callstack 0
  1902  006FFC                     _lcd_resetSequence:
  1903                           	opt callstack 28
  1904  006FFC                     
  1905                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1906  006FFC  0E00               	movlw	0
  1907  006FFE  6E95               	movwf	149,c	;volatile
  1908  007000                     
  1909                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1910  007000  0E0D               	movlw	13
  1911  007002  0100               	movlb	0	; force () banked
  1912  007004  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  1913  007006  0EFB               	movlw	251
  1914  007008                     u1487:
  1915  007008  2EE8               	decfsz	wreg,f,c
  1916  00700A  D7FE               	bra	u1487
  1917  00700C  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1918  00700E  D7FC               	bra	u1487
  1919  007010  F000 F000          	nop2	
  1920  007014                     
  1921                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1922  007014  9080               	bcf	128,0,c	;volatile
  1923  007016                     
  1924                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1925  007016  9280               	bcf	128,1,c	;volatile
  1926  007018                     
  1927                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1928  007018  0E03               	movlw	3
  1929  00701A  EC04  F036         	call	_lcd_ecrireDonnees
  1930  00701E                     
  1931                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1932  00701E  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  1933  007022                     
  1934                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1935  007022  0E03               	movlw	3
  1936  007024                     u1497:
  1937  007024  2EE8               	decfsz	wreg,f,c
  1938  007026  D7FE               	bra	u1497
  1939  007028  F000               	nop	
  1940  00702A                     
  1941                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  1942  00702A  0E03               	movlw	3
  1943  00702C  EC04  F036         	call	_lcd_ecrireDonnees
  1944  007030                     
  1945                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  1946  007030  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  1947  007034                     
  1948                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1949  007034  0E03               	movlw	3
  1950  007036                     u1507:
  1951  007036  2EE8               	decfsz	wreg,f,c
  1952  007038  D7FE               	bra	u1507
  1953  00703A  F000               	nop	
  1954  00703C                     
  1955                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  1956  00703C  0E03               	movlw	3
  1957  00703E  EC04  F036         	call	_lcd_ecrireDonnees
  1958  007042                     
  1959                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  1960  007042  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  1961  007046                     
  1962                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1963  007046  0E03               	movlw	3
  1964  007048                     u1517:
  1965  007048  2EE8               	decfsz	wreg,f,c
  1966  00704A  D7FE               	bra	u1517
  1967  00704C  F000               	nop	
  1968  00704E                     
  1969                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  1970  00704E  0E02               	movlw	2
  1971  007050  EC04  F036         	call	_lcd_ecrireDonnees
  1972  007054                     
  1973                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  1974  007054  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  1975  007058                     
  1976                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1977  007058  0E03               	movlw	3
  1978  00705A                     u1527:
  1979  00705A  2EE8               	decfsz	wreg,f,c
  1980  00705C  D7FE               	bra	u1527
  1981  00705E  F000               	nop	
  1982  007060                     
  1983                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  1984  007060  0E0F               	movlw	15
  1985  007062  6E95               	movwf	149,c	;volatile
  1986  007064  0012               	return		;funcret
  1987  007066                     __end_of_lcd_resetSequence:
  1988                           	opt callstack 0
  1989                           
  1990 ;; *************** function _lcd_initCGRam *****************
  1991 ;; Defined at:
  1992 ;;		line 417 in file "Lcd4Lignes.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  j               1    6[BANK0 ] unsigned char 
  1997 ;;  i               1    5[BANK0 ] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2007 ;;      Params:         0       0       0       0       0       0       0
  2008 ;;      Locals:         0       2       0       0       0       0       0
  2009 ;;      Temps:          0       2       0       0       0       0       0
  2010 ;;      Totals:         0       4       0       0       0       0       0
  2011 ;;Total ram usage:        4 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    4
  2014 ;; This function calls:
  2015 ;;		_lcd_curseurHome
  2016 ;;		_lcd_wrCom
  2017 ;;		_lcd_wrData
  2018 ;; This function is called by:
  2019 ;;		_lcd_init
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text9
  2024  0071B0                     __ptext9:
  2025                           	opt callstack 0
  2026  0071B0                     _lcd_initCGRam:
  2027                           	opt callstack 25
  2028  0071B0                     
  2029                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2030  0071B0  0E40               	movlw	64
  2031  0071B2  EC33  F038         	call	_lcd_wrCom
  2032  0071B6                     
  2033                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2034  0071B6  0E00               	movlw	0
  2035  0071B8  0100               	movlb	0	; force () banked
  2036  0071BA  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2037  0071BC                     
  2038                           ; BSR set to: 0
  2039  0071BC  0E07               	movlw	7
  2040  0071BE  0100               	movlb	0	; force () banked
  2041  0071C0  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2042  0071C2  EFE5  F038         	goto	u991
  2043  0071C6  EFE7  F038         	goto	u990
  2044  0071CA                     u991:
  2045  0071CA  EFE9  F038         	goto	l2018
  2046  0071CE                     u990:
  2047  0071CE  EF26  F039         	goto	l2034
  2048  0071D2                     l2018:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2052  0071D2  0E00               	movlw	0
  2053  0071D4  0100               	movlb	0	; force () banked
  2054  0071D6  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2055  0071D8                     
  2056                           ; BSR set to: 0
  2057  0071D8  0E07               	movlw	7
  2058  0071DA  0100               	movlb	0	; force () banked
  2059  0071DC  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2060  0071DE  EFF3  F038         	goto	u1001
  2061  0071E2  EFF5  F038         	goto	u1000
  2062  0071E6                     u1001:
  2063  0071E6  EFF7  F038         	goto	l2024
  2064  0071EA                     u1000:
  2065  0071EA  EF1B  F039         	goto	l2030
  2066  0071EE                     l2024:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2070  0071EE  0100               	movlb	0	; force () banked
  2071  0071F0  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2072  0071F2  0D08               	mullw	8
  2073  0071F4  0E54               	movlw	low _matCGRAM
  2074  0071F6  0100               	movlb	0	; force () banked
  2075  0071F8  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2076  0071FA  0E01               	movlw	high _matCGRAM
  2077  0071FC  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2078  0071FE  50F3               	movf	243,w,c
  2079  007200  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2080  007202  50F4               	movf	244,w,c
  2081  007204  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2082  007206  0100               	movlb	0	; force () banked
  2083  007208  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2084  00720A  0100               	movlb	0	; force () banked
  2085  00720C  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2086  00720E  6ED9               	movwf	fsr2l,c
  2087  007210  0100               	movlb	0	; force () banked
  2088  007212  0E00               	movlw	0
  2089  007214  0100               	movlb	0	; force () banked
  2090  007216  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2091  007218  6EDA               	movwf	fsr2h,c
  2092  00721A  50DF               	movf	indf2,w,c
  2093  00721C  EC50  F036         	call	_lcd_wrData
  2094  007220  0100               	movlb	0	; force () banked
  2095  007222  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2096  007224                     
  2097                           ; BSR set to: 0
  2098  007224  0E07               	movlw	7
  2099  007226  0100               	movlb	0	; force () banked
  2100  007228  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2101  00722A  EF19  F039         	goto	u1011
  2102  00722E  EF1B  F039         	goto	u1010
  2103  007232                     u1011:
  2104  007232  EFF7  F038         	goto	l2024
  2105  007236                     u1010:
  2106  007236                     l2030:
  2107                           
  2108                           ; BSR set to: 0
  2109  007236  0100               	movlb	0	; force () banked
  2110  007238  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2111  00723A                     
  2112                           ; BSR set to: 0
  2113  00723A  0E07               	movlw	7
  2114  00723C  0100               	movlb	0	; force () banked
  2115  00723E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2116  007240  EF24  F039         	goto	u1021
  2117  007244  EF26  F039         	goto	u1020
  2118  007248                     u1021:
  2119  007248  EFE9  F038         	goto	l2018
  2120  00724C                     u1020:
  2121  00724C                     l2034:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2125  00724C  ECF8  F035         	call	_lcd_curseurHome	;wreg free
  2126  007250  0012               	return		;funcret
  2127  007252                     __end_of_lcd_initCGRam:
  2128                           	opt callstack 0
  2129                           
  2130 ;; *************** function _lcd_curseurHome *****************
  2131 ;; Defined at:
  2132 ;;		line 288 in file "Lcd4Lignes.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2146 ;;      Params:         0       0       0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0
  2149 ;;      Totals:         0       0       0       0       0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    3
  2153 ;; This function calls:
  2154 ;;		_lcd_wrCom
  2155 ;; This function is called by:
  2156 ;;		_lcd_initCGRam
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text10
  2161  006BF0                     __ptext10:
  2162                           	opt callstack 0
  2163  006BF0                     _lcd_curseurHome:
  2164                           	opt callstack 25
  2165  006BF0                     
  2166                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2167  006BF0  0E02               	movlw	2
  2168  006BF2  EC33  F038         	call	_lcd_wrCom
  2169  006BF6  0012               	return		;funcret
  2170  006BF8                     __end_of_lcd_curseurHome:
  2171                           	opt callstack 0
  2172                           
  2173 ;; *************** function _initialisation *****************
  2174 ;; Defined at:
  2175 ;;		line 84 in file "main.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2189 ;;      Params:         0       0       0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		_srand
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text11
  2204  006CD4                     __ptext11:
  2205                           	opt callstack 0
  2206  006CD4                     _initialisation:
  2207                           	opt callstack 29
  2208  006CD4                     
  2209                           ;main.c: 86: TRISD = 0;
  2210  006CD4  0E00               	movlw	0
  2211  006CD6  6E95               	movwf	149,c	;volatile
  2212                           
  2213                           ;main.c: 87: ANSELH = 0;
  2214  006CD8  0E00               	movlw	0
  2215  006CDA  6E7F               	movwf	127,c	;volatile
  2216  006CDC                     
  2217                           ;main.c: 88: TRISB = 0xFF;
  2218  006CDC  6893               	setf	147,c	;volatile
  2219                           
  2220                           ;main.c: 89: ANSEL = 0;
  2221  006CDE  0E00               	movlw	0
  2222  006CE0  6E7E               	movwf	126,c	;volatile
  2223                           
  2224                           ;main.c: 90: TRISA = 0;
  2225  006CE2  0E00               	movlw	0
  2226  006CE4  6E92               	movwf	146,c	;volatile
  2227  006CE6                     
  2228                           ;main.c: 94: T1CONbits.TMR1ON = 1;
  2229  006CE6  80CD               	bsf	205,0,c	;volatile
  2230  006CE8                     
  2231                           ;main.c: 95: srand(TMR1);
  2232  006CE8  CFCE F0B4          	movff	4046,srand@x	;volatile
  2233  006CEC  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  2234  006CF0  ECFC  F035         	call	_srand	;wreg free
  2235  006CF4                     
  2236                           ;main.c: 97: ANSELbits.ANS7 = 1;
  2237  006CF4  8E7E               	bsf	126,7,c	;volatile
  2238  006CF6                     
  2239                           ;main.c: 98: ADCON0bits.ADON = 1;
  2240  006CF6  80C2               	bsf	194,0,c	;volatile
  2241  006CF8                     
  2242                           ;main.c: 99: ADCON1 = 0;
  2243  006CF8  0E00               	movlw	0
  2244  006CFA  6EC1               	movwf	193,c	;volatile
  2245  006CFC                     
  2246                           ;main.c: 100: ADCON2bits.ADFM = 0;
  2247  006CFC  9EC0               	bcf	192,7,c	;volatile
  2248  006CFE                     
  2249                           ;main.c: 101: ADCON2bits.ACQT = 0;
  2250  006CFE  0EC7               	movlw	-57
  2251  006D00  16C0               	andwf	192,f,c	;volatile
  2252  006D02                     
  2253                           ;main.c: 102: ADCON2bits.ADCS = 0;
  2254  006D02  0EF8               	movlw	-8
  2255  006D04  16C0               	andwf	192,f,c	;volatile
  2256  006D06  0012               	return		;funcret
  2257  006D08                     __end_of_initialisation:
  2258                           	opt callstack 0
  2259                           
  2260 ;; *************** function _srand *****************
  2261 ;; Defined at:
  2262 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  x               2    0[BANK0 ] unsigned int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		status,2
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2276 ;;      Params:         0       2       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0
  2279 ;;      Totals:         0       2       0       0       0       0       0
  2280 ;;Total ram usage:        2 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_initialisation
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text12
  2290  006BF8                     __ptext12:
  2291                           	opt callstack 0
  2292  006BF8                     _srand:
  2293                           	opt callstack 29
  2294  006BF8  C0B4  F0D8         	movff	srand@x,_randx
  2295  006BFC  C0B5  F0D9         	movff	srand@x+1,_randx+1
  2296  006C00  0100               	movlb	0	; () banked
  2297  006C02  6BDA               	clrf	(_randx+2)& (0+255),b
  2298  006C04  6BDB               	clrf	(_randx+3)& (0+255),b
  2299  006C06                     
  2300                           ; BSR set to: 0
  2301  006C06  0012               	return		;funcret
  2302  006C08                     __end_of_srand:
  2303                           	opt callstack 0
  2304                           
  2305 ;; *************** function _initTabVue *****************
  2306 ;; Defined at:
  2307 ;;		line 112 in file "main.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  j               1    2[BANK0 ] unsigned char 
  2312 ;;  i               1    3[BANK0 ] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2322 ;;      Params:         0       0       0       0       0       0       0
  2323 ;;      Locals:         0       2       0       0       0       0       0
  2324 ;;      Temps:          0       2       0       0       0       0       0
  2325 ;;      Totals:         0       4       0       0       0       0       0
  2326 ;;Total ram usage:        4 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text13
  2336  007252                     __ptext13:
  2337                           	opt callstack 0
  2338  007252                     _initTabVue:
  2339                           	opt callstack 30
  2340  007252                     
  2341                           ;main.c: 114: for (char i = 0; i < 4; i++) {
  2342  007252  0E00               	movlw	0
  2343  007254  0100               	movlb	0	; force () banked
  2344  007256  6FB7               	movwf	initTabVue@i& (0+255),b
  2345  007258                     
  2346                           ; BSR set to: 0
  2347  007258  0E03               	movlw	3
  2348  00725A  0100               	movlb	0	; force () banked
  2349  00725C  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2350  00725E  EF33  F039         	goto	u1091
  2351  007262  EF35  F039         	goto	u1090
  2352  007266                     u1091:
  2353  007266  EF37  F039         	goto	l2102
  2354  00726A                     u1090:
  2355  00726A  EF7E  F039         	goto	l91
  2356  00726E                     l2102:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;main.c: 115: for (char j = 0; j < 20; j++) {
  2360  00726E  0E00               	movlw	0
  2361  007270  0100               	movlb	0	; force () banked
  2362  007272  6FB6               	movwf	initTabVue@j& (0+255),b
  2363  007274                     
  2364                           ; BSR set to: 0
  2365  007274  0E13               	movlw	19
  2366  007276  0100               	movlb	0	; force () banked
  2367  007278  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2368  00727A  EF41  F039         	goto	u1101
  2369  00727E  EF43  F039         	goto	u1100
  2370  007282                     u1101:
  2371  007282  EF45  F039         	goto	l2108
  2372  007286                     u1100:
  2373  007286  EF68  F039         	goto	l2114
  2374  00728A                     l2108:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;main.c: 116: m_tabVue[i][j] = 1;
  2378  00728A  0100               	movlb	0	; force () banked
  2379  00728C  51B7               	movf	initTabVue@i& (0+255),w,b
  2380  00728E  0D15               	mullw	21
  2381  007290  0E00               	movlw	low _m_tabVue
  2382  007292  0100               	movlb	0	; force () banked
  2383  007294  6FB4               	movwf	??_initTabVue& (0+255),b
  2384  007296  0E01               	movlw	high _m_tabVue
  2385  007298  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  2386  00729A  50F3               	movf	243,w,c
  2387  00729C  27B4               	addwf	??_initTabVue& (0+255),f,b
  2388  00729E  50F4               	movf	244,w,c
  2389  0072A0  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2390  0072A2  0100               	movlb	0	; force () banked
  2391  0072A4  51B6               	movf	initTabVue@j& (0+255),w,b
  2392  0072A6  0100               	movlb	0	; force () banked
  2393  0072A8  25B4               	addwf	??_initTabVue& (0+255),w,b
  2394  0072AA  6ED9               	movwf	fsr2l,c
  2395  0072AC  0100               	movlb	0	; force () banked
  2396  0072AE  0E00               	movlw	0
  2397  0072B0  0100               	movlb	0	; force () banked
  2398  0072B2  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2399  0072B4  6EDA               	movwf	fsr2h,c
  2400  0072B6  0E01               	movlw	1
  2401  0072B8  6EDF               	movwf	indf2,c
  2402  0072BA                     
  2403                           ; BSR set to: 0
  2404  0072BA  0100               	movlb	0	; force () banked
  2405  0072BC  2BB6               	incf	initTabVue@j& (0+255),f,b
  2406  0072BE                     
  2407                           ; BSR set to: 0
  2408  0072BE  0E13               	movlw	19
  2409  0072C0  0100               	movlb	0	; force () banked
  2410  0072C2  65B6               	cpfsgt	initTabVue@j& (0+255),b
  2411  0072C4  EF66  F039         	goto	u1111
  2412  0072C8  EF68  F039         	goto	u1110
  2413  0072CC                     u1111:
  2414  0072CC  EF45  F039         	goto	l2108
  2415  0072D0                     u1110:
  2416  0072D0                     l2114:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 117: };main.c: 118: m_tabVue[i][20] = 0;
  2420  0072D0  0100               	movlb	0	; force () banked
  2421  0072D2  51B7               	movf	initTabVue@i& (0+255),w,b
  2422  0072D4  0D15               	mullw	21
  2423  0072D6  0E14               	movlw	low (_m_tabVue+20)
  2424  0072D8  24F3               	addwf	243,w,c
  2425  0072DA  6ED9               	movwf	fsr2l,c
  2426  0072DC  0E01               	movlw	high (_m_tabVue+20)
  2427  0072DE  20F4               	addwfc	prodh,w,c
  2428  0072E0  6EDA               	movwf	fsr2h,c
  2429  0072E2  0E00               	movlw	0
  2430  0072E4  6EDF               	movwf	indf2,c
  2431  0072E6                     
  2432                           ; BSR set to: 0
  2433  0072E6  0100               	movlb	0	; force () banked
  2434  0072E8  2BB7               	incf	initTabVue@i& (0+255),f,b
  2435  0072EA                     
  2436                           ; BSR set to: 0
  2437  0072EA  0E03               	movlw	3
  2438  0072EC  0100               	movlb	0	; force () banked
  2439  0072EE  65B7               	cpfsgt	initTabVue@i& (0+255),b
  2440  0072F0  EF7C  F039         	goto	u1121
  2441  0072F4  EF7E  F039         	goto	u1120
  2442  0072F8                     u1121:
  2443  0072F8  EF37  F039         	goto	l2102
  2444  0072FC                     u1120:
  2445  0072FC                     l91:
  2446                           
  2447                           ; BSR set to: 0
  2448  0072FC  0012               	return		;funcret
  2449  0072FE                     __end_of_initTabVue:
  2450                           	opt callstack 0
  2451                           
  2452 ;; *************** function _gagne *****************
  2453 ;; Defined at:
  2454 ;;		line 286 in file "main.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  pMines          2    0[BANK0 ] PTR int 
  2457 ;;		 -> main@nbMine(2), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  j               1    8[BANK0 ] unsigned char 
  2460 ;;  i               1    7[BANK0 ] unsigned char 
  2461 ;;  nbTuile         1    6[BANK0 ] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      unsigned char 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2471 ;;      Params:         0       2       0       0       0       0       0
  2472 ;;      Locals:         0       3       0       0       0       0       0
  2473 ;;      Temps:          0       4       0       0       0       0       0
  2474 ;;      Totals:         0       9       0       0       0       0       0
  2475 ;;Total ram usage:        9 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text14
  2485  007492                     __ptext14:
  2486                           	opt callstack 0
  2487  007492                     _gagne:
  2488                           	opt callstack 30
  2489  007492                     
  2490                           ;main.c: 288: char nbTuile=0;
  2491  007492  0E00               	movlw	0
  2492  007494  0100               	movlb	0	; force () banked
  2493  007496  6FBA               	movwf	gagne@nbTuile& (0+255),b
  2494                           
  2495                           ;main.c: 290: for (char i = 0; i < 4; i++) {
  2496  007498  0E00               	movlw	0
  2497  00749A  0100               	movlb	0	; force () banked
  2498  00749C  6FBB               	movwf	gagne@i& (0+255),b
  2499  00749E                     
  2500                           ; BSR set to: 0
  2501  00749E  0E03               	movlw	3
  2502  0074A0  0100               	movlb	0	; force () banked
  2503  0074A2  65BB               	cpfsgt	gagne@i& (0+255),b
  2504  0074A4  EF56  F03A         	goto	u1341
  2505  0074A8  EF58  F03A         	goto	u1340
  2506  0074AC                     u1341:
  2507  0074AC  EF5A  F03A         	goto	l2232
  2508  0074B0                     u1340:
  2509  0074B0  EF9E  F03A         	goto	l2248
  2510  0074B4                     l2232:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;main.c: 291: for (char j = 0; j < 20; j++) {
  2514  0074B4  0E00               	movlw	0
  2515  0074B6  0100               	movlb	0	; force () banked
  2516  0074B8  6FBC               	movwf	gagne@j& (0+255),b
  2517  0074BA                     
  2518                           ; BSR set to: 0
  2519  0074BA  0E13               	movlw	19
  2520  0074BC  0100               	movlb	0	; force () banked
  2521  0074BE  65BC               	cpfsgt	gagne@j& (0+255),b
  2522  0074C0  EF64  F03A         	goto	u1351
  2523  0074C4  EF66  F03A         	goto	u1350
  2524  0074C8                     u1351:
  2525  0074C8  EF68  F03A         	goto	l2238
  2526  0074CC                     u1350:
  2527  0074CC  EF93  F03A         	goto	l2244
  2528  0074D0                     l2238:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;main.c: 292: if(m_tabVue[i][j]==1)
  2532  0074D0  0100               	movlb	0	; force () banked
  2533  0074D2  51BB               	movf	gagne@i& (0+255),w,b
  2534  0074D4  0D15               	mullw	21
  2535  0074D6  0E00               	movlw	low _m_tabVue
  2536  0074D8  0100               	movlb	0	; force () banked
  2537  0074DA  6FB6               	movwf	??_gagne& (0+255),b
  2538  0074DC  0E01               	movlw	high _m_tabVue
  2539  0074DE  6FB7               	movwf	(??_gagne+1)& (0+255),b
  2540  0074E0  50F3               	movf	243,w,c
  2541  0074E2  27B6               	addwf	??_gagne& (0+255),f,b
  2542  0074E4  50F4               	movf	244,w,c
  2543  0074E6  23B7               	addwfc	(??_gagne+1)& (0+255),f,b
  2544  0074E8  0100               	movlb	0	; force () banked
  2545  0074EA  51BC               	movf	gagne@j& (0+255),w,b
  2546  0074EC  0100               	movlb	0	; force () banked
  2547  0074EE  25B6               	addwf	??_gagne& (0+255),w,b
  2548  0074F0  6ED9               	movwf	fsr2l,c
  2549  0074F2  0100               	movlb	0	; force () banked
  2550  0074F4  0E00               	movlw	0
  2551  0074F6  0100               	movlb	0	; force () banked
  2552  0074F8  21B7               	addwfc	(??_gagne+1)& (0+255),w,b
  2553  0074FA  6EDA               	movwf	fsr2h,c
  2554  0074FC  04DE               	decf	postinc2,w,c
  2555  0074FE  A4D8               	btfss	status,2,c
  2556  007500  EF84  F03A         	goto	u1361
  2557  007504  EF86  F03A         	goto	u1360
  2558  007508                     u1361:
  2559  007508  EF88  F03A         	goto	l168
  2560  00750C                     u1360:
  2561  00750C                     
  2562                           ; BSR set to: 0
  2563                           ;main.c: 293: nbTuile++;
  2564  00750C  0100               	movlb	0	; force () banked
  2565  00750E  2BBA               	incf	gagne@nbTuile& (0+255),f,b
  2566  007510                     l168:
  2567                           
  2568                           ; BSR set to: 0
  2569  007510  0100               	movlb	0	; force () banked
  2570  007512  2BBC               	incf	gagne@j& (0+255),f,b
  2571  007514                     
  2572                           ; BSR set to: 0
  2573  007514  0E13               	movlw	19
  2574  007516  0100               	movlb	0	; force () banked
  2575  007518  65BC               	cpfsgt	gagne@j& (0+255),b
  2576  00751A  EF91  F03A         	goto	u1371
  2577  00751E  EF93  F03A         	goto	u1370
  2578  007522                     u1371:
  2579  007522  EF68  F03A         	goto	l2238
  2580  007526                     u1370:
  2581  007526                     l2244:
  2582                           
  2583                           ; BSR set to: 0
  2584  007526  0100               	movlb	0	; force () banked
  2585  007528  2BBB               	incf	gagne@i& (0+255),f,b
  2586  00752A                     
  2587                           ; BSR set to: 0
  2588  00752A  0E03               	movlw	3
  2589  00752C  0100               	movlb	0	; force () banked
  2590  00752E  65BB               	cpfsgt	gagne@i& (0+255),b
  2591  007530  EF9C  F03A         	goto	u1381
  2592  007534  EF9E  F03A         	goto	u1380
  2593  007538                     u1381:
  2594  007538  EF5A  F03A         	goto	l2232
  2595  00753C                     u1380:
  2596  00753C                     l2248:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;main.c: 294: };main.c: 295: };main.c: 296: if (nbTuile == *pMines)
  2600  00753C  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2601  007540  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2602  007544  0100               	movlb	0	; force () banked
  2603  007546  51BA               	movf	gagne@nbTuile& (0+255),w,b
  2604  007548  0100               	movlb	0	; force () banked
  2605  00754A  6FB8               	movwf	(??_gagne+2)& (0+255),b
  2606  00754C  6BB9               	clrf	(??_gagne+3)& (0+255),b
  2607  00754E  50DE               	movf	postinc2,w,c
  2608  007550  19B8               	xorwf	(??_gagne+2)& (0+255),w,b
  2609  007552  E107               	bnz	u1391
  2610  007554  50DE               	movf	postinc2,w,c
  2611  007556  19B9               	xorwf	(??_gagne+3)& (0+255),w,b
  2612  007558  A4D8               	btfss	status,2,c
  2613  00755A  EFB1  F03A         	goto	u1391
  2614  00755E  EFB3  F03A         	goto	u1390
  2615  007562                     u1391:
  2616  007562  EFBD  F03A         	goto	l2258
  2617  007566                     u1390:
  2618  007566                     
  2619                           ; BSR set to: 0
  2620                           ;main.c: 297: {;main.c: 298: (*pMines)++;
  2621  007566  C0B4  FFD9         	movff	gagne@pMines,fsr2l
  2622  00756A  C0B5  FFDA         	movff	gagne@pMines+1,fsr2h
  2623  00756E  2ADE               	incf	postinc2,f,c
  2624  007570  0E00               	movlw	0
  2625  007572  22DD               	addwfc	postdec2,f,c
  2626  007574                     
  2627                           ; BSR set to: 0
  2628                           ;main.c: 299: return 1;
  2629  007574  0E01               	movlw	1
  2630  007576  EFBE  F03A         	goto	l170
  2631  00757A                     l2258:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;main.c: 301: else;main.c: 302: return 0;
  2635  00757A  0E00               	movlw	0
  2636  00757C                     l170:
  2637                           
  2638                           ; BSR set to: 0
  2639  00757C  0012               	return		;funcret
  2640  00757E                     __end_of_gagne:
  2641                           	opt callstack 0
  2642                           
  2643 ;; *************** function _deplace *****************
  2644 ;; Defined at:
  2645 ;;		line 200 in file "main.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2648 ;;		 -> main@posX(2), 
  2649 ;;  y               2    7[BANK0 ] PTR unsigned char 
  2650 ;;		 -> main@posY(2), 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  analogY         1   11[BANK0 ] unsigned char 
  2653 ;;  analogX         1   10[BANK0 ] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2663 ;;      Params:         0       4       0       0       0       0       0
  2664 ;;      Locals:         0       2       0       0       0       0       0
  2665 ;;      Temps:          0       1       0       0       0       0       0
  2666 ;;      Totals:         0       7       0       0       0       0       0
  2667 ;;Total ram usage:        7 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    4
  2670 ;; This function calls:
  2671 ;;		_getAnalog
  2672 ;;		_lcd_gotoXY
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text15
  2679  007838                     __ptext15:
  2680                           	opt callstack 0
  2681  007838                     _deplace:
  2682                           	opt callstack 26
  2683  007838                     
  2684                           ;main.c: 202: unsigned char analogX = getAnalog(7);
  2685  007838  0E07               	movlw	7
  2686  00783A  EC3A  F036         	call	_getAnalog
  2687  00783E  0100               	movlb	0	; force () banked
  2688  007840  6FBE               	movwf	deplace@analogX& (0+255),b
  2689                           
  2690                           ;main.c: 205: if (0 <= analogX && analogX <= 80)
  2691  007842  0E06               	movlw	6
  2692  007844  EC3A  F036         	call	_getAnalog
  2693  007848  0100               	movlb	0	; force () banked
  2694  00784A  6FBF               	movwf	deplace@analogY& (0+255),b
  2695  00784C                     
  2696                           ; BSR set to: 0
  2697  00784C  0E51               	movlw	81
  2698  00784E  0100               	movlb	0	; force () banked
  2699  007850  61BE               	cpfslt	deplace@analogX& (0+255),b
  2700  007852  EF2D  F03C         	goto	u1251
  2701  007856  EF2F  F03C         	goto	u1250
  2702  00785A                     u1251:
  2703  00785A  EF50  F03C         	goto	l2190
  2704  00785E                     u1250:
  2705  00785E                     
  2706                           ; BSR set to: 0
  2707                           ;main.c: 206: {;main.c: 207: *x = (*x) - 1;
  2708  00785E  C0B9  FFD9         	movff	deplace@x,fsr2l
  2709  007862  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2710  007866  50DF               	movf	indf2,w,c
  2711  007868  0100               	movlb	0	; force () banked
  2712  00786A  6FBD               	movwf	??_deplace& (0+255),b
  2713  00786C  05BD               	decf	??_deplace& (0+255),w,b
  2714  00786E  C0B9  FFD9         	movff	deplace@x,fsr2l
  2715  007872  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2716  007876  6EDF               	movwf	indf2,c
  2717  007878                     
  2718                           ; BSR set to: 0
  2719                           ;main.c: 208: if ((*x) <= 0)
  2720  007878  C0B9  FFD9         	movff	deplace@x,fsr2l
  2721  00787C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2722  007880  50DF               	movf	indf2,w,c
  2723  007882  A4D8               	btfss	status,2,c
  2724  007884  EF46  F03C         	goto	u1261
  2725  007888  EF48  F03C         	goto	u1260
  2726  00788C                     u1261:
  2727  00788C  EF78  F03C         	goto	l2196
  2728  007890                     u1260:
  2729  007890                     
  2730                           ; BSR set to: 0
  2731                           ;main.c: 209: *x = 20;
  2732  007890  C0B9  FFD9         	movff	deplace@x,fsr2l
  2733  007894  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2734  007898  0E14               	movlw	20
  2735  00789A  6EDF               	movwf	indf2,c
  2736  00789C  EF78  F03C         	goto	l2196
  2737  0078A0                     l2190:
  2738                           
  2739                           ; BSR set to: 0
  2740  0078A0  0EAE               	movlw	174
  2741  0078A2  0100               	movlb	0	; force () banked
  2742  0078A4  65BE               	cpfsgt	deplace@analogX& (0+255),b
  2743  0078A6  EF57  F03C         	goto	u1271
  2744  0078AA  EF59  F03C         	goto	u1270
  2745  0078AE                     u1271:
  2746  0078AE  EF78  F03C         	goto	l2196
  2747  0078B2                     u1270:
  2748  0078B2                     
  2749                           ; BSR set to: 0
  2750                           ;main.c: 211: {;main.c: 212: *x = (*x) + 1;
  2751  0078B2  C0B9  FFD9         	movff	deplace@x,fsr2l
  2752  0078B6  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2753  0078BA  50DF               	movf	indf2,w,c
  2754  0078BC  0100               	movlb	0	; force () banked
  2755  0078BE  6FBD               	movwf	??_deplace& (0+255),b
  2756  0078C0  29BD               	incf	??_deplace& (0+255),w,b
  2757  0078C2  C0B9  FFD9         	movff	deplace@x,fsr2l
  2758  0078C6  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2759  0078CA  6EDF               	movwf	indf2,c
  2760                           
  2761                           ;main.c: 213: if ((*x) >= 21)
  2762  0078CC  C0B9  FFD9         	movff	deplace@x,fsr2l
  2763  0078D0  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2764  0078D4  0E14               	movlw	20
  2765  0078D6  64DF               	cpfsgt	indf2,c
  2766  0078D8  EF70  F03C         	goto	u1281
  2767  0078DC  EF72  F03C         	goto	u1280
  2768  0078E0                     u1281:
  2769  0078E0  EF78  F03C         	goto	l2196
  2770  0078E4                     u1280:
  2771  0078E4                     
  2772                           ; BSR set to: 0
  2773                           ;main.c: 214: *x = 1;
  2774  0078E4  C0B9  FFD9         	movff	deplace@x,fsr2l
  2775  0078E8  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2776  0078EC  0E01               	movlw	1
  2777  0078EE  6EDF               	movwf	indf2,c
  2778  0078F0                     l2196:
  2779                           
  2780                           ; BSR set to: 0
  2781  0078F0  0E51               	movlw	81
  2782  0078F2  0100               	movlb	0	; force () banked
  2783  0078F4  61BF               	cpfslt	deplace@analogY& (0+255),b
  2784  0078F6  EF7F  F03C         	goto	u1291
  2785  0078FA  EF81  F03C         	goto	u1290
  2786  0078FE                     u1291:
  2787  0078FE  EFA2  F03C         	goto	l2204
  2788  007902                     u1290:
  2789  007902                     
  2790                           ; BSR set to: 0
  2791                           ;main.c: 218: {;main.c: 219: *y = (*y) - 1;
  2792  007902  C0BB  FFD9         	movff	deplace@y,fsr2l
  2793  007906  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2794  00790A  50DF               	movf	indf2,w,c
  2795  00790C  0100               	movlb	0	; force () banked
  2796  00790E  6FBD               	movwf	??_deplace& (0+255),b
  2797  007910  05BD               	decf	??_deplace& (0+255),w,b
  2798  007912  C0BB  FFD9         	movff	deplace@y,fsr2l
  2799  007916  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2800  00791A  6EDF               	movwf	indf2,c
  2801  00791C                     
  2802                           ; BSR set to: 0
  2803                           ;main.c: 220: if ((*y) <= 0)
  2804  00791C  C0BB  FFD9         	movff	deplace@y,fsr2l
  2805  007920  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2806  007924  50DF               	movf	indf2,w,c
  2807  007926  A4D8               	btfss	status,2,c
  2808  007928  EF98  F03C         	goto	u1301
  2809  00792C  EF9A  F03C         	goto	u1300
  2810  007930                     u1301:
  2811  007930  EFCA  F03C         	goto	l2210
  2812  007934                     u1300:
  2813  007934                     
  2814                           ; BSR set to: 0
  2815                           ;main.c: 221: *y = 4;
  2816  007934  C0BB  FFD9         	movff	deplace@y,fsr2l
  2817  007938  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2818  00793C  0E04               	movlw	4
  2819  00793E  6EDF               	movwf	indf2,c
  2820  007940  EFCA  F03C         	goto	l2210
  2821  007944                     l2204:
  2822                           
  2823                           ; BSR set to: 0
  2824  007944  0EAE               	movlw	174
  2825  007946  0100               	movlb	0	; force () banked
  2826  007948  65BF               	cpfsgt	deplace@analogY& (0+255),b
  2827  00794A  EFA9  F03C         	goto	u1311
  2828  00794E  EFAB  F03C         	goto	u1310
  2829  007952                     u1311:
  2830  007952  EFCA  F03C         	goto	l2210
  2831  007956                     u1310:
  2832  007956                     
  2833                           ; BSR set to: 0
  2834                           ;main.c: 223: {;main.c: 224: *y = (*y) + 1;
  2835  007956  C0BB  FFD9         	movff	deplace@y,fsr2l
  2836  00795A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2837  00795E  50DF               	movf	indf2,w,c
  2838  007960  0100               	movlb	0	; force () banked
  2839  007962  6FBD               	movwf	??_deplace& (0+255),b
  2840  007964  29BD               	incf	??_deplace& (0+255),w,b
  2841  007966  C0BB  FFD9         	movff	deplace@y,fsr2l
  2842  00796A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2843  00796E  6EDF               	movwf	indf2,c
  2844                           
  2845                           ;main.c: 225: if ((*y) >= 5)
  2846  007970  C0BB  FFD9         	movff	deplace@y,fsr2l
  2847  007974  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2848  007978  0E04               	movlw	4
  2849  00797A  64DF               	cpfsgt	indf2,c
  2850  00797C  EFC2  F03C         	goto	u1321
  2851  007980  EFC4  F03C         	goto	u1320
  2852  007984                     u1321:
  2853  007984  EFCA  F03C         	goto	l2210
  2854  007988                     u1320:
  2855  007988                     
  2856                           ; BSR set to: 0
  2857                           ;main.c: 226: *y = 1;
  2858  007988  C0BB  FFD9         	movff	deplace@y,fsr2l
  2859  00798C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2860  007990  0E01               	movlw	1
  2861  007992  6EDF               	movwf	indf2,c
  2862  007994                     l2210:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;main.c: 227: };main.c: 228: lcd_gotoXY(*x, *y);
  2866  007994  C0BB  FFD9         	movff	deplace@y,fsr2l
  2867  007998  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2868  00799C  50DF               	movf	indf2,w,c
  2869  00799E  0100               	movlb	0	; force () banked
  2870  0079A0  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  2871  0079A2  C0B9  FFD9         	movff	deplace@x,fsr2l
  2872  0079A6  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2873  0079AA  50DF               	movf	indf2,w,c
  2874  0079AC  EC9F  F038         	call	_lcd_gotoXY
  2875  0079B0  0012               	return		;funcret
  2876  0079B2                     __end_of_deplace:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _getAnalog *****************
  2880 ;; Defined at:
  2881 ;;		line 310 in file "main.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  canal           1    wreg     unsigned char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  canal           1    1[BANK0 ] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         0       0       0       0       0       0       0
  2896 ;;      Locals:         0       1       0       0       0       0       0
  2897 ;;      Temps:          0       1       0       0       0       0       0
  2898 ;;      Totals:         0       2       0       0       0       0       0
  2899 ;;Total ram usage:        2 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_deplace
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text16
  2909  006C74                     __ptext16:
  2910                           	opt callstack 0
  2911  006C74                     _getAnalog:
  2912                           	opt callstack 29
  2913                           
  2914                           ;incstack = 0
  2915                           ;getAnalog@canal stored from wreg
  2916  006C74  0100               	movlb	0	; force () banked
  2917  006C76  6FB5               	movwf	getAnalog@canal& (0+255),b
  2918  006C78                     
  2919                           ;main.c: 312: ADCON0bits.CHS = canal;
  2920  006C78  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  2921  006C7C  0100               	movlb	0	; force () banked
  2922  006C7E  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2923  006C80  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2924  006C82  50C2               	movf	194,w,c	;volatile
  2925  006C84  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2926  006C86  0BC3               	andlw	-61
  2927  006C88  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2928  006C8A  6EC2               	movwf	194,c	;volatile
  2929  006C8C                     
  2930                           ;main.c: 314: ADCON0bits.GO_DONE = 1;
  2931  006C8C  82C2               	bsf	194,1,c	;volatile
  2932  006C8E                     l174:
  2933  006C8E  B2C2               	btfsc	194,1,c	;volatile
  2934  006C90  EF4C  F036         	goto	u161
  2935  006C94  EF4E  F036         	goto	u160
  2936  006C98                     u161:
  2937  006C98  EF47  F036         	goto	l174
  2938  006C9C                     u160:
  2939  006C9C                     
  2940                           ;main.c: 316: return ADRESH;
  2941  006C9C  50C4               	movf	196,w,c	;volatile
  2942  006C9E  0012               	return		;funcret
  2943  006CA0                     __end_of_getAnalog:
  2944                           	opt callstack 0
  2945                           
  2946 ;; *************** function _demine *****************
  2947 ;; Defined at:
  2948 ;;		line 239 in file "main.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  x               1    wreg     unsigned char 
  2951 ;;  y               1   19[BANK0 ] unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  x               1   25[BANK0 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2963 ;;      Params:         0       1       0       0       0       0       0
  2964 ;;      Locals:         0       1       0       0       0       0       0
  2965 ;;      Temps:          0       5       0       0       0       0       0
  2966 ;;      Totals:         0       7       0       0       0       0       0
  2967 ;;Total ram usage:        7 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    7
  2970 ;; This function calls:
  2971 ;;		_enleveTuilesAutour
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text17
  2978  006F94                     __ptext17:
  2979                           	opt callstack 0
  2980  006F94                     _demine:
  2981                           	opt callstack 23
  2982                           
  2983                           ;incstack = 0
  2984                           ;demine@x stored from wreg
  2985  006F94  0100               	movlb	0	; force () banked
  2986  006F96  6FCD               	movwf	demine@x& (0+255),b
  2987  006F98                     
  2988                           ;main.c: 241: if (m_tabMines[y - 1][x - 1] == 2)
  2989  006F98  0100               	movlb	0	; force () banked
  2990  006F9A  51C7               	movf	demine@y& (0+255),w,b
  2991  006F9C  0D15               	mullw	21
  2992  006F9E  0EEA               	movlw	234
  2993  006FA0  0100               	movlb	0	; force () banked
  2994  006FA2  6FC8               	movwf	??_demine& (0+255),b
  2995  006FA4  0EFF               	movlw	255
  2996  006FA6  6FC9               	movwf	(??_demine+1)& (0+255),b
  2997  006FA8  0E60               	movlw	low _m_tabMines
  2998  006FAA  6FCA               	movwf	(??_demine+2)& (0+255),b
  2999  006FAC  0E00               	movlw	high _m_tabMines
  3000  006FAE  6FCB               	movwf	(??_demine+3)& (0+255),b
  3001  006FB0  51C8               	movf	??_demine& (0+255),w,b
  3002  006FB2  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3003  006FB4  51C9               	movf	(??_demine+1)& (0+255),w,b
  3004  006FB6  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3005  006FB8  50F3               	movf	243,w,c
  3006  006FBA  27CA               	addwf	(??_demine+2)& (0+255),f,b
  3007  006FBC  50F4               	movf	244,w,c
  3008  006FBE  23CB               	addwfc	(??_demine+3)& (0+255),f,b
  3009  006FC0  0100               	movlb	0	; force () banked
  3010  006FC2  51CD               	movf	demine@x& (0+255),w,b
  3011  006FC4  0100               	movlb	0	; force () banked
  3012  006FC6  25CA               	addwf	(??_demine+2)& (0+255),w,b
  3013  006FC8  6ED9               	movwf	fsr2l,c
  3014  006FCA  0100               	movlb	0	; force () banked
  3015  006FCC  0E00               	movlw	0
  3016  006FCE  0100               	movlb	0	; force () banked
  3017  006FD0  21CB               	addwfc	(??_demine+3)& (0+255),w,b
  3018  006FD2  6EDA               	movwf	fsr2h,c
  3019  006FD4  0E02               	movlw	2
  3020  006FD6  18DE               	xorwf	postinc2,w,c
  3021  006FD8  A4D8               	btfss	status,2,c
  3022  006FDA  EFF1  F037         	goto	u1331
  3023  006FDE  EFF3  F037         	goto	u1330
  3024  006FE2                     u1331:
  3025  006FE2  EFF6  F037         	goto	l2220
  3026  006FE6                     u1330:
  3027  006FE6                     
  3028                           ; BSR set to: 0
  3029                           ;main.c: 242: return 0;
  3030  006FE6  0E00               	movlw	0
  3031  006FE8  EFFD  F037         	goto	l144
  3032  006FEC                     l2220:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;main.c: 243: else;main.c: 244: {;main.c: 245: enleveTuilesAutour(x, y);
  3036  006FEC  C0C7  F0BD         	movff	demine@y,enleveTuilesAutour@y
  3037  006FF0  0100               	movlb	0	; force () banked
  3038  006FF2  51CD               	movf	demine@x& (0+255),w,b
  3039  006FF4  ECAA  F03D         	call	_enleveTuilesAutour
  3040  006FF8                     
  3041                           ;main.c: 246: return 1;
  3042  006FF8  0E01               	movlw	1
  3043  006FFA                     l144:
  3044  006FFA  0012               	return		;funcret
  3045  006FFC                     __end_of_demine:
  3046                           	opt callstack 0
  3047                           
  3048 ;; *************** function _enleveTuilesAutour *****************
  3049 ;; Defined at:
  3050 ;;		line 256 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  x               1    wreg     unsigned char 
  3053 ;;  y               1    9[BANK0 ] unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  x               1   14[BANK0 ] unsigned char 
  3056 ;;  j               2   17[BANK0 ] int 
  3057 ;;  i               2   15[BANK0 ] int 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3067 ;;      Params:         0       1       0       0       0       0       0
  3068 ;;      Locals:         0       5       0       0       0       0       0
  3069 ;;      Temps:          0       4       0       0       0       0       0
  3070 ;;      Totals:         0      10       0       0       0       0       0
  3071 ;;Total ram usage:       10 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    6
  3074 ;; This function calls:
  3075 ;;		___wmul
  3076 ;;		_afficheTabVue
  3077 ;; This function is called by:
  3078 ;;		_demine
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text18
  3083  007B54                     __ptext18:
  3084                           	opt callstack 0
  3085  007B54                     _enleveTuilesAutour:
  3086                           	opt callstack 23
  3087                           
  3088                           ;incstack = 0
  3089                           ;enleveTuilesAutour@x stored from wreg
  3090  007B54  0100               	movlb	0	; force () banked
  3091  007B56  6FC2               	movwf	enleveTuilesAutour@x& (0+255),b
  3092  007B58                     
  3093                           ;main.c: 258: int i = x - 2;
  3094  007B58  0EFE               	movlw	254
  3095  007B5A  0100               	movlb	0	; force () banked
  3096  007B5C  25C2               	addwf	enleveTuilesAutour@x& (0+255),w,b
  3097  007B5E  0100               	movlb	0	; force () banked
  3098  007B60  6FC3               	movwf	enleveTuilesAutour@i& (0+255),b
  3099  007B62  6BC4               	clrf	(enleveTuilesAutour@i+1)& (0+255),b
  3100  007B64  0EFF               	movlw	255
  3101  007B66  23C4               	addwfc	(enleveTuilesAutour@i+1)& (0+255),f,b
  3102                           
  3103                           ;main.c: 259: int j = y - 2;
  3104  007B68  0EFE               	movlw	254
  3105  007B6A  0100               	movlb	0	; force () banked
  3106  007B6C  25BD               	addwf	enleveTuilesAutour@y& (0+255),w,b
  3107  007B6E  0100               	movlb	0	; force () banked
  3108  007B70  6FC5               	movwf	enleveTuilesAutour@j& (0+255),b
  3109  007B72  6BC6               	clrf	(enleveTuilesAutour@j+1)& (0+255),b
  3110  007B74  0EFF               	movlw	255
  3111  007B76  23C6               	addwfc	(enleveTuilesAutour@j+1)& (0+255),f,b
  3112                           
  3113                           ;main.c: 261: if (i < 0)
  3114  007B78  0100               	movlb	0	; force () banked
  3115  007B7A  BFC4               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  3116  007B7C  EFC4  F03D         	goto	u920
  3117  007B80  EFC2  F03D         	goto	u921
  3118  007B84                     u921:
  3119  007B84  EFC9  F03D         	goto	l1954
  3120  007B88                     u920:
  3121  007B88                     
  3122                           ; BSR set to: 0
  3123                           ;main.c: 262: i = 0;
  3124  007B88  0E00               	movlw	0
  3125  007B8A  0100               	movlb	0	; force () banked
  3126  007B8C  6FC4               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  3127  007B8E  0E00               	movlw	0
  3128  007B90  6FC3               	movwf	enleveTuilesAutour@i& (0+255),b
  3129  007B92                     l1954:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;main.c: 263: if (j < 0)
  3133  007B92  0100               	movlb	0	; force () banked
  3134  007B94  BFC6               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  3135  007B96  EFD1  F03D         	goto	u930
  3136  007B9A  EFCF  F03D         	goto	u931
  3137  007B9E                     u931:
  3138  007B9E  EF76  F03E         	goto	l1970
  3139  007BA2                     u930:
  3140  007BA2                     
  3141                           ; BSR set to: 0
  3142                           ;main.c: 264: j = 0;
  3143  007BA2  0E00               	movlw	0
  3144  007BA4  0100               	movlb	0	; force () banked
  3145  007BA6  6FC6               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  3146  007BA8  0E00               	movlw	0
  3147  007BAA  6FC5               	movwf	enleveTuilesAutour@j& (0+255),b
  3148  007BAC  EF76  F03E         	goto	l1970
  3149  007BB0                     l1958:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;main.c: 269: {;main.c: 270: if(m_tabMines[j][i]!=2)
  3153  007BB0  C0C5  F0B4         	movff	enleveTuilesAutour@j,___wmul@multiplier
  3154  007BB4  C0C6  F0B5         	movff	enleveTuilesAutour@j+1,___wmul@multiplier+1
  3155  007BB8  0E00               	movlw	0
  3156  007BBA  0100               	movlb	0	; force () banked
  3157  007BBC  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3158  007BBE  0E15               	movlw	21
  3159  007BC0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3160  007BC2  EC12  F036         	call	___wmul	;wreg free
  3161  007BC6  0E60               	movlw	low _m_tabMines
  3162  007BC8  0100               	movlb	0	; force () banked
  3163  007BCA  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3164  007BCC  0E00               	movlw	high _m_tabMines
  3165  007BCE  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3166  007BD0  0100               	movlb	0	; force () banked
  3167  007BD2  51B4               	movf	?___wmul& (0+255),w,b
  3168  007BD4  0100               	movlb	0	; force () banked
  3169  007BD6  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3170  007BD8  0100               	movlb	0	; force () banked
  3171  007BDA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3172  007BDC  0100               	movlb	0	; force () banked
  3173  007BDE  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3174  007BE0  0100               	movlb	0	; force () banked
  3175  007BE2  51C3               	movf	enleveTuilesAutour@i& (0+255),w,b
  3176  007BE4  0100               	movlb	0	; force () banked
  3177  007BE6  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3178  007BE8  6ED9               	movwf	fsr2l,c
  3179  007BEA  0100               	movlb	0	; force () banked
  3180  007BEC  51C4               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  3181  007BEE  0100               	movlb	0	; force () banked
  3182  007BF0  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3183  007BF2  6EDA               	movwf	fsr2h,c
  3184  007BF4  0E02               	movlw	2
  3185  007BF6  18DE               	xorwf	postinc2,w,c
  3186  007BF8  B4D8               	btfsc	status,2,c
  3187  007BFA  EF01  F03E         	goto	u941
  3188  007BFE  EF03  F03E         	goto	u940
  3189  007C02                     u941:
  3190  007C02  EF49  F03E         	goto	l1962
  3191  007C06                     u940:
  3192  007C06                     
  3193                           ; BSR set to: 0
  3194                           ;main.c: 271: m_tabVue[j][i]=m_tabMines[j][i];
  3195  007C06  C0C5  F0B4         	movff	enleveTuilesAutour@j,___wmul@multiplier
  3196  007C0A  C0C6  F0B5         	movff	enleveTuilesAutour@j+1,___wmul@multiplier+1
  3197  007C0E  0E00               	movlw	0
  3198  007C10  0100               	movlb	0	; force () banked
  3199  007C12  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3200  007C14  0E15               	movlw	21
  3201  007C16  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3202  007C18  EC12  F036         	call	___wmul	;wreg free
  3203  007C1C  0E60               	movlw	low _m_tabMines
  3204  007C1E  0100               	movlb	0	; force () banked
  3205  007C20  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3206  007C22  0E00               	movlw	high _m_tabMines
  3207  007C24  6FBF               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3208  007C26  0100               	movlb	0	; force () banked
  3209  007C28  51B4               	movf	?___wmul& (0+255),w,b
  3210  007C2A  0100               	movlb	0	; force () banked
  3211  007C2C  27BE               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3212  007C2E  0100               	movlb	0	; force () banked
  3213  007C30  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3214  007C32  0100               	movlb	0	; force () banked
  3215  007C34  23BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3216  007C36  0100               	movlb	0	; force () banked
  3217  007C38  51C3               	movf	enleveTuilesAutour@i& (0+255),w,b
  3218  007C3A  0100               	movlb	0	; force () banked
  3219  007C3C  25BE               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3220  007C3E  6ED9               	movwf	fsr2l,c
  3221  007C40  0100               	movlb	0	; force () banked
  3222  007C42  51C4               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  3223  007C44  0100               	movlb	0	; force () banked
  3224  007C46  21BF               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3225  007C48  6EDA               	movwf	fsr2h,c
  3226  007C4A  C0C5  F0B4         	movff	enleveTuilesAutour@j,___wmul@multiplier
  3227  007C4E  C0C6  F0B5         	movff	enleveTuilesAutour@j+1,___wmul@multiplier+1
  3228  007C52  0E00               	movlw	0
  3229  007C54  0100               	movlb	0	; force () banked
  3230  007C56  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3231  007C58  0E15               	movlw	21
  3232  007C5A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3233  007C5C  EC12  F036         	call	___wmul	;wreg free
  3234  007C60  0E00               	movlw	low _m_tabVue
  3235  007C62  0100               	movlb	0	; force () banked
  3236  007C64  6FC0               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3237  007C66  0E01               	movlw	high _m_tabVue
  3238  007C68  6FC1               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3239  007C6A  0100               	movlb	0	; force () banked
  3240  007C6C  51B4               	movf	?___wmul& (0+255),w,b
  3241  007C6E  0100               	movlb	0	; force () banked
  3242  007C70  27C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3243  007C72  0100               	movlb	0	; force () banked
  3244  007C74  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3245  007C76  0100               	movlb	0	; force () banked
  3246  007C78  23C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3247  007C7A  0100               	movlb	0	; force () banked
  3248  007C7C  51C3               	movf	enleveTuilesAutour@i& (0+255),w,b
  3249  007C7E  0100               	movlb	0	; force () banked
  3250  007C80  25C0               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3251  007C82  6EE1               	movwf	fsr1l,c
  3252  007C84  0100               	movlb	0	; force () banked
  3253  007C86  51C4               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  3254  007C88  0100               	movlb	0	; force () banked
  3255  007C8A  21C1               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3256  007C8C  6EE2               	movwf	fsr1h,c
  3257  007C8E  CFDF FFE7          	movff	indf2,indf1
  3258  007C92                     l1962:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;main.c: 272: i++;
  3262  007C92  0100               	movlb	0	; force () banked
  3263  007C94  4BC3               	infsnz	enleveTuilesAutour@i& (0+255),f,b
  3264  007C96  2BC4               	incf	(enleveTuilesAutour@i+1)& (0+255),f,b
  3265  007C98                     l1964:
  3266                           
  3267                           ; BSR set to: 0
  3268  007C98  0100               	movlb	0	; force () banked
  3269  007C9A  51C2               	movf	enleveTuilesAutour@x& (0+255),w,b
  3270  007C9C  0100               	movlb	0	; force () banked
  3271  007C9E  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3272  007CA0  6BBF               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  3273  007CA2  0100               	movlb	0	; force () banked
  3274  007CA4  51C3               	movf	enleveTuilesAutour@i& (0+255),w,b
  3275  007CA6  0100               	movlb	0	; force () banked
  3276  007CA8  5DBE               	subwf	??_enleveTuilesAutour& (0+255),w,b
  3277  007CAA  51BF               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3278  007CAC  0A80               	xorlw	128
  3279  007CAE  6FC0               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3280  007CB0  0100               	movlb	0	; force () banked
  3281  007CB2  51C4               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  3282  007CB4  0A80               	xorlw	128
  3283  007CB6  0100               	movlb	0	; force () banked
  3284  007CB8  59C0               	subwfb	(??_enleveTuilesAutour+2)& (0+255),w,b
  3285  007CBA  A0D8               	btfss	status,0,c
  3286  007CBC  EF62  F03E         	goto	u951
  3287  007CC0  EF64  F03E         	goto	u950
  3288  007CC4                     u951:
  3289  007CC4  EF73  F03E         	goto	l1968
  3290  007CC8                     u950:
  3291  007CC8                     
  3292                           ; BSR set to: 0
  3293  007CC8  0100               	movlb	0	; force () banked
  3294  007CCA  BFC4               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  3295  007CCC  EF71  F03E         	goto	u961
  3296  007CD0  51C4               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  3297  007CD2  E109               	bnz	u960
  3298  007CD4  0E14               	movlw	20
  3299  007CD6  5DC3               	subwf	enleveTuilesAutour@i& (0+255),w,b
  3300  007CD8  A0D8               	btfss	status,0,c
  3301  007CDA  EF71  F03E         	goto	u961
  3302  007CDE  EF73  F03E         	goto	u960
  3303  007CE2                     u961:
  3304  007CE2  EFD8  F03D         	goto	l1958
  3305  007CE6                     u960:
  3306  007CE6                     l1968:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;main.c: 273: };main.c: 274: j++;
  3310  007CE6  0100               	movlb	0	; force () banked
  3311  007CE8  4BC5               	infsnz	enleveTuilesAutour@j& (0+255),f,b
  3312  007CEA  2BC6               	incf	(enleveTuilesAutour@j+1)& (0+255),f,b
  3313  007CEC                     l1970:
  3314                           
  3315                           ; BSR set to: 0
  3316  007CEC  0100               	movlb	0	; force () banked
  3317  007CEE  51BD               	movf	enleveTuilesAutour@y& (0+255),w,b
  3318  007CF0  0100               	movlb	0	; force () banked
  3319  007CF2  6FBE               	movwf	??_enleveTuilesAutour& (0+255),b
  3320  007CF4  6BBF               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  3321  007CF6  0100               	movlb	0	; force () banked
  3322  007CF8  51C5               	movf	enleveTuilesAutour@j& (0+255),w,b
  3323  007CFA  0100               	movlb	0	; force () banked
  3324  007CFC  5DBE               	subwf	??_enleveTuilesAutour& (0+255),w,b
  3325  007CFE  51BF               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3326  007D00  0A80               	xorlw	128
  3327  007D02  6FC0               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3328  007D04  0100               	movlb	0	; force () banked
  3329  007D06  51C6               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  3330  007D08  0A80               	xorlw	128
  3331  007D0A  0100               	movlb	0	; force () banked
  3332  007D0C  59C0               	subwfb	(??_enleveTuilesAutour+2)& (0+255),w,b
  3333  007D0E  A0D8               	btfss	status,0,c
  3334  007D10  EF8C  F03E         	goto	u971
  3335  007D14  EF8E  F03E         	goto	u970
  3336  007D18                     u971:
  3337  007D18  EF9D  F03E         	goto	l1974
  3338  007D1C                     u970:
  3339  007D1C                     
  3340                           ; BSR set to: 0
  3341  007D1C  0100               	movlb	0	; force () banked
  3342  007D1E  BFC6               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  3343  007D20  EF9B  F03E         	goto	u981
  3344  007D24  51C6               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  3345  007D26  E109               	bnz	u980
  3346  007D28  0E04               	movlw	4
  3347  007D2A  5DC5               	subwf	enleveTuilesAutour@j& (0+255),w,b
  3348  007D2C  A0D8               	btfss	status,0,c
  3349  007D2E  EF9B  F03E         	goto	u981
  3350  007D32  EF9D  F03E         	goto	u980
  3351  007D36                     u981:
  3352  007D36  EF4C  F03E         	goto	l1964
  3353  007D3A                     u980:
  3354  007D3A                     l1974:
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;main.c: 275: };main.c: 276: afficheTabVue();
  3358  007D3A  EC6E  F037         	call	_afficheTabVue	;wreg free
  3359  007D3E  0012               	return		;funcret
  3360  007D40                     __end_of_enleveTuilesAutour:
  3361                           	opt callstack 0
  3362                           
  3363 ;; *************** function _afficheTabVue *****************
  3364 ;; Defined at:
  3365 ;;		line 325 in file "main.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  i               1    8[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3379 ;;      Params:         0       0       0       0       0       0       0
  3380 ;;      Locals:         0       1       0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0
  3382 ;;      Totals:         0       1       0       0       0       0       0
  3383 ;;Total ram usage:        1 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    5
  3386 ;; This function calls:
  3387 ;;		_lcd_gotoXY
  3388 ;;		_lcd_putMessage
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;;		_enleveTuilesAutour
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text19
  3396  006EDC                     __ptext19:
  3397                           	opt callstack 0
  3398  006EDC                     _afficheTabVue:
  3399                           	opt callstack 23
  3400  006EDC                     
  3401                           ;main.c: 327: for (char i = 0; i < 4; i++) {
  3402  006EDC  0E00               	movlw	0
  3403  006EDE  0100               	movlb	0	; force () banked
  3404  006EE0  6FBC               	movwf	afficheTabVue@i& (0+255),b
  3405  006EE2                     
  3406                           ; BSR set to: 0
  3407  006EE2  0E03               	movlw	3
  3408  006EE4  0100               	movlb	0	; force () banked
  3409  006EE6  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3410  006EE8  EF78  F037         	goto	u811
  3411  006EEC  EF7A  F037         	goto	u810
  3412  006EF0                     u811:
  3413  006EF0  EF7C  F037         	goto	l1882
  3414  006EF4                     u810:
  3415  006EF4  EF9A  F037         	goto	l182
  3416  006EF8                     l1882:
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;main.c: 328: lcd_gotoXY(1, i + 1);
  3420  006EF8  0100               	movlb	0	; force () banked
  3421  006EFA  29BC               	incf	afficheTabVue@i& (0+255),w,b
  3422  006EFC  0100               	movlb	0	; force () banked
  3423  006EFE  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3424  006F00  0E01               	movlw	1
  3425  006F02  EC9F  F038         	call	_lcd_gotoXY
  3426  006F06                     
  3427                           ;main.c: 329: lcd_putMessage(m_tabVue[i]);
  3428  006F06  0100               	movlb	0	; force () banked
  3429  006F08  51BC               	movf	afficheTabVue@i& (0+255),w,b
  3430  006F0A  0D15               	mullw	21
  3431  006F0C  0E00               	movlw	low _m_tabVue
  3432  006F0E  24F3               	addwf	243,w,c
  3433  006F10  0100               	movlb	0	; force () banked
  3434  006F12  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3435  006F14  0E01               	movlw	high _m_tabVue
  3436  006F16  20F4               	addwfc	prodh,w,c
  3437  006F18  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3438  006F1A  ECC5  F036         	call	_lcd_putMessage	;wreg free
  3439  006F1E  0100               	movlb	0	; force () banked
  3440  006F20  2BBC               	incf	afficheTabVue@i& (0+255),f,b
  3441  006F22                     
  3442                           ; BSR set to: 0
  3443  006F22  0E03               	movlw	3
  3444  006F24  0100               	movlb	0	; force () banked
  3445  006F26  65BC               	cpfsgt	afficheTabVue@i& (0+255),b
  3446  006F28  EF98  F037         	goto	u821
  3447  006F2C  EF9A  F037         	goto	u820
  3448  006F30                     u821:
  3449  006F30  EF7C  F037         	goto	l1882
  3450  006F34                     u820:
  3451  006F34                     l182:
  3452                           
  3453                           ; BSR set to: 0
  3454  006F34  0012               	return		;funcret
  3455  006F36                     __end_of_afficheTabVue:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function ___wmul *****************
  3459 ;; Defined at:
  3460 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3463 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  product         2    4[BANK0 ] unsigned int 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  2    0[BANK0 ] unsigned int 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, prodl, prodh
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3475 ;;      Params:         0       4       0       0       0       0       0
  3476 ;;      Locals:         0       2       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0
  3478 ;;      Totals:         0       6       0       0       0       0       0
  3479 ;;Total ram usage:        6 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_calculToucheCombien
  3485 ;;		_enleveTuilesAutour
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text20
  3490  006C24                     __ptext20:
  3491                           	opt callstack 0
  3492  006C24                     ___wmul:
  3493                           	opt callstack 28
  3494  006C24  0100               	movlb	0	; () banked
  3495  006C26  51B4               	movf	___wmul@multiplier& (0+255),w,b
  3496  006C28  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  3497  006C2A  CFF3 F0B8          	movff	prodl,___wmul@product
  3498  006C2E  CFF4 F0B9          	movff	prodh,___wmul@product+1
  3499  006C32  51B4               	movf	___wmul@multiplier& (0+255),w,b
  3500  006C34  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3501  006C36  50F3               	movf	243,w,c
  3502  006C38  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  3503  006C3A  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3504  006C3C  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  3505  006C3E  50F3               	movf	243,w,c
  3506  006C40  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  3507  006C42                     
  3508                           ; BSR set to: 0
  3509  006C42  C0B8  F0B4         	movff	___wmul@product,?___wmul
  3510  006C46  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  3511  006C4A                     
  3512                           ; BSR set to: 0
  3513  006C4A  0012               	return		;funcret
  3514  006C4C                     __end_of___wmul:
  3515                           	opt callstack 0
  3516                           
  3517 ;; *************** function _afficheTabMines *****************
  3518 ;; Defined at:
  3519 ;;		line 338 in file "main.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  i               1    8[BANK0 ] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3533 ;;      Params:         0       0       0       0       0       0       0
  3534 ;;      Locals:         0       1       0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0
  3536 ;;      Totals:         0       1       0       0       0       0       0
  3537 ;;Total ram usage:        1 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    5
  3540 ;; This function calls:
  3541 ;;		_lcd_gotoXY
  3542 ;;		_lcd_putMessage
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text21
  3549  006E82                     __ptext21:
  3550                           	opt callstack 0
  3551  006E82                     _afficheTabMines:
  3552                           	opt callstack 25
  3553  006E82                     
  3554                           ;main.c: 340: for (char i = 0; i < 4; i++) {
  3555  006E82  0E00               	movlw	0
  3556  006E84  0100               	movlb	0	; force () banked
  3557  006E86  6FBC               	movwf	afficheTabMines@i& (0+255),b
  3558  006E88                     
  3559                           ; BSR set to: 0
  3560  006E88  0E03               	movlw	3
  3561  006E8A  0100               	movlb	0	; force () banked
  3562  006E8C  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3563  006E8E  EF4B  F037         	goto	u1401
  3564  006E92  EF4D  F037         	goto	u1400
  3565  006E96                     u1401:
  3566  006E96  EF4F  F037         	goto	l2268
  3567  006E9A                     u1400:
  3568  006E9A  EF6D  F037         	goto	l187
  3569  006E9E                     l2268:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;main.c: 341: lcd_gotoXY(1, i + 1);
  3573  006E9E  0100               	movlb	0	; force () banked
  3574  006EA0  29BC               	incf	afficheTabMines@i& (0+255),w,b
  3575  006EA2  0100               	movlb	0	; force () banked
  3576  006EA4  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  3577  006EA6  0E01               	movlw	1
  3578  006EA8  EC9F  F038         	call	_lcd_gotoXY
  3579  006EAC                     
  3580                           ;main.c: 342: lcd_putMessage(m_tabMines[i]);
  3581  006EAC  0100               	movlb	0	; force () banked
  3582  006EAE  51BC               	movf	afficheTabMines@i& (0+255),w,b
  3583  006EB0  0D15               	mullw	21
  3584  006EB2  0E60               	movlw	low _m_tabMines
  3585  006EB4  24F3               	addwf	243,w,c
  3586  006EB6  0100               	movlb	0	; force () banked
  3587  006EB8  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
  3588  006EBA  0E00               	movlw	high _m_tabMines
  3589  006EBC  20F4               	addwfc	prodh,w,c
  3590  006EBE  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3591  006EC0  ECC5  F036         	call	_lcd_putMessage	;wreg free
  3592  006EC4  0100               	movlb	0	; force () banked
  3593  006EC6  2BBC               	incf	afficheTabMines@i& (0+255),f,b
  3594  006EC8                     
  3595                           ; BSR set to: 0
  3596  006EC8  0E03               	movlw	3
  3597  006ECA  0100               	movlb	0	; force () banked
  3598  006ECC  65BC               	cpfsgt	afficheTabMines@i& (0+255),b
  3599  006ECE  EF6B  F037         	goto	u1411
  3600  006ED2  EF6D  F037         	goto	u1410
  3601  006ED6                     u1411:
  3602  006ED6  EF4F  F037         	goto	l2268
  3603  006EDA                     u1410:
  3604  006EDA                     l187:
  3605                           
  3606                           ; BSR set to: 0
  3607  006EDA  0012               	return		;funcret
  3608  006EDC                     __end_of_afficheTabMines:
  3609                           	opt callstack 0
  3610                           
  3611 ;; *************** function _lcd_putMessage *****************
  3612 ;; Defined at:
  3613 ;;		line 387 in file "Lcd4Lignes.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
  3616 ;;		 -> m_tabMines(84), m_tabVue(84), 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  j               1    7[BANK0 ] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3628 ;;      Params:         0       2       0       0       0       0       0
  3629 ;;      Locals:         0       1       0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0
  3631 ;;      Totals:         0       3       0       0       0       0       0
  3632 ;;Total ram usage:        3 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    4
  3635 ;; This function calls:
  3636 ;;		_lcd_ecritChar
  3637 ;; This function is called by:
  3638 ;;		_afficheTabVue
  3639 ;;		_afficheTabMines
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text22
  3644  006D8A                     __ptext22:
  3645                           	opt callstack 0
  3646  006D8A                     _lcd_putMessage:
  3647                           	opt callstack 23
  3648  006D8A                     
  3649                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  3650  006D8A  0E00               	movlw	0
  3651  006D8C  0100               	movlb	0	; force () banked
  3652  006D8E  6FBB               	movwf	lcd_putMessage@j& (0+255),b
  3653  006D90  EFD9  F036         	goto	l1874
  3654  006D94                     l1870:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  3658  006D94  0100               	movlb	0	; force () banked
  3659  006D96  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  3660  006D98  0100               	movlb	0	; force () banked
  3661  006D9A  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3662  006D9C  6ED9               	movwf	fsr2l,c
  3663  006D9E  0100               	movlb	0	; force () banked
  3664  006DA0  0E00               	movlw	0
  3665  006DA2  0100               	movlb	0	; force () banked
  3666  006DA4  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3667  006DA6  6EDA               	movwf	fsr2h,c
  3668  006DA8  50DF               	movf	indf2,w,c
  3669  006DAA  ECEC  F036         	call	_lcd_ecritChar
  3670  006DAE  0100               	movlb	0	; force () banked
  3671  006DB0  2BBB               	incf	lcd_putMessage@j& (0+255),f,b
  3672  006DB2                     l1874:
  3673                           
  3674                           ; BSR set to: 0
  3675  006DB2  0100               	movlb	0	; force () banked
  3676  006DB4  51BB               	movf	lcd_putMessage@j& (0+255),w,b
  3677  006DB6  0100               	movlb	0	; force () banked
  3678  006DB8  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3679  006DBA  6ED9               	movwf	fsr2l,c
  3680  006DBC  0100               	movlb	0	; force () banked
  3681  006DBE  0E00               	movlw	0
  3682  006DC0  0100               	movlb	0	; force () banked
  3683  006DC2  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3684  006DC4  6EDA               	movwf	fsr2h,c
  3685  006DC6  50DF               	movf	indf2,w,c
  3686  006DC8  A4D8               	btfss	status,2,c
  3687  006DCA  EFE9  F036         	goto	u801
  3688  006DCE  EFEB  F036         	goto	u800
  3689  006DD2                     u801:
  3690  006DD2  EFCA  F036         	goto	l1870
  3691  006DD6                     u800:
  3692  006DD6                     
  3693                           ; BSR set to: 0
  3694  006DD6  0012               	return		;funcret
  3695  006DD8                     __end_of_lcd_putMessage:
  3696                           	opt callstack 0
  3697                           
  3698 ;; *************** function _lcd_ecritChar *****************
  3699 ;; Defined at:
  3700 ;;		line 359 in file "Lcd4Lignes.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  car             1    wreg     unsigned char 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  car             1    3[BANK0 ] unsigned char 
  3705 ;;  posRam          1    4[BANK0 ] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3715 ;;      Params:         0       0       0       0       0       0       0
  3716 ;;      Locals:         0       2       0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0
  3718 ;;      Totals:         0       2       0       0       0       0       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    3
  3722 ;; This function calls:
  3723 ;;		_lcd_wrCom
  3724 ;;		_lcd_wrData
  3725 ;; This function is called by:
  3726 ;;		_lcd_putMessage
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text23
  3731  006DD8                     __ptext23:
  3732                           	opt callstack 0
  3733  006DD8                     _lcd_ecritChar:
  3734                           	opt callstack 23
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;incstack = 0
  3738                           ;lcd_ecritChar@car stored from wreg
  3739  006DD8  0100               	movlb	0	; force () banked
  3740  006DDA  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  3741  006DDC                     
  3742                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  3743  006DDC  0100               	movlb	0	; force () banked
  3744  006DDE  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  3745  006DE0  EC50  F036         	call	_lcd_wrData
  3746  006DE4  0100               	movlb	0	; force () banked
  3747  006DE6  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  3748                           
  3749                           ;Lcd4Lignes.c: 364: switch(posRam)
  3750  006DE8  EF05  F037         	goto	l1852
  3751  006DEC                     l1844:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  3755  006DEC  0EC0               	movlw	192
  3756  006DEE  EC33  F038         	call	_lcd_wrCom
  3757                           
  3758                           ;Lcd4Lignes.c: 368: break;
  3759  006DF2  EF15  F037         	goto	l261
  3760  006DF6                     l1846:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  3764  006DF6  0E94               	movlw	148
  3765  006DF8  EC33  F038         	call	_lcd_wrCom
  3766                           
  3767                           ;Lcd4Lignes.c: 371: break;
  3768  006DFC  EF15  F037         	goto	l261
  3769  006E00                     l1848:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  3773  006E00  0ED4               	movlw	212
  3774  006E02  EC33  F038         	call	_lcd_wrCom
  3775                           
  3776                           ;Lcd4Lignes.c: 374: break;
  3777  006E06  EF15  F037         	goto	l261
  3778  006E0A                     l1852:
  3779                           
  3780                           ; BSR set to: 0
  3781  006E0A  0100               	movlb	0	; force () banked
  3782  006E0C  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3783                           
  3784                           ; Switch size 1, requested type "simple"
  3785                           ; Number of cases is 3, Range of values is 148 to 212
  3786                           ; switch strategies available:
  3787                           ; Name         Instructions Cycles
  3788                           ; simple_byte           10     6 (average)
  3789                           ;	Chosen strategy is simple_byte
  3790  006E0E  0A94               	xorlw	148	; case 148
  3791  006E10  B4D8               	btfsc	status,2,c
  3792  006E12  EFF6  F036         	goto	l1844
  3793  006E16  0A54               	xorlw	84	; case 192
  3794  006E18  B4D8               	btfsc	status,2,c
  3795  006E1A  EF00  F037         	goto	l1848
  3796  006E1E  0A14               	xorlw	20	; case 212
  3797  006E20  B4D8               	btfsc	status,2,c
  3798  006E22  EFFB  F036         	goto	l1846
  3799  006E26  EF15  F037         	goto	l261
  3800  006E2A                     l261:
  3801  006E2A  0012               	return		;funcret
  3802  006E2C                     __end_of_lcd_ecritChar:
  3803                           	opt callstack 0
  3804                           
  3805 ;; *************** function _lcd_wrData *****************
  3806 ;; Defined at:
  3807 ;;		line 188 in file "Lcd4Lignes.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  caractere       1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  caractere       1    2[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      unsigned char 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3821 ;;      Params:         0       0       0       0       0       0       0
  3822 ;;      Locals:         0       1       0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0
  3824 ;;      Totals:         0       1       0       0       0       0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    2
  3828 ;; This function calls:
  3829 ;;		_lcd_busy
  3830 ;;		_lcd_ecrireDonnees
  3831 ;;		_lcd_strobeEnableBit
  3832 ;; This function is called by:
  3833 ;;		_lcd_ecritChar
  3834 ;;		_lcd_initCGRam
  3835 ;;		_lcd_effaceChar
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text24
  3840  006CA0                     __ptext24:
  3841                           	opt callstack 0
  3842  006CA0                     _lcd_wrData:
  3843                           	opt callstack 26
  3844                           
  3845                           ;incstack = 0
  3846                           ;lcd_wrData@caractere stored from wreg
  3847  006CA0  0100               	movlb	0	; force () banked
  3848  006CA2  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  3849  006CA4                     
  3850                           ;Lcd4Lignes.c: 190: lcd_busy();
  3851  006CA4  ECA4  F036         	call	_lcd_busy	;wreg free
  3852  006CA8                     
  3853                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  3854  006CA8  0E00               	movlw	0
  3855  006CAA  6E95               	movwf	149,c	;volatile
  3856  006CAC                     
  3857                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  3858  006CAC  8080               	bsf	128,0,c	;volatile
  3859  006CAE                     
  3860                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  3861  006CAE  9280               	bcf	128,1,c	;volatile
  3862  006CB0                     
  3863                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  3864  006CB0  0100               	movlb	0	; force () banked
  3865  006CB2  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  3866  006CB4  0B0F               	andlw	15
  3867  006CB6  EC04  F036         	call	_lcd_ecrireDonnees
  3868  006CBA                     
  3869                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  3870  006CBA  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  3871  006CBE                     
  3872                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  3873  006CBE  0100               	movlb	0	; force () banked
  3874  006CC0  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  3875  006CC2  EC04  F036         	call	_lcd_ecrireDonnees
  3876  006CC6                     
  3877                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  3878  006CC6  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  3879  006CCA                     
  3880                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  3881  006CCA  0E0F               	movlw	15
  3882  006CCC  6E95               	movwf	149,c	;volatile
  3883  006CCE                     
  3884                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3885                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  3886  006CCE  ECA4  F036         	call	_lcd_busy	;wreg free
  3887  006CD2  0012               	return		;funcret
  3888  006CD4                     __end_of_lcd_wrData:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _lcd_gotoXY *****************
  3892 ;; Defined at:
  3893 ;;		line 314 in file "Lcd4Lignes.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  x               1    wreg     unsigned char 
  3896 ;;  y               1    3[BANK0 ] unsigned char 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  x               1    4[BANK0 ] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3908 ;;      Params:         0       1       0       0       0       0       0
  3909 ;;      Locals:         0       1       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0
  3911 ;;      Totals:         0       2       0       0       0       0       0
  3912 ;;Total ram usage:        2 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    3
  3915 ;; This function calls:
  3916 ;;		_lcd_wrCom
  3917 ;; This function is called by:
  3918 ;;		_deplace
  3919 ;;		_afficheTabVue
  3920 ;;		_afficheTabMines
  3921 ;;		_lcd_effaceLigne
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text25
  3926  00713E                     __ptext25:
  3927                           	opt callstack 0
  3928  00713E                     _lcd_gotoXY:
  3929                           	opt callstack 26
  3930                           
  3931                           ;incstack = 0
  3932                           ;lcd_gotoXY@x stored from wreg
  3933  00713E  0100               	movlb	0	; force () banked
  3934  007140  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  3935  007142                     
  3936                           ;Lcd4Lignes.c: 316: switch(y)
  3937  007142  EFC3  F038         	goto	l1866
  3938  007146                     l1856:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  3942  007146  0100               	movlb	0	; force () banked
  3943  007148  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3944  00714A  0F7F               	addlw	127
  3945  00714C  0980               	iorlw	128
  3946  00714E  EC33  F038         	call	_lcd_wrCom
  3947                           
  3948                           ;Lcd4Lignes.c: 320: break;
  3949  007152  EFD7  F038         	goto	l250
  3950  007156                     l1858:
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  3954  007156  0100               	movlb	0	; force () banked
  3955  007158  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3956  00715A  0FBF               	addlw	191
  3957  00715C  0980               	iorlw	128
  3958  00715E  EC33  F038         	call	_lcd_wrCom
  3959                           
  3960                           ;Lcd4Lignes.c: 323: break;
  3961  007162  EFD7  F038         	goto	l250
  3962  007166                     l1860:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  3966  007166  0100               	movlb	0	; force () banked
  3967  007168  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3968  00716A  0F93               	addlw	147
  3969  00716C  0980               	iorlw	128
  3970  00716E  EC33  F038         	call	_lcd_wrCom
  3971                           
  3972                           ;Lcd4Lignes.c: 326: break;
  3973  007172  EFD7  F038         	goto	l250
  3974  007176                     l1862:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  3978  007176  0100               	movlb	0	; force () banked
  3979  007178  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  3980  00717A  0FD3               	addlw	211
  3981  00717C  0980               	iorlw	128
  3982  00717E  EC33  F038         	call	_lcd_wrCom
  3983                           
  3984                           ;Lcd4Lignes.c: 329: break;
  3985  007182  EFD7  F038         	goto	l250
  3986  007186                     l1866:
  3987  007186  0100               	movlb	0	; force () banked
  3988  007188  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  3989                           
  3990                           ; Switch size 1, requested type "simple"
  3991                           ; Number of cases is 4, Range of values is 1 to 4
  3992                           ; switch strategies available:
  3993                           ; Name         Instructions Cycles
  3994                           ; simple_byte           13     7 (average)
  3995                           ;	Chosen strategy is simple_byte
  3996  00718A  0A01               	xorlw	1	; case 1
  3997  00718C  B4D8               	btfsc	status,2,c
  3998  00718E  EFA3  F038         	goto	l1856
  3999  007192  0A03               	xorlw	3	; case 2
  4000  007194  B4D8               	btfsc	status,2,c
  4001  007196  EFAB  F038         	goto	l1858
  4002  00719A  0A01               	xorlw	1	; case 3
  4003  00719C  B4D8               	btfsc	status,2,c
  4004  00719E  EFB3  F038         	goto	l1860
  4005  0071A2  0A07               	xorlw	7	; case 4
  4006  0071A4  B4D8               	btfsc	status,2,c
  4007  0071A6  EFBB  F038         	goto	l1862
  4008  0071AA  EFD7  F038         	goto	l250
  4009  0071AE                     l250:
  4010  0071AE  0012               	return		;funcret
  4011  0071B0                     __end_of_lcd_gotoXY:
  4012                           	opt callstack 0
  4013                           
  4014 ;; *************** function _lcd_wrCom *****************
  4015 ;; Defined at:
  4016 ;;		line 156 in file "Lcd4Lignes.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  commande        1    wreg     unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  commande        1    2[BANK0 ] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      unsigned char 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4030 ;;      Params:         0       0       0       0       0       0       0
  4031 ;;      Locals:         0       1       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0
  4033 ;;      Totals:         0       1       0       0       0       0       0
  4034 ;;Total ram usage:        1 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    2
  4037 ;; This function calls:
  4038 ;;		_lcd_busy
  4039 ;;		_lcd_ecrireDonnees
  4040 ;;		_lcd_strobeEnableBit
  4041 ;; This function is called by:
  4042 ;;		_lcd_init
  4043 ;;		_lcd_curseurHome
  4044 ;;		_lcd_gotoXY
  4045 ;;		_lcd_ecritChar
  4046 ;;		_lcd_initCGRam
  4047 ;;		_lcd_effaceAffichage
  4048 ;;		_lcd_cacheCurseur
  4049 ;;		_lcd_montreCurseur
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text26
  4054  007066                     __ptext26:
  4055                           	opt callstack 0
  4056  007066                     _lcd_wrCom:
  4057                           	opt callstack 27
  4058                           
  4059                           ;incstack = 0
  4060                           ;lcd_wrCom@commande stored from wreg
  4061  007066  0100               	movlb	0	; force () banked
  4062  007068  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  4063  00706A                     
  4064                           ;Lcd4Lignes.c: 158: lcd_busy();
  4065  00706A  ECA4  F036         	call	_lcd_busy	;wreg free
  4066  00706E                     
  4067                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4068  00706E  0E00               	movlw	0
  4069  007070  6E95               	movwf	149,c	;volatile
  4070  007072                     
  4071                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4072  007072  9080               	bcf	128,0,c	;volatile
  4073  007074                     
  4074                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4075  007074  9280               	bcf	128,1,c	;volatile
  4076  007076                     
  4077                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4078  007076  0100               	movlb	0	; force () banked
  4079  007078  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  4080  00707A  0B0F               	andlw	15
  4081  00707C  EC04  F036         	call	_lcd_ecrireDonnees
  4082  007080                     
  4083                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4084  007080  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  4085  007084                     
  4086                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4087  007084  0100               	movlb	0	; force () banked
  4088  007086  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  4089  007088  EC04  F036         	call	_lcd_ecrireDonnees
  4090  00708C                     
  4091                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4092  00708C  ECF4  F035         	call	_lcd_strobeEnableBit	;wreg free
  4093  007090                     
  4094                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4095  007090  0E03               	movlw	3
  4096  007092                     u1537:
  4097  007092  2EE8               	decfsz	wreg,f,c
  4098  007094  D7FE               	bra	u1537
  4099  007096  F000               	nop	
  4100  007098                     
  4101                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4102  007098  0100               	movlb	0	; force () banked
  4103  00709A  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  4104  00709C  B4D8               	btfsc	status,2,c
  4105  00709E  EF53  F038         	goto	u781
  4106  0070A2  EF55  F038         	goto	u780
  4107  0070A6                     u781:
  4108  0070A6  EF5F  F038         	goto	l1804
  4109  0070AA                     u780:
  4110  0070AA                     
  4111                           ; BSR set to: 0
  4112  0070AA  0E02               	movlw	2
  4113  0070AC  0100               	movlb	0	; force () banked
  4114  0070AE  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4115  0070B0  A4D8               	btfss	status,2,c
  4116  0070B2  EF5D  F038         	goto	u791
  4117  0070B6  EF5F  F038         	goto	u790
  4118  0070BA                     u791:
  4119  0070BA  EF64  F038         	goto	l1806
  4120  0070BE                     u790:
  4121  0070BE                     l1804:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4125  0070BE  0EA6               	movlw	166
  4126  0070C0                     u1547:
  4127  0070C0  2EE8               	decfsz	wreg,f,c
  4128  0070C2  D7FE               	bra	u1547
  4129  0070C4  F000 F000          	nop2	
  4130  0070C8                     l1806:
  4131                           
  4132                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4133  0070C8  0E0F               	movlw	15
  4134  0070CA  6E95               	movwf	149,c	;volatile
  4135  0070CC                     
  4136                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  4137  0070CC  ECA4  F036         	call	_lcd_busy	;wreg free
  4138  0070D0  0012               	return		;funcret
  4139  0070D2                     __end_of_lcd_wrCom:
  4140                           	opt callstack 0
  4141                           
  4142 ;; *************** function _lcd_strobeEnableBit *****************
  4143 ;; Defined at:
  4144 ;;		line 431 in file "Lcd4Lignes.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		None
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4158 ;;      Params:         0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_lcd_wrCom
  4168 ;;		_lcd_wrData
  4169 ;;		_lcd_resetSequence
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text27
  4174  006BE8                     __ptext27:
  4175                           	opt callstack 0
  4176  006BE8                     _lcd_strobeEnableBit:
  4177                           	opt callstack 28
  4178  006BE8                     
  4179                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4180  006BE8  8480               	bsf	128,2,c	;volatile
  4181                           
  4182                           ;Lcd4Lignes.c: 434: __nop();
  4183  006BEA  F000               	nop	
  4184                           
  4185                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4186  006BEC  9480               	bcf	128,2,c	;volatile
  4187  006BEE  0012               	return		;funcret
  4188  006BF0                     __end_of_lcd_strobeEnableBit:
  4189                           	opt callstack 0
  4190                           
  4191 ;; *************** function _lcd_ecrireDonnees *****************
  4192 ;; Defined at:
  4193 ;;		line 107 in file "Lcd4Lignes.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  donnee          1    wreg     unsigned char 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  donnee          1    1[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         0       0       0       0       0       0       0
  4208 ;;      Locals:         0       1       0       0       0       0       0
  4209 ;;      Temps:          0       1       0       0       0       0       0
  4210 ;;      Totals:         0       2       0       0       0       0       0
  4211 ;;Total ram usage:        2 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_lcd_wrCom
  4217 ;;		_lcd_wrData
  4218 ;;		_lcd_resetSequence
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text28
  4223  006C08                     __ptext28:
  4224                           	opt callstack 0
  4225  006C08                     _lcd_ecrireDonnees:
  4226                           	opt callstack 28
  4227                           
  4228                           ;incstack = 0
  4229                           ;lcd_ecrireDonnees@donnee stored from wreg
  4230  006C08  0100               	movlb	0	; force () banked
  4231  006C0A  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4232  006C0C                     
  4233                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4234  006C0C  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4235  006C10  0EF0               	movlw	240
  4236  006C12  0100               	movlb	0	; force () banked
  4237  006C14  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4238  006C16  0100               	movlb	0	; force () banked
  4239  006C18  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4240  006C1A  0B0F               	andlw	15
  4241  006C1C  0100               	movlb	0	; force () banked
  4242  006C1E  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4243  006C20  6E83               	movwf	131,c	;volatile
  4244  006C22                     
  4245                           ; BSR set to: 0
  4246  006C22  0012               	return		;funcret
  4247  006C24                     __end_of_lcd_ecrireDonnees:
  4248                           	opt callstack 0
  4249                           
  4250 ;; *************** function _lcd_busy *****************
  4251 ;; Defined at:
  4252 ;;		line 124 in file "Lcd4Lignes.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  adresse         1    1[BANK0 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      unsigned char 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4266 ;;      Params:         0       0       0       0       0       0       0
  4267 ;;      Locals:         0       1       0       0       0       0       0
  4268 ;;      Temps:          0       1       0       0       0       0       0
  4269 ;;      Totals:         0       2       0       0       0       0       0
  4270 ;;Total ram usage:        2 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    1
  4273 ;; This function calls:
  4274 ;;		_lcd_lireDonnees
  4275 ;; This function is called by:
  4276 ;;		_lcd_wrCom
  4277 ;;		_lcd_wrData
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text29
  4282  006D48                     __ptext29:
  4283                           	opt callstack 0
  4284  006D48                     _lcd_busy:
  4285                           	opt callstack 27
  4286  006D48                     
  4287                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4288  006D48  9080               	bcf	128,0,c	;volatile
  4289                           
  4290                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4291  006D4A  8280               	bsf	128,1,c	;volatile
  4292  006D4C                     l212:
  4293                           
  4294                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4295  006D4C  8480               	bsf	128,2,c	;volatile
  4296                           
  4297                           ;Lcd4Lignes.c: 134: __nop();
  4298  006D4E  F000               	nop	
  4299  006D50                     
  4300                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4301  006D50  ECF1  F035         	call	_lcd_lireDonnees	;wreg free
  4302  006D54  0100               	movlb	0	; force () banked
  4303  006D56  6FB4               	movwf	??_lcd_busy& (0+255),b
  4304  006D58  39B4               	swapf	??_lcd_busy& (0+255),w,b
  4305  006D5A  0BF0               	andlw	240
  4306  006D5C  0100               	movlb	0	; force () banked
  4307  006D5E  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  4308  006D60                     
  4309                           ; BSR set to: 0
  4310                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4311  006D60  9480               	bcf	128,2,c	;volatile
  4312  006D62                     
  4313                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4314  006D62  8480               	bsf	128,2,c	;volatile
  4315  006D64                     
  4316                           ;Lcd4Lignes.c: 139: __nop();
  4317  006D64  F000               	nop	
  4318                           
  4319                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4320  006D66  ECF1  F035         	call	_lcd_lireDonnees	;wreg free
  4321  006D6A  0100               	movlb	0	; force () banked
  4322  006D6C  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  4323  006D6E                     
  4324                           ; BSR set to: 0
  4325                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4326  006D6E  9480               	bcf	128,2,c	;volatile
  4327  006D70                     
  4328                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4329  006D70  0100               	movlb	0	; force () banked
  4330  006D72  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  4331  006D74  EFBE  F036         	goto	u771
  4332  006D78  EFC0  F036         	goto	u770
  4333  006D7C                     u771:
  4334  006D7C  EFA6  F036         	goto	l212
  4335  006D80                     u770:
  4336  006D80                     
  4337                           ; BSR set to: 0
  4338                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4339  006D80  9280               	bcf	128,1,c	;volatile
  4340  006D82                     
  4341                           ; BSR set to: 0
  4342                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4343  006D82  0100               	movlb	0	; force () banked
  4344  006D84  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  4345  006D86  0B7F               	andlw	127
  4346  006D88                     
  4347                           ; BSR set to: 0
  4348  006D88  0012               	return		;funcret
  4349  006D8A                     __end_of_lcd_busy:
  4350                           	opt callstack 0
  4351                           
  4352 ;; *************** function _lcd_lireDonnees *****************
  4353 ;; Defined at:
  4354 ;;		line 93 in file "Lcd4Lignes.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;		None
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      unsigned char 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4368 ;;      Params:         0       0       0       0       0       0       0
  4369 ;;      Locals:         0       0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0
  4371 ;;      Totals:         0       0       0       0       0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_lcd_busy
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text30
  4382  006BE2                     __ptext30:
  4383                           	opt callstack 0
  4384  006BE2                     _lcd_lireDonnees:
  4385                           	opt callstack 27
  4386  006BE2                     
  4387                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4388  006BE2  5083               	movf	131,w,c	;volatile
  4389  006BE4  0B0F               	andlw	15
  4390  006BE6  0012               	return		;funcret
  4391  006BE8                     __end_of_lcd_lireDonnees:
  4392                           	opt callstack 0
  4393  0000                     
  4394                           	psect	param0
  4395  0000                     tosu	equ	0xFFF
  4396                           tosh	equ	0xFFE
  4397                           tosl	equ	0xFFD
  4398                           stkptr	equ	0xFFC
  4399                           pclatu	equ	0xFFB
  4400                           pclath	equ	0xFFA
  4401                           pcl	equ	0xFF9
  4402                           tblptru	equ	0xFF8
  4403                           tblptrh	equ	0xFF7
  4404                           tblptrl	equ	0xFF6
  4405                           tablat	equ	0xFF5
  4406                           prodh	equ	0xFF4
  4407                           prodl	equ	0xFF3
  4408                           indf0	equ	0xFEF
  4409                           postinc0	equ	0xFEE
  4410                           postdec0	equ	0xFED
  4411                           preinc0	equ	0xFEC
  4412                           plusw0	equ	0xFEB
  4413                           fsr0h	equ	0xFEA
  4414                           fsr0l	equ	0xFE9
  4415                           wreg	equ	0xFE8
  4416                           indf1	equ	0xFE7
  4417                           postinc1	equ	0xFE6
  4418                           postdec1	equ	0xFE5
  4419                           preinc1	equ	0xFE4
  4420                           plusw1	equ	0xFE3
  4421                           fsr1h	equ	0xFE2
  4422                           fsr1l	equ	0xFE1
  4423                           bsr	equ	0xFE0
  4424                           indf2	equ	0xFDF
  4425                           postinc2	equ	0xFDE
  4426                           postdec2	equ	0xFDD
  4427                           preinc2	equ	0xFDC
  4428                           plusw2	equ	0xFDB
  4429                           fsr2h	equ	0xFDA
  4430                           fsr2l	equ	0xFD9
  4431                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     36     124
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMine(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    main@nbMine	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posY	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    main@posX	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->_afficheTabVue
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   10965
                                             29 BANK0      7     7      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1219
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1649
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4    1337
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _gagne                                                9     7      2     280
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              7     3      4    1299
                                              5 BANK0      7     3      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               7     6      1    2756
                                             19 BANK0      7     6      1
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  10     9      1    2592
                                              9 BANK0     10     9      1
                             ___wmul
                      _afficheTabVue
 ---------------------------------------------------------------------------------
 (3) _afficheTabVue                                        1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     867
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      1     1      0    1291
                                              8 BANK0      1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (4) _lcd_putMessage                                       3     1      2     555
                                              5 BANK0      3     1      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (5) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _afficheTabVue
         _lcd_gotoXY
           _lcd_wrCom
             _lcd_busy
               _lcd_lireDonnees
             _lcd_ecrireDonnees
             _lcd_strobeEnableBit
         _lcd_putMessage
           _lcd_ecritChar
             _lcd_wrCom
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
             _lcd_wrData
               _lcd_busy
                 _lcd_lireDonnees
               _lcd_ecrireDonnees
               _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
   _initTabVue
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     24      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      14        0.0%
DATA                 0      0     110      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 30 20:59:52 2019

 __end_of_calculToucheCombien 7B54                            l91 72FC                            l84 6D06  
                          l76 7452          ??_enleveTuilesAutour 00BE           ___wmul@multiplicand 00B6  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l102 76D8  
                         l111 7836                           l120 7A92                           l212 6D4C  
                         l220 70D0                           l140 79B0                           l213 6D80  
                         l206 6BE6                           l214 6D88                           l223 6CD2  
                         l127 7B52                           l144 6FFA                           l209 6C22  
                         l161 7D3E                           l250 71AE                           l170 757C  
                         l226 7064                           l235 6BF6                           l261 6E2A  
                         l333 6C4A                           l229 6C72                           l182 6F34  
                         l174 6C8E                           l168 7510                           l280 7250  
                         l344 712C                           l177 6C9E                           l345 713C  
                         l283 6BEE                           l267 6DD6                           l187 6EDA  
                         l577 73AE                           l997 6C06                  __CFG_CPB$OFF 000000  
                         u160 6C9C                           u161 6C98                  __CFG_CPD$OFF 000000  
                         u800 6DD6                           u801 6DD2                           u810 6EF4  
                         u811 6EF0                           u820 6F34                           u900 7B30  
                         u821 6F30                           u901 7B2C                           u910 7B4E  
                         u830 70F2                           u911 7B4A                           u831 70EE  
                         u920 7B88                           u840 712C                           u921 7B84  
                         u841 7128                           u770 6D80                           u930 7BA2  
                         u850 79F0                           u771 6D7C                           u931 7B9E  
                         u851 79EC                           u780 70AA                           u940 7C06  
                         u860 7A0A                           u781 70A6                           u941 7C02  
                         u861 7A06                           u790 70BE                           u950 7CC8  
                         u870 7A8E                           u791 70BA                           u951 7CC4  
                         u871 7A8A                           u960 7CE6                           u880 7AD2  
                         u961 7CE2                           u881 7ACE                           u970 7D1C  
                         u890 7AF0                           u971 7D18                           u891 7AEC  
                         u980 7D3A                           u981 7D36                           u990 71CE  
                         u991 71CA                  __CFG_BORV$18 000000                  ___awmod@sign 00C7  
                         prod 000FF3                   lcd_gotoXY@x 00B8                           wreg 000FE8  
                 lcd_gotoXY@y 00B7                  __CFG_LVP$OFF 000000                          l1000 6E80  
                        l2000 7046                          l2010 71B0                          l2002 704E  
                        l2020 71D8                          l2012 71B6                          l2004 7054  
                        l2110 72BA                          l2102 726E                          l2030 7236  
                        l2014 71BC                          l2006 7058                          l2200 791C  
                        l2112 72BE                          l2104 7274                          l2032 723A  
                        l2024 71EE                          l2008 7060                          l2040 7312  
                        l2120 757E                          l1330 6C8C                          l2202 7934  
                        l2210 7994                          l2114 72D0                          l2026 7220  
                        l2034 724C                          l2018 71D2                          l2050 7346  
                        l2042 731A                          l2122 7584                          l2220 6FEC  
                        l2212 6F98                          l1332 6C8C                          l2204 7944  
                        l2116 72E6                          l2108 728A                          l2028 7224  
                        l2060 7382                          l2052 734E                          l2044 731E  
                        l2036 72FE                          l2140 7600                          l2132 75B6  
                        l2300 7406                          l2222 6FF8                          l2214 6FE6  
                        l1334 6C9C                          l2206 7956                          l2118 72EA  
                        l2062 7388                          l2054 7356                          l2046 732C  
                        l2038 7304                          l2142 7616                          l2134 75E6  
                        l2150 76BC                          l2126 759A                          l2302 7414  
                        l2310 7478                          l1328 6C78                          l2208 7988  
                        l2240 750C                          l2232 74B4                          l2080 6CF4  
                        l2072 6CD4                          l2160 76FC                          l2152 76DA  
                        l2056 7364                          l2064 738E                          l2048 7334  
                        l2144 7646                          l2136 75EA                          l2128 75A0  
                        l2304 7430                          l2250 7566                          l2242 7514  
                        l2234 74BA                          l2226 7492                          l2090 6D02  
                        l2082 6CF6                          l2074 6CDC                          l2170 77DA  
                        l2154 76E0                          l2066 739E                          l2058 737A  
                        l2146 7684                          l2138 75FC                          l2306 744E  
                        l2180 7838                          l2252 7574                          l2244 7526  
                        l2228 749E                          l2084 6CF8                          l2076 6CE6  
                        l2092 6C4C                          l2172 780A                          l2164 7712  
                        l2068 73A6                          l2148 76B4                          l2308 7460  
                        l2270 6EAC                          l2262 6E82                          l2190 78A0  
                        l2182 784C                          l2246 752A                          l2238 74D0  
                        l2086 6CFC                          l2078 6CE8                          l2094 6C6E  
                        l2174 780E                          l2166 7750                          l2158 76F6  
                        l1800 7098                          l2272 6EC4                          l2264 6E88  
                        l2192 78B2                          l2184 785E                          l2248 753C  
                        l2096 7252                          l2088 6CFE                          l2168 779C  
                        l2176 7820                          l1810 70CC                          l1802 70AA  
                        l2274 6EC8                          l2194 78E4                          l2186 7878  
                        l2258 757A                          l2098 7258                          l2178 7824  
                        l2290 73D6                          l1804 70BE                          l1820 6CAC  
                        l2268 6E9E                          l2188 7890                          l2196 78F0  
                        l1900 70E4                          l2292 73DA                          l2284 73B0  
                        l1806 70C8                          l1830 6CBE                          l1822 6CAE  
                        l1814 6CA4                          l2198 7902                          l1902 70F2  
                        l1910 6E2C                          l2294 73E6                          l2286 73CE  
                        l1760 6D62                          l1752 6C0C                          l1808 70CC  
                        l1832 6CC6                          l1824 6CB0                          l1816 6CA8  
                        l1920 79DA                          l1904 7102                          l1912 6E62  
                        l2296 73EA                          l2288 73D2                          l1770 6D70  
                        l1762 6D62                          l1754 6D48                          l1834 6CCA  
                        l1826 6CBA                          l1818 6CAC                          l1842 6DDC  
                        l1930 7A18                          l1922 79E0                          l1906 710C  
                        l1914 6E74                          l2298 73EE                          l1748 6BE2  
                        l1772 6D82                          l1764 6D64                          l1756 6D50  
                        l1780 706E                          l1860 7166                          l1836 6CCA  
                        l1828 6CBE                          l1844 6DEC                          l1852 6E0A  
                        l1908 6BF8                          l1940 7AF0                          l1932 7A38  
                        l1924 79F0                          l1766 6D6E                          l1758 6D60  
                        l1790 7080                          l1782 7072                          l1862 7176  
                        l1854 7142                          l1838 6CCE                          l1846 6DF6  
                        l1870 6D94                          l1950 7B58                          l1934 7A8E  
                        l1942 7AF6                          l1926 79FA                          l1918 79B2  
                        l1768 6D70                          l1776 6BE8                          l1792 7084  
                        l1784 7072                          l1856 7146                          l1848 6E00  
                        l1872 6DAE                          l1960 7C06                          l1952 7B88  
                        l1944 7B30                          l1936 7A98                          l1928 7A0A  
                        l1794 7084                          l1786 7074                          l1778 706A  
                        l1858 7156                          l1866 7186                          l1874 6DB2  
                        l1882 6EF8                          l1962 7C92                          l1970 7CEC  
                        l1954 7B92                          l1890 6BF0                          l1946 7B4E  
                        l1938 7AD2                          l1796 708C                          l1788 7076  
                        l1868 6D8A                          l1892 6C24                          l1884 6F06  
                        l1876 6EDC                          l1972 7D1C                          l1964 7C98  
                        l1956 7BA2                          l1980 7014                          l1798 7090  
                        l1894 6C42                          l1886 6F1E                          l1878 6EE2  
                        l1974 7D3A                          l1966 7CC8                          l1958 7BB0  
                        l1990 702A                          l1982 7016                          l1888 6F22  
                        l1968 7CE6                          l1992 7030                          l1984 7018  
                        l1976 6FFC                          l1994 7034                          l1986 701E  
                        l1978 7000                          l1898 70D2                          l1996 703C  
                        l1988 7022                          l1998 7042                          u1000 71EA  
                        u1001 71E6                          u1010 7236                          u1011 7232  
                        u1100 7286                          u1020 724C                          u1101 7282  
                        u1021 7248                          u1110 72D0                          u1030 7312  
                        u1111 72CC                          u1031 730E                          u1120 72FC  
                        u1200 770E                          u1040 732C                          u1121 72F8  
                        u1201 770A                          u1041 7328                          u1210 7750  
                        u1050 7346                          u1130 7596                          u1211 774C  
                        u1051 7342                          u1131 7592                          u1300 7934  
                        u1220 77DA                          u1060 7364                          u1140 75B2  
                        u1301 7930                          u1221 77D6                          u1061 7360  
                        u1141 75AE                          u1310 7956                          u1230 7820  
                        u1070 737A                          u1150 75FC                          u1311 7952  
                        u1231 781C                          u1071 7376                          u1151 75F8  
                        u1400 6E9A                          u1320 7988                          u1240 7836  
                        u1080 739E                          u1160 7612                          u1401 6E96  
                        u1321 7984                          u1241 7832                          u1081 739A  
                        u1161 760E                          u1410 6EDA                          u1330 6FE6  
                        u1250 785E                          u1090 726A                          u1170 7684  
                        u1411 6ED6                          u1331 6FE2                          u1251 785A  
                        u1091 7266                          u1171 7680                          u1260 7890  
                        u1340 74B0                          u1180 76D8                          u1261 788C  
                        u1341 74AC                          u1181 76D4                          u1270 78B2  
                        u1350 74CC                          u1190 76F2                          u1430 7414  
                        u1271 78AE                          u1351 74C8                          u1191 76EE  
                        u1431 7410                          u1280 78E4                          u1360 750C  
                        u1440 7430                          u1281 78E0                          u1361 7508  
                        u1441 742C                          u1290 7902                          u1370 7526  
                        u1450 744E                          u1291 78FE                          u1371 7522  
                        u1507 7036                          u1451 744A                          u1380 753C  
                        u1460 7460                          u1381 7538                          u1517 7048  
                        u1461 745C                          u1390 7566                          u1391 7562  
                        u1527 705A                          u1537 7092                          u1547 70C0  
                        u1477 7480                          u1487 7008                          u1497 7024  
                        _RCIF 007CF5                          _TMR1 000FCE              ??_initialisation 00B6  
                        _main 73B0                          _rand 6E2C                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00B9                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 00B7  
                       ?_main 00B4                         ?_rand 00C0               __end_of___awmod 73B0  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 79B2           ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00B7                         _gagne 7492                         _randx 00D8  
                       _srand 6BF8                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000             ??_afficheTabMines 00BC                __CFG_PBADEN$ON 000000  
            _metToucheCombien 76DA               __initialization 6F36                  __end_of_main 7492  
                __end_of_rand 6E82           enleveTuilesAutour@i 00C3           enleveTuilesAutour@j 00C5  
         enleveTuilesAutour@x 00C2           enleveTuilesAutour@y 00BD    calculToucheCombien@nbMines 00C1  
        lcd_putMessage@chaine 00B9    calculToucheCombien@colonne 00BC                        ??_main 00D1  
                      ??_rand 00C2                 __activetblptr 000003                        ?_gagne 00B4  
                      _ADCON1 000FC1                        _ADRESH 000FC4                        ?_srand 00B4  
                      _ANSELH 000F7F                   initTabVue@i 00B7                   initTabVue@j 00B6  
              __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA  
              getAnalog@canal 00B5              __end_of_lcd_busy 6D8A              __end_of_lcd_init 6C74  
                      ___lmul 70D2                        ___wmul 6C24                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        _demine 6F94                        gagne@i 00BB  
                      gagne@j 00BC                        clear_0 6F7C                        clear_1 6F88  
             ___awmod@divisor 00C4                     ??_deplace 00BD               ___awmod@counter 00C6  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00B4        __size_of_afficheTabVue 005A             _lcd_resetSequence 6FFC  
                  __accesstop 0060       __end_of__initialization 6F8E           _lcd_strobeEnableBit 6BE8  
          ?_lcd_resetSequence 00B4                 ___rparam_used 000000                deplace@analogX 00BE  
              deplace@analogY 00BF                  __pidataBANK0 6BDE                  __pidataBANK1 6D08  
         ??_lcd_resetSequence 00B6                 __end_of_gagne 757E                 __end_of_srand 6C08  
        ?_lcd_strobeEnableBit 00B4            __size_of_getAnalog 002C            __size_of_lcd_wrCom 006C  
                     ??_gagne 00B6     __end_of_lcd_resetSequence 7066                       ??_srand 00B6  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 6C08                    __pbssBANK0 0060  
                  __pbssBANK1 0100              ??_lcd_putMessage 00BB            ?_lcd_ecrireDonnees 00B4  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4  
                     ?___wmul 00B4                       ?_demine 00C7                 _afficheTabVue 6EDC  
              ___lmul@product 00BC   __size_of_enleveTuilesAutour 01EC         ??_lcd_strobeEnableBit 00B4  
__size_of_calculToucheCombien 01A2      __end_of_metToucheCombien 7838                    _lcd_gotoXY 713E  
                  _lcd_wrData 6CA0               _afficheTabMines 6E82     __end_of_lcd_ecrireDonnees 6C24  
                   ?_lcd_busy 00B4                     ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5  
                  _m_tabMines 0060             __end_of_getAnalog 6CA0          __size_of_rempliMines 015C  
                     __Hparam 0000                       __Lparam 0000                    _initTabVue 7252  
           __end_of_lcd_wrCom 70D2                ?_afficheTabVue 00B4               __size_of___lmul 006C  
                     ___awmod 72FE               __size_of___wmul 0028               __size_of_demine 0068  
                     __pcinit 6F36                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 7838                       __ptext0 73B0                       __ptext1 757E  
                     __ptext2 6E2C                       __ptext3 70D2                       __ptext4 72FE  
                     __ptext5 76DA                       __ptext6 79B2                       __ptext7 6C4C  
                     __ptext8 6FFC                       __ptext9 71B0         __end_of_lcd_ecritChar 6E2C  
             lcd_busy@adresse 00B5                     _T1CONbits 000FCD              ___awmod@dividend 00C2  
                     demine@x 00CD                       demine@y 00C7              lcd_ecritChar@car 00B7  
                  ??_lcd_busy 00B4                    ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A  
        end_of_initialization 6F8E         __end_of_lcd_initCGRam 7252             ??_lcd_lireDonnees 00B4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80  
                   _PORTBbits 000F81       __end_of_afficheTabMines 6EDC                   ?_lcd_gotoXY 00B7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                  main@nbMine 00D2                     _TXSTAbits 000FAC               ??_afficheTabVue 00BC  
                 ?_initTabVue 00B4                __end_of___lmul 713E                __end_of___wmul 6C4C  
                 _BAUDCONbits 000FB8                __end_of_demine 6FFC           start_initialization 6F36  
         _calculToucheCombien 79B2           __size_of_lcd_gotoXY 0072                      ??___lmul 00BC  
                    ??___wmul 00B8                 rempliMines@nb 00C8           __size_of_lcd_wrData 0034  
                    ??_demine 00C8                   __pdataBANK0 00D8                   __pdataBANK1 0154  
            __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA              ?_afficheTabMines 00B4  
               __pcstackBANK0 00B4             ?_metToucheCombien 00B4              afficheTabMines@i 00BC  
         __size_of_initTabVue 00AC            ??_metToucheCombien 00C6             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000                     _getAnalog 6C74  
 __end_of_lcd_strobeEnableBit 6BF0                _initialisation 6CD4    __end_of_enleveTuilesAutour 7D40  
                    ?___awmod 00C2                      ?_deplace 00B9                     _lcd_wrCom 7066  
       ??_calculToucheCombien 00BE                __size_of_gagne 00EC               _lcd_lireDonnees 6BE2  
         lcd_wrData@caractere 00B6                __size_of_srand 0010                 ??_rempliMines 00CA  
                gagne@nbTuile 00BA               _lcd_curseurHome 6BF0                ___wmul@product 00B8  
      __end_of_initialisation 6D08                    ?_getAnalog 00B4              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 004E                    ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8  
                ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4  
                   copy_data0 6F4A                     copy_data1 6F6A                      __Hparam0 0000  
      __size_of_lcd_ecritChar 0054                      __Lparam0 0000               ?_initialisation 00B4  
         __end_of_rempliMines 76DA                  ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000  
                rempliMines@i 00CF                  rempliMines@j 00D0                  rempliMines@x 00CD  
                rempliMines@y 00CE            __end_of_lcd_gotoXY 71B0            __end_of_lcd_wrData 6CD4  
            __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00BB  
            __size_of_deplace 017A       __end_of_lcd_lireDonnees 6BE8                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 6BF8                      __ptext10 6BF0                      __ptext11 6CD4  
                    __ptext20 6C24                      __ptext12 6BF8                      __ptext21 6E82  
                    __ptext13 7252                      __ptext30 6BE2                      __ptext22 6D8A  
                    __ptext14 7492                      __ptext23 6DD8                      __ptext15 7838  
                    __ptext24 6CA0                      __ptext16 6C74                      __ptext25 713E  
                    __ptext17 6F94                      __ptext26 7066                      __ptext18 7B54  
                    __ptext27 6BE8                      __ptext19 6EDC                      __ptext28 6C08  
                    __ptext29 6D48             metToucheCombien@i 00C9             metToucheCombien@j 00CA  
                    _lcd_busy 6D48                      _lcd_init 6C4C            __end_of_initTabVue 72FE  
    calculToucheCombien@ligne 00BA                      _m_tabVue 0100                 __size_of_main 00E2  
               __size_of_rand 0056                   gagne@pMines 00B4                      deplace@x 00B9  
                    deplace@y 00BB                   ??_getAnalog 00B4         __end_of_afficheTabVue 6F36  
                    main@posX 00D4                      main@posY 00D6                   ??_lcd_wrCom 00B6  
               _lcd_ecritChar 6DD8                afficheTabVue@i 00BC                 _lcd_initCGRam 71B0  
                 _rempliMines 757E          calculToucheCombien@i 00C2          calculToucheCombien@j 00C4  
   __size_of_metToucheCombien 015E                _lcd_putMessage 6D8A                ?_lcd_ecritChar 00B4  
            ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 7B54              ?_lcd_curseurHome 00B4  
    __size_of_afficheTabMines 005A                ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BD  
           __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 6DD8  
