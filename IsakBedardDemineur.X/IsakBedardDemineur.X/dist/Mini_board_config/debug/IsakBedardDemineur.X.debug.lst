

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 15:24:58 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 2.10
    42                           ; Generated 31/07/2019 GMT
    43                           ; 
    44                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataBANK0
    77  001218                     __pidataBANK0:
    78                           	opt callstack 0
    79                           
    80                           ;initializer for _randx
    81  001218  0001               	dw	1
    82  00121A  0000               	dw	0
    83                           
    84                           	psect	idataBANK1
    85  0010DE                     __pidataBANK1:
    86                           	opt callstack 0
    87                           
    88                           ;initializer for _matCGRAM
    89  0010DE  08                 	db	8
    90  0010DF  04                 	db	4
    91  0010E0  04                 	db	4
    92  0010E1  0A                 	db	10
    93  0010E2  11                 	db	17
    94  0010E3  1F                 	db	31
    95  0010E4  11                 	db	17
    96  0010E5  00                 	db	0
    97  0010E6  1F                 	db	31
    98  0010E7  1B                 	db	27
    99  0010E8  11                 	db	17
   100  0010E9  11                 	db	17
   101  0010EA  11                 	db	17
   102  0010EB  11                 	db	17
   103  0010EC  1B                 	db	27
   104  0010ED  1F                 	db	31
   105  0010EE  00                 	db	0
   106  0010EF  15                 	db	21
   107  0010F0  0E                 	db	14
   108  0010F1  1F                 	db	31
   109  0010F2  1F                 	db	31
   110  0010F3  0E                 	db	14
   111  0010F4  15                 	db	21
   112  0010F5  00                 	db	0
   113  0010F6  0E                 	db	14
   114  0010F7  11                 	db	17
   115  0010F8  15                 	db	21
   116  0010F9  15                 	db	21
   117  0010FA  15                 	db	21
   118  0010FB  0E                 	db	14
   119  0010FC  15                 	db	21
   120  0010FD  04                 	db	4
   121  0010FE  04                 	db	4
   122  0010FF  04                 	db	4
   123  001100  04                 	db	4
   124  001101  04                 	db	4
   125  001102  0E                 	db	14
   126  001103  0E                 	db	14
   127  001104  1B                 	db	27
   128  001105  11                 	db	17
   129  001106  04                 	db	4
   130  001107  0A                 	db	10
   131  001108  0E                 	db	14
   132  001109  11                 	db	17
   133  00110A  1F                 	db	31
   134  00110B  10                 	db	16
   135  00110C  0E                 	db	14
   136  00110D  00                 	db	0
   137  00110E  08                 	db	8
   138  00110F  04                 	db	4
   139  001110  0E                 	db	14
   140  001111  01                 	db	1
   141  001112  0F                 	db	15
   142  001113  11                 	db	17
   143  001114  0F                 	db	15
   144  001115  00                 	db	0
   145  001116  04                 	db	4
   146  001117  0A                 	db	10
   147  001118  0E                 	db	14
   148  001119  01                 	db	1
   149  00111A  0F                 	db	15
   150  00111B  11                 	db	17
   151  00111C  0F                 	db	15
   152  00111D  00                 	db	0
   153  0000                     _TRISCbits	set	3988
   154  0000                     _PORTAbits	set	3968
   155  0000                     _PORTD	set	3971
   156  0000                     _ANSELbits	set	3966
   157  0000                     _TRISA	set	3986
   158  0000                     _ANSEL	set	3966
   159  0000                     _TRISB	set	3987
   160  0000                     _ANSELH	set	3967
   161  0000                     _TRISD	set	3989
   162  0000                     _TMR1	set	4046
   163  0000                     _RCREG	set	4014
   164  0000                     _TXREG	set	4013
   165  0000                     _RCSTAbits	set	4011
   166  0000                     _TXSTAbits	set	4012
   167  0000                     _BAUDCONbits	set	4024
   168  0000                     _SPBRG	set	4015
   169  0000                     _SPBRGH	set	4016
   170  0000                     _ADCON2bits	set	4032
   171  0000                     _ADCON1	set	4033
   172  0000                     _ADCON0bits	set	4034
   173  0000                     _T1CONbits	set	4045
   174  0000                     _RCIF	set	31989
   175                           
   176                           	psect	smallconst
   177  000600                     __psmallconst:
   178                           	opt callstack 0
   179  000600  00                 	db	0
   180  000601                     STR_1:
   181                           
   182                           ; BSR set to: 0
   183  000601  4C                 	db	76	;'L'
   184  000602  41                 	db	65	;'A'
   185  000603  42                 	db	66	;'B'
   186  000604  36                 	db	54	;'6'
   187  000605  20                 	db	32
   188  000606  49                 	db	73	;'I'
   189  000607  73                 	db	115	;'s'
   190  000608  61                 	db	97	;'a'
   191  000609  6B                 	db	107	;'k'
   192  00060A  20                 	db	32
   193  00060B  42                 	db	66	;'B'
   194  00060C  65                 	db	101	;'e'
   195  00060D  64                 	db	100	;'d'
   196  00060E  61                 	db	97	;'a'
   197  00060F  72                 	db	114	;'r'
   198  000610  64                 	db	100	;'d'
   199  000611  00                 	db	0
   200                           
   201                           ; #config settings
   202  000612  00                 	db	0	; dummy byte at the end
   203  0000                     
   204                           	psect	cinit
   205  000F94                     __pcinit:
   206                           	opt callstack 0
   207  000F94                     start_initialization:
   208                           	opt callstack 0
   209  000F94                     __initialization:
   210                           	opt callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK1 (64 bytes)
   213                           ; load TBLPTR registers with __pidataBANK1
   214  000F94  0EDE               	movlw	low __pidataBANK1
   215  000F96  6EF6               	movwf	tblptrl,c
   216  000F98  0E10               	movlw	high __pidataBANK1
   217  000F9A  6EF7               	movwf	tblptrh,c
   218  000F9C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   219  000F9E  6EF8               	movwf	tblptru,c
   220  000FA0  EE01  F054         	lfsr	0,__pdataBANK1
   221  000FA4  EE10 F040          	lfsr	1,64
   222  000FA8                     copy_data0:
   223  000FA8  0009               	tblrd		*+
   224  000FAA  CFF5 FFEE          	movff	tablat,postinc0
   225  000FAE  50E5               	movf	postdec1,w,c
   226  000FB0  50E1               	movf	fsr1l,w,c
   227  000FB2  E1FA               	bnz	copy_data0
   228                           
   229                           ; Initialize objects allocated to BANK0 (4 bytes)
   230                           ; load TBLPTR registers with __pidataBANK0
   231  000FB4  0E18               	movlw	low __pidataBANK0
   232  000FB6  6EF6               	movwf	tblptrl,c
   233  000FB8  0E12               	movlw	high __pidataBANK0
   234  000FBA  6EF7               	movwf	tblptrh,c
   235  000FBC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   236  000FBE  6EF8               	movwf	tblptru,c
   237  000FC0  EE00  F0D4         	lfsr	0,__pdataBANK0
   238  000FC4  EE10 F004          	lfsr	1,4
   239  000FC8                     copy_data1:
   240  000FC8  0009               	tblrd		*+
   241  000FCA  CFF5 FFEE          	movff	tablat,postinc0
   242  000FCE  50E5               	movf	postdec1,w,c
   243  000FD0  50E1               	movf	fsr1l,w,c
   244  000FD2  E1FA               	bnz	copy_data1
   245                           
   246                           ; Clear objects allocated to BANK1 (84 bytes)
   247  000FD4  EE01  F000         	lfsr	0,__pbssBANK1
   248  000FD8  0E54               	movlw	84
   249  000FDA                     clear_0:
   250  000FDA  6AEE               	clrf	postinc0,c
   251  000FDC  06E8               	decf	wreg,f,c
   252  000FDE  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (84 bytes)
   255  000FE0  EE00  F060         	lfsr	0,__pbssBANK0
   256  000FE4  0E54               	movlw	84
   257  000FE6                     clear_1:
   258  000FE6  6AEE               	clrf	postinc0,c
   259  000FE8  06E8               	decf	wreg,f,c
   260  000FEA  E1FD               	bnz	clear_1
   261  000FEC                     end_of_initialization:
   262                           	opt callstack 0
   263  000FEC                     __end_of__initialization:
   264                           	opt callstack 0
   265  000FEC  0100               	movlb	0
   266  000FEE  EF38  F005         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269  000060                     __pbssBANK0:
   270                           	opt callstack 0
   271  000060                     _m_tabMines:
   272                           	opt callstack 0
   273  000060                     	ds	84
   274                           
   275                           	psect	dataBANK0
   276  0000D4                     __pdataBANK0:
   277                           	opt callstack 0
   278  0000D4                     _randx:
   279                           	opt callstack 0
   280  0000D4                     	ds	4
   281                           
   282                           	psect	bssBANK1
   283  000100                     __pbssBANK1:
   284                           	opt callstack 0
   285  000100                     _m_tabVue:
   286                           	opt callstack 0
   287  000100                     	ds	84
   288                           
   289                           	psect	dataBANK1
   290  000154                     __pdataBANK1:
   291                           	opt callstack 0
   292  000154                     _matCGRAM:
   293                           	opt callstack 0
   294  000154                     	ds	64
   295                           
   296                           	psect	cstackBANK0
   297  0000B4                     __pcstackBANK0:
   298                           	opt callstack 0
   299  0000B4                     ??_initTabVue:
   300  0000B4                     ??_lcd_ecrireDonnees:
   301  0000B4                     ??_lcd_busy:
   302  0000B4                     ?___wmul:
   303                           	opt callstack 0
   304  0000B4                     ?___lmul:
   305                           	opt callstack 0
   306  0000B4                     ___wmul@multiplier:
   307                           	opt callstack 0
   308  0000B4                     srand@x:
   309                           	opt callstack 0
   310  0000B4                     ___lmul@multiplier:
   311                           	opt callstack 0
   312                           
   313                           ; 4 bytes @ 0x0
   314  0000B4                     	ds	1
   315  0000B5                     lcd_ecrireDonnees@donnee:
   316                           	opt callstack 0
   317  0000B5                     lcd_busy@adresse:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  0000B5                     	ds	1
   322  0000B6                     ??_lcd_resetSequence:
   323  0000B6                     initTabVue@j:
   324                           	opt callstack 0
   325  0000B6                     lcd_wrCom@commande:
   326                           	opt callstack 0
   327  0000B6                     lcd_wrData@caractere:
   328                           	opt callstack 0
   329  0000B6                     ___wmul@multiplicand:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333  0000B6                     	ds	1
   334  0000B7                     ??_lcd_initCGRam:
   335  0000B7                     initTabVue@i:
   336                           	opt callstack 0
   337  0000B7                     lcd_gotoXY@y:
   338                           	opt callstack 0
   339  0000B7                     lcd_ecritChar@car:
   340                           	opt callstack 0
   341                           
   342                           ; 1 bytes @ 0x3
   343  0000B7                     	ds	1
   344  0000B8                     lcd_gotoXY@x:
   345                           	opt callstack 0
   346  0000B8                     lcd_ecritChar@posRam:
   347                           	opt callstack 0
   348  0000B8                     ___wmul@product:
   349                           	opt callstack 0
   350  0000B8                     ___lmul@multiplicand:
   351                           	opt callstack 0
   352                           
   353                           ; 4 bytes @ 0x4
   354  0000B8                     	ds	1
   355  0000B9                     lcd_initCGRam@i:
   356                           	opt callstack 0
   357  0000B9                     lcd_putMessage@chaine:
   358                           	opt callstack 0
   359                           
   360                           ; 3 bytes @ 0x5
   361  0000B9                     	ds	1
   362  0000BA                     lcd_initCGRam@j:
   363                           	opt callstack 0
   364  0000BA                     calculToucheCombien@ligne:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x6
   368  0000BA                     	ds	1
   369  0000BB                     
   370                           ; 1 bytes @ 0x7
   371  0000BB                     	ds	1
   372  0000BC                     ??_lcd_putMessage:
   373  0000BC                     calculToucheCombien@colonne:
   374                           	opt callstack 0
   375  0000BC                     ___lmul@product:
   376                           	opt callstack 0
   377                           
   378                           ; 4 bytes @ 0x8
   379  0000BC                     	ds	2
   380  0000BE                     ??_calculToucheCombien:
   381                           
   382                           ; 1 bytes @ 0xA
   383  0000BE                     	ds	2
   384  0000C0                     ?_rand:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0xC
   388  0000C0                     	ds	1
   389  0000C1                     calculToucheCombien@nbMines:
   390                           	opt callstack 0
   391  0000C1                     lcd_putMessage@j:
   392                           	opt callstack 0
   393                           
   394                           ; 1 bytes @ 0xD
   395  0000C1                     	ds	1
   396  0000C2                     ?___awmod:
   397                           	opt callstack 0
   398  0000C2                     calculToucheCombien@i:
   399                           	opt callstack 0
   400  0000C2                     ___awmod@dividend:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0xE
   404  0000C2                     	ds	2
   405  0000C4                     calculToucheCombien@j:
   406                           	opt callstack 0
   407  0000C4                     ___awmod@divisor:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x10
   411  0000C4                     	ds	2
   412  0000C6                     ??_metToucheCombien:
   413  0000C6                     ___awmod@counter:
   414                           	opt callstack 0
   415                           
   416                           ; 1 bytes @ 0x12
   417  0000C6                     	ds	1
   418  0000C7                     ___awmod@sign:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x13
   422  0000C7                     	ds	1
   423  0000C8                     rempliMines@nb:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x14
   427  0000C8                     	ds	1
   428  0000C9                     metToucheCombien@i:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x15
   432  0000C9                     	ds	1
   433  0000CA                     ??_rempliMines:
   434  0000CA                     metToucheCombien@j:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x16
   438  0000CA                     	ds	3
   439  0000CD                     rempliMines@x:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x19
   443  0000CD                     	ds	1
   444  0000CE                     rempliMines@y:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x1A
   448  0000CE                     	ds	1
   449  0000CF                     rempliMines@i:
   450                           	opt callstack 0
   451                           
   452                           ; 1 bytes @ 0x1B
   453  0000CF                     	ds	1
   454  0000D0                     rempliMines@j:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0x1C
   458  0000D0                     	ds	1
   459  0000D1                     ??_main:
   460                           
   461                           ; 1 bytes @ 0x1D
   462  0000D1                     	ds	2
   463  0000D3                     main@i:
   464                           	opt callstack 0
   465                           
   466                           ; 1 bytes @ 0x1F
   467  0000D3                     	ds	1
   468                           
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 47 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  i               1   31[BANK0 ] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   488 ;;      Params:         0       0       0       0       0       0       0
   489 ;;      Locals:         0       1       0       0       0       0       0
   490 ;;      Temps:          0       2       0       0       0       0       0
   491 ;;      Totals:         0       3       0       0       0       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels required when called:    6
   494 ;; This function calls:
   495 ;;		_initTabVue
   496 ;;		_initialisation
   497 ;;		_lcd_gotoXY
   498 ;;		_lcd_init
   499 ;;		_lcd_putMessage
   500 ;;		_metToucheCombien
   501 ;;		_rempliMines
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text0
   508  000A70                     __ptext0:
   509                           	opt callstack 0
   510  000A70                     _main:
   511                           	opt callstack 25
   512  000A70                     
   513                           ;main.c: 49: initialisation();
   514  000A70  ECA9  F008         	call	_initialisation	;wreg free
   515  000A74                     
   516                           ;main.c: 50: lcd_init();
   517  000A74  ECD7  F008         	call	_lcd_init	;wreg free
   518  000A78                     
   519                           ;main.c: 51: lcd_putMessage("LAB6 Isak Bedard");
   520  000A78  0E01               	movlw	low STR_1
   521  000A7A  0100               	movlb	0	; force () banked
   522  000A7C  6FB9               	movwf	lcd_putMessage@chaine& (0+255),b
   523  000A7E  0E06               	movlw	high STR_1
   524  000A80  6FBA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   525  000A82  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   526  000A84  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   527  000A86  A4D8               	btfss	status,2,c
   528  000A88  0E00               	movlw	low (__mediumconst shr (0+16))
   529  000A8A  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   530  000A8C  EC96  F005         	call	_lcd_putMessage	;wreg free
   531  000A90                     
   532                           ;main.c: 52: initTabVue();
   533  000A90  EC49  F006         	call	_initTabVue	;wreg free
   534  000A94                     
   535                           ;main.c: 53: rempliMines(5);
   536  000A94  0E00               	movlw	0
   537  000A96  0100               	movlb	0	; force () banked
   538  000A98  6FC9               	movwf	(rempliMines@nb+1)& (0+255),b
   539  000A9A  0E05               	movlw	5
   540  000A9C  6FC8               	movwf	rempliMines@nb& (0+255),b
   541  000A9E  EC8A  F004         	call	_rempliMines	;wreg free
   542  000AA2                     
   543                           ;main.c: 54: metToucheCombien();
   544  000AA2  ECDB  F003         	call	_metToucheCombien	;wreg free
   545  000AA6                     
   546                           ;main.c: 55: for (char i = 0; i < 4; i++)
   547  000AA6  0E00               	movlw	0
   548  000AA8  0100               	movlb	0	; force () banked
   549  000AAA  6FD3               	movwf	main@i& (0+255),b
   550  000AAC                     
   551                           ; BSR set to: 0
   552  000AAC  0E03               	movlw	3
   553  000AAE  0100               	movlb	0	; force () banked
   554  000AB0  65D3               	cpfsgt	main@i& (0+255),b
   555  000AB2  EF5D  F005         	goto	u921
   556  000AB6  EF5F  F005         	goto	u920
   557  000ABA                     u921:
   558  000ABA  EF61  F005         	goto	l1949
   559  000ABE                     u920:
   560  000ABE  EF89  F005         	goto	l1957
   561  000AC2                     l1949:
   562                           
   563                           ; BSR set to: 0
   564                           ;main.c: 56: {;main.c: 57: lcd_gotoXY(1,i+1);
   565  000AC2  0100               	movlb	0	; force () banked
   566  000AC4  29D3               	incf	main@i& (0+255),w,b
   567  000AC6  0100               	movlb	0	; force () banked
   568  000AC8  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
   569  000ACA  0E01               	movlw	1
   570  000ACC  ECF0  F006         	call	_lcd_gotoXY
   571  000AD0                     
   572                           ;main.c: 58: lcd_putMessage(m_tabMines[i]);
   573  000AD0  0100               	movlb	0	; force () banked
   574  000AD2  51D3               	movf	main@i& (0+255),w,b
   575  000AD4  0D15               	mullw	21
   576  000AD6  0E60               	movlw	low _m_tabMines
   577  000AD8  24F3               	addwf	243,w,c
   578  000ADA  0100               	movlb	0	; force () banked
   579  000ADC  6FD1               	movwf	??_main& (0+255),b
   580  000ADE  0E00               	movlw	high _m_tabMines
   581  000AE0  20F4               	addwfc	prodh,w,c
   582  000AE2  6FD2               	movwf	(??_main+1)& (0+255),b
   583  000AE4  C0D1  F0B9         	movff	??_main,lcd_putMessage@chaine
   584  000AE8  C0D2  F0BA         	movff	??_main+1,lcd_putMessage@chaine+1
   585  000AEC  0100               	movlb	0	; force () banked
   586  000AEE  51B9               	movf	lcd_putMessage@chaine& (0+255),w,b
   587  000AF0  11BA               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   588  000AF2  A4D8               	btfss	status,2,c
   589  000AF4  0E20               	movlw	32
   590  000AF6  6FBB               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   591  000AF8  EC96  F005         	call	_lcd_putMessage	;wreg free
   592  000AFC  0100               	movlb	0	; force () banked
   593  000AFE  2BD3               	incf	main@i& (0+255),f,b
   594  000B00                     
   595                           ; BSR set to: 0
   596  000B00  0E03               	movlw	3
   597  000B02  0100               	movlb	0	; force () banked
   598  000B04  65D3               	cpfsgt	main@i& (0+255),b
   599  000B06  EF87  F005         	goto	u931
   600  000B0A  EF89  F005         	goto	u930
   601  000B0E                     u931:
   602  000B0E  EF61  F005         	goto	l1949
   603  000B12                     u930:
   604  000B12                     l1957:
   605                           
   606                           ;main.c: 61: {;main.c: 62: _delay((unsigned long)((100)*(1000000/4000.0)));
   607  000B12  0E21               	movlw	33
   608  000B14  0100               	movlb	0	; force () banked
   609  000B16  6FD1               	movwf	??_main& (0+255),b
   610  000B18  0E76               	movlw	118
   611  000B1A                     u947:
   612  000B1A  2EE8               	decfsz	wreg,f,c
   613  000B1C  D7FE               	bra	u947
   614  000B1E  2FD1               	decfsz	??_main& (0+255),f,b
   615  000B20  D7FC               	bra	u947
   616  000B22  F000               	nop	
   617  000B24  EF89  F005         	goto	l1957
   618  000B28  EF00  F000         	goto	start
   619  000B2C                     __end_of_main:
   620                           	opt callstack 0
   621                           
   622 ;; *************** function _rempliMines *****************
   623 ;; Defined at:
   624 ;;		line 118 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  nb              2   20[BANK0 ] int 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  j               1   28[BANK0 ] unsigned char 
   629 ;;  i               1   27[BANK0 ] unsigned char 
   630 ;;  y               1   26[BANK0 ] unsigned char 
   631 ;;  x               1   25[BANK0 ] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       2       0       0       0       0       0
   642 ;;      Locals:         0       4       0       0       0       0       0
   643 ;;      Temps:          0       3       0       0       0       0       0
   644 ;;      Totals:         0       9       0       0       0       0       0
   645 ;;Total ram usage:        9 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		___awmod
   650 ;;		_rand
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text1
   657  000914                     __ptext1:
   658                           	opt callstack 0
   659  000914                     _rempliMines:
   660                           	opt callstack 28
   661  000914                     
   662                           ;main.c: 120: char x,y;;main.c: 122: for (char i = 0; i < 4; i++)
   663  000914  0E00               	movlw	0
   664  000916  0100               	movlb	0	; force () banked
   665  000918  6FCF               	movwf	rempliMines@i& (0+255),b
   666  00091A                     
   667                           ; BSR set to: 0
   668  00091A  0E03               	movlw	3
   669  00091C  0100               	movlb	0	; force () banked
   670  00091E  65CF               	cpfsgt	rempliMines@i& (0+255),b
   671  000920  EF94  F004         	goto	u791
   672  000924  EF96  F004         	goto	u790
   673  000928                     u791:
   674  000928  EF98  F004         	goto	l1855
   675  00092C                     u790:
   676  00092C  EF29  F005         	goto	l1879
   677  000930                     l1855:
   678                           
   679                           ; BSR set to: 0
   680                           ;main.c: 123: {;main.c: 124: for(char j=0;j<20;j++)
   681  000930  0E00               	movlw	0
   682  000932  0100               	movlb	0	; force () banked
   683  000934  6FD0               	movwf	rempliMines@j& (0+255),b
   684  000936                     
   685                           ; BSR set to: 0
   686  000936  0E13               	movlw	19
   687  000938  0100               	movlb	0	; force () banked
   688  00093A  65D0               	cpfsgt	rempliMines@j& (0+255),b
   689  00093C  EFA2  F004         	goto	u801
   690  000940  EFA4  F004         	goto	u800
   691  000944                     u801:
   692  000944  EFA6  F004         	goto	l1861
   693  000948                     u800:
   694  000948  EFC9  F004         	goto	l1867
   695  00094C                     l1861:
   696                           
   697                           ; BSR set to: 0
   698                           ;main.c: 125: {;main.c: 126: m_tabMines[i][j]=' ';
   699  00094C  0100               	movlb	0	; force () banked
   700  00094E  51CF               	movf	rempliMines@i& (0+255),w,b
   701  000950  0D15               	mullw	21
   702  000952  0E60               	movlw	low _m_tabMines
   703  000954  0100               	movlb	0	; force () banked
   704  000956  6FCA               	movwf	??_rempliMines& (0+255),b
   705  000958  0E00               	movlw	high _m_tabMines
   706  00095A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   707  00095C  50F3               	movf	243,w,c
   708  00095E  27CA               	addwf	??_rempliMines& (0+255),f,b
   709  000960  50F4               	movf	244,w,c
   710  000962  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   711  000964  0100               	movlb	0	; force () banked
   712  000966  51D0               	movf	rempliMines@j& (0+255),w,b
   713  000968  0100               	movlb	0	; force () banked
   714  00096A  25CA               	addwf	??_rempliMines& (0+255),w,b
   715  00096C  6ED9               	movwf	fsr2l,c
   716  00096E  0100               	movlb	0	; force () banked
   717  000970  0E00               	movlw	0
   718  000972  0100               	movlb	0	; force () banked
   719  000974  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   720  000976  6EDA               	movwf	fsr2h,c
   721  000978  0E20               	movlw	32
   722  00097A  6EDF               	movwf	indf2,c
   723  00097C                     
   724                           ; BSR set to: 0
   725  00097C  0100               	movlb	0	; force () banked
   726  00097E  2BD0               	incf	rempliMines@j& (0+255),f,b
   727  000980                     
   728                           ; BSR set to: 0
   729  000980  0E13               	movlw	19
   730  000982  0100               	movlb	0	; force () banked
   731  000984  65D0               	cpfsgt	rempliMines@j& (0+255),b
   732  000986  EFC7  F004         	goto	u811
   733  00098A  EFC9  F004         	goto	u810
   734  00098E                     u811:
   735  00098E  EFA6  F004         	goto	l1861
   736  000992                     u810:
   737  000992                     l1867:
   738                           
   739                           ; BSR set to: 0
   740  000992  0100               	movlb	0	; force () banked
   741  000994  2BCF               	incf	rempliMines@i& (0+255),f,b
   742  000996                     
   743                           ; BSR set to: 0
   744  000996  0E03               	movlw	3
   745  000998  0100               	movlb	0	; force () banked
   746  00099A  65CF               	cpfsgt	rempliMines@i& (0+255),b
   747  00099C  EFD2  F004         	goto	u821
   748  0009A0  EFD4  F004         	goto	u820
   749  0009A4                     u821:
   750  0009A4  EF98  F004         	goto	l1855
   751  0009A8                     u820:
   752  0009A8  EF29  F005         	goto	l1879
   753  0009AC                     l1871:
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 130: {;main.c: 131: x=rand()%20;
   757  0009AC  ECF9  F007         	call	_rand	;wreg free
   758  0009B0  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   759  0009B4  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   760  0009B8  0E00               	movlw	0
   761  0009BA  0100               	movlb	0	; force () banked
   762  0009BC  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   763  0009BE  0E14               	movlw	20
   764  0009C0  6FC4               	movwf	___awmod@divisor& (0+255),b
   765  0009C2  ECF0  F005         	call	___awmod	;wreg free
   766  0009C6  0100               	movlb	0	; force () banked
   767  0009C8  51C2               	movf	?___awmod& (0+255),w,b
   768  0009CA  0100               	movlb	0	; force () banked
   769  0009CC  6FCD               	movwf	rempliMines@x& (0+255),b
   770                           
   771                           ;main.c: 132: y=rand()%4;
   772  0009CE  ECF9  F007         	call	_rand	;wreg free
   773  0009D2  0100               	movlb	0	; force () banked
   774  0009D4  51C0               	movf	?_rand& (0+255),w,b
   775  0009D6  0B03               	andlw	3
   776  0009D8  0100               	movlb	0	; force () banked
   777  0009DA  6FCE               	movwf	rempliMines@y& (0+255),b
   778  0009DC                     
   779                           ; BSR set to: 0
   780                           ;main.c: 133: if (m_tabMines[y][x]!=2)
   781  0009DC  0100               	movlb	0	; force () banked
   782  0009DE  51CE               	movf	rempliMines@y& (0+255),w,b
   783  0009E0  0D15               	mullw	21
   784  0009E2  0E60               	movlw	low _m_tabMines
   785  0009E4  0100               	movlb	0	; force () banked
   786  0009E6  6FCA               	movwf	??_rempliMines& (0+255),b
   787  0009E8  0E00               	movlw	high _m_tabMines
   788  0009EA  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   789  0009EC  50F3               	movf	243,w,c
   790  0009EE  27CA               	addwf	??_rempliMines& (0+255),f,b
   791  0009F0  50F4               	movf	244,w,c
   792  0009F2  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   793  0009F4  0100               	movlb	0	; force () banked
   794  0009F6  51CD               	movf	rempliMines@x& (0+255),w,b
   795  0009F8  0100               	movlb	0	; force () banked
   796  0009FA  25CA               	addwf	??_rempliMines& (0+255),w,b
   797  0009FC  6ED9               	movwf	fsr2l,c
   798  0009FE  0100               	movlb	0	; force () banked
   799  000A00  0E00               	movlw	0
   800  000A02  0100               	movlb	0	; force () banked
   801  000A04  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   802  000A06  6EDA               	movwf	fsr2h,c
   803  000A08  0E02               	movlw	2
   804  000A0A  18DE               	xorwf	postinc2,w,c
   805  000A0C  B4D8               	btfsc	status,2,c
   806  000A0E  EF0B  F005         	goto	u831
   807  000A12  EF0D  F005         	goto	u830
   808  000A16                     u831:
   809  000A16  EF29  F005         	goto	l1879
   810  000A1A                     u830:
   811  000A1A                     
   812                           ; BSR set to: 0
   813                           ;main.c: 134: {;main.c: 135: m_tabMines[y][x]=2;
   814  000A1A  0100               	movlb	0	; force () banked
   815  000A1C  51CE               	movf	rempliMines@y& (0+255),w,b
   816  000A1E  0D15               	mullw	21
   817  000A20  0E60               	movlw	low _m_tabMines
   818  000A22  0100               	movlb	0	; force () banked
   819  000A24  6FCA               	movwf	??_rempliMines& (0+255),b
   820  000A26  0E00               	movlw	high _m_tabMines
   821  000A28  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   822  000A2A  50F3               	movf	243,w,c
   823  000A2C  27CA               	addwf	??_rempliMines& (0+255),f,b
   824  000A2E  50F4               	movf	244,w,c
   825  000A30  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   826  000A32  0100               	movlb	0	; force () banked
   827  000A34  51CD               	movf	rempliMines@x& (0+255),w,b
   828  000A36  0100               	movlb	0	; force () banked
   829  000A38  25CA               	addwf	??_rempliMines& (0+255),w,b
   830  000A3A  6ED9               	movwf	fsr2l,c
   831  000A3C  0100               	movlb	0	; force () banked
   832  000A3E  0E00               	movlw	0
   833  000A40  0100               	movlb	0	; force () banked
   834  000A42  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   835  000A44  6EDA               	movwf	fsr2h,c
   836  000A46  0E02               	movlw	2
   837  000A48  6EDF               	movwf	indf2,c
   838  000A4A                     
   839                           ; BSR set to: 0
   840                           ;main.c: 136: nb--;
   841  000A4A  0100               	movlb	0	; force () banked
   842  000A4C  07C8               	decf	rempliMines@nb& (0+255),f,b
   843  000A4E  A0D8               	btfss	status,0,c
   844  000A50  07C9               	decf	(rempliMines@nb+1)& (0+255),f,b
   845  000A52                     l1879:
   846                           
   847                           ; BSR set to: 0
   848  000A52  0100               	movlb	0	; force () banked
   849  000A54  BFC9               	btfsc	(rempliMines@nb+1)& (0+255),7,b
   850  000A56  EF37  F005         	goto	u840
   851  000A5A  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
   852  000A5C  E106               	bnz	u841
   853  000A5E  05C8               	decf	rempliMines@nb& (0+255),w,b
   854  000A60  B0D8               	btfsc	status,0,c
   855  000A62  EF35  F005         	goto	u841
   856  000A66  EF37  F005         	goto	u840
   857  000A6A                     u841:
   858  000A6A  EFD6  F004         	goto	l1871
   859  000A6E                     u840:
   860  000A6E                     
   861                           ; BSR set to: 0
   862  000A6E  0012               	return		;funcret
   863  000A70                     __end_of_rempliMines:
   864                           	opt callstack 0
   865                           
   866 ;; *************** function _rand *****************
   867 ;; Defined at:
   868 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  2   12[BANK0 ] int 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         0       2       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0
   885 ;;      Totals:         0       2       0       0       0       0       0
   886 ;;Total ram usage:        2 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    1
   889 ;; This function calls:
   890 ;;		___lmul
   891 ;; This function is called by:
   892 ;;		_rempliMines
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text2
   897  000FF2                     __ptext2:
   898                           	opt callstack 0
   899  000FF2                     _rand:
   900                           	opt callstack 28
   901  000FF2  C0D4  F0B4         	movff	_randx,___lmul@multiplier
   902  000FF6  C0D5  F0B5         	movff	_randx+1,___lmul@multiplier+1
   903  000FFA  C0D6  F0B6         	movff	_randx+2,___lmul@multiplier+2
   904  000FFE  C0D7  F0B7         	movff	_randx+3,___lmul@multiplier+3
   905  001002  0E6D               	movlw	109
   906  001004  0100               	movlb	0	; () banked
   907  001006  6FB8               	movwf	___lmul@multiplicand& (0+255),b
   908  001008  0E4E               	movlw	78
   909  00100A  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   910  00100C  0EC6               	movlw	198
   911  00100E  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   912  001010  0E41               	movlw	65
   913  001012  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   914  001014  EC29  F007         	call	___lmul	;wreg free
   915  001018  C0B4  F0D4         	movff	?___lmul,_randx
   916  00101C  C0B5  F0D5         	movff	?___lmul+1,_randx+1
   917  001020  C0B6  F0D6         	movff	?___lmul+2,_randx+2
   918  001024  C0B7  F0D7         	movff	?___lmul+3,_randx+3
   919  001028  0E39               	movlw	57
   920  00102A  0100               	movlb	0	; () banked
   921  00102C  27D4               	addwf	_randx& (0+255),f,b
   922  00102E  0E30               	movlw	48
   923  001030  23D5               	addwfc	(_randx+1)& (0+255),f,b
   924  001032  0E00               	movlw	0
   925  001034  23D6               	addwfc	(_randx+2)& (0+255),f,b
   926  001036  0E00               	movlw	0
   927  001038  23D7               	addwfc	(_randx+3)& (0+255),f,b
   928  00103A                     
   929                           ; BSR set to: 0
   930  00103A  0EFF               	movlw	255
   931  00103C  15D6               	andwf	(_randx+2)& (0+255),w,b
   932  00103E  6FC0               	movwf	?_rand& (0+255),b
   933  001040  0E7F               	movlw	127
   934  001042  15D7               	andwf	(_randx+3)& (0+255),w,b
   935  001044  6FC1               	movwf	(?_rand+1)& (0+255),b
   936  001046                     
   937                           ; BSR set to: 0
   938  001046  0012               	return		;funcret
   939  001048                     __end_of_rand:
   940                           	opt callstack 0
   941                           
   942 ;; *************** function ___lmul *****************
   943 ;; Defined at:
   944 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  multiplier      4    0[BANK0 ] unsigned long 
   947 ;;  multiplicand    4    4[BANK0 ] unsigned long 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  product         4    8[BANK0 ] unsigned long 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  4    0[BANK0 ] unsigned long 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   959 ;;      Params:         0       8       0       0       0       0       0
   960 ;;      Locals:         0       4       0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0
   962 ;;      Totals:         0      12       0       0       0       0       0
   963 ;;Total ram usage:       12 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_rand
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text3
   973  000E52                     __ptext3:
   974                           	opt callstack 0
   975  000E52                     ___lmul:
   976                           	opt callstack 28
   977  000E52  0E00               	movlw	0
   978  000E54  0100               	movlb	0	; () banked
   979  000E56  6FBC               	movwf	___lmul@product& (0+255),b
   980  000E58  0E00               	movlw	0
   981  000E5A  6FBD               	movwf	(___lmul@product+1)& (0+255),b
   982  000E5C  0E00               	movlw	0
   983  000E5E  6FBE               	movwf	(___lmul@product+2)& (0+255),b
   984  000E60  0E00               	movlw	0
   985  000E62  6FBF               	movwf	(___lmul@product+3)& (0+255),b
   986  000E64                     l1635:
   987                           
   988                           ; BSR set to: 0
   989  000E64  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
   990  000E66  EF37  F007         	goto	u531
   991  000E6A  EF39  F007         	goto	u530
   992  000E6E                     u531:
   993  000E6E  EF41  F007         	goto	l1639
   994  000E72                     u530:
   995  000E72                     
   996                           ; BSR set to: 0
   997  000E72  51B8               	movf	___lmul@multiplicand& (0+255),w,b
   998  000E74  27BC               	addwf	___lmul@product& (0+255),f,b
   999  000E76  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1000  000E78  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1001  000E7A  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1002  000E7C  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1003  000E7E  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1004  000E80  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1005  000E82                     l1639:
  1006                           
  1007                           ; BSR set to: 0
  1008  000E82  90D8               	bcf	status,0,c
  1009  000E84  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1010  000E86  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1011  000E88  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1012  000E8A  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1013  000E8C                     
  1014                           ; BSR set to: 0
  1015  000E8C  90D8               	bcf	status,0,c
  1016  000E8E  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1017  000E90  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1018  000E92  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1019  000E94  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1020  000E96  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1021  000E98  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1022  000E9A  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1023  000E9C  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1024  000E9E  A4D8               	btfss	status,2,c
  1025  000EA0  EF54  F007         	goto	u541
  1026  000EA4  EF56  F007         	goto	u540
  1027  000EA8                     u541:
  1028  000EA8  EF32  F007         	goto	l1635
  1029  000EAC                     u540:
  1030  000EAC                     
  1031                           ; BSR set to: 0
  1032  000EAC  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1033  000EB0  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1034  000EB4  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1035  000EB8  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1036  000EBC                     
  1037                           ; BSR set to: 0
  1038  000EBC  0012               	return		;funcret
  1039  000EBE                     __end_of___lmul:
  1040                           	opt callstack 0
  1041                           
  1042 ;; *************** function ___awmod *****************
  1043 ;; Defined at:
  1044 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  dividend        2   14[BANK0 ] int 
  1047 ;;  divisor         2   16[BANK0 ] int 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  sign            1   19[BANK0 ] unsigned char 
  1050 ;;  counter         1   18[BANK0 ] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2   14[BANK0 ] int 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1060 ;;      Params:         0       4       0       0       0       0       0
  1061 ;;      Locals:         0       2       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0
  1063 ;;      Totals:         0       6       0       0       0       0       0
  1064 ;;Total ram usage:        6 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_rempliMines
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text4
  1074  000BE0                     __ptext4:
  1075                           	opt callstack 0
  1076  000BE0                     ___awmod:
  1077                           	opt callstack 29
  1078  000BE0  0E00               	movlw	0
  1079  000BE2  0100               	movlb	0	; () banked
  1080  000BE4  6FC7               	movwf	___awmod@sign& (0+255),b
  1081  000BE6                     
  1082                           ; BSR set to: 0
  1083  000BE6  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1084  000BE8  EFFA  F005         	goto	u660
  1085  000BEC  EFF8  F005         	goto	u661
  1086  000BF0                     u661:
  1087  000BF0  EF00  F006         	goto	l1765
  1088  000BF4                     u660:
  1089  000BF4                     
  1090                           ; BSR set to: 0
  1091  000BF4  6DC2               	negf	___awmod@dividend& (0+255),b
  1092  000BF6  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1093  000BF8  B0D8               	btfsc	status,0,c
  1094  000BFA  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1095  000BFC                     
  1096                           ; BSR set to: 0
  1097  000BFC  0E01               	movlw	1
  1098  000BFE  6FC7               	movwf	___awmod@sign& (0+255),b
  1099  000C00                     l1765:
  1100                           
  1101                           ; BSR set to: 0
  1102  000C00  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1103  000C02  EF07  F006         	goto	u670
  1104  000C06  EF05  F006         	goto	u671
  1105  000C0A                     u671:
  1106  000C0A  EF0B  F006         	goto	l1769
  1107  000C0E                     u670:
  1108  000C0E                     
  1109                           ; BSR set to: 0
  1110  000C0E  6DC4               	negf	___awmod@divisor& (0+255),b
  1111  000C10  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1112  000C12  B0D8               	btfsc	status,0,c
  1113  000C14  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1114  000C16                     l1769:
  1115                           
  1116                           ; BSR set to: 0
  1117  000C16  51C4               	movf	___awmod@divisor& (0+255),w,b
  1118  000C18  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1119  000C1A  B4D8               	btfsc	status,2,c
  1120  000C1C  EF12  F006         	goto	u681
  1121  000C20  EF14  F006         	goto	u680
  1122  000C24                     u681:
  1123  000C24  EF38  F006         	goto	l1785
  1124  000C28                     u680:
  1125  000C28                     
  1126                           ; BSR set to: 0
  1127  000C28  0E01               	movlw	1
  1128  000C2A  6FC6               	movwf	___awmod@counter& (0+255),b
  1129  000C2C  EF1C  F006         	goto	l1775
  1130  000C30                     l1773:
  1131                           
  1132                           ; BSR set to: 0
  1133  000C30  90D8               	bcf	status,0,c
  1134  000C32  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1135  000C34  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1136  000C36  2BC6               	incf	___awmod@counter& (0+255),f,b
  1137  000C38                     l1775:
  1138                           
  1139                           ; BSR set to: 0
  1140  000C38  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1141  000C3A  EF21  F006         	goto	u691
  1142  000C3E  EF23  F006         	goto	u690
  1143  000C42                     u691:
  1144  000C42  EF18  F006         	goto	l1773
  1145  000C46                     u690:
  1146  000C46                     l1777:
  1147                           
  1148                           ; BSR set to: 0
  1149  000C46  51C4               	movf	___awmod@divisor& (0+255),w,b
  1150  000C48  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1151  000C4A  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1152  000C4C  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1153  000C4E  A0D8               	btfss	status,0,c
  1154  000C50  EF2C  F006         	goto	u701
  1155  000C54  EF2E  F006         	goto	u700
  1156  000C58                     u701:
  1157  000C58  EF32  F006         	goto	l1781
  1158  000C5C                     u700:
  1159  000C5C                     
  1160                           ; BSR set to: 0
  1161  000C5C  51C4               	movf	___awmod@divisor& (0+255),w,b
  1162  000C5E  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1163  000C60  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1164  000C62  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1165  000C64                     l1781:
  1166                           
  1167                           ; BSR set to: 0
  1168  000C64  90D8               	bcf	status,0,c
  1169  000C66  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1170  000C68  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1171  000C6A                     
  1172                           ; BSR set to: 0
  1173  000C6A  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1174  000C6C  EF23  F006         	goto	l1777
  1175  000C70                     l1785:
  1176                           
  1177                           ; BSR set to: 0
  1178  000C70  51C7               	movf	___awmod@sign& (0+255),w,b
  1179  000C72  B4D8               	btfsc	status,2,c
  1180  000C74  EF3E  F006         	goto	u711
  1181  000C78  EF40  F006         	goto	u710
  1182  000C7C                     u711:
  1183  000C7C  EF44  F006         	goto	l1789
  1184  000C80                     u710:
  1185  000C80                     
  1186                           ; BSR set to: 0
  1187  000C80  6DC2               	negf	___awmod@dividend& (0+255),b
  1188  000C82  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1189  000C84  B0D8               	btfsc	status,0,c
  1190  000C86  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1191  000C88                     l1789:
  1192                           
  1193                           ; BSR set to: 0
  1194  000C88  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1195  000C8C  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1196  000C90                     
  1197                           ; BSR set to: 0
  1198  000C90  0012               	return		;funcret
  1199  000C92                     __end_of___awmod:
  1200                           	opt callstack 0
  1201                           
  1202 ;; *************** function _metToucheCombien *****************
  1203 ;; Defined at:
  1204 ;;		line 150 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  j               1   22[BANK0 ] unsigned char 
  1209 ;;  i               1   21[BANK0 ] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1219 ;;      Params:         0       0       0       0       0       0       0
  1220 ;;      Locals:         0       2       0       0       0       0       0
  1221 ;;      Temps:          0       3       0       0       0       0       0
  1222 ;;      Totals:         0       5       0       0       0       0       0
  1223 ;;Total ram usage:        5 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    2
  1226 ;; This function calls:
  1227 ;;		_calculToucheCombien
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text5
  1234  0007B6                     __ptext5:
  1235                           	opt callstack 0
  1236  0007B6                     _metToucheCombien:
  1237                           	opt callstack 28
  1238  0007B6                     
  1239                           ;main.c: 152: for (char i = 0; i < 4; i++)
  1240  0007B6  0E00               	movlw	0
  1241  0007B8  0100               	movlb	0	; force () banked
  1242  0007BA  6FC9               	movwf	metToucheCombien@i& (0+255),b
  1243  0007BC                     
  1244                           ; BSR set to: 0
  1245  0007BC  0E03               	movlw	3
  1246  0007BE  0100               	movlb	0	; force () banked
  1247  0007C0  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1248  0007C2  EFE5  F003         	goto	u851
  1249  0007C6  EFE7  F003         	goto	u850
  1250  0007CA                     u851:
  1251  0007CA  EFE9  F003         	goto	l1887
  1252  0007CE                     u850:
  1253  0007CE  EF89  F004         	goto	l88
  1254  0007D2                     l1887:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;main.c: 153: {;main.c: 154: for(char j=0;j<20;j++)
  1258  0007D2  0E00               	movlw	0
  1259  0007D4  0100               	movlb	0	; force () banked
  1260  0007D6  6FCA               	movwf	metToucheCombien@j& (0+255),b
  1261  0007D8                     
  1262                           ; BSR set to: 0
  1263  0007D8  0E13               	movlw	19
  1264  0007DA  0100               	movlb	0	; force () banked
  1265  0007DC  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1266  0007DE  EFF3  F003         	goto	u861
  1267  0007E2  EFF5  F003         	goto	u860
  1268  0007E6                     u861:
  1269  0007E6  EFF7  F003         	goto	l1893
  1270  0007EA                     u860:
  1271  0007EA  EF7E  F004         	goto	l1905
  1272  0007EE                     l1893:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 155: {;main.c: 156: if(m_tabMines[i][j]!=2)
  1276  0007EE  0100               	movlb	0	; force () banked
  1277  0007F0  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1278  0007F2  0D15               	mullw	21
  1279  0007F4  0E60               	movlw	low _m_tabMines
  1280  0007F6  0100               	movlb	0	; force () banked
  1281  0007F8  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1282  0007FA  0E00               	movlw	high _m_tabMines
  1283  0007FC  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1284  0007FE  50F3               	movf	243,w,c
  1285  000800  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1286  000802  50F4               	movf	244,w,c
  1287  000804  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1288  000806  0100               	movlb	0	; force () banked
  1289  000808  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1290  00080A  0100               	movlb	0	; force () banked
  1291  00080C  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1292  00080E  6ED9               	movwf	fsr2l,c
  1293  000810  0100               	movlb	0	; force () banked
  1294  000812  0E00               	movlw	0
  1295  000814  0100               	movlb	0	; force () banked
  1296  000816  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1297  000818  6EDA               	movwf	fsr2h,c
  1298  00081A  0E02               	movlw	2
  1299  00081C  18DE               	xorwf	postinc2,w,c
  1300  00081E  B4D8               	btfsc	status,2,c
  1301  000820  EF14  F004         	goto	u871
  1302  000824  EF16  F004         	goto	u870
  1303  000828                     u871:
  1304  000828  EF3C  F004         	goto	l1897
  1305  00082C                     u870:
  1306  00082C                     
  1307                           ; BSR set to: 0
  1308                           ;main.c: 157: m_tabMines[i][j]=calculToucheCombien(i,j)+48;
  1309  00082C  C0C9  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1310  000830  0100               	movlb	0	; force () banked
  1311  000832  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1312  000834  C0CA  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1313  000838  0100               	movlb	0	; force () banked
  1314  00083A  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1315  00083C  EC0A  F003         	call	_calculToucheCombien	;wreg free
  1316  000840  0100               	movlb	0	; force () banked
  1317  000842  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1318  000844  0E30               	movlw	48
  1319  000846  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1320  000848  0100               	movlb	0	; force () banked
  1321  00084A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1322  00084C  0D15               	mullw	21
  1323  00084E  0E60               	movlw	low _m_tabMines
  1324  000850  0100               	movlb	0	; force () banked
  1325  000852  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1326  000854  0E00               	movlw	high _m_tabMines
  1327  000856  6FC8               	movwf	(??_metToucheCombien+2)& (0+255),b
  1328  000858  50F3               	movf	243,w,c
  1329  00085A  27C7               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1330  00085C  50F4               	movf	244,w,c
  1331  00085E  23C8               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1332  000860  0100               	movlb	0	; force () banked
  1333  000862  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1334  000864  0100               	movlb	0	; force () banked
  1335  000866  25C7               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1336  000868  6ED9               	movwf	fsr2l,c
  1337  00086A  0100               	movlb	0	; force () banked
  1338  00086C  0E00               	movlw	0
  1339  00086E  0100               	movlb	0	; force () banked
  1340  000870  21C8               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1341  000872  6EDA               	movwf	fsr2h,c
  1342  000874  C0C6  FFDF         	movff	??_metToucheCombien,indf2
  1343  000878                     l1897:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 158: if(m_tabMines[i][j]=='0')
  1347  000878  0100               	movlb	0	; force () banked
  1348  00087A  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1349  00087C  0D15               	mullw	21
  1350  00087E  0E60               	movlw	low _m_tabMines
  1351  000880  0100               	movlb	0	; force () banked
  1352  000882  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1353  000884  0E00               	movlw	high _m_tabMines
  1354  000886  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1355  000888  50F3               	movf	243,w,c
  1356  00088A  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1357  00088C  50F4               	movf	244,w,c
  1358  00088E  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1359  000890  0100               	movlb	0	; force () banked
  1360  000892  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1361  000894  0100               	movlb	0	; force () banked
  1362  000896  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1363  000898  6ED9               	movwf	fsr2l,c
  1364  00089A  0100               	movlb	0	; force () banked
  1365  00089C  0E00               	movlw	0
  1366  00089E  0100               	movlb	0	; force () banked
  1367  0008A0  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1368  0008A2  6EDA               	movwf	fsr2h,c
  1369  0008A4  0E30               	movlw	48
  1370  0008A6  18DE               	xorwf	postinc2,w,c
  1371  0008A8  A4D8               	btfss	status,2,c
  1372  0008AA  EF59  F004         	goto	u881
  1373  0008AE  EF5B  F004         	goto	u880
  1374  0008B2                     u881:
  1375  0008B2  EF73  F004         	goto	l1901
  1376  0008B6                     u880:
  1377  0008B6                     
  1378                           ; BSR set to: 0
  1379                           ;main.c: 159: m_tabMines[i][j]=' ';
  1380  0008B6  0100               	movlb	0	; force () banked
  1381  0008B8  51C9               	movf	metToucheCombien@i& (0+255),w,b
  1382  0008BA  0D15               	mullw	21
  1383  0008BC  0E60               	movlw	low _m_tabMines
  1384  0008BE  0100               	movlb	0	; force () banked
  1385  0008C0  6FC6               	movwf	??_metToucheCombien& (0+255),b
  1386  0008C2  0E00               	movlw	high _m_tabMines
  1387  0008C4  6FC7               	movwf	(??_metToucheCombien+1)& (0+255),b
  1388  0008C6  50F3               	movf	243,w,c
  1389  0008C8  27C6               	addwf	??_metToucheCombien& (0+255),f,b
  1390  0008CA  50F4               	movf	244,w,c
  1391  0008CC  23C7               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1392  0008CE  0100               	movlb	0	; force () banked
  1393  0008D0  51CA               	movf	metToucheCombien@j& (0+255),w,b
  1394  0008D2  0100               	movlb	0	; force () banked
  1395  0008D4  25C6               	addwf	??_metToucheCombien& (0+255),w,b
  1396  0008D6  6ED9               	movwf	fsr2l,c
  1397  0008D8  0100               	movlb	0	; force () banked
  1398  0008DA  0E00               	movlw	0
  1399  0008DC  0100               	movlb	0	; force () banked
  1400  0008DE  21C7               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1401  0008E0  6EDA               	movwf	fsr2h,c
  1402  0008E2  0E20               	movlw	32
  1403  0008E4  6EDF               	movwf	indf2,c
  1404  0008E6                     l1901:
  1405                           
  1406                           ; BSR set to: 0
  1407  0008E6  0100               	movlb	0	; force () banked
  1408  0008E8  2BCA               	incf	metToucheCombien@j& (0+255),f,b
  1409  0008EA                     
  1410                           ; BSR set to: 0
  1411  0008EA  0E13               	movlw	19
  1412  0008EC  0100               	movlb	0	; force () banked
  1413  0008EE  65CA               	cpfsgt	metToucheCombien@j& (0+255),b
  1414  0008F0  EF7C  F004         	goto	u891
  1415  0008F4  EF7E  F004         	goto	u890
  1416  0008F8                     u891:
  1417  0008F8  EFF7  F003         	goto	l1893
  1418  0008FC                     u890:
  1419  0008FC                     l1905:
  1420                           
  1421                           ; BSR set to: 0
  1422  0008FC  0100               	movlb	0	; force () banked
  1423  0008FE  2BC9               	incf	metToucheCombien@i& (0+255),f,b
  1424  000900                     
  1425                           ; BSR set to: 0
  1426  000900  0E03               	movlw	3
  1427  000902  0100               	movlb	0	; force () banked
  1428  000904  65C9               	cpfsgt	metToucheCombien@i& (0+255),b
  1429  000906  EF87  F004         	goto	u901
  1430  00090A  EF89  F004         	goto	u900
  1431  00090E                     u901:
  1432  00090E  EFE9  F003         	goto	l1887
  1433  000912                     u900:
  1434  000912                     l88:
  1435                           
  1436                           ; BSR set to: 0
  1437  000912  0012               	return		;funcret
  1438  000914                     __end_of_metToucheCombien:
  1439                           	opt callstack 0
  1440                           
  1441 ;; *************** function _calculToucheCombien *****************
  1442 ;; Defined at:
  1443 ;;		line 168 in file "main.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  ligne           2    6[BANK0 ] int 
  1446 ;;  colonne         2    8[BANK0 ] int 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  j               2   16[BANK0 ] int 
  1449 ;;  i               2   14[BANK0 ] int 
  1450 ;;  nbMines         1   13[BANK0 ] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      unsigned char 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1460 ;;      Params:         0       4       0       0       0       0       0
  1461 ;;      Locals:         0       5       0       0       0       0       0
  1462 ;;      Temps:          0       3       0       0       0       0       0
  1463 ;;      Totals:         0      12       0       0       0       0       0
  1464 ;;Total ram usage:       12 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    1
  1467 ;; This function calls:
  1468 ;;		___wmul
  1469 ;; This function is called by:
  1470 ;;		_metToucheCombien
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text6
  1475  000614                     __ptext6:
  1476                           	opt callstack 0
  1477  000614                     _calculToucheCombien:
  1478                           	opt callstack 28
  1479  000614                     
  1480                           ;main.c: 170: int i=ligne-1;
  1481  000614  0EFF               	movlw	255
  1482  000616  0100               	movlb	0	; force () banked
  1483  000618  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1484  00061A  0100               	movlb	0	; force () banked
  1485  00061C  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1486  00061E  0EFF               	movlw	255
  1487  000620  0100               	movlb	0	; force () banked
  1488  000622  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1489  000624  0100               	movlb	0	; force () banked
  1490  000626  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1491                           
  1492                           ;main.c: 171: int j=colonne-1;
  1493  000628  0EFF               	movlw	255
  1494  00062A  0100               	movlb	0	; force () banked
  1495  00062C  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1496  00062E  0100               	movlb	0	; force () banked
  1497  000630  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1498  000632  0EFF               	movlw	255
  1499  000634  0100               	movlb	0	; force () banked
  1500  000636  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1501  000638  0100               	movlb	0	; force () banked
  1502  00063A  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1503  00063C                     
  1504                           ; BSR set to: 0
  1505                           ;main.c: 172: char nbMines=0;
  1506  00063C  0E00               	movlw	0
  1507  00063E  0100               	movlb	0	; force () banked
  1508  000640  6FC1               	movwf	calculToucheCombien@nbMines& (0+255),b
  1509  000642                     
  1510                           ; BSR set to: 0
  1511                           ;main.c: 174: if(i<0)
  1512  000642  0100               	movlb	0	; force () banked
  1513  000644  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1514  000646  EF29  F003         	goto	u550
  1515  00064A  EF27  F003         	goto	u551
  1516  00064E                     u551:
  1517  00064E  EF2E  F003         	goto	l1661
  1518  000652                     u550:
  1519  000652                     
  1520                           ; BSR set to: 0
  1521                           ;main.c: 175: i=0;
  1522  000652  0E00               	movlw	0
  1523  000654  0100               	movlb	0	; force () banked
  1524  000656  6FC3               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1525  000658  0E00               	movlw	0
  1526  00065A  6FC2               	movwf	calculToucheCombien@i& (0+255),b
  1527  00065C                     l1661:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main.c: 176: if(j<0)
  1531  00065C  0100               	movlb	0	; force () banked
  1532  00065E  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1533  000660  EF36  F003         	goto	u560
  1534  000664  EF34  F003         	goto	u561
  1535  000668                     u561:
  1536  000668  EFAC  F003         	goto	l1677
  1537  00066C                     u560:
  1538  00066C                     
  1539                           ; BSR set to: 0
  1540                           ;main.c: 177: j=0;
  1541  00066C  0E00               	movlw	0
  1542  00066E  0100               	movlb	0	; force () banked
  1543  000670  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1544  000672  0E00               	movlw	0
  1545  000674  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1546  000676  EFAC  F003         	goto	l1677
  1547  00067A                     l1665:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 180: {;main.c: 181: for(j=j=colonne-1;(j<=(colonne+1))&&(j<20);j++)
  1551  00067A  0EFF               	movlw	255
  1552  00067C  0100               	movlb	0	; force () banked
  1553  00067E  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1554  000680  0100               	movlb	0	; force () banked
  1555  000682  6FC4               	movwf	calculToucheCombien@j& (0+255),b
  1556  000684  0EFF               	movlw	255
  1557  000686  0100               	movlb	0	; force () banked
  1558  000688  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1559  00068A  0100               	movlb	0	; force () banked
  1560  00068C  6FC5               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1561  00068E  C0C4  F0C4         	movff	calculToucheCombien@j,calculToucheCombien@j
  1562  000692  C0C5  F0C5         	movff	calculToucheCombien@j+1,calculToucheCombien@j+1
  1563  000696  EF7D  F003         	goto	l1671
  1564  00069A                     l1667:
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;main.c: 182: {;main.c: 183: if (m_tabMines[i][j]==2)
  1568  00069A  C0C2  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1569  00069E  C0C3  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1570  0006A2  0E00               	movlw	0
  1571  0006A4  0100               	movlb	0	; force () banked
  1572  0006A6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1573  0006A8  0E15               	movlw	21
  1574  0006AA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1575  0006AC  ECC3  F008         	call	___wmul	;wreg free
  1576  0006B0  0E60               	movlw	low _m_tabMines
  1577  0006B2  0100               	movlb	0	; force () banked
  1578  0006B4  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1579  0006B6  0E00               	movlw	high _m_tabMines
  1580  0006B8  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1581  0006BA  0100               	movlb	0	; force () banked
  1582  0006BC  51B4               	movf	?___wmul& (0+255),w,b
  1583  0006BE  0100               	movlb	0	; force () banked
  1584  0006C0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1585  0006C2  0100               	movlb	0	; force () banked
  1586  0006C4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1587  0006C6  0100               	movlb	0	; force () banked
  1588  0006C8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1589  0006CA  0100               	movlb	0	; force () banked
  1590  0006CC  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1591  0006CE  0100               	movlb	0	; force () banked
  1592  0006D0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1593  0006D2  6ED9               	movwf	fsr2l,c
  1594  0006D4  0100               	movlb	0	; force () banked
  1595  0006D6  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1596  0006D8  0100               	movlb	0	; force () banked
  1597  0006DA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1598  0006DC  6EDA               	movwf	fsr2h,c
  1599  0006DE  0E02               	movlw	2
  1600  0006E0  18DE               	xorwf	postinc2,w,c
  1601  0006E2  A4D8               	btfss	status,2,c
  1602  0006E4  EF76  F003         	goto	u571
  1603  0006E8  EF78  F003         	goto	u570
  1604  0006EC                     u571:
  1605  0006EC  EF7A  F003         	goto	l97
  1606  0006F0                     u570:
  1607  0006F0                     
  1608                           ; BSR set to: 0
  1609                           ;main.c: 184: nbMines++;
  1610  0006F0  0100               	movlb	0	; force () banked
  1611  0006F2  2BC1               	incf	calculToucheCombien@nbMines& (0+255),f,b
  1612  0006F4                     l97:
  1613                           
  1614                           ; BSR set to: 0
  1615  0006F4  0100               	movlb	0	; force () banked
  1616  0006F6  4BC4               	infsnz	calculToucheCombien@j& (0+255),f,b
  1617  0006F8  2BC5               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1618  0006FA                     l1671:
  1619                           
  1620                           ; BSR set to: 0
  1621  0006FA  0E01               	movlw	1
  1622  0006FC  0100               	movlb	0	; force () banked
  1623  0006FE  25BC               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1624  000700  0100               	movlb	0	; force () banked
  1625  000702  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1626  000704  0E00               	movlw	0
  1627  000706  0100               	movlb	0	; force () banked
  1628  000708  21BD               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1629  00070A  0100               	movlb	0	; force () banked
  1630  00070C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1631  00070E  0100               	movlb	0	; force () banked
  1632  000710  51C4               	movf	calculToucheCombien@j& (0+255),w,b
  1633  000712  0100               	movlb	0	; force () banked
  1634  000714  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1635  000716  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1636  000718  0A80               	xorlw	128
  1637  00071A  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1638  00071C  0100               	movlb	0	; force () banked
  1639  00071E  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1640  000720  0A80               	xorlw	128
  1641  000722  0100               	movlb	0	; force () banked
  1642  000724  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1643  000726  A0D8               	btfss	status,0,c
  1644  000728  EF98  F003         	goto	u581
  1645  00072C  EF9A  F003         	goto	u580
  1646  000730                     u581:
  1647  000730  EFA9  F003         	goto	l1675
  1648  000734                     u580:
  1649  000734                     
  1650                           ; BSR set to: 0
  1651  000734  0100               	movlb	0	; force () banked
  1652  000736  BFC5               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1653  000738  EFA7  F003         	goto	u591
  1654  00073C  51C5               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1655  00073E  E109               	bnz	u590
  1656  000740  0E14               	movlw	20
  1657  000742  5DC4               	subwf	calculToucheCombien@j& (0+255),w,b
  1658  000744  A0D8               	btfss	status,0,c
  1659  000746  EFA7  F003         	goto	u591
  1660  00074A  EFA9  F003         	goto	u590
  1661  00074E                     u591:
  1662  00074E  EF4D  F003         	goto	l1667
  1663  000752                     u590:
  1664  000752                     l1675:
  1665                           
  1666                           ; BSR set to: 0
  1667  000752  0100               	movlb	0	; force () banked
  1668  000754  4BC2               	infsnz	calculToucheCombien@i& (0+255),f,b
  1669  000756  2BC3               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1670  000758                     l1677:
  1671                           
  1672                           ; BSR set to: 0
  1673  000758  0E01               	movlw	1
  1674  00075A  0100               	movlb	0	; force () banked
  1675  00075C  25BA               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1676  00075E  0100               	movlb	0	; force () banked
  1677  000760  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1678  000762  0E00               	movlw	0
  1679  000764  0100               	movlb	0	; force () banked
  1680  000766  21BB               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1681  000768  0100               	movlb	0	; force () banked
  1682  00076A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1683  00076C  0100               	movlb	0	; force () banked
  1684  00076E  51C2               	movf	calculToucheCombien@i& (0+255),w,b
  1685  000770  0100               	movlb	0	; force () banked
  1686  000772  5DBE               	subwf	??_calculToucheCombien& (0+255),w,b
  1687  000774  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1688  000776  0A80               	xorlw	128
  1689  000778  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1690  00077A  0100               	movlb	0	; force () banked
  1691  00077C  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1692  00077E  0A80               	xorlw	128
  1693  000780  0100               	movlb	0	; force () banked
  1694  000782  59C0               	subwfb	(??_calculToucheCombien+2)& (0+255),w,b
  1695  000784  A0D8               	btfss	status,0,c
  1696  000786  EFC7  F003         	goto	u601
  1697  00078A  EFC9  F003         	goto	u600
  1698  00078E                     u601:
  1699  00078E  EFD8  F003         	goto	l1681
  1700  000792                     u600:
  1701  000792                     
  1702                           ; BSR set to: 0
  1703  000792  0100               	movlb	0	; force () banked
  1704  000794  BFC3               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1705  000796  EFD6  F003         	goto	u611
  1706  00079A  51C3               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1707  00079C  E109               	bnz	u610
  1708  00079E  0E04               	movlw	4
  1709  0007A0  5DC2               	subwf	calculToucheCombien@i& (0+255),w,b
  1710  0007A2  A0D8               	btfss	status,0,c
  1711  0007A4  EFD6  F003         	goto	u611
  1712  0007A8  EFD8  F003         	goto	u610
  1713  0007AC                     u611:
  1714  0007AC  EF3D  F003         	goto	l1665
  1715  0007B0                     u610:
  1716  0007B0                     l1681:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 185: };main.c: 186: };main.c: 187: return nbMines;
  1720  0007B0  0100               	movlb	0	; force () banked
  1721  0007B2  51C1               	movf	calculToucheCombien@nbMines& (0+255),w,b
  1722  0007B4                     
  1723                           ; BSR set to: 0
  1724  0007B4  0012               	return		;funcret
  1725  0007B6                     __end_of_calculToucheCombien:
  1726                           	opt callstack 0
  1727                           
  1728 ;; *************** function ___wmul *****************
  1729 ;; Defined at:
  1730 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1733 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  product         2    4[BANK0 ] unsigned int 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2    0[BANK0 ] unsigned int 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, prodl, prodh
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1745 ;;      Params:         0       4       0       0       0       0       0
  1746 ;;      Locals:         0       2       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0
  1748 ;;      Totals:         0       6       0       0       0       0       0
  1749 ;;Total ram usage:        6 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_calculToucheCombien
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text7
  1759  001186                     __ptext7:
  1760                           	opt callstack 0
  1761  001186                     ___wmul:
  1762                           	opt callstack 28
  1763  001186  0100               	movlb	0	; () banked
  1764  001188  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1765  00118A  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1766  00118C  CFF3 F0B8          	movff	prodl,___wmul@product
  1767  001190  CFF4 F0B9          	movff	prodh,___wmul@product+1
  1768  001194  51B4               	movf	___wmul@multiplier& (0+255),w,b
  1769  001196  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1770  001198  50F3               	movf	243,w,c
  1771  00119A  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1772  00119C  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1773  00119E  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  1774  0011A0  50F3               	movf	243,w,c
  1775  0011A2  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  1776  0011A4                     
  1777                           ; BSR set to: 0
  1778  0011A4  C0B8  F0B4         	movff	___wmul@product,?___wmul
  1779  0011A8  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  1780  0011AC                     
  1781                           ; BSR set to: 0
  1782  0011AC  0012               	return		;funcret
  1783  0011AE                     __end_of___wmul:
  1784                           	opt callstack 0
  1785                           
  1786 ;; *************** function _lcd_putMessage *****************
  1787 ;; Defined at:
  1788 ;;		line 387 in file "Lcd4Lignes.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  chaine          3    5[BANK0 ] PTR const unsigned char 
  1791 ;;		 -> m_tabMines(84), STR_1(17), 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  j               1   13[BANK0 ] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1803 ;;      Params:         0       3       0       0       0       0       0
  1804 ;;      Locals:         0       1       0       0       0       0       0
  1805 ;;      Temps:          0       5       0       0       0       0       0
  1806 ;;      Totals:         0       9       0       0       0       0       0
  1807 ;;Total ram usage:        9 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    4
  1810 ;; This function calls:
  1811 ;;		_lcd_ecritChar
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text8
  1818  000B2C                     __ptext8:
  1819                           	opt callstack 0
  1820  000B2C                     _lcd_putMessage:
  1821                           	opt callstack 26
  1822  000B2C                     
  1823                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  1824  000B2C  0E00               	movlw	0
  1825  000B2E  0100               	movlb	0	; force () banked
  1826  000B30  6FC1               	movwf	lcd_putMessage@j& (0+255),b
  1827  000B32  EFC3  F005         	goto	l1823
  1828  000B36                     l1819:
  1829                           
  1830                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  1831  000B36  0100               	movlb	0	; force () banked
  1832  000B38  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  1833  000B3A  0100               	movlb	0	; force () banked
  1834  000B3C  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  1835  000B3E  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  1836  000B40  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  1837  000B42  0100               	movlb	0	; force () banked
  1838  000B44  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1839  000B46  0100               	movlb	0	; force () banked
  1840  000B48  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  1841  000B4A  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  1842  000B4C  0100               	movlb	0	; force () banked
  1843  000B4E  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1844  000B50  0100               	movlb	0	; force () banked
  1845  000B52  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  1846  000B54  0E00               	movlw	0
  1847  000B56  0100               	movlb	0	; force () banked
  1848  000B58  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  1849  000B5A  0100               	movlb	0	; force () banked
  1850  000B5C  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  1851  000B5E  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  1852  000B62  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  1853  000B66  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  1854  000B6A  BAF8               	btfsc	tblptru,5,c
  1855  000B6C  D003               	bra	u727
  1856  000B6E  0008               	tblrd		*
  1857  000B70  50F5               	movf	tablat,w,c
  1858  000B72  D005               	bra	u720
  1859  000B74                     u727:
  1860  000B74  CFF6 FFD9          	movff	tblptrl,fsr2l
  1861  000B78  CFF7 FFDA          	movff	tblptrh,fsr2h
  1862  000B7C  50DF               	movf	indf2,w,c
  1863  000B7E                     u720:
  1864  000B7E  EC24  F008         	call	_lcd_ecritChar
  1865  000B82  0100               	movlb	0	; force () banked
  1866  000B84  2BC1               	incf	lcd_putMessage@j& (0+255),f,b
  1867  000B86                     l1823:
  1868                           
  1869                           ; BSR set to: 0
  1870  000B86  0100               	movlb	0	; force () banked
  1871  000B88  51C1               	movf	lcd_putMessage@j& (0+255),w,b
  1872  000B8A  0100               	movlb	0	; force () banked
  1873  000B8C  6FBC               	movwf	??_lcd_putMessage& (0+255),b
  1874  000B8E  6BBD               	clrf	(??_lcd_putMessage+1)& (0+255),b
  1875  000B90  51BC               	movf	??_lcd_putMessage& (0+255),w,b
  1876  000B92  0100               	movlb	0	; force () banked
  1877  000B94  25B9               	addwf	lcd_putMessage@chaine& (0+255),w,b
  1878  000B96  0100               	movlb	0	; force () banked
  1879  000B98  6FBE               	movwf	(??_lcd_putMessage+2)& (0+255),b
  1880  000B9A  51BD               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  1881  000B9C  0100               	movlb	0	; force () banked
  1882  000B9E  21BA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  1883  000BA0  0100               	movlb	0	; force () banked
  1884  000BA2  6FBF               	movwf	(??_lcd_putMessage+3)& (0+255),b
  1885  000BA4  0E00               	movlw	0
  1886  000BA6  0100               	movlb	0	; force () banked
  1887  000BA8  21BB               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  1888  000BAA  0100               	movlb	0	; force () banked
  1889  000BAC  6FC0               	movwf	(??_lcd_putMessage+4)& (0+255),b
  1890  000BAE  C0BE  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  1891  000BB2  C0BF  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  1892  000BB6  C0C0  FFF8         	movff	??_lcd_putMessage+4,tblptru
  1893  000BBA  BAF8               	btfsc	tblptru,5,c
  1894  000BBC  D003               	bra	u737
  1895  000BBE  0008               	tblrd		*
  1896  000BC0  50F5               	movf	tablat,w,c
  1897  000BC2  D005               	bra	u730
  1898  000BC4                     u737:
  1899  000BC4  CFF6 FFD9          	movff	tblptrl,fsr2l
  1900  000BC8  CFF7 FFDA          	movff	tblptrh,fsr2h
  1901  000BCC  50DF               	movf	indf2,w,c
  1902  000BCE                     u730:
  1903  000BCE  0900               	iorlw	0
  1904  000BD0  A4D8               	btfss	status,2,c
  1905  000BD2  EFED  F005         	goto	u741
  1906  000BD6  EFEF  F005         	goto	u740
  1907  000BDA                     u741:
  1908  000BDA  EF9B  F005         	goto	l1819
  1909  000BDE                     u740:
  1910  000BDE  0012               	return		;funcret
  1911  000BE0                     __end_of_lcd_putMessage:
  1912                           	opt callstack 0
  1913                           
  1914 ;; *************** function _lcd_ecritChar *****************
  1915 ;; Defined at:
  1916 ;;		line 359 in file "Lcd4Lignes.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  car             1    wreg     unsigned char 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  car             1    3[BANK0 ] unsigned char 
  1921 ;;  posRam          1    4[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1931 ;;      Params:         0       0       0       0       0       0       0
  1932 ;;      Locals:         0       2       0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0
  1934 ;;      Totals:         0       2       0       0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    3
  1938 ;; This function calls:
  1939 ;;		_lcd_wrCom
  1940 ;;		_lcd_wrData
  1941 ;; This function is called by:
  1942 ;;		_lcd_putMessage
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text9
  1947  001048                     __ptext9:
  1948                           	opt callstack 0
  1949  001048                     _lcd_ecritChar:
  1950                           	opt callstack 26
  1951                           
  1952                           ;incstack = 0
  1953                           ;lcd_ecritChar@car stored from wreg
  1954  001048  0100               	movlb	0	; force () banked
  1955  00104A  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  1956  00104C                     
  1957                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  1958  00104C  0100               	movlb	0	; force () banked
  1959  00104E  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  1960  001050  EC8F  F008         	call	_lcd_wrData
  1961  001054  0100               	movlb	0	; force () banked
  1962  001056  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  1963                           
  1964                           ;Lcd4Lignes.c: 364: switch(posRam)
  1965  001058  EF3D  F008         	goto	l1755
  1966  00105C                     l1747:
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  1970  00105C  0EC0               	movlw	192
  1971  00105E  EC5F  F007         	call	_lcd_wrCom
  1972                           
  1973                           ;Lcd4Lignes.c: 368: break;
  1974  001062  EF4D  F008         	goto	l190
  1975  001066                     l1749:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  1979  001066  0E94               	movlw	148
  1980  001068  EC5F  F007         	call	_lcd_wrCom
  1981                           
  1982                           ;Lcd4Lignes.c: 371: break;
  1983  00106C  EF4D  F008         	goto	l190
  1984  001070                     l1751:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  1988  001070  0ED4               	movlw	212
  1989  001072  EC5F  F007         	call	_lcd_wrCom
  1990                           
  1991                           ;Lcd4Lignes.c: 374: break;
  1992  001076  EF4D  F008         	goto	l190
  1993  00107A                     l1755:
  1994                           
  1995                           ; BSR set to: 0
  1996  00107A  0100               	movlb	0	; force () banked
  1997  00107C  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  1998                           
  1999                           ; Switch size 1, requested type "simple"
  2000                           ; Number of cases is 3, Range of values is 148 to 212
  2001                           ; switch strategies available:
  2002                           ; Name         Instructions Cycles
  2003                           ; simple_byte           10     6 (average)
  2004                           ;	Chosen strategy is simple_byte
  2005  00107E  0A94               	xorlw	148	; case 148
  2006  001080  B4D8               	btfsc	status,2,c
  2007  001082  EF2E  F008         	goto	l1747
  2008  001086  0A54               	xorlw	84	; case 192
  2009  001088  B4D8               	btfsc	status,2,c
  2010  00108A  EF38  F008         	goto	l1751
  2011  00108E  0A14               	xorlw	20	; case 212
  2012  001090  B4D8               	btfsc	status,2,c
  2013  001092  EF33  F008         	goto	l1749
  2014  001096  EF4D  F008         	goto	l190
  2015  00109A                     l190:
  2016  00109A  0012               	return		;funcret
  2017  00109C                     __end_of_lcd_ecritChar:
  2018                           	opt callstack 0
  2019                           
  2020 ;; *************** function _lcd_init *****************
  2021 ;; Defined at:
  2022 ;;		line 258 in file "Lcd4Lignes.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2036 ;;      Params:         0       0       0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0
  2039 ;;      Totals:         0       0       0       0       0       0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    5
  2043 ;; This function calls:
  2044 ;;		_lcd_initCGRam
  2045 ;;		_lcd_resetSequence
  2046 ;;		_lcd_wrCom
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text10
  2053  0011AE                     __ptext10:
  2054                           	opt callstack 0
  2055  0011AE                     _lcd_init:
  2056                           	opt callstack 25
  2057  0011AE                     
  2058                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2059  0011AE  EC95  F007         	call	_lcd_resetSequence	;wreg free
  2060                           
  2061                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2062  0011B2  0E28               	movlw	40
  2063  0011B4  EC5F  F007         	call	_lcd_wrCom
  2064                           
  2065                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2066  0011B8  0E0F               	movlw	15
  2067  0011BA  EC5F  F007         	call	_lcd_wrCom
  2068                           
  2069                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2070  0011BE  0E01               	movlw	1
  2071  0011C0  EC5F  F007         	call	_lcd_wrCom
  2072                           
  2073                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2074  0011C4  0E06               	movlw	6
  2075  0011C6  EC5F  F007         	call	_lcd_wrCom
  2076                           
  2077                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2078  0011CA  0E80               	movlw	128
  2079  0011CC  EC5F  F007         	call	_lcd_wrCom
  2080  0011D0                     
  2081                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2082  0011D0  EC9F  F006         	call	_lcd_initCGRam	;wreg free
  2083  0011D4  0012               	return		;funcret
  2084  0011D6                     __end_of_lcd_init:
  2085                           	opt callstack 0
  2086                           
  2087 ;; *************** function _lcd_resetSequence *****************
  2088 ;; Defined at:
  2089 ;;		line 221 in file "Lcd4Lignes.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2103 ;;      Params:         0       0       0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0
  2105 ;;      Temps:          0       1       0       0       0       0       0
  2106 ;;      Totals:         0       1       0       0       0       0       0
  2107 ;;Total ram usage:        1 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		_lcd_ecrireDonnees
  2112 ;;		_lcd_strobeEnableBit
  2113 ;; This function is called by:
  2114 ;;		_lcd_init
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text11
  2119  000F2A                     __ptext11:
  2120                           	opt callstack 0
  2121  000F2A                     _lcd_resetSequence:
  2122                           	opt callstack 28
  2123  000F2A                     
  2124                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2125  000F2A  0E00               	movlw	0
  2126  000F2C  6E95               	movwf	149,c	;volatile
  2127  000F2E                     
  2128                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2129  000F2E  0E0D               	movlw	13
  2130  000F30  0100               	movlb	0	; force () banked
  2131  000F32  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  2132  000F34  0EFB               	movlw	251
  2133  000F36                     u957:
  2134  000F36  2EE8               	decfsz	wreg,f,c
  2135  000F38  D7FE               	bra	u957
  2136  000F3A  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2137  000F3C  D7FC               	bra	u957
  2138  000F3E  F000 F000          	nop2	
  2139  000F42                     
  2140                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2141  000F42  9080               	bcf	128,0,c	;volatile
  2142  000F44                     
  2143                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2144  000F44  9280               	bcf	128,1,c	;volatile
  2145  000F46                     
  2146                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2147  000F46  0E03               	movlw	3
  2148  000F48  ECEB  F008         	call	_lcd_ecrireDonnees
  2149  000F4C                     
  2150                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2151  000F4C  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2152  000F50                     
  2153                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2154  000F50  0E03               	movlw	3
  2155  000F52                     u967:
  2156  000F52  2EE8               	decfsz	wreg,f,c
  2157  000F54  D7FE               	bra	u967
  2158  000F56  F000               	nop	
  2159  000F58                     
  2160                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2161  000F58  0E03               	movlw	3
  2162  000F5A  ECEB  F008         	call	_lcd_ecrireDonnees
  2163  000F5E                     
  2164                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2165  000F5E  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2166  000F62                     
  2167                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2168  000F62  0E03               	movlw	3
  2169  000F64                     u977:
  2170  000F64  2EE8               	decfsz	wreg,f,c
  2171  000F66  D7FE               	bra	u977
  2172  000F68  F000               	nop	
  2173  000F6A                     
  2174                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2175  000F6A  0E03               	movlw	3
  2176  000F6C  ECEB  F008         	call	_lcd_ecrireDonnees
  2177  000F70                     
  2178                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2179  000F70  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2180  000F74                     
  2181                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2182  000F74  0E03               	movlw	3
  2183  000F76                     u987:
  2184  000F76  2EE8               	decfsz	wreg,f,c
  2185  000F78  D7FE               	bra	u987
  2186  000F7A  F000               	nop	
  2187  000F7C                     
  2188                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2189  000F7C  0E02               	movlw	2
  2190  000F7E  ECEB  F008         	call	_lcd_ecrireDonnees
  2191  000F82                     
  2192                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2193  000F82  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2194  000F86                     
  2195                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2196  000F86  0E03               	movlw	3
  2197  000F88                     u997:
  2198  000F88  2EE8               	decfsz	wreg,f,c
  2199  000F8A  D7FE               	bra	u997
  2200  000F8C  F000               	nop	
  2201  000F8E                     
  2202                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2203  000F8E  0E0F               	movlw	15
  2204  000F90  6E95               	movwf	149,c	;volatile
  2205  000F92  0012               	return		;funcret
  2206  000F94                     __end_of_lcd_resetSequence:
  2207                           	opt callstack 0
  2208                           
  2209 ;; *************** function _lcd_initCGRam *****************
  2210 ;; Defined at:
  2211 ;;		line 417 in file "Lcd4Lignes.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  j               1    6[BANK0 ] unsigned char 
  2216 ;;  i               1    5[BANK0 ] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2226 ;;      Params:         0       0       0       0       0       0       0
  2227 ;;      Locals:         0       2       0       0       0       0       0
  2228 ;;      Temps:          0       2       0       0       0       0       0
  2229 ;;      Totals:         0       4       0       0       0       0       0
  2230 ;;Total ram usage:        4 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    4
  2233 ;; This function calls:
  2234 ;;		_lcd_curseurHome
  2235 ;;		_lcd_wrCom
  2236 ;;		_lcd_wrData
  2237 ;; This function is called by:
  2238 ;;		_lcd_init
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text12
  2243  000D3E                     __ptext12:
  2244                           	opt callstack 0
  2245  000D3E                     _lcd_initCGRam:
  2246                           	opt callstack 25
  2247  000D3E                     
  2248                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2249  000D3E  0E40               	movlw	64
  2250  000D40  EC5F  F007         	call	_lcd_wrCom
  2251  000D44                     
  2252                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2253  000D44  0E00               	movlw	0
  2254  000D46  0100               	movlb	0	; force () banked
  2255  000D48  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  2256  000D4A                     
  2257                           ; BSR set to: 0
  2258  000D4A  0E07               	movlw	7
  2259  000D4C  0100               	movlb	0	; force () banked
  2260  000D4E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2261  000D50  EFAC  F006         	goto	u621
  2262  000D54  EFAE  F006         	goto	u620
  2263  000D58                     u621:
  2264  000D58  EFB0  F006         	goto	l1727
  2265  000D5C                     u620:
  2266  000D5C  EFED  F006         	goto	l1743
  2267  000D60                     l1727:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2271  000D60  0E00               	movlw	0
  2272  000D62  0100               	movlb	0	; force () banked
  2273  000D64  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  2274  000D66                     
  2275                           ; BSR set to: 0
  2276  000D66  0E07               	movlw	7
  2277  000D68  0100               	movlb	0	; force () banked
  2278  000D6A  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2279  000D6C  EFBA  F006         	goto	u631
  2280  000D70  EFBC  F006         	goto	u630
  2281  000D74                     u631:
  2282  000D74  EFBE  F006         	goto	l1733
  2283  000D78                     u630:
  2284  000D78  EFE2  F006         	goto	l1739
  2285  000D7C                     l1733:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2289  000D7C  0100               	movlb	0	; force () banked
  2290  000D7E  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2291  000D80  0D08               	mullw	8
  2292  000D82  0E54               	movlw	low _matCGRAM
  2293  000D84  0100               	movlb	0	; force () banked
  2294  000D86  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2295  000D88  0E01               	movlw	high _matCGRAM
  2296  000D8A  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2297  000D8C  50F3               	movf	243,w,c
  2298  000D8E  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2299  000D90  50F4               	movf	244,w,c
  2300  000D92  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2301  000D94  0100               	movlb	0	; force () banked
  2302  000D96  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2303  000D98  0100               	movlb	0	; force () banked
  2304  000D9A  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2305  000D9C  6ED9               	movwf	fsr2l,c
  2306  000D9E  0100               	movlb	0	; force () banked
  2307  000DA0  0E00               	movlw	0
  2308  000DA2  0100               	movlb	0	; force () banked
  2309  000DA4  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2310  000DA6  6EDA               	movwf	fsr2h,c
  2311  000DA8  50DF               	movf	indf2,w,c
  2312  000DAA  EC8F  F008         	call	_lcd_wrData
  2313  000DAE  0100               	movlb	0	; force () banked
  2314  000DB0  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2315  000DB2                     
  2316                           ; BSR set to: 0
  2317  000DB2  0E07               	movlw	7
  2318  000DB4  0100               	movlb	0	; force () banked
  2319  000DB6  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2320  000DB8  EFE0  F006         	goto	u641
  2321  000DBC  EFE2  F006         	goto	u640
  2322  000DC0                     u641:
  2323  000DC0  EFBE  F006         	goto	l1733
  2324  000DC4                     u640:
  2325  000DC4                     l1739:
  2326                           
  2327                           ; BSR set to: 0
  2328  000DC4  0100               	movlb	0	; force () banked
  2329  000DC6  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2330  000DC8                     
  2331                           ; BSR set to: 0
  2332  000DC8  0E07               	movlw	7
  2333  000DCA  0100               	movlb	0	; force () banked
  2334  000DCC  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2335  000DCE  EFEB  F006         	goto	u651
  2336  000DD2  EFED  F006         	goto	u650
  2337  000DD6                     u651:
  2338  000DD6  EFB0  F006         	goto	l1727
  2339  000DDA                     u650:
  2340  000DDA                     l1743:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2344  000DDA  EC01  F009         	call	_lcd_curseurHome	;wreg free
  2345  000DDE  0012               	return		;funcret
  2346  000DE0                     __end_of_lcd_initCGRam:
  2347                           	opt callstack 0
  2348                           
  2349 ;; *************** function _lcd_wrData *****************
  2350 ;; Defined at:
  2351 ;;		line 188 in file "Lcd4Lignes.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  caractere       1    wreg     unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  caractere       1    2[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      unsigned char 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2365 ;;      Params:         0       0       0       0       0       0       0
  2366 ;;      Locals:         0       1       0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0
  2368 ;;      Totals:         0       1       0       0       0       0       0
  2369 ;;Total ram usage:        1 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    2
  2372 ;; This function calls:
  2373 ;;		_lcd_busy
  2374 ;;		_lcd_ecrireDonnees
  2375 ;;		_lcd_strobeEnableBit
  2376 ;; This function is called by:
  2377 ;;		_lcd_ecritChar
  2378 ;;		_lcd_initCGRam
  2379 ;;		_lcd_effaceChar
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text13
  2384  00111E                     __ptext13:
  2385                           	opt callstack 0
  2386  00111E                     _lcd_wrData:
  2387                           	opt callstack 26
  2388                           
  2389                           ;incstack = 0
  2390                           ;lcd_wrData@caractere stored from wreg
  2391  00111E  0100               	movlb	0	; force () banked
  2392  001120  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  2393  001122                     
  2394                           ;Lcd4Lignes.c: 190: lcd_busy();
  2395  001122  EC4E  F008         	call	_lcd_busy	;wreg free
  2396  001126                     
  2397                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  2398  001126  0E00               	movlw	0
  2399  001128  6E95               	movwf	149,c	;volatile
  2400  00112A                     
  2401                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  2402  00112A  8080               	bsf	128,0,c	;volatile
  2403  00112C                     
  2404                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  2405  00112C  9280               	bcf	128,1,c	;volatile
  2406  00112E                     
  2407                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  2408  00112E  0100               	movlb	0	; force () banked
  2409  001130  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  2410  001132  0B0F               	andlw	15
  2411  001134  ECEB  F008         	call	_lcd_ecrireDonnees
  2412  001138                     
  2413                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  2414  001138  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2415  00113C                     
  2416                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  2417  00113C  0100               	movlb	0	; force () banked
  2418  00113E  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  2419  001140  ECEB  F008         	call	_lcd_ecrireDonnees
  2420  001144                     
  2421                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  2422  001144  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2423  001148                     
  2424                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  2425  001148  0E0F               	movlw	15
  2426  00114A  6E95               	movwf	149,c	;volatile
  2427  00114C                     
  2428                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  2429                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  2430  00114C  EC4E  F008         	call	_lcd_busy	;wreg free
  2431  001150  0012               	return		;funcret
  2432  001152                     __end_of_lcd_wrData:
  2433                           	opt callstack 0
  2434                           
  2435 ;; *************** function _lcd_curseurHome *****************
  2436 ;; Defined at:
  2437 ;;		line 288 in file "Lcd4Lignes.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2451 ;;      Params:         0       0       0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    3
  2458 ;; This function calls:
  2459 ;;		_lcd_wrCom
  2460 ;; This function is called by:
  2461 ;;		_lcd_initCGRam
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text14
  2466  001202                     __ptext14:
  2467                           	opt callstack 0
  2468  001202                     _lcd_curseurHome:
  2469                           	opt callstack 25
  2470  001202                     
  2471                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2472  001202  0E02               	movlw	2
  2473  001204  EC5F  F007         	call	_lcd_wrCom
  2474  001208  0012               	return		;funcret
  2475  00120A                     __end_of_lcd_curseurHome:
  2476                           	opt callstack 0
  2477                           
  2478 ;; *************** function _lcd_gotoXY *****************
  2479 ;; Defined at:
  2480 ;;		line 314 in file "Lcd4Lignes.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  x               1    wreg     unsigned char 
  2483 ;;  y               1    3[BANK0 ] unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  x               1    4[BANK0 ] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2495 ;;      Params:         0       1       0       0       0       0       0
  2496 ;;      Locals:         0       1       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0
  2498 ;;      Totals:         0       2       0       0       0       0       0
  2499 ;;Total ram usage:        2 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    3
  2502 ;; This function calls:
  2503 ;;		_lcd_wrCom
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;;		_lcd_effaceLigne
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text15
  2511  000DE0                     __ptext15:
  2512                           	opt callstack 0
  2513  000DE0                     _lcd_gotoXY:
  2514                           	opt callstack 27
  2515                           
  2516                           ;incstack = 0
  2517                           ;lcd_gotoXY@x stored from wreg
  2518  000DE0  0100               	movlb	0	; force () banked
  2519  000DE2  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  2520  000DE4                     
  2521                           ;Lcd4Lignes.c: 316: switch(y)
  2522  000DE4  EF14  F007         	goto	l1921
  2523  000DE8                     l1911:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  2527  000DE8  0100               	movlb	0	; force () banked
  2528  000DEA  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2529  000DEC  0F7F               	addlw	127
  2530  000DEE  0980               	iorlw	128
  2531  000DF0  EC5F  F007         	call	_lcd_wrCom
  2532                           
  2533                           ;Lcd4Lignes.c: 320: break;
  2534  000DF4  EF28  F007         	goto	l179
  2535  000DF8                     l1913:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  2539  000DF8  0100               	movlb	0	; force () banked
  2540  000DFA  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2541  000DFC  0FBF               	addlw	191
  2542  000DFE  0980               	iorlw	128
  2543  000E00  EC5F  F007         	call	_lcd_wrCom
  2544                           
  2545                           ;Lcd4Lignes.c: 323: break;
  2546  000E04  EF28  F007         	goto	l179
  2547  000E08                     l1915:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  2551  000E08  0100               	movlb	0	; force () banked
  2552  000E0A  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2553  000E0C  0F93               	addlw	147
  2554  000E0E  0980               	iorlw	128
  2555  000E10  EC5F  F007         	call	_lcd_wrCom
  2556                           
  2557                           ;Lcd4Lignes.c: 326: break;
  2558  000E14  EF28  F007         	goto	l179
  2559  000E18                     l1917:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  2563  000E18  0100               	movlb	0	; force () banked
  2564  000E1A  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  2565  000E1C  0FD3               	addlw	211
  2566  000E1E  0980               	iorlw	128
  2567  000E20  EC5F  F007         	call	_lcd_wrCom
  2568                           
  2569                           ;Lcd4Lignes.c: 329: break;
  2570  000E24  EF28  F007         	goto	l179
  2571  000E28                     l1921:
  2572  000E28  0100               	movlb	0	; force () banked
  2573  000E2A  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  2574                           
  2575                           ; Switch size 1, requested type "simple"
  2576                           ; Number of cases is 4, Range of values is 1 to 4
  2577                           ; switch strategies available:
  2578                           ; Name         Instructions Cycles
  2579                           ; simple_byte           13     7 (average)
  2580                           ;	Chosen strategy is simple_byte
  2581  000E2C  0A01               	xorlw	1	; case 1
  2582  000E2E  B4D8               	btfsc	status,2,c
  2583  000E30  EFF4  F006         	goto	l1911
  2584  000E34  0A03               	xorlw	3	; case 2
  2585  000E36  B4D8               	btfsc	status,2,c
  2586  000E38  EFFC  F006         	goto	l1913
  2587  000E3C  0A01               	xorlw	1	; case 3
  2588  000E3E  B4D8               	btfsc	status,2,c
  2589  000E40  EF04  F007         	goto	l1915
  2590  000E44  0A07               	xorlw	7	; case 4
  2591  000E46  B4D8               	btfsc	status,2,c
  2592  000E48  EF0C  F007         	goto	l1917
  2593  000E4C  EF28  F007         	goto	l179
  2594  000E50                     l179:
  2595  000E50  0012               	return		;funcret
  2596  000E52                     __end_of_lcd_gotoXY:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function _lcd_wrCom *****************
  2600 ;; Defined at:
  2601 ;;		line 156 in file "Lcd4Lignes.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  commande        1    wreg     unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  commande        1    2[BANK0 ] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      unsigned char 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2615 ;;      Params:         0       0       0       0       0       0       0
  2616 ;;      Locals:         0       1       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0
  2618 ;;      Totals:         0       1       0       0       0       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    2
  2622 ;; This function calls:
  2623 ;;		_lcd_busy
  2624 ;;		_lcd_ecrireDonnees
  2625 ;;		_lcd_strobeEnableBit
  2626 ;; This function is called by:
  2627 ;;		_lcd_init
  2628 ;;		_lcd_curseurHome
  2629 ;;		_lcd_gotoXY
  2630 ;;		_lcd_ecritChar
  2631 ;;		_lcd_initCGRam
  2632 ;;		_lcd_effaceAffichage
  2633 ;;		_lcd_cacheCurseur
  2634 ;;		_lcd_montreCurseur
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text16
  2639  000EBE                     __ptext16:
  2640                           	opt callstack 0
  2641  000EBE                     _lcd_wrCom:
  2642                           	opt callstack 26
  2643                           
  2644                           ;incstack = 0
  2645                           ;lcd_wrCom@commande stored from wreg
  2646  000EBE  0100               	movlb	0	; force () banked
  2647  000EC0  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  2648  000EC2                     
  2649                           ;Lcd4Lignes.c: 158: lcd_busy();
  2650  000EC2  EC4E  F008         	call	_lcd_busy	;wreg free
  2651  000EC6                     
  2652                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  2653  000EC6  0E00               	movlw	0
  2654  000EC8  6E95               	movwf	149,c	;volatile
  2655  000ECA                     
  2656                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  2657  000ECA  9080               	bcf	128,0,c	;volatile
  2658  000ECC                     
  2659                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  2660  000ECC  9280               	bcf	128,1,c	;volatile
  2661  000ECE                     
  2662                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  2663  000ECE  0100               	movlb	0	; force () banked
  2664  000ED0  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  2665  000ED2  0B0F               	andlw	15
  2666  000ED4  ECEB  F008         	call	_lcd_ecrireDonnees
  2667  000ED8                     
  2668                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  2669  000ED8  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2670  000EDC                     
  2671                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  2672  000EDC  0100               	movlb	0	; force () banked
  2673  000EDE  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  2674  000EE0  ECEB  F008         	call	_lcd_ecrireDonnees
  2675  000EE4                     
  2676                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  2677  000EE4  EC05  F009         	call	_lcd_strobeEnableBit	;wreg free
  2678  000EE8                     
  2679                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2680  000EE8  0E03               	movlw	3
  2681  000EEA                     u1007:
  2682  000EEA  2EE8               	decfsz	wreg,f,c
  2683  000EEC  D7FE               	bra	u1007
  2684  000EEE  F000               	nop	
  2685  000EF0                     
  2686                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  2687  000EF0  0100               	movlb	0	; force () banked
  2688  000EF2  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  2689  000EF4  B4D8               	btfsc	status,2,c
  2690  000EF6  EF7F  F007         	goto	u511
  2691  000EFA  EF81  F007         	goto	u510
  2692  000EFE                     u511:
  2693  000EFE  EF8B  F007         	goto	l1587
  2694  000F02                     u510:
  2695  000F02                     
  2696                           ; BSR set to: 0
  2697  000F02  0E02               	movlw	2
  2698  000F04  0100               	movlb	0	; force () banked
  2699  000F06  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  2700  000F08  A4D8               	btfss	status,2,c
  2701  000F0A  EF89  F007         	goto	u521
  2702  000F0E  EF8B  F007         	goto	u520
  2703  000F12                     u521:
  2704  000F12  EF90  F007         	goto	l1589
  2705  000F16                     u520:
  2706  000F16                     l1587:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  2710  000F16  0EA6               	movlw	166
  2711  000F18                     u1017:
  2712  000F18  2EE8               	decfsz	wreg,f,c
  2713  000F1A  D7FE               	bra	u1017
  2714  000F1C  F000 F000          	nop2	
  2715  000F20                     l1589:
  2716                           
  2717                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  2718  000F20  0E0F               	movlw	15
  2719  000F22  6E95               	movwf	149,c	;volatile
  2720  000F24                     
  2721                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  2722  000F24  EC4E  F008         	call	_lcd_busy	;wreg free
  2723  000F28  0012               	return		;funcret
  2724  000F2A                     __end_of_lcd_wrCom:
  2725                           	opt callstack 0
  2726                           
  2727 ;; *************** function _lcd_strobeEnableBit *****************
  2728 ;; Defined at:
  2729 ;;		line 431 in file "Lcd4Lignes.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		None
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         0       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_lcd_wrCom
  2753 ;;		_lcd_wrData
  2754 ;;		_lcd_resetSequence
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text17
  2759  00120A                     __ptext17:
  2760                           	opt callstack 0
  2761  00120A                     _lcd_strobeEnableBit:
  2762                           	opt callstack 27
  2763  00120A                     
  2764                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  2765  00120A  8480               	bsf	128,2,c	;volatile
  2766                           
  2767                           ;Lcd4Lignes.c: 434: __nop();
  2768  00120C  F000               	nop	
  2769                           
  2770                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  2771  00120E  9480               	bcf	128,2,c	;volatile
  2772  001210  0012               	return		;funcret
  2773  001212                     __end_of_lcd_strobeEnableBit:
  2774                           	opt callstack 0
  2775                           
  2776 ;; *************** function _lcd_ecrireDonnees *****************
  2777 ;; Defined at:
  2778 ;;		line 107 in file "Lcd4Lignes.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  donnee          1    wreg     unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  donnee          1    1[BANK0 ] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2792 ;;      Params:         0       0       0       0       0       0       0
  2793 ;;      Locals:         0       1       0       0       0       0       0
  2794 ;;      Temps:          0       1       0       0       0       0       0
  2795 ;;      Totals:         0       2       0       0       0       0       0
  2796 ;;Total ram usage:        2 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_lcd_wrCom
  2802 ;;		_lcd_wrData
  2803 ;;		_lcd_resetSequence
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text18
  2808  0011D6                     __ptext18:
  2809                           	opt callstack 0
  2810  0011D6                     _lcd_ecrireDonnees:
  2811                           	opt callstack 27
  2812                           
  2813                           ;incstack = 0
  2814                           ;lcd_ecrireDonnees@donnee stored from wreg
  2815  0011D6  0100               	movlb	0	; force () banked
  2816  0011D8  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  2817  0011DA                     
  2818                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  2819  0011DA  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  2820  0011DE  0EF0               	movlw	240
  2821  0011E0  0100               	movlb	0	; force () banked
  2822  0011E2  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  2823  0011E4  0100               	movlb	0	; force () banked
  2824  0011E6  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  2825  0011E8  0B0F               	andlw	15
  2826  0011EA  0100               	movlb	0	; force () banked
  2827  0011EC  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  2828  0011EE  6E83               	movwf	131,c	;volatile
  2829  0011F0                     
  2830                           ; BSR set to: 0
  2831  0011F0  0012               	return		;funcret
  2832  0011F2                     __end_of_lcd_ecrireDonnees:
  2833                           	opt callstack 0
  2834                           
  2835 ;; *************** function _lcd_busy *****************
  2836 ;; Defined at:
  2837 ;;		line 124 in file "Lcd4Lignes.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  adresse         1    1[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      unsigned char 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         0       0       0       0       0       0       0
  2852 ;;      Locals:         0       1       0       0       0       0       0
  2853 ;;      Temps:          0       1       0       0       0       0       0
  2854 ;;      Totals:         0       2       0       0       0       0       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    1
  2858 ;; This function calls:
  2859 ;;		_lcd_lireDonnees
  2860 ;; This function is called by:
  2861 ;;		_lcd_wrCom
  2862 ;;		_lcd_wrData
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text19
  2867  00109C                     __ptext19:
  2868                           	opt callstack 0
  2869  00109C                     _lcd_busy:
  2870                           	opt callstack 26
  2871  00109C                     
  2872                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  2873  00109C  9080               	bcf	128,0,c	;volatile
  2874                           
  2875                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  2876  00109E  8280               	bsf	128,1,c	;volatile
  2877  0010A0                     l141:
  2878                           
  2879                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  2880  0010A0  8480               	bsf	128,2,c	;volatile
  2881                           
  2882                           ;Lcd4Lignes.c: 134: __nop();
  2883  0010A2  F000               	nop	
  2884  0010A4                     
  2885                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  2886  0010A4  EC09  F009         	call	_lcd_lireDonnees	;wreg free
  2887  0010A8  0100               	movlb	0	; force () banked
  2888  0010AA  6FB4               	movwf	??_lcd_busy& (0+255),b
  2889  0010AC  39B4               	swapf	??_lcd_busy& (0+255),w,b
  2890  0010AE  0BF0               	andlw	240
  2891  0010B0  0100               	movlb	0	; force () banked
  2892  0010B2  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  2893  0010B4                     
  2894                           ; BSR set to: 0
  2895                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  2896  0010B4  9480               	bcf	128,2,c	;volatile
  2897  0010B6                     
  2898                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  2899  0010B6  8480               	bsf	128,2,c	;volatile
  2900  0010B8                     
  2901                           ;Lcd4Lignes.c: 139: __nop();
  2902  0010B8  F000               	nop	
  2903                           
  2904                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  2905  0010BA  EC09  F009         	call	_lcd_lireDonnees	;wreg free
  2906  0010BE  0100               	movlb	0	; force () banked
  2907  0010C0  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  2908  0010C2                     
  2909                           ; BSR set to: 0
  2910                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  2911  0010C2  9480               	bcf	128,2,c	;volatile
  2912  0010C4                     
  2913                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  2914  0010C4  0100               	movlb	0	; force () banked
  2915  0010C6  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  2916  0010C8  EF68  F008         	goto	u501
  2917  0010CC  EF6A  F008         	goto	u500
  2918  0010D0                     u501:
  2919  0010D0  EF50  F008         	goto	l141
  2920  0010D4                     u500:
  2921  0010D4                     
  2922                           ; BSR set to: 0
  2923                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  2924  0010D4  9280               	bcf	128,1,c	;volatile
  2925  0010D6                     
  2926                           ; BSR set to: 0
  2927                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  2928  0010D6  0100               	movlb	0	; force () banked
  2929  0010D8  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  2930  0010DA  0B7F               	andlw	127
  2931  0010DC                     
  2932                           ; BSR set to: 0
  2933  0010DC  0012               	return		;funcret
  2934  0010DE                     __end_of_lcd_busy:
  2935                           	opt callstack 0
  2936                           
  2937 ;; *************** function _lcd_lireDonnees *****************
  2938 ;; Defined at:
  2939 ;;		line 93 in file "Lcd4Lignes.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      unsigned char 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2953 ;;      Params:         0       0       0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_lcd_busy
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text20
  2967  001212                     __ptext20:
  2968                           	opt callstack 0
  2969  001212                     _lcd_lireDonnees:
  2970                           	opt callstack 26
  2971  001212                     
  2972                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  2973  001212  5083               	movf	131,w,c	;volatile
  2974  001214  0B0F               	andlw	15
  2975  001216  0012               	return		;funcret
  2976  001218                     __end_of_lcd_lireDonnees:
  2977                           	opt callstack 0
  2978                           
  2979 ;; *************** function _initialisation *****************
  2980 ;; Defined at:
  2981 ;;		line 71 in file "main.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2995 ;;      Params:         0       0       0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    1
  3002 ;; This function calls:
  3003 ;;		_srand
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text21
  3010  001152                     __ptext21:
  3011                           	opt callstack 0
  3012  001152                     _initialisation:
  3013                           	opt callstack 29
  3014  001152                     
  3015                           ;main.c: 73: TRISD = 0;
  3016  001152  0E00               	movlw	0
  3017  001154  6E95               	movwf	149,c	;volatile
  3018                           
  3019                           ;main.c: 74: ANSELH = 0;
  3020  001156  0E00               	movlw	0
  3021  001158  6E7F               	movwf	127,c	;volatile
  3022  00115A                     
  3023                           ;main.c: 75: TRISB = 0xFF;
  3024  00115A  6893               	setf	147,c	;volatile
  3025                           
  3026                           ;main.c: 76: ANSEL = 0;
  3027  00115C  0E00               	movlw	0
  3028  00115E  6E7E               	movwf	126,c	;volatile
  3029                           
  3030                           ;main.c: 77: TRISA = 0;
  3031  001160  0E00               	movlw	0
  3032  001162  6E92               	movwf	146,c	;volatile
  3033  001164                     
  3034                           ;main.c: 81: T1CONbits.TMR1ON = 1;
  3035  001164  80CD               	bsf	205,0,c	;volatile
  3036  001166                     
  3037                           ;main.c: 82: srand(TMR1);
  3038  001166  CFCE F0B4          	movff	4046,srand@x	;volatile
  3039  00116A  CFCF F0B5          	movff	4047,srand@x+1	;volatile
  3040  00116E  ECF9  F008         	call	_srand	;wreg free
  3041  001172                     
  3042                           ;main.c: 84: ANSELbits.ANS7 = 1;
  3043  001172  8E7E               	bsf	126,7,c	;volatile
  3044  001174                     
  3045                           ;main.c: 85: ADCON0bits.ADON = 1;
  3046  001174  80C2               	bsf	194,0,c	;volatile
  3047  001176                     
  3048                           ;main.c: 86: ADCON1 = 0;
  3049  001176  0E00               	movlw	0
  3050  001178  6EC1               	movwf	193,c	;volatile
  3051  00117A                     
  3052                           ;main.c: 87: ADCON2bits.ADFM = 0;
  3053  00117A  9EC0               	bcf	192,7,c	;volatile
  3054  00117C                     
  3055                           ;main.c: 88: ADCON2bits.ACQT = 0;
  3056  00117C  0EC7               	movlw	-57
  3057  00117E  16C0               	andwf	192,f,c	;volatile
  3058  001180                     
  3059                           ;main.c: 89: ADCON2bits.ADCS = 0;
  3060  001180  0EF8               	movlw	-8
  3061  001182  16C0               	andwf	192,f,c	;volatile
  3062  001184  0012               	return		;funcret
  3063  001186                     __end_of_initialisation:
  3064                           	opt callstack 0
  3065                           
  3066 ;; *************** function _srand *****************
  3067 ;; Defined at:
  3068 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  x               2    0[BANK0 ] unsigned int 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		status,2
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3082 ;;      Params:         0       2       0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0
  3085 ;;      Totals:         0       2       0       0       0       0       0
  3086 ;;Total ram usage:        2 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_initialisation
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text22
  3096  0011F2                     __ptext22:
  3097                           	opt callstack 0
  3098  0011F2                     _srand:
  3099                           	opt callstack 29
  3100  0011F2  C0B4  F0D4         	movff	srand@x,_randx
  3101  0011F6  C0B5  F0D5         	movff	srand@x+1,_randx+1
  3102  0011FA  0100               	movlb	0	; () banked
  3103  0011FC  6BD6               	clrf	(_randx+2)& (0+255),b
  3104  0011FE  6BD7               	clrf	(_randx+3)& (0+255),b
  3105  001200                     
  3106                           ; BSR set to: 0
  3107  001200  0012               	return		;funcret
  3108  001202                     __end_of_srand:
  3109                           	opt callstack 0
  3110                           
  3111 ;; *************** function _initTabVue *****************
  3112 ;; Defined at:
  3113 ;;		line 99 in file "main.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  j               1    2[BANK0 ] unsigned char 
  3118 ;;  i               1    3[BANK0 ] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3128 ;;      Params:         0       0       0       0       0       0       0
  3129 ;;      Locals:         0       2       0       0       0       0       0
  3130 ;;      Temps:          0       2       0       0       0       0       0
  3131 ;;      Totals:         0       4       0       0       0       0       0
  3132 ;;Total ram usage:        4 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text23
  3142  000C92                     __ptext23:
  3143                           	opt callstack 0
  3144  000C92                     _initTabVue:
  3145                           	opt callstack 30
  3146  000C92                     
  3147                           ;main.c: 101: for (char i = 0; i < 4; i++)
  3148  000C92  0E00               	movlw	0
  3149  000C94  0100               	movlb	0	; force () banked
  3150  000C96  6FB7               	movwf	initTabVue@i& (0+255),b
  3151  000C98                     
  3152                           ; BSR set to: 0
  3153  000C98  0E03               	movlw	3
  3154  000C9A  0100               	movlb	0	; force () banked
  3155  000C9C  65B7               	cpfsgt	initTabVue@i& (0+255),b
  3156  000C9E  EF53  F006         	goto	u751
  3157  000CA2  EF55  F006         	goto	u750
  3158  000CA6                     u751:
  3159  000CA6  EF57  F006         	goto	l1831
  3160  000CAA                     u750:
  3161  000CAA  EF9E  F006         	goto	l68
  3162  000CAE                     l1831:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;main.c: 102: {;main.c: 103: for(char j=0;j<20;j++)
  3166  000CAE  0E00               	movlw	0
  3167  000CB0  0100               	movlb	0	; force () banked
  3168  000CB2  6FB6               	movwf	initTabVue@j& (0+255),b
  3169  000CB4                     
  3170                           ; BSR set to: 0
  3171  000CB4  0E13               	movlw	19
  3172  000CB6  0100               	movlb	0	; force () banked
  3173  000CB8  65B6               	cpfsgt	initTabVue@j& (0+255),b
  3174  000CBA  EF61  F006         	goto	u761
  3175  000CBE  EF63  F006         	goto	u760
  3176  000CC2                     u761:
  3177  000CC2  EF65  F006         	goto	l1837
  3178  000CC6                     u760:
  3179  000CC6  EF88  F006         	goto	l1843
  3180  000CCA                     l1837:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;main.c: 104: {;main.c: 105: m_tabVue[i][j]=1;
  3184  000CCA  0100               	movlb	0	; force () banked
  3185  000CCC  51B7               	movf	initTabVue@i& (0+255),w,b
  3186  000CCE  0D15               	mullw	21
  3187  000CD0  0E00               	movlw	low _m_tabVue
  3188  000CD2  0100               	movlb	0	; force () banked
  3189  000CD4  6FB4               	movwf	??_initTabVue& (0+255),b
  3190  000CD6  0E01               	movlw	high _m_tabVue
  3191  000CD8  6FB5               	movwf	(??_initTabVue+1)& (0+255),b
  3192  000CDA  50F3               	movf	243,w,c
  3193  000CDC  27B4               	addwf	??_initTabVue& (0+255),f,b
  3194  000CDE  50F4               	movf	244,w,c
  3195  000CE0  23B5               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3196  000CE2  0100               	movlb	0	; force () banked
  3197  000CE4  51B6               	movf	initTabVue@j& (0+255),w,b
  3198  000CE6  0100               	movlb	0	; force () banked
  3199  000CE8  25B4               	addwf	??_initTabVue& (0+255),w,b
  3200  000CEA  6ED9               	movwf	fsr2l,c
  3201  000CEC  0100               	movlb	0	; force () banked
  3202  000CEE  0E00               	movlw	0
  3203  000CF0  0100               	movlb	0	; force () banked
  3204  000CF2  21B5               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3205  000CF4  6EDA               	movwf	fsr2h,c
  3206  000CF6  0E01               	movlw	1
  3207  000CF8  6EDF               	movwf	indf2,c
  3208  000CFA                     
  3209                           ; BSR set to: 0
  3210  000CFA  0100               	movlb	0	; force () banked
  3211  000CFC  2BB6               	incf	initTabVue@j& (0+255),f,b
  3212  000CFE                     
  3213                           ; BSR set to: 0
  3214  000CFE  0E13               	movlw	19
  3215  000D00  0100               	movlb	0	; force () banked
  3216  000D02  65B6               	cpfsgt	initTabVue@j& (0+255),b
  3217  000D04  EF86  F006         	goto	u771
  3218  000D08  EF88  F006         	goto	u770
  3219  000D0C                     u771:
  3220  000D0C  EF65  F006         	goto	l1837
  3221  000D10                     u770:
  3222  000D10                     l1843:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;main.c: 106: };main.c: 107: m_tabVue[i][20]=0;
  3226  000D10  0100               	movlb	0	; force () banked
  3227  000D12  51B7               	movf	initTabVue@i& (0+255),w,b
  3228  000D14  0D15               	mullw	21
  3229  000D16  0E14               	movlw	low (_m_tabVue+20)
  3230  000D18  24F3               	addwf	243,w,c
  3231  000D1A  6ED9               	movwf	fsr2l,c
  3232  000D1C  0E01               	movlw	high (_m_tabVue+20)
  3233  000D1E  20F4               	addwfc	prodh,w,c
  3234  000D20  6EDA               	movwf	fsr2h,c
  3235  000D22  0E00               	movlw	0
  3236  000D24  6EDF               	movwf	indf2,c
  3237  000D26                     
  3238                           ; BSR set to: 0
  3239  000D26  0100               	movlb	0	; force () banked
  3240  000D28  2BB7               	incf	initTabVue@i& (0+255),f,b
  3241  000D2A                     
  3242                           ; BSR set to: 0
  3243  000D2A  0E03               	movlw	3
  3244  000D2C  0100               	movlb	0	; force () banked
  3245  000D2E  65B7               	cpfsgt	initTabVue@i& (0+255),b
  3246  000D30  EF9C  F006         	goto	u781
  3247  000D34  EF9E  F006         	goto	u780
  3248  000D38                     u781:
  3249  000D38  EF57  F006         	goto	l1831
  3250  000D3C                     u780:
  3251  000D3C                     l68:
  3252                           
  3253                           ; BSR set to: 0
  3254  000D3C  0012               	return		;funcret
  3255  000D3E                     __end_of_initTabVue:
  3256                           	opt callstack 0
  3257                           
  3258                           	psect	param0
  3259  0000                     tosu	equ	0xFFF
  3260                           tosh	equ	0xFFE
  3261                           tosl	equ	0xFFD
  3262                           stkptr	equ	0xFFC
  3263                           pclatu	equ	0xFFB
  3264                           pclath	equ	0xFFA
  3265                           pcl	equ	0xFF9
  3266                           tblptru	equ	0xFF8
  3267                           tblptrh	equ	0xFF7
  3268                           tblptrl	equ	0xFF6
  3269                           tablat	equ	0xFF5
  3270                           prodh	equ	0xFF4
  3271                           prodl	equ	0xFF3
  3272                           indf0	equ	0xFEF
  3273                           postinc0	equ	0xFEE
  3274                           postdec0	equ	0xFED
  3275                           preinc0	equ	0xFEC
  3276                           plusw0	equ	0xFEB
  3277                           fsr0h	equ	0xFEA
  3278                           fsr0l	equ	0xFE9
  3279                           wreg	equ	0xFE8
  3280                           indf1	equ	0xFE7
  3281                           postinc1	equ	0xFE6
  3282                           postdec1	equ	0xFE5
  3283                           preinc1	equ	0xFE4
  3284                           plusw1	equ	0xFE3
  3285                           fsr1h	equ	0xFE2
  3286                           fsr1l	equ	0xFE1
  3287                           bsr	equ	0xFE0
  3288                           indf2	equ	0xFDF
  3289                           postinc2	equ	0xFDE
  3290                           postdec2	equ	0xFDD
  3291                           preinc2	equ	0xFDC
  3292                           plusw2	equ	0xFDB
  3293                           fsr2h	equ	0xFDA
  3294                           fsr2l	equ	0xFD9
  3295                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     32     120
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabMines(BANK0[84]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    _initialisation->_srand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4369
                                             29 BANK0      3     3      0
                         _initTabVue
                     _initialisation
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                          9     7      2    1143
                                             20 BANK0      9     7      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    1093
                                             18 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 12     8      4     781
                                              6 BANK0     12     8      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              5 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1     494
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initTabVue
   _initialisation
     _srand
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     20      78       4       75.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      14        0.0%
DATA                 0      0     10C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 15:24:58 2019

 __end_of_calculToucheCombien 07B6                            l61 1184                            l68 0D3C  
                          l79 0A6E                            l88 0912                            l97 06F4  
         ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l104 07B4                           l212 1210                           l141 10A0  
                         l142 10D4                           l135 1216                           l143 10DC  
                         l152 1150                           l209 0DDE                           l138 11F0  
                         l155 0F92                           l164 1208                           l149 0F28  
                         l158 11D4                           l190 109A                           l262 11AC  
                         l273 0EAC                           l506 0C90                           l274 0EBC  
                         l179 0E50                           l196 0BDE                           l926 1200  
                         l929 1046                  __CFG_CPB$OFF 000000                           u500 10D4  
                         u501 10D0                           u510 0F02                           u511 0EFE  
                         u520 0F16                           u600 0792                           u521 0F12  
                         u601 078E                           u610 07B0                           u530 0E72  
                __CFG_CPD$OFF 000000                           u611 07AC                           u531 0E6E  
                         u620 0D5C                           u700 0C5C                           u540 0EAC  
                         u621 0D58                           u701 0C58                           u541 0EA8  
                         u630 0D78                           u550 0652                           u710 0C80  
                         u631 0D74                           u551 064E                           u711 0C7C  
                         u640 0DC4                           u720 0B7E                           u560 066C  
                         u800 0948                           u641 0DC0                           u561 0668  
                         u801 0944                           u650 0DDA                           u730 0BCE  
                         u570 06F0                           u810 0992                           u651 0DD6  
                         u571 06EC                           u811 098E                           u740 0BDE  
                         u580 0734                           u900 0912                           u660 0BF4  
                         u820 09A8                           u741 0BDA                           u581 0730  
                         u901 090E                           u661 0BF0                           u821 09A4  
                         u750 0CAA                           u590 0752                           u670 0C0E  
                         u830 0A1A                           u751 0CA6                           u727 0B74  
                         u591 074E                           u671 0C0A                           u831 0A16  
                         u760 0CC6                           u680 0C28                           u840 0A6E  
                         u920 0ABE                           u761 0CC2                           u737 0BC4  
                         u681 0C24                           u841 0A6A                           u921 0ABA  
                         u770 0D10                           u850 07CE                           u690 0C46  
                         u930 0B12                           u771 0D0C                           u851 07CA  
                         u691 0C42                           u931 0B0E                           u780 0D3C  
                         u860 07EA                           u781 0D38                           u861 07E6  
                         u870 082C                           u790 092C                           u871 0828  
                         u791 0928                           u880 08B6                           u881 08B2  
                         u890 08FC                           u891 08F8                           u947 0B1A  
                         u957 0F36                           u967 0F52                           u977 0F64  
                         u987 0F76                           u997 0F88                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                           prod 000FF3                   lcd_gotoXY@x 00B8  
                         wreg 000FE8                   lcd_gotoXY@y 00B7                  __CFG_LVP$OFF 000000  
                        l1601 112A                          l1531 1212                          l1611 113C  
                        l1603 112A                          l1541 10B4                          l1621 114C  
                        l1613 113C                          l1605 112C                          l1701 0F5E  
                        l1551 10C4                          l1543 10B6                          l1535 11DA  
                        l1615 1144                          l1607 112E                          l1711 0F7C  
                        l1703 0F62                          l1801 1172                          l1553 10C4  
                        l1545 10B6                          l1537 109C                          l1561 0EC2  
                        l1625 1202                          l1617 1148                          l1609 1138  
                        l1721 0D44                          l1713 0F82                          l1705 0F6A  
                        l1641 0E8C                          l1633 0E52                          l1643 11F2  
                        l1811 1180                          l1803 1174                          l1555 10D6  
                        l1547 10B8                          l1539 10A4                          l1571 0ECE  
                        l1563 0EC6                          l1619 1148                          l1723 0D4A  
                        l1715 0F86                          l1707 0F70                          l1627 1186  
                        l1635 0E64                          l1805 1176                          l1549 10C2  
                        l1581 0EE8                          l1573 0ED8                          l1565 0ECA  
                        l1741 0DC8                          l1733 0D7C                          l1717 0F8E  
                        l1709 0F74                          l1813 11AE                          l1821 0B82  
                        l1629 11A4                          l1661 065C                          l1653 0614  
                        l1901 08E6                          l1637 0E72                          l1645 0FF2  
                        l1831 0CAE                          l1807 117A                          l1559 120A  
                        l1591 0F24                          l1583 0EF0                          l1575 0EDC  
                        l1567 0ECA                          l1911 0DE8                          l1735 0DAE  
                        l1743 0DDA                          l1727 0D60                          l1719 0D3E  
                        l1815 11D0                          l1751 1070                          l1823 0B86  
                        l1671 06FA                          l1663 066C                          l1655 063C  
                        l1903 08EA                          l1639 0E82                          l1647 1028  
                        l1841 0CFE                          l1833 0CB4                          l1825 0C92  
                        l1809 117C                          l1593 0F24                          l1585 0F02  
                        l1577 0EDC                          l1569 0ECC                          l1913 0DF8  
                        l1921 0E28                          l1737 0DB2                          l1729 0D66  
                        l1745 104C                          l1817 0B2C                          l1681 07B0  
                        l1673 0734                          l1665 067A                          l1657 0642  
                        l1905 08FC                          l1761 0BF4                          l1649 103A  
                        l1843 0D10                          l1827 0C98                          l1587 0F16  
                        l1579 0EE4                          l1915 0E08                          l1739 0DC4  
                        l1691 0F44                          l1747 105C                          l1755 107A  
                        l1819 0B36                          l1675 0752                          l1667 069A  
                        l1659 0652                          l1907 0900                          l1771 0C28  
                        l1763 0BFC                          l1851 091A                          l1931 0A70  
                        l1845 0D26                          l1837 0CCA                          l1589 0F20  
                        l1917 0E18                          l1909 0DE4                          l1597 1122  
                        l1693 0F46                          l1685 0F2A                          l1749 1066  
                        l1669 06F0                          l1677 0758                          l1781 0C64  
                        l1773 0C30                          l1765 0C00                          l1757 0BE0  
                        l1861 094C                          l1941 0AA2                          l1933 0A74  
                        l1847 0D2A                          l1839 0CFA                          l1599 1126  
                        l1695 0F4C                          l1687 0F2E                          l1679 0792  
                        l1783 0C6A                          l1775 0C38                          l1767 0C0E  
                        l1759 0BE6                          l1871 09AC                          l1863 097C  
                        l1855 0930                          l1951 0AD0                          l1943 0AA6  
                        l1935 0A78                          l1793 1152                          l1697 0F50  
                        l1689 0F42                          l1881 07B6                          l1777 0C46  
                        l1785 0C70                          l1769 0C16                          l1873 09DC  
                        l1865 0980                          l1857 0936                          l1849 0914  
                        l1953 0AFC                          l1945 0AAC                          l1937 0A90  
                        l1795 115A                          l1699 0F58                          l1883 07BC  
                        l1787 0C80                          l1779 0C5C                          l1875 0A1A  
                        l1867 0992                          l1955 0B00                          l1939 0A94  
                        l1797 1164                          l1893 07EE                          l1789 0C88  
                        l1877 0A4A                          l1869 0996                          l1957 0B12  
                        l1949 0AC2                          l1799 1166                          l1895 082C  
                        l1887 07D2                          l1879 0A52                          l1897 0878  
                        l1889 07D8                          l1899 08B6                          STR_1 0601  
                        u1007 0EEA                          u1017 0F18                          _RCIF 007CF5  
                        _TMR1 000FCE              ??_initialisation 00B6                          _main 0A70  
                        _rand 0FF2                          fsr2h 000FDA                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ?_lcd_putMessage 00B9  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             ??_lcd_ecritChar 00B7                         ?_main 00B4                         ?_rand 00C0  
             __end_of___awmod 0C92                         _ANSEL 000F7E                         _RCREG 000FAE  
                       _SPBRG 000FAF                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000           ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00B7                         _randx 00D4                         _srand 11F2  
                       main@i 00D3                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000              _metToucheCombien 07B6  
             __initialization 0F94                  __end_of_main 0B2C                  __end_of_rand 1048  
  calculToucheCombien@nbMines 00C1          lcd_putMessage@chaine 00B9    calculToucheCombien@colonne 00BC  
                      ??_main 00D1                        ??_rand 00C2                 __activetblptr 000003  
                      _ADCON1 000FC1                        ?_srand 00B4                        _ANSELH 000F7F  
                 initTabVue@i 00B7                   initTabVue@j 00B6                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 00C8                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA              __end_of_lcd_busy 10DE  
            __end_of_lcd_init 11D6                        ___lmul 0E52                        ___wmul 1186  
              __CFG_STVREN$ON 000000                     ??___awmod 00C6                        clear_0 0FDA  
                      clear_1 0FE6               ___awmod@divisor 00C4               ___awmod@counter 00C6  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        srand@x 00B4             _lcd_resetSequence 0F2A  
                  __accesstop 0060       __end_of__initialization 0FEC           _lcd_strobeEnableBit 120A  
          ?_lcd_resetSequence 00B4                 ___rparam_used 000000                  __pidataBANK0 1218  
                __pidataBANK1 10DE           ??_lcd_resetSequence 00B6                 __end_of_srand 1202  
        ?_lcd_strobeEnableBit 00B4            __size_of_lcd_wrCom 006C     __end_of_lcd_resetSequence 0F94  
                     ??_srand 00B6      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 11D6  
                  __pbssBANK0 0060                    __pbssBANK1 0100              ??_lcd_putMessage 00BC  
          ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4  
                     ?___lmul 00B4                       ?___wmul 00B4                ___lmul@product 00BC  
       ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 01A2      __end_of_metToucheCombien 0914  
                  _lcd_gotoXY 0DE0                    _lcd_wrData 111E     __end_of_lcd_ecrireDonnees 11F2  
                   ?_lcd_busy 00B4                     ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5  
                  _m_tabMines 0060          __size_of_rempliMines 015C                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 0C92             __end_of_lcd_wrCom 0F2A  
             __size_of___lmul 006C                       ___awmod 0BE0               __size_of___wmul 0028  
                __psmallconst 0600                       __pcinit 0F94                     _ANSELbits 000F7E  
                     __ramtop 0600                       __ptext0 0A70                       __ptext1 0914  
                     __ptext2 0FF2                       __ptext3 0E52                       __ptext4 0BE0  
                     __ptext5 07B6                       __ptext6 0614                       __ptext7 1186  
                     __ptext8 0B2C                       __ptext9 1048         __end_of_lcd_ecritChar 109C  
             lcd_busy@adresse 00B5                     _T1CONbits 000FCD              ___awmod@dividend 00C2  
            lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4                    ??_lcd_init 00BB  
  __size_of_lcd_resetSequence 006A          end_of_initialization 0FEC         __end_of_lcd_initCGRam 0DE0  
           ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80  
                 ?_lcd_gotoXY 00B7                     _TRISCbits 000F94                   ?_lcd_wrData 00B4  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC                   ?_initTabVue 00B4  
              __end_of___lmul 0EBE                __end_of___wmul 11AE                   _BAUDCONbits 000FB8  
         start_initialization 0F94           _calculToucheCombien 0614           __size_of_lcd_gotoXY 0072  
                    ??___lmul 00BC                      ??___wmul 00B8                 rempliMines@nb 00C8  
         __size_of_lcd_wrData 0034                   __pdataBANK0 00D4                   __pdataBANK1 0154  
            __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA                 __pcstackBANK0 00B4  
           ?_metToucheCombien 00B4           __size_of_initTabVue 00AC            ??_metToucheCombien 00C6  
           __size_of_lcd_busy 0042             __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000  
 __end_of_lcd_strobeEnableBit 1212                _initialisation 1152                      ?___awmod 00C2  
                   _lcd_wrCom 0EBE         ??_calculToucheCombien 00BE                   __smallconst 0600  
             _lcd_lireDonnees 1212           lcd_wrData@caractere 00B6                __size_of_srand 0010  
               ??_rempliMines 00CA               _lcd_curseurHome 1202                ___wmul@product 00B8  
      __end_of_initialisation 1186              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4  
                  ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 0FA8  
                   copy_data1 0FC8                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 0A70  
                ??_initTabVue 00B4            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CF  
                rempliMines@j 00D0                  rempliMines@x 00CD                  rempliMines@y 00CE  
          __end_of_lcd_gotoXY 0E52            __end_of_lcd_wrData 1152              __size_of___awmod 00B2  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C1       __end_of_lcd_lireDonnees 1218  
                    _matCGRAM 0154       __end_of_lcd_curseurHome 120A                      __ptext10 11AE  
                    __ptext11 0F2A                      __ptext20 1212                      __ptext12 0D3E  
                    __ptext21 1152                      __ptext13 111E                      __ptext22 11F2  
                    __ptext14 1202                      __ptext23 0C92                      __ptext15 0DE0  
                    __ptext16 0EBE                      __ptext17 120A                      __ptext18 11D6  
                    __ptext19 109C             metToucheCombien@i 00C9             metToucheCombien@j 00CA  
                    _lcd_busy 109C                      _lcd_init 11AE            __end_of_initTabVue 0D3E  
    calculToucheCombien@ligne 00BA                      _m_tabVue 0100                 __size_of_main 00BC  
               __size_of_rand 0056                   ??_lcd_wrCom 00B6                 _lcd_ecritChar 1048  
               _lcd_initCGRam 0D3E                   _rempliMines 0914          calculToucheCombien@i 00C2  
        calculToucheCombien@j 00C4     __size_of_metToucheCombien 015E                _lcd_putMessage 0B2C  
              ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4              ?_lcd_curseurHome 00B4  
              ?_lcd_initCGRam 00B4             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 0BE0  
