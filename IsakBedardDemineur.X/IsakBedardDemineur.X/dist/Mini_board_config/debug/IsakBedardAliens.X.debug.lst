

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 12:57:52 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2,minocg
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F45K20 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataBANK0
    62  0007B2                     __pidataBANK0:
    63                           	opt callstack 0
    64                           
    65                           ;initializer for _matCGRAM
    66  0007B2  08                 	db	8
    67  0007B3  04                 	db	4
    68  0007B4  04                 	db	4
    69  0007B5  0A                 	db	10
    70  0007B6  11                 	db	17
    71  0007B7  1F                 	db	31
    72  0007B8  11                 	db	17
    73  0007B9  00                 	db	0
    74  0007BA  00                 	db	0
    75  0007BB  00                 	db	0
    76  0007BC  0E                 	db	14
    77  0007BD  11                 	db	17
    78  0007BE  15                 	db	21
    79  0007BF  0E                 	db	14
    80  0007C0  0A                 	db	10
    81  0007C1  00                 	db	0
    82  0007C2  11                 	db	17
    83  0007C3  0E                 	db	14
    84  0007C4  11                 	db	17
    85  0007C5  15                 	db	21
    86  0007C6  15                 	db	21
    87  0007C7  0E                 	db	14
    88  0007C8  0A                 	db	10
    89  0007C9  00                 	db	0
    90  0007CA  0E                 	db	14
    91  0007CB  11                 	db	17
    92  0007CC  15                 	db	21
    93  0007CD  15                 	db	21
    94  0007CE  15                 	db	21
    95  0007CF  0E                 	db	14
    96  0007D0  15                 	db	21
    97  0007D1  04                 	db	4
    98  0007D2  04                 	db	4
    99  0007D3  04                 	db	4
   100  0007D4  04                 	db	4
   101  0007D5  04                 	db	4
   102  0007D6  0E                 	db	14
   103  0007D7  0E                 	db	14
   104  0007D8  1B                 	db	27
   105  0007D9  11                 	db	17
   106  0007DA  04                 	db	4
   107  0007DB  0A                 	db	10
   108  0007DC  0E                 	db	14
   109  0007DD  11                 	db	17
   110  0007DE  1F                 	db	31
   111  0007DF  10                 	db	16
   112  0007E0  0E                 	db	14
   113  0007E1  00                 	db	0
   114  0007E2  08                 	db	8
   115  0007E3  04                 	db	4
   116  0007E4  0E                 	db	14
   117  0007E5  01                 	db	1
   118  0007E6  0F                 	db	15
   119  0007E7  11                 	db	17
   120  0007E8  0F                 	db	15
   121  0007E9  00                 	db	0
   122  0007EA  04                 	db	4
   123  0007EB  0A                 	db	10
   124  0007EC  0E                 	db	14
   125  0007ED  01                 	db	1
   126  0007EE  0F                 	db	15
   127  0007EF  11                 	db	17
   128  0007F0  0F                 	db	15
   129  0007F1  00                 	db	0
   130                           
   131                           ;initializer for _randx
   132  0007F2  0001               	dw	1
   133  0007F4  0000               	dw	0
   134  0000                     _TRISCbits	set	3988
   135  0000                     _PORTAbits	set	3968
   136  0000                     _PORTD	set	3971
   137  0000                     _ANSELbits	set	3966
   138  0000                     _TRISA	set	3986
   139  0000                     _ANSEL	set	3966
   140  0000                     _TRISB	set	3987
   141  0000                     _ANSELH	set	3967
   142  0000                     _TRISD	set	3989
   143  0000                     _TMR1	set	4046
   144  0000                     _RCREG	set	4014
   145  0000                     _TXREG	set	4013
   146  0000                     _RCSTAbits	set	4011
   147  0000                     _TXSTAbits	set	4012
   148  0000                     _BAUDCONbits	set	4024
   149  0000                     _SPBRG	set	4015
   150  0000                     _SPBRGH	set	4016
   151  0000                     _ADCON2bits	set	4032
   152  0000                     _ADCON1	set	4033
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _T1CONbits	set	4045
   155  0000                     _RCIF	set	31989
   156                           
   157                           	psect	smallconst
   158  000600                     __psmallconst:
   159                           	opt callstack 0
   160  000600  00                 	db	0
   161  000601                     STR_1:
   162                           
   163                           ; BSR set to: 0
   164  000601  4C                 	db	76	;'L'
   165  000602  41                 	db	65	;'A'
   166  000603  42                 	db	66	;'B'
   167  000604  36                 	db	54	;'6'
   168  000605  20                 	db	32
   169  000606  49                 	db	73	;'I'
   170  000607  73                 	db	115	;'s'
   171  000608  61                 	db	97	;'a'
   172  000609  6B                 	db	107	;'k'
   173  00060A  20                 	db	32
   174  00060B  42                 	db	66	;'B'
   175  00060C  65                 	db	101	;'e'
   176  00060D  64                 	db	100	;'d'
   177  00060E  61                 	db	97	;'a'
   178  00060F  72                 	db	114	;'r'
   179  000610  64                 	db	100	;'d'
   180  000611  00                 	db	0
   181                           
   182                           ; #config settings
   183  000612  00                 	db	0	; dummy byte at the end
   184  0000                     
   185                           	psect	cinit
   186  0008D8                     __pcinit:
   187                           	opt callstack 0
   188  0008D8                     start_initialization:
   189                           	opt callstack 0
   190  0008D8                     __initialization:
   191                           	opt callstack 0
   192                           
   193                           ; Initialize objects allocated to BANK0 (68 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195  0008D8  0EB2               	movlw	low __pidataBANK0
   196  0008DA  6EF6               	movwf	tblptrl,c
   197  0008DC  0E07               	movlw	high __pidataBANK0
   198  0008DE  6EF7               	movwf	tblptrh,c
   199  0008E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200  0008E2  6EF8               	movwf	tblptru,c
   201  0008E4  EE00  F060         	lfsr	0,__pdataBANK0
   202  0008E8  EE10 F044          	lfsr	1,68
   203  0008EC                     copy_data0:
   204  0008EC  0009               	tblrd		*+
   205  0008EE  CFF5 FFEE          	movff	tablat,postinc0
   206  0008F2  50E5               	movf	postdec1,w,c
   207  0008F4  50E1               	movf	fsr1l,w,c
   208  0008F6  E1FA               	bnz	copy_data0
   209                           
   210                           ; Clear objects allocated to BANK1 (168 bytes)
   211  0008F8  EE01  F000         	lfsr	0,__pbssBANK1
   212  0008FC  0EA8               	movlw	168
   213  0008FE                     clear_0:
   214  0008FE  6AEE               	clrf	postinc0,c
   215  000900  06E8               	decf	wreg,f,c
   216  000902  E1FD               	bnz	clear_0
   217  000904                     end_of_initialization:
   218                           	opt callstack 0
   219  000904                     __end_of__initialization:
   220                           	opt callstack 0
   221  000904  0100               	movlb	0
   222  000906  EF1C  F004         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	dataBANK0
   225  000060                     __pdataBANK0:
   226                           	opt callstack 0
   227  000060                     _matCGRAM:
   228                           	opt callstack 0
   229  000060                     	ds	64
   230  0000A0                     _randx:
   231                           	opt callstack 0
   232  0000A0                     	ds	4
   233                           
   234                           	psect	bssBANK1
   235  000100                     __pbssBANK1:
   236                           	opt callstack 0
   237  000100                     _m_tabMines:
   238                           	opt callstack 0
   239  000100                     	ds	84
   240  000154                     _m_tabVue:
   241                           	opt callstack 0
   242  000154                     	ds	84
   243                           
   244                           	psect	cstackBANK0
   245  0000A4                     __pcstackBANK0:
   246                           	opt callstack 0
   247  0000A4                     ??_lcd_ecrireDonnees:
   248  0000A4                     ??_lcd_busy:
   249  0000A4                     srand@x:
   250                           	opt callstack 0
   251                           
   252                           ; 2 bytes @ 0x0
   253  0000A4                     	ds	1
   254  0000A5                     lcd_ecrireDonnees@donnee:
   255                           	opt callstack 0
   256  0000A5                     lcd_busy@adresse:
   257                           	opt callstack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260  0000A5                     	ds	1
   261  0000A6                     lcd_wrCom@commande:
   262                           	opt callstack 0
   263  0000A6                     lcd_wrData@caractere:
   264                           	opt callstack 0
   265                           
   266                           ; 1 bytes @ 0x2
   267  0000A6                     	ds	1
   268  0000A7                     lcd_gotoXY@y:
   269                           	opt callstack 0
   270  0000A7                     lcd_ecritChar@car:
   271                           	opt callstack 0
   272                           
   273                           ; 1 bytes @ 0x3
   274  0000A7                     	ds	1
   275  0000A8                     lcd_gotoXY@x:
   276                           	opt callstack 0
   277  0000A8                     lcd_ecritChar@posRam:
   278                           	opt callstack 0
   279                           
   280                           ; 1 bytes @ 0x4
   281  0000A8                     	ds	1
   282  0000A9                     lcd_putMessage@chaine:
   283                           	opt callstack 0
   284                           
   285                           ; 2 bytes @ 0x5
   286  0000A9                     	ds	2
   287  0000AB                     ??_lcd_putMessage:
   288                           
   289                           ; 1 bytes @ 0x7
   290  0000AB                     	ds	2
   291  0000AD                     lcd_putMessage@j:
   292                           	opt callstack 0
   293                           
   294                           ; 1 bytes @ 0x9
   295  0000AD                     	ds	1
   296  0000AE                     ??_main:
   297                           
   298                           ; 1 bytes @ 0xA
   299  0000AE                     	ds	1
   300                           
   301 ;;
   302 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   303 ;;
   304 ;; *************** function _main *****************
   305 ;; Defined at:
   306 ;;		line 46 in file "main.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   320 ;;      Params:         0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0
   322 ;;      Temps:          0       1       0       0       0       0       0
   323 ;;      Totals:         0       1       0       0       0       0       0
   324 ;;Total ram usage:        1 bytes
   325 ;; Hardware stack levels required when called:    5
   326 ;; This function calls:
   327 ;;		_initialisation
   328 ;;		_lcd_gotoXY
   329 ;;		_lcd_putMessage
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text0
   336  000838                     __ptext0:
   337                           	opt callstack 0
   338  000838                     _main:
   339                           	opt callstack 26
   340  000838                     
   341                           ;main.c: 48: initialisation();
   342  000838  EC52  F004         	call	_initialisation	;wreg free
   343  00083C                     l1336:
   344                           
   345                           ;main.c: 51: {;main.c: 52: lcd_gotoXY(1,1);
   346  00083C  0E01               	movlw	1
   347  00083E  0100               	movlb	0	; force () banked
   348  000840  6FA7               	movwf	lcd_gotoXY@y& (0+255),b
   349  000842  0E01               	movlw	1
   350  000844  EC0A  F003         	call	_lcd_gotoXY
   351  000848                     
   352                           ;main.c: 53: lcd_putMessage("LAB6 Isak Bedard");
   353  000848  0E01               	movlw	low STR_1
   354  00084A  0100               	movlb	0	; force () banked
   355  00084C  6FA9               	movwf	lcd_putMessage@chaine& (0+255),b
   356  00084E  0E06               	movlw	high STR_1
   357  000850  6FAA               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   358  000852  EC43  F003         	call	_lcd_putMessage	;wreg free
   359  000856                     
   360                           ;main.c: 54: _delay((unsigned long)((100)*(1000000/4000.0)));
   361  000856  0E21               	movlw	33
   362  000858  0100               	movlb	0	; force () banked
   363  00085A  6FAE               	movwf	??_main& (0+255),b
   364  00085C  0E76               	movlw	118
   365  00085E                     u167:
   366  00085E  2EE8               	decfsz	wreg,f,c
   367  000860  D7FE               	bra	u167
   368  000862  2FAE               	decfsz	??_main& (0+255),f,b
   369  000864  D7FC               	bra	u167
   370  000866  F000               	nop	
   371  000868  EF1E  F004         	goto	l1336
   372  00086C  EF00  F000         	goto	start
   373  000870                     __end_of_main:
   374                           	opt callstack 0
   375                           
   376 ;; *************** function _lcd_putMessage *****************
   377 ;; Defined at:
   378 ;;		line 387 in file "Lcd4Lignes.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
   381 ;;		 -> STR_1(17), 
   382 ;; Auto vars:     Size  Location     Type
   383 ;;  j               1    9[BANK0 ] unsigned char 
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       2       0       0       0       0       0
   394 ;;      Locals:         0       1       0       0       0       0       0
   395 ;;      Temps:          0       2       0       0       0       0       0
   396 ;;      Totals:         0       5       0       0       0       0       0
   397 ;;Total ram usage:        5 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; Hardware stack levels required when called:    4
   400 ;; This function calls:
   401 ;;		_lcd_ecritChar
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text1
   408  000686                     __ptext1:
   409                           	opt callstack 0
   410  000686                     _lcd_putMessage:
   411                           	opt callstack 26
   412  000686                     
   413                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
   414  000686  0E00               	movlw	0
   415  000688  0100               	movlb	0	; force () banked
   416  00068A  6FAD               	movwf	lcd_putMessage@j& (0+255),b
   417  00068C  EF5E  F003         	goto	l1332
   418  000690                     l1328:
   419                           
   420                           ; BSR set to: 0
   421                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
   422  000690  0100               	movlb	0	; force () banked
   423  000692  51AD               	movf	lcd_putMessage@j& (0+255),w,b
   424  000694  0100               	movlb	0	; force () banked
   425  000696  25A9               	addwf	lcd_putMessage@chaine& (0+255),w,b
   426  000698  0100               	movlb	0	; force () banked
   427  00069A  6FAB               	movwf	??_lcd_putMessage& (0+255),b
   428  00069C  0E00               	movlw	0
   429  00069E  0100               	movlb	0	; force () banked
   430  0006A0  21AA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   431  0006A2  0100               	movlb	0	; force () banked
   432  0006A4  6FAC               	movwf	(??_lcd_putMessage+1)& (0+255),b
   433  0006A6  C0AB  FFF6         	movff	??_lcd_putMessage,tblptrl
   434  0006AA  C0AC  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   435  0006AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   436  0006AE  6AF8               	clrf	tblptru,c
   437  0006B0                     	endif
   438  0006B0                     	if	0	;tblptru may be non-zero
   439  0006B0                     	endif
   440  0006B0  0008               	tblrd		*
   441  0006B2  50F5               	movf	tablat,w,c
   442  0006B4  ECAF  F003         	call	_lcd_ecritChar
   443  0006B8  0100               	movlb	0	; force () banked
   444  0006BA  2BAD               	incf	lcd_putMessage@j& (0+255),f,b
   445  0006BC                     l1332:
   446                           
   447                           ; BSR set to: 0
   448  0006BC  0100               	movlb	0	; force () banked
   449  0006BE  51AD               	movf	lcd_putMessage@j& (0+255),w,b
   450  0006C0  0100               	movlb	0	; force () banked
   451  0006C2  25A9               	addwf	lcd_putMessage@chaine& (0+255),w,b
   452  0006C4  0100               	movlb	0	; force () banked
   453  0006C6  6FAB               	movwf	??_lcd_putMessage& (0+255),b
   454  0006C8  0E00               	movlw	0
   455  0006CA  0100               	movlb	0	; force () banked
   456  0006CC  21AA               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   457  0006CE  0100               	movlb	0	; force () banked
   458  0006D0  6FAC               	movwf	(??_lcd_putMessage+1)& (0+255),b
   459  0006D2  C0AB  FFF6         	movff	??_lcd_putMessage,tblptrl
   460  0006D6  C0AC  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   461  0006DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   462  0006DA  6AF8               	clrf	tblptru,c
   463  0006DC                     	endif
   464  0006DC                     	if	0	;tblptru may be non-zero
   465  0006DC                     	endif
   466  0006DC  0008               	tblrd		*
   467  0006DE  50F5               	movf	tablat,w,c
   468  0006E0  0900               	iorlw	0
   469  0006E2  A4D8               	btfss	status,2,c
   470  0006E4  EF76  F003         	goto	u151
   471  0006E8  EF78  F003         	goto	u150
   472  0006EC                     u151:
   473  0006EC  EF48  F003         	goto	l1328
   474  0006F0                     u150:
   475  0006F0                     
   476                           ; BSR set to: 0
   477  0006F0  0012               	return		;funcret
   478  0006F2                     __end_of_lcd_putMessage:
   479                           	opt callstack 0
   480                           
   481 ;; *************** function _lcd_ecritChar *****************
   482 ;; Defined at:
   483 ;;		line 359 in file "Lcd4Lignes.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  car             1    wreg     unsigned char 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  car             1    3[BANK0 ] unsigned char 
   488 ;;  posRam          1    4[BANK0 ] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   498 ;;      Params:         0       0       0       0       0       0       0
   499 ;;      Locals:         0       2       0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0
   501 ;;      Totals:         0       2       0       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    3
   505 ;; This function calls:
   506 ;;		_lcd_wrCom
   507 ;;		_lcd_wrData
   508 ;; This function is called by:
   509 ;;		_lcd_putMessage
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text2
   514  00075E                     __ptext2:
   515                           	opt callstack 0
   516  00075E                     _lcd_ecritChar:
   517                           	opt callstack 26
   518                           
   519                           ; BSR set to: 0
   520                           ;incstack = 0
   521                           ;lcd_ecritChar@car stored from wreg
   522  00075E  0100               	movlb	0	; force () banked
   523  000760  6FA7               	movwf	lcd_ecritChar@car& (0+255),b
   524  000762                     
   525                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
   526  000762  0100               	movlb	0	; force () banked
   527  000764  51A7               	movf	lcd_ecritChar@car& (0+255),w,b
   528  000766  EC38  F004         	call	_lcd_wrData
   529  00076A  0100               	movlb	0	; force () banked
   530  00076C  6FA8               	movwf	lcd_ecritChar@posRam& (0+255),b
   531                           
   532                           ;Lcd4Lignes.c: 364: switch(posRam)
   533  00076E  EFC8  F003         	goto	l1116
   534  000772                     l1108:
   535                           
   536                           ; BSR set to: 0
   537                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
   538  000772  0EC0               	movlw	192
   539  000774  EC79  F003         	call	_lcd_wrCom
   540                           
   541                           ;Lcd4Lignes.c: 368: break;
   542  000778  EFD8  F003         	goto	l145
   543  00077C                     l1110:
   544                           
   545                           ; BSR set to: 0
   546                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
   547  00077C  0E94               	movlw	148
   548  00077E  EC79  F003         	call	_lcd_wrCom
   549                           
   550                           ;Lcd4Lignes.c: 371: break;
   551  000782  EFD8  F003         	goto	l145
   552  000786                     l1112:
   553                           
   554                           ; BSR set to: 0
   555                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
   556  000786  0ED4               	movlw	212
   557  000788  EC79  F003         	call	_lcd_wrCom
   558                           
   559                           ;Lcd4Lignes.c: 374: break;
   560  00078C  EFD8  F003         	goto	l145
   561  000790                     l1116:
   562                           
   563                           ; BSR set to: 0
   564  000790  0100               	movlb	0	; force () banked
   565  000792  51A8               	movf	lcd_ecritChar@posRam& (0+255),w,b
   566                           
   567                           ; Switch size 1, requested type "simple"
   568                           ; Number of cases is 3, Range of values is 148 to 212
   569                           ; switch strategies available:
   570                           ; Name         Instructions Cycles
   571                           ; simple_byte           10     6 (average)
   572                           ;	Chosen strategy is simple_byte
   573  000794  0A94               	xorlw	148	; case 148
   574  000796  B4D8               	btfsc	status,2,c
   575  000798  EFB9  F003         	goto	l1108
   576  00079C  0A54               	xorlw	84	; case 192
   577  00079E  B4D8               	btfsc	status,2,c
   578  0007A0  EFC3  F003         	goto	l1112
   579  0007A4  0A14               	xorlw	20	; case 212
   580  0007A6  B4D8               	btfsc	status,2,c
   581  0007A8  EFBE  F003         	goto	l1110
   582  0007AC  EFD8  F003         	goto	l145
   583  0007B0                     l145:
   584  0007B0  0012               	return		;funcret
   585  0007B2                     __end_of_lcd_ecritChar:
   586                           	opt callstack 0
   587                           
   588 ;; *************** function _lcd_wrData *****************
   589 ;; Defined at:
   590 ;;		line 188 in file "Lcd4Lignes.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  caractere       1    wreg     unsigned char 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  caractere       1    2[BANK0 ] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      unsigned char 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   604 ;;      Params:         0       0       0       0       0       0       0
   605 ;;      Locals:         0       1       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0
   607 ;;      Totals:         0       1       0       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    2
   611 ;; This function calls:
   612 ;;		_lcd_busy
   613 ;;		_lcd_ecrireDonnees
   614 ;;		_lcd_strobeEnableBit
   615 ;; This function is called by:
   616 ;;		_lcd_ecritChar
   617 ;;		_lcd_effaceChar
   618 ;;		_lcd_initCGRam
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text3
   623  000870                     __ptext3:
   624                           	opt callstack 0
   625  000870                     _lcd_wrData:
   626                           	opt callstack 26
   627                           
   628                           ;incstack = 0
   629                           ;lcd_wrData@caractere stored from wreg
   630  000870  0100               	movlb	0	; force () banked
   631  000872  6FA6               	movwf	lcd_wrData@caractere& (0+255),b
   632  000874                     
   633                           ;Lcd4Lignes.c: 190: lcd_busy();
   634  000874  ECFB  F003         	call	_lcd_busy	;wreg free
   635  000878                     
   636                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
   637  000878  0E00               	movlw	0
   638  00087A  6E95               	movwf	149,c	;volatile
   639  00087C                     
   640                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
   641  00087C  8080               	bsf	128,0,c	;volatile
   642  00087E                     
   643                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
   644  00087E  9280               	bcf	128,1,c	;volatile
   645  000880                     
   646                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
   647  000880  0100               	movlb	0	; force () banked
   648  000882  39A6               	swapf	lcd_wrData@caractere& (0+255),w,b
   649  000884  0B0F               	andlw	15
   650  000886  EC85  F004         	call	_lcd_ecrireDonnees
   651  00088A                     
   652                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
   653  00088A  EC9B  F004         	call	_lcd_strobeEnableBit	;wreg free
   654  00088E                     
   655                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
   656  00088E  0100               	movlb	0	; force () banked
   657  000890  51A6               	movf	lcd_wrData@caractere& (0+255),w,b
   658  000892  EC85  F004         	call	_lcd_ecrireDonnees
   659  000896                     
   660                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
   661  000896  EC9B  F004         	call	_lcd_strobeEnableBit	;wreg free
   662  00089A                     
   663                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
   664  00089A  0E0F               	movlw	15
   665  00089C  6E95               	movwf	149,c	;volatile
   666  00089E                     
   667                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
   668                           ;Lcd4Lignes.c: 207: return(lcd_busy());
   669  00089E  ECFB  F003         	call	_lcd_busy	;wreg free
   670  0008A2  0012               	return		;funcret
   671  0008A4                     __end_of_lcd_wrData:
   672                           	opt callstack 0
   673                           
   674 ;; *************** function _lcd_gotoXY *****************
   675 ;; Defined at:
   676 ;;		line 314 in file "Lcd4Lignes.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  x               1    wreg     unsigned char 
   679 ;;  y               1    3[BANK0 ] unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  x               1    4[BANK0 ] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   691 ;;      Params:         0       1       0       0       0       0       0
   692 ;;      Locals:         0       1       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0
   694 ;;      Totals:         0       2       0       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    3
   698 ;; This function calls:
   699 ;;		_lcd_wrCom
   700 ;; This function is called by:
   701 ;;		_main
   702 ;;		_lcd_effaceLigne
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text4
   707  000614                     __ptext4:
   708                           	opt callstack 0
   709  000614                     _lcd_gotoXY:
   710                           	opt callstack 27
   711                           
   712                           ;incstack = 0
   713                           ;lcd_gotoXY@x stored from wreg
   714  000614  0100               	movlb	0	; force () banked
   715  000616  6FA8               	movwf	lcd_gotoXY@x& (0+255),b
   716  000618                     
   717                           ;Lcd4Lignes.c: 316: switch(y)
   718  000618  EF2E  F003         	goto	l1324
   719  00061C                     l1314:
   720                           
   721                           ; BSR set to: 0
   722                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
   723  00061C  0100               	movlb	0	; force () banked
   724  00061E  51A8               	movf	lcd_gotoXY@x& (0+255),w,b
   725  000620  0F7F               	addlw	127
   726  000622  0980               	iorlw	128
   727  000624  EC79  F003         	call	_lcd_wrCom
   728                           
   729                           ;Lcd4Lignes.c: 320: break;
   730  000628  EF42  F003         	goto	l134
   731  00062C                     l1316:
   732                           
   733                           ; BSR set to: 0
   734                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
   735  00062C  0100               	movlb	0	; force () banked
   736  00062E  51A8               	movf	lcd_gotoXY@x& (0+255),w,b
   737  000630  0FBF               	addlw	191
   738  000632  0980               	iorlw	128
   739  000634  EC79  F003         	call	_lcd_wrCom
   740                           
   741                           ;Lcd4Lignes.c: 323: break;
   742  000638  EF42  F003         	goto	l134
   743  00063C                     l1318:
   744                           
   745                           ; BSR set to: 0
   746                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
   747  00063C  0100               	movlb	0	; force () banked
   748  00063E  51A8               	movf	lcd_gotoXY@x& (0+255),w,b
   749  000640  0F93               	addlw	147
   750  000642  0980               	iorlw	128
   751  000644  EC79  F003         	call	_lcd_wrCom
   752                           
   753                           ;Lcd4Lignes.c: 326: break;
   754  000648  EF42  F003         	goto	l134
   755  00064C                     l1320:
   756                           
   757                           ; BSR set to: 0
   758                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
   759  00064C  0100               	movlb	0	; force () banked
   760  00064E  51A8               	movf	lcd_gotoXY@x& (0+255),w,b
   761  000650  0FD3               	addlw	211
   762  000652  0980               	iorlw	128
   763  000654  EC79  F003         	call	_lcd_wrCom
   764                           
   765                           ;Lcd4Lignes.c: 329: break;
   766  000658  EF42  F003         	goto	l134
   767  00065C                     l1324:
   768  00065C  0100               	movlb	0	; force () banked
   769  00065E  51A7               	movf	lcd_gotoXY@y& (0+255),w,b
   770                           
   771                           ; Switch size 1, requested type "simple"
   772                           ; Number of cases is 4, Range of values is 1 to 4
   773                           ; switch strategies available:
   774                           ; Name         Instructions Cycles
   775                           ; simple_byte           13     7 (average)
   776                           ;	Chosen strategy is simple_byte
   777  000660  0A01               	xorlw	1	; case 1
   778  000662  B4D8               	btfsc	status,2,c
   779  000664  EF0E  F003         	goto	l1314
   780  000668  0A03               	xorlw	3	; case 2
   781  00066A  B4D8               	btfsc	status,2,c
   782  00066C  EF16  F003         	goto	l1316
   783  000670  0A01               	xorlw	1	; case 3
   784  000672  B4D8               	btfsc	status,2,c
   785  000674  EF1E  F003         	goto	l1318
   786  000678  0A07               	xorlw	7	; case 4
   787  00067A  B4D8               	btfsc	status,2,c
   788  00067C  EF26  F003         	goto	l1320
   789  000680  EF42  F003         	goto	l134
   790  000684                     l134:
   791  000684  0012               	return		;funcret
   792  000686                     __end_of_lcd_gotoXY:
   793                           	opt callstack 0
   794                           
   795 ;; *************** function _lcd_wrCom *****************
   796 ;; Defined at:
   797 ;;		line 156 in file "Lcd4Lignes.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  commande        1    wreg     unsigned char 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  commande        1    2[BANK0 ] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      unsigned char 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         0       1       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         0       1       0       0       0       0       0
   815 ;;Total ram usage:        1 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    2
   818 ;; This function calls:
   819 ;;		_lcd_busy
   820 ;;		_lcd_ecrireDonnees
   821 ;;		_lcd_strobeEnableBit
   822 ;; This function is called by:
   823 ;;		_lcd_gotoXY
   824 ;;		_lcd_ecritChar
   825 ;;		_lcd_init
   826 ;;		_lcd_effaceAffichage
   827 ;;		_lcd_curseurHome
   828 ;;		_lcd_cacheCurseur
   829 ;;		_lcd_montreCurseur
   830 ;;		_lcd_initCGRam
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text5
   835  0006F2                     __ptext5:
   836                           	opt callstack 0
   837  0006F2                     _lcd_wrCom:
   838                           	opt callstack 26
   839                           
   840                           ;incstack = 0
   841                           ;lcd_wrCom@commande stored from wreg
   842  0006F2  0100               	movlb	0	; force () banked
   843  0006F4  6FA6               	movwf	lcd_wrCom@commande& (0+255),b
   844  0006F6                     
   845                           ;Lcd4Lignes.c: 158: lcd_busy();
   846  0006F6  ECFB  F003         	call	_lcd_busy	;wreg free
   847  0006FA                     
   848                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
   849  0006FA  0E00               	movlw	0
   850  0006FC  6E95               	movwf	149,c	;volatile
   851  0006FE                     
   852                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
   853  0006FE  9080               	bcf	128,0,c	;volatile
   854  000700                     
   855                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
   856  000700  9280               	bcf	128,1,c	;volatile
   857  000702                     
   858                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
   859  000702  0100               	movlb	0	; force () banked
   860  000704  39A6               	swapf	lcd_wrCom@commande& (0+255),w,b
   861  000706  0B0F               	andlw	15
   862  000708  EC85  F004         	call	_lcd_ecrireDonnees
   863  00070C                     
   864                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
   865  00070C  EC9B  F004         	call	_lcd_strobeEnableBit	;wreg free
   866  000710                     
   867                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
   868  000710  0100               	movlb	0	; force () banked
   869  000712  51A6               	movf	lcd_wrCom@commande& (0+255),w,b
   870  000714  EC85  F004         	call	_lcd_ecrireDonnees
   871  000718                     
   872                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
   873  000718  EC9B  F004         	call	_lcd_strobeEnableBit	;wreg free
   874  00071C                     
   875                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
   876  00071C  0E03               	movlw	3
   877  00071E                     u177:
   878  00071E  2EE8               	decfsz	wreg,f,c
   879  000720  D7FE               	bra	u177
   880  000722  F000               	nop	
   881  000724                     
   882                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
   883  000724  0100               	movlb	0	; force () banked
   884  000726  05A6               	decf	lcd_wrCom@commande& (0+255),w,b
   885  000728  B4D8               	btfsc	status,2,c
   886  00072A  EF99  F003         	goto	u21
   887  00072E  EF9B  F003         	goto	u20
   888  000732                     u21:
   889  000732  EFA5  F003         	goto	l1066
   890  000736                     u20:
   891  000736                     
   892                           ; BSR set to: 0
   893  000736  0E02               	movlw	2
   894  000738  0100               	movlb	0	; force () banked
   895  00073A  19A6               	xorwf	lcd_wrCom@commande& (0+255),w,b
   896  00073C  A4D8               	btfss	status,2,c
   897  00073E  EFA3  F003         	goto	u31
   898  000742  EFA5  F003         	goto	u30
   899  000746                     u31:
   900  000746  EFAA  F003         	goto	l1068
   901  00074A                     u30:
   902  00074A                     l1066:
   903                           
   904                           ; BSR set to: 0
   905                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
   906  00074A  0EA6               	movlw	166
   907  00074C                     u187:
   908  00074C  2EE8               	decfsz	wreg,f,c
   909  00074E  D7FE               	bra	u187
   910  000750  F000 F000          	nop2	
   911  000754                     l1068:
   912                           
   913                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
   914  000754  0E0F               	movlw	15
   915  000756  6E95               	movwf	149,c	;volatile
   916  000758                     
   917                           ;Lcd4Lignes.c: 179: return(lcd_busy());
   918  000758  ECFB  F003         	call	_lcd_busy	;wreg free
   919  00075C  0012               	return		;funcret
   920  00075E                     __end_of_lcd_wrCom:
   921                           	opt callstack 0
   922                           
   923 ;; *************** function _lcd_strobeEnableBit *****************
   924 ;; Defined at:
   925 ;;		line 431 in file "Lcd4Lignes.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		None
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   939 ;;      Params:         0       0       0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_lcd_wrCom
   949 ;;		_lcd_wrData
   950 ;;		_lcd_resetSequence
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text6
   955  000936                     __ptext6:
   956                           	opt callstack 0
   957  000936                     _lcd_strobeEnableBit:
   958                           	opt callstack 27
   959  000936                     
   960                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
   961  000936  8480               	bsf	128,2,c	;volatile
   962                           
   963                           ;Lcd4Lignes.c: 434: __nop();
   964  000938  F000               	nop	
   965                           
   966                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
   967  00093A  9480               	bcf	128,2,c	;volatile
   968  00093C  0012               	return		;funcret
   969  00093E                     __end_of_lcd_strobeEnableBit:
   970                           	opt callstack 0
   971                           
   972 ;; *************** function _lcd_ecrireDonnees *****************
   973 ;; Defined at:
   974 ;;		line 107 in file "Lcd4Lignes.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  donnee          1    wreg     unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  donnee          1    1[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   988 ;;      Params:         0       0       0       0       0       0       0
   989 ;;      Locals:         0       1       0       0       0       0       0
   990 ;;      Temps:          0       1       0       0       0       0       0
   991 ;;      Totals:         0       2       0       0       0       0       0
   992 ;;Total ram usage:        2 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_lcd_wrCom
   998 ;;		_lcd_wrData
   999 ;;		_lcd_resetSequence
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text7
  1004  00090A                     __ptext7:
  1005                           	opt callstack 0
  1006  00090A                     _lcd_ecrireDonnees:
  1007                           	opt callstack 27
  1008                           
  1009                           ;incstack = 0
  1010                           ;lcd_ecrireDonnees@donnee stored from wreg
  1011  00090A  0100               	movlb	0	; force () banked
  1012  00090C  6FA5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  1013  00090E                     
  1014                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  1015  00090E  CF83 F0A4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  1016  000912  0EF0               	movlw	240
  1017  000914  0100               	movlb	0	; force () banked
  1018  000916  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1019  000918  0100               	movlb	0	; force () banked
  1020  00091A  51A5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  1021  00091C  0B0F               	andlw	15
  1022  00091E  0100               	movlb	0	; force () banked
  1023  000920  11A4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1024  000922  6E83               	movwf	131,c	;volatile
  1025  000924                     
  1026                           ; BSR set to: 0
  1027  000924  0012               	return		;funcret
  1028  000926                     __end_of_lcd_ecrireDonnees:
  1029                           	opt callstack 0
  1030                           
  1031 ;; *************** function _lcd_busy *****************
  1032 ;; Defined at:
  1033 ;;		line 124 in file "Lcd4Lignes.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  adresse         1    1[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1047 ;;      Params:         0       0       0       0       0       0       0
  1048 ;;      Locals:         0       1       0       0       0       0       0
  1049 ;;      Temps:          0       1       0       0       0       0       0
  1050 ;;      Totals:         0       2       0       0       0       0       0
  1051 ;;Total ram usage:        2 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    1
  1054 ;; This function calls:
  1055 ;;		_lcd_lireDonnees
  1056 ;; This function is called by:
  1057 ;;		_lcd_wrCom
  1058 ;;		_lcd_wrData
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text8
  1063  0007F6                     __ptext8:
  1064                           	opt callstack 0
  1065  0007F6                     _lcd_busy:
  1066                           	opt callstack 26
  1067  0007F6                     
  1068                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  1069  0007F6  9080               	bcf	128,0,c	;volatile
  1070                           
  1071                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  1072  0007F8  8280               	bsf	128,1,c	;volatile
  1073  0007FA                     l96:
  1074                           
  1075                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  1076  0007FA  8480               	bsf	128,2,c	;volatile
  1077                           
  1078                           ;Lcd4Lignes.c: 134: __nop();
  1079  0007FC  F000               	nop	
  1080  0007FE                     
  1081                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  1082  0007FE  EC9F  F004         	call	_lcd_lireDonnees	;wreg free
  1083  000802  0100               	movlb	0	; force () banked
  1084  000804  6FA4               	movwf	??_lcd_busy& (0+255),b
  1085  000806  39A4               	swapf	??_lcd_busy& (0+255),w,b
  1086  000808  0BF0               	andlw	240
  1087  00080A  0100               	movlb	0	; force () banked
  1088  00080C  6FA5               	movwf	lcd_busy@adresse& (0+255),b
  1089  00080E                     
  1090                           ; BSR set to: 0
  1091                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  1092  00080E  9480               	bcf	128,2,c	;volatile
  1093  000810                     
  1094                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  1095  000810  8480               	bsf	128,2,c	;volatile
  1096  000812                     
  1097                           ;Lcd4Lignes.c: 139: __nop();
  1098  000812  F000               	nop	
  1099                           
  1100                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  1101  000814  EC9F  F004         	call	_lcd_lireDonnees	;wreg free
  1102  000818  0100               	movlb	0	; force () banked
  1103  00081A  13A5               	iorwf	lcd_busy@adresse& (0+255),f,b
  1104  00081C                     
  1105                           ; BSR set to: 0
  1106                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  1107  00081C  9480               	bcf	128,2,c	;volatile
  1108  00081E                     
  1109                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  1110  00081E  0100               	movlb	0	; force () banked
  1111  000820  BFA5               	btfsc	lcd_busy@adresse& (0+255),7,b
  1112  000822  EF15  F004         	goto	u11
  1113  000826  EF17  F004         	goto	u10
  1114  00082A                     u11:
  1115  00082A  EFFD  F003         	goto	l96
  1116  00082E                     u10:
  1117  00082E                     
  1118                           ; BSR set to: 0
  1119                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  1120  00082E  9280               	bcf	128,1,c	;volatile
  1121  000830                     
  1122                           ; BSR set to: 0
  1123                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  1124  000830  0100               	movlb	0	; force () banked
  1125  000832  51A5               	movf	lcd_busy@adresse& (0+255),w,b
  1126  000834  0B7F               	andlw	127
  1127  000836                     
  1128                           ; BSR set to: 0
  1129  000836  0012               	return		;funcret
  1130  000838                     __end_of_lcd_busy:
  1131                           	opt callstack 0
  1132                           
  1133 ;; *************** function _lcd_lireDonnees *****************
  1134 ;; Defined at:
  1135 ;;		line 93 in file "Lcd4Lignes.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      unsigned char 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1149 ;;      Params:         0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_lcd_busy
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text9
  1163  00093E                     __ptext9:
  1164                           	opt callstack 0
  1165  00093E                     _lcd_lireDonnees:
  1166                           	opt callstack 26
  1167  00093E                     
  1168                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  1169  00093E  5083               	movf	131,w,c	;volatile
  1170  000940  0B0F               	andlw	15
  1171  000942  0012               	return		;funcret
  1172  000944                     __end_of_lcd_lireDonnees:
  1173                           	opt callstack 0
  1174                           
  1175 ;; *************** function _initialisation *****************
  1176 ;; Defined at:
  1177 ;;		line 63 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1191 ;;      Params:         0       0       0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    1
  1198 ;; This function calls:
  1199 ;;		_srand
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text10
  1206  0008A4                     __ptext10:
  1207                           	opt callstack 0
  1208  0008A4                     _initialisation:
  1209                           	opt callstack 29
  1210  0008A4                     
  1211                           ;main.c: 65: TRISD = 0;
  1212  0008A4  0E00               	movlw	0
  1213  0008A6  6E95               	movwf	149,c	;volatile
  1214                           
  1215                           ;main.c: 66: ANSELH = 0;
  1216  0008A8  0E00               	movlw	0
  1217  0008AA  6E7F               	movwf	127,c	;volatile
  1218  0008AC                     
  1219                           ;main.c: 67: TRISB = 0xFF;
  1220  0008AC  6893               	setf	147,c	;volatile
  1221                           
  1222                           ;main.c: 68: ANSEL = 0;
  1223  0008AE  0E00               	movlw	0
  1224  0008B0  6E7E               	movwf	126,c	;volatile
  1225                           
  1226                           ;main.c: 69: TRISA = 0;
  1227  0008B2  0E00               	movlw	0
  1228  0008B4  6E92               	movwf	146,c	;volatile
  1229  0008B6                     
  1230                           ;main.c: 73: T1CONbits.TMR1ON = 1;
  1231  0008B6  80CD               	bsf	205,0,c	;volatile
  1232  0008B8                     
  1233                           ;main.c: 74: srand(TMR1);
  1234  0008B8  CFCE F0A4          	movff	4046,srand@x	;volatile
  1235  0008BC  CFCF F0A5          	movff	4047,srand@x+1	;volatile
  1236  0008C0  EC93  F004         	call	_srand	;wreg free
  1237  0008C4                     
  1238                           ;main.c: 76: ANSELbits.ANS7 = 1;
  1239  0008C4  8E7E               	bsf	126,7,c	;volatile
  1240  0008C6                     
  1241                           ;main.c: 77: ADCON0bits.ADON = 1;
  1242  0008C6  80C2               	bsf	194,0,c	;volatile
  1243  0008C8                     
  1244                           ;main.c: 78: ADCON1 = 0;
  1245  0008C8  0E00               	movlw	0
  1246  0008CA  6EC1               	movwf	193,c	;volatile
  1247  0008CC                     
  1248                           ;main.c: 79: ADCON2bits.ADFM = 0;
  1249  0008CC  9EC0               	bcf	192,7,c	;volatile
  1250  0008CE                     
  1251                           ;main.c: 80: ADCON2bits.ACQT = 0;
  1252  0008CE  0EC7               	movlw	-57
  1253  0008D0  16C0               	andwf	192,f,c	;volatile
  1254  0008D2                     
  1255                           ;main.c: 81: ADCON2bits.ADCS = 0;
  1256  0008D2  0EF8               	movlw	-8
  1257  0008D4  16C0               	andwf	192,f,c	;volatile
  1258  0008D6  0012               	return		;funcret
  1259  0008D8                     __end_of_initialisation:
  1260                           	opt callstack 0
  1261                           
  1262 ;; *************** function _srand *****************
  1263 ;; Defined at:
  1264 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  x               2    0[BANK0 ] unsigned int 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		status,2
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1278 ;;      Params:         0       2       0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0
  1281 ;;      Totals:         0       2       0       0       0       0       0
  1282 ;;Total ram usage:        2 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_initialisation
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text11
  1292  000926                     __ptext11:
  1293                           	opt callstack 0
  1294  000926                     _srand:
  1295                           	opt callstack 29
  1296  000926  C0A4  F0A0         	movff	srand@x,_randx
  1297  00092A  C0A5  F0A1         	movff	srand@x+1,_randx+1
  1298  00092E  0100               	movlb	0	; () banked
  1299  000930  6BA2               	clrf	(_randx+2)& (0+255),b
  1300  000932  6BA3               	clrf	(_randx+3)& (0+255),b
  1301  000934                     
  1302                           ; BSR set to: 0
  1303  000934  0012               	return		;funcret
  1304  000936                     __end_of_srand:
  1305                           	opt callstack 0
  1306                           
  1307                           	psect	param0
  1308  0000                     tosu	equ	0xFFF
  1309                           tosh	equ	0xFFE
  1310                           tosl	equ	0xFFD
  1311                           stkptr	equ	0xFFC
  1312                           pclatu	equ	0xFFB
  1313                           pclath	equ	0xFFA
  1314                           pcl	equ	0xFF9
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           indf0	equ	0xFEF
  1322                           postinc0	equ	0xFEE
  1323                           postdec0	equ	0xFED
  1324                           preinc0	equ	0xFEC
  1325                           plusw0	equ	0xFEB
  1326                           fsr0h	equ	0xFEA
  1327                           fsr0l	equ	0xFE9
  1328                           wreg	equ	0xFE8
  1329                           indf1	equ	0xFE7
  1330                           postinc1	equ	0xFE6
  1331                           postdec1	equ	0xFE5
  1332                           preinc1	equ	0xFE4
  1333                           plusw1	equ	0xFE3
  1334                           fsr1h	equ	0xFE2
  1335                           fsr1l	equ	0xFE1
  1336                           bsr	equ	0xFE0
  1337                           indf2	equ	0xFDF
  1338                           postinc2	equ	0xFDE
  1339                           postdec2	equ	0xFDD
  1340                           preinc2	equ	0xFDC
  1341                           plusw2	equ	0xFDB
  1342                           fsr2h	equ	0xFDA
  1343                           fsr2l	equ	0xFD9
  1344                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     11      79
    BANK1           256      0     168
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    _initialisation->_srand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     917
                                             10 BANK0      1     1      0
                     _initialisation
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     376
                                              5 BANK0      5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     210
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0      75
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1     443
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     105
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      30
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
     _srand
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      A8       6       65.6%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      B      4F       4       49.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7      14        0.0%
DATA                 0      0      F7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 12:57:52 2019

                          l47 08D6                            l90 0942                            l93 0924  
                          l96 07FA                            l97 082E                            l98 0836  
                          u10 082E                            u11 082A                            u20 0736  
                          u21 0732                            u30 074A                            u31 0746  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l104 075C  
                         l107 08A2                           l134 0684                           l151 06F0  
                         l145 07B0                           l167 093C                           l881 0934  
                __CFG_CPB$OFF 000000                           u150 06F0                           u151 06EC  
                         u167 085E                           u177 071E                  __CFG_CPD$OFF 000000  
                         u187 074C                  __CFG_BORV$18 000000                   lcd_gotoXY@x 00A8  
                         wreg 000FE8                   lcd_gotoXY@y 00A7                  __CFG_LVP$OFF 000000  
                        l1010 093E                          l1020 080E                          l1100 089E  
                        l1030 081E                          l1022 0810                          l1014 090E  
                        l1110 077C                          l1032 081E                          l1024 0810  
                        l1016 07F6                          l1040 06F6                          l1112 0786  
                        l1034 0830                          l1026 0812                          l1018 07FE  
                        l1050 0702                          l1042 06FA                          l1106 0762  
                        l1300 08C4                          l1028 081C                          l1060 071C  
                        l1052 070C                          l1044 06FE                          l1108 0772  
                        l1116 0790                          l1310 08D2                          l1302 08C6  
                        l1038 0936                          l1070 0758                          l1062 0724  
                        l1054 0710                          l1046 06FE                          l1304 08C8  
                        l1072 0758                          l1064 0736                          l1056 0710  
                        l1048 0700                          l1320 064C                          l1312 0618  
                        l1080 087C                          l1306 08CC                          l1066 074A  
                        l1058 0718                          l1314 061C                          l1090 088E  
                        l1082 087C                          l1330 06B8                          l1308 08CE  
                        l1068 0754                          l1316 062C                          l1324 065C  
                        l1092 088E                          l1084 087E                          l1076 0874  
                        l1332 06BC                          l1340 0856                          l1318 063C  
                        l1094 0896                          l1086 0880                          l1078 0878  
                        l1326 0686                          l1334 0838                          l1096 089A  
                        l1088 088A                          l1328 0690                          l1336 083C  
                        l1290 0926                          l1098 089A                          l1338 0848  
                        l1292 08A4                          l1294 08AC                          l1296 08B6  
                        l1298 08B8                          STR_1 0601                          _RCIF 007CF5  
                        _TMR1 000FCE              ??_initialisation 00A6                          _main 0838  
                        fsr1l 000FE1                          start 0000               ?_lcd_putMessage 00A9  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             ??_lcd_ecritChar 00A7                         ?_main 00A4                         _ANSEL 000F7E  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _randx 00A0                         _srand 0926                         tablat 000FF5  
                       status 000FD8                __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000  
             __initialization 08D8                  __end_of_main 0870          lcd_putMessage@chaine 00A9  
                      ??_main 00AE                 __activetblptr 000003                        _ADCON1 000FC1  
                      ?_srand 00A4                        _ANSELH 000F7F                __CFG_WDTEN$OFF 000000  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000              __end_of_lcd_busy 0838  
              __CFG_STVREN$ON 000000                        clear_0 08FE                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00A4                    __accesstop 0060       __end_of__initialization 0904  
         _lcd_strobeEnableBit 0936                 ___rparam_used 000000                  __pidataBANK0 07B2  
               __end_of_srand 0936          ?_lcd_strobeEnableBit 00A4            __size_of_lcd_wrCom 006C  
                     ??_srand 00A6      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 090A  
                  __pbssBANK1 0100              ??_lcd_putMessage 00AB            ?_lcd_ecrireDonnees 00A4  
         ??_lcd_ecrireDonnees 00A4         ??_lcd_strobeEnableBit 00A4                    _lcd_gotoXY 0614  
                  _lcd_wrData 0870     __end_of_lcd_ecrireDonnees 0926                     ?_lcd_busy 00A4  
     lcd_ecrireDonnees@donnee 00A5                    _m_tabMines 0100                       __Hparam 0000  
                     __Lparam 0000             __end_of_lcd_wrCom 075E                  __psmallconst 0600  
                     __pcinit 08D8                     _ANSELbits 000F7E                       __ramtop 0600  
                     __ptext0 0838                       __ptext1 0686                       __ptext2 075E  
                     __ptext3 0870                       __ptext4 0614                       __ptext5 06F2  
                     __ptext6 0936                       __ptext7 090A                       __ptext8 07F6  
                     __ptext9 093E         __end_of_lcd_ecritChar 07B2               lcd_busy@adresse 00A5  
                   _T1CONbits 000FCD              lcd_ecritChar@car 00A7                    ??_lcd_busy 00A4  
        end_of_initialization 0904             ??_lcd_lireDonnees 00A4                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postinc0 000FEE       __size_of_initialisation 0034  
         lcd_ecritChar@posRam 00A8                     _PORTAbits 000F80                   ?_lcd_gotoXY 00A7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00A4    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC                   _BAUDCONbits 000FB8           start_initialization 08D8  
         __size_of_lcd_gotoXY 0072           __size_of_lcd_wrData 0034                   __pdataBANK0 0060  
            __CFG_LPT1OSC$OFF 000000                 __pcstackBANK0 00A4             __size_of_lcd_busy 0042  
           __CFG_CCP2MX$PORTC 000000   __end_of_lcd_strobeEnableBit 093E                _initialisation 08A4  
                   _lcd_wrCom 06F2                   __smallconst 0600               _lcd_lireDonnees 093E  
         lcd_wrData@caractere 00A6                __size_of_srand 0010        __end_of_initialisation 08D8  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 006C                    ?_lcd_wrCom 00A4  
                  _ADCON0bits 000FC2                    _ADCON2bits 000FC0                  ??_lcd_gotoXY 00A8  
                ??_lcd_wrData 00A6             lcd_wrCom@commande 00A6                     copy_data0 08EC  
                    __Hparam0 0000        __size_of_lcd_ecritChar 0054                      __Lparam0 0000  
             ?_initialisation 00A4            __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoXY 0686  
          __end_of_lcd_wrData 08A4               lcd_putMessage@j 00AD       __end_of_lcd_lireDonnees 0944  
                    _matCGRAM 0060                      __ptext10 08A4                      __ptext11 0926  
                    _lcd_busy 07F6                      _m_tabVue 0154                 __size_of_main 0038  
                 ??_lcd_wrCom 00A6                 _lcd_ecritChar 075E                _lcd_putMessage 0686  
              ?_lcd_ecritChar 00A4              ?_lcd_lireDonnees 00A4             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 06F2  
