

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 22 22:45:55 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1,minocg
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F45K20 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataBANK0
    86  001312                     __pidataBANK0:
    87                           	opt callstack 0
    88                           
    89                           ;initializer for affichePerdu@F2752
    90  001312  30                 	db	48
    91  001313  30                 	db	48
    92  001314  30                 	db	48
    93  001315  30                 	db	48
    94  001316  30                 	db	48
    95  001317  30                 	db	48
    96  001318  30                 	db	48
    97  001319  30                 	db	48
    98  00131A  30                 	db	48
    99  00131B  30                 	db	48
   100                           
   101                           ;initializer for _randx
   102  00131C  0001               	dw	1
   103  00131E  0000               	dw	0
   104                           
   105                           ;initializer for _m_niveau
   106  001320  01                 	db	1
   107                           
   108                           ;initializer for _m_aliens
   109  001321  20                 	db	32
   110  001322  20                 	db	32
   111  001323  20                 	db	32
   112  001324  20                 	db	32
   113  001325  20                 	db	32
   114  001326  20                 	db	32
   115  001327  20                 	db	32
   116  001328  20                 	db	32
   117  001329  20                 	db	32
   118  00132A  20                 	db	32
   119  00132B  20                 	db	32
   120  00132C  20                 	db	32
   121  00132D  20                 	db	32
   122  00132E  20                 	db	32
   123  00132F  20                 	db	32
   124  001330  20                 	db	32
   125  001331  20                 	db	32
   126  001332  20                 	db	32
   127  001333  20                 	db	32
   128  001334  20                 	db	32
   129  001335  00                 	db	0
   130  001336  20                 	db	32
   131  001337  20                 	db	32
   132  001338  20                 	db	32
   133  001339  20                 	db	32
   134  00133A  20                 	db	32
   135  00133B  20                 	db	32
   136  00133C  20                 	db	32
   137  00133D  20                 	db	32
   138  00133E  20                 	db	32
   139  00133F  20                 	db	32
   140  001340  20                 	db	32
   141  001341  20                 	db	32
   142  001342  20                 	db	32
   143  001343  20                 	db	32
   144  001344  20                 	db	32
   145  001345  20                 	db	32
   146  001346  20                 	db	32
   147  001347  20                 	db	32
   148  001348  20                 	db	32
   149  001349  20                 	db	32
   150  00134A  00                 	db	0
   151  00134B  20                 	db	32
   152  00134C  20                 	db	32
   153  00134D  20                 	db	32
   154  00134E  20                 	db	32
   155  00134F  20                 	db	32
   156  001350  20                 	db	32
   157  001351  20                 	db	32
   158  001352  20                 	db	32
   159  001353  20                 	db	32
   160  001354  20                 	db	32
   161  001355  20                 	db	32
   162  001356  20                 	db	32
   163  001357  20                 	db	32
   164  001358  20                 	db	32
   165  001359  20                 	db	32
   166  00135A  20                 	db	32
   167  00135B  20                 	db	32
   168  00135C  20                 	db	32
   169  00135D  20                 	db	32
   170  00135E  20                 	db	32
   171  00135F  00                 	db	0
   172  001360  20                 	db	32
   173  001361  20                 	db	32
   174  001362  20                 	db	32
   175  001363  20                 	db	32
   176  001364  20                 	db	32
   177  001365  20                 	db	32
   178  001366  20                 	db	32
   179  001367  20                 	db	32
   180  001368  20                 	db	32
   181  001369  20                 	db	32
   182  00136A  20                 	db	32
   183  00136B  20                 	db	32
   184  00136C  20                 	db	32
   185  00136D  20                 	db	32
   186  00136E  20                 	db	32
   187  00136F  20                 	db	32
   188  001370  20                 	db	32
   189  001371  20                 	db	32
   190  001372  20                 	db	32
   191  001373  20                 	db	32
   192  001374  00                 	db	0
   193                           
   194                           	psect	idataBANK1
   195  001560                     __pidataBANK1:
   196                           	opt callstack 0
   197                           
   198                           ;initializer for _matCGRAM
   199  001560  08                 	db	8
   200  001561  04                 	db	4
   201  001562  04                 	db	4
   202  001563  0A                 	db	10
   203  001564  11                 	db	17
   204  001565  1F                 	db	31
   205  001566  11                 	db	17
   206  001567  00                 	db	0
   207  001568  00                 	db	0
   208  001569  00                 	db	0
   209  00156A  0E                 	db	14
   210  00156B  11                 	db	17
   211  00156C  15                 	db	21
   212  00156D  0E                 	db	14
   213  00156E  0A                 	db	10
   214  00156F  00                 	db	0
   215  001570  11                 	db	17
   216  001571  0E                 	db	14
   217  001572  11                 	db	17
   218  001573  15                 	db	21
   219  001574  15                 	db	21
   220  001575  0E                 	db	14
   221  001576  0A                 	db	10
   222  001577  00                 	db	0
   223  001578  0E                 	db	14
   224  001579  11                 	db	17
   225  00157A  15                 	db	21
   226  00157B  15                 	db	21
   227  00157C  15                 	db	21
   228  00157D  0E                 	db	14
   229  00157E  15                 	db	21
   230  00157F  04                 	db	4
   231  001580  04                 	db	4
   232  001581  04                 	db	4
   233  001582  04                 	db	4
   234  001583  04                 	db	4
   235  001584  0E                 	db	14
   236  001585  0E                 	db	14
   237  001586  1B                 	db	27
   238  001587  11                 	db	17
   239  001588  04                 	db	4
   240  001589  0A                 	db	10
   241  00158A  0E                 	db	14
   242  00158B  11                 	db	17
   243  00158C  1F                 	db	31
   244  00158D  10                 	db	16
   245  00158E  0E                 	db	14
   246  00158F  00                 	db	0
   247  001590  08                 	db	8
   248  001591  04                 	db	4
   249  001592  0E                 	db	14
   250  001593  01                 	db	1
   251  001594  0F                 	db	15
   252  001595  11                 	db	17
   253  001596  0F                 	db	15
   254  001597  00                 	db	0
   255  001598  04                 	db	4
   256  001599  0A                 	db	10
   257  00159A  0E                 	db	14
   258  00159B  01                 	db	1
   259  00159C  0F                 	db	15
   260  00159D  11                 	db	17
   261  00159E  0F                 	db	15
   262  00159F  00                 	db	0
   263  0000                     _TRISCbits	set	3988
   264  0000                     _PORTAbits	set	3968
   265  0000                     _PORTD	set	3971
   266  0000                     _ANSELbits	set	3966
   267  0000                     _TRISA	set	3986
   268  0000                     _ANSEL	set	3966
   269  0000                     _TRISB	set	3987
   270  0000                     _ANSELH	set	3967
   271  0000                     _TRISD	set	3989
   272  0000                     _PORTBbits	set	3969
   273  0000                     _TMR1	set	4046
   274  0000                     _RCREG	set	4014
   275  0000                     _TXREG	set	4013
   276  0000                     _RCSTAbits	set	4011
   277  0000                     _TXSTAbits	set	4012
   278  0000                     _BAUDCONbits	set	4024
   279  0000                     _SPBRG	set	4015
   280  0000                     _SPBRGH	set	4016
   281  0000                     _ADRESH	set	4036
   282  0000                     _ADCON2bits	set	4032
   283  0000                     _ADCON1	set	4033
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _T1CONbits	set	4045
   286  0000                     _RCIF	set	31989
   287  0000                     _TMR0	set	4054
   288  0000                     _T0CONbits	set	4053
   289  0000                     _INTCONbits	set	4082
   290                           
   291                           	psect	smallconst
   292  000600                     __psmallconst:
   293                           	opt callstack 0
   294  000600  00                 	db	0
   295  000601                     STR_1:
   296  000601  4C                 	db	76	;'L'
   297  000602  41                 	db	65	;'A'
   298  000603  42                 	db	66	;'B'
   299  000604  35                 	db	53	;'5'
   300  000605  20                 	db	32
   301  000606  49                 	db	73	;'I'
   302  000607  73                 	db	115	;'s'
   303  000608  61                 	db	97	;'a'
   304  000609  6B                 	db	107	;'k'
   305  00060A  20                 	db	32
   306  00060B  42                 	db	66	;'B'
   307  00060C  65                 	db	101	;'e'
   308  00060D  64                 	db	100	;'d'
   309  00060E  61                 	db	97	;'a'
   310  00060F  72                 	db	114	;'r'
   311  000610  64                 	db	100	;'d'
   312  000611  00                 	db	0
   313  000612                     STR_2:
   314  000612  53                 	db	83	;'S'
   315  000613  63                 	db	99	;'c'
   316  000614  6F                 	db	111	;'o'
   317  000615  72                 	db	114	;'r'
   318  000616  65                 	db	101	;'e'
   319  000617  20                 	db	32
   320  000618  3A                 	db	58	;':'
   321  000619  20                 	db	32
   322  00061A  30                 	db	48	;'0'
   323  00061B  00                 	db	0
   324  00061C                     STR_3:
   325  00061C  53                 	db	83	;'S'
   326  00061D  63                 	db	99	;'c'
   327  00061E  6F                 	db	111	;'o'
   328  00061F  72                 	db	114	;'r'
   329  000620  65                 	db	101	;'e'
   330  000621  20                 	db	32
   331  000622  3A                 	db	58	;':'
   332  000623  20                 	db	32
   333  000624  00                 	db	0
   334                           
   335                           ; #config settings
   336  000625  00                 	db	0	; dummy byte at the end
   337  0000                     
   338                           	psect	cinit
   339  0014D0                     __pcinit:
   340                           	opt callstack 0
   341  0014D0                     start_initialization:
   342                           	opt callstack 0
   343  0014D0                     __initialization:
   344                           	opt callstack 0
   345                           
   346                           ; Initialize objects allocated to BANK1 (64 bytes)
   347                           ; load TBLPTR registers with __pidataBANK1
   348  0014D0  0E60               	movlw	low __pidataBANK1
   349  0014D2  6EF6               	movwf	tblptrl,c
   350  0014D4  0E15               	movlw	high __pidataBANK1
   351  0014D6  6EF7               	movwf	tblptrh,c
   352  0014D8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   353  0014DA  6EF8               	movwf	tblptru,c
   354  0014DC  EE01  F000         	lfsr	0,__pdataBANK1
   355  0014E0  EE10 F040          	lfsr	1,64
   356  0014E4                     copy_data0:
   357  0014E4  0009               	tblrd		*+
   358  0014E6  CFF5 FFEE          	movff	tablat,postinc0
   359  0014EA  50E5               	movf	postdec1,w,c
   360  0014EC  50E1               	movf	fsr1l,w,c
   361  0014EE  E1FA               	bnz	copy_data0
   362                           
   363                           ; Initialize objects allocated to BANK0 (99 bytes)
   364                           ; load TBLPTR registers with __pidataBANK0
   365  0014F0  0E12               	movlw	low __pidataBANK0
   366  0014F2  6EF6               	movwf	tblptrl,c
   367  0014F4  0E13               	movlw	high __pidataBANK0
   368  0014F6  6EF7               	movwf	tblptrh,c
   369  0014F8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   370  0014FA  6EF8               	movwf	tblptru,c
   371  0014FC  EE00  F060         	lfsr	0,__pdataBANK0
   372  001500  EE10 F063          	lfsr	1,99
   373  001504                     copy_data1:
   374  001504  0009               	tblrd		*+
   375  001506  CFF5 FFEE          	movff	tablat,postinc0
   376  00150A  50E5               	movf	postdec1,w,c
   377  00150C  50E1               	movf	fsr1l,w,c
   378  00150E  E1FA               	bnz	copy_data1
   379                           
   380                           ; Clear objects allocated to BANK0 (1 bytes)
   381  001510  0100               	movlb	0
   382  001512  6BF9               	clrf	__pbssBANK0& (0+255),b
   383  001514                     end_of_initialization:
   384                           	opt callstack 0
   385  001514                     __end_of__initialization:
   386                           	opt callstack 0
   387  001514  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   388  001516  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   389  001518  0100               	movlb	0
   390  00151A  EF21  F006         	goto	_main	;jump to C main() function
   391                           
   392                           	psect	bssBANK0
   393  0000F9                     __pbssBANK0:
   394                           	opt callstack 0
   395  0000F9                     _m_tempsDAfficher:
   396                           	opt callstack 0
   397  0000F9                     	ds	1
   398                           
   399                           	psect	dataBANK0
   400  000060                     __pdataBANK0:
   401                           	opt callstack 0
   402  000060                     affichePerdu@F2752:
   403                           	opt callstack 0
   404  000060                     	ds	10
   405  00006A                     _randx:
   406                           	opt callstack 0
   407  00006A                     	ds	4
   408  00006E                     _m_niveau:
   409                           	opt callstack 0
   410  00006E                     	ds	1
   411  00006F                     _m_aliens:
   412                           	opt callstack 0
   413  00006F                     	ds	84
   414                           
   415                           	psect	dataBANK1
   416  000100                     __pdataBANK1:
   417                           	opt callstack 0
   418  000100                     _matCGRAM:
   419                           	opt callstack 0
   420  000100                     	ds	64
   421                           
   422                           	psect	cstackBANK0
   423  0000C3                     __pcstackBANK0:
   424                           	opt callstack 0
   425  0000C3                     ??_videAliens:
   426  0000C3                     ??_getAnalog:
   427  0000C3                     ??_lcd_ecrireDonnees:
   428  0000C3                     ??_lcd_busy:
   429  0000C3                     ?___lmul:
   430                           	opt callstack 0
   431  0000C3                     ?___lldiv:
   432                           	opt callstack 0
   433  0000C3                     ?___llmod:
   434                           	opt callstack 0
   435  0000C3                     srand@x:
   436                           	opt callstack 0
   437  0000C3                     ___lmul@multiplier:
   438                           	opt callstack 0
   439  0000C3                     ___lldiv@dividend:
   440                           	opt callstack 0
   441  0000C3                     ___llmod@dividend:
   442                           	opt callstack 0
   443                           
   444                           ; 4 bytes @ 0x0
   445  0000C3                     	ds	1
   446  0000C4                     perdu@i:
   447                           	opt callstack 0
   448  0000C4                     getAnalog@canal:
   449                           	opt callstack 0
   450  0000C4                     lcd_ecrireDonnees@donnee:
   451                           	opt callstack 0
   452  0000C4                     lcd_busy@adresse:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x1
   456  0000C4                     	ds	1
   457  0000C5                     ??_lcd_resetSequence:
   458  0000C5                     videAliens@i:
   459                           	opt callstack 0
   460  0000C5                     lcd_wrCom@commande:
   461                           	opt callstack 0
   462  0000C5                     lcd_wrData@caractere:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x2
   466  0000C5                     	ds	1
   467  0000C6                     ??_lcd_initCGRam:
   468  0000C6                     videAliens@j:
   469                           	opt callstack 0
   470  0000C6                     lcd_gotoXY@y:
   471                           	opt callstack 0
   472  0000C6                     lcd_ecritChar@car:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0x3
   476  0000C6                     	ds	1
   477  0000C7                     lcd_gotoXY@x:
   478                           	opt callstack 0
   479  0000C7                     lcd_ecritChar@posRam:
   480                           	opt callstack 0
   481  0000C7                     ___lmul@multiplicand:
   482                           	opt callstack 0
   483  0000C7                     ___lldiv@divisor:
   484                           	opt callstack 0
   485  0000C7                     ___llmod@divisor:
   486                           	opt callstack 0
   487                           
   488                           ; 4 bytes @ 0x4
   489  0000C7                     	ds	1
   490  0000C8                     ??_afficheAliens:
   491  0000C8                     lcd_initCGRam@i:
   492                           	opt callstack 0
   493  0000C8                     deplace@x:
   494                           	opt callstack 0
   495  0000C8                     lcd_putMessage@chaine:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x5
   499  0000C8                     	ds	1
   500  0000C9                     lcd_initCGRam@j:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0x6
   504  0000C9                     	ds	1
   505  0000CA                     ??_lcd_putMessage:
   506  0000CA                     ??_deplace:
   507  0000CA                     afficheAliens@i:
   508                           	opt callstack 0
   509                           
   510                           ; 1 bytes @ 0x7
   511  0000CA                     	ds	1
   512  0000CB                     afficheAliens@j:
   513                           	opt callstack 0
   514  0000CB                     deplace@analog:
   515                           	opt callstack 0
   516  0000CB                     ___llmod@counter:
   517                           	opt callstack 0
   518  0000CB                     ___lmul@product:
   519                           	opt callstack 0
   520  0000CB                     ___lldiv@quotient:
   521                           	opt callstack 0
   522                           
   523                           ; 4 bytes @ 0x8
   524  0000CB                     	ds	1
   525  0000CC                     lcd_putMessage@j:
   526                           	opt callstack 0
   527  0000CC                     feu@pts:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x9
   531  0000CC                     	ds	2
   532  0000CE                     ??_feu:
   533                           
   534                           ; 1 bytes @ 0xB
   535  0000CE                     	ds	1
   536  0000CF                     ?_rand:
   537                           	opt callstack 0
   538  0000CF                     ___lldiv@counter:
   539                           	opt callstack 0
   540                           
   541                           ; 1 bytes @ 0xC
   542  0000CF                     	ds	1
   543  0000D0                     affichePerdu@pts:
   544                           	opt callstack 0
   545  0000D0                     niveau@points:
   546                           	opt callstack 0
   547                           
   548                           ; 4 bytes @ 0xD
   549  0000D0                     	ds	1
   550  0000D1                     ?___awmod:
   551                           	opt callstack 0
   552  0000D1                     ___awmod@dividend:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0xE
   556  0000D1                     	ds	2
   557  0000D3                     feu@x:
   558                           	opt callstack 0
   559  0000D3                     ___awmod@divisor:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x10
   563  0000D3                     	ds	1
   564  0000D4                     ??_affichePerdu:
   565  0000D4                     feu@y:
   566                           	opt callstack 0
   567  0000D4                     niveau@niveau:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x11
   571  0000D4                     	ds	1
   572  0000D5                     ___awmod@counter:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x12
   576  0000D5                     	ds	1
   577  0000D6                     ___awmod@sign:
   578                           	opt callstack 0
   579  0000D6                     affichePerdu@ptsString:
   580                           	opt callstack 0
   581                           
   582                           ; 10 bytes @ 0x13
   583  0000D6                     	ds	1
   584  0000D7                     ??_nouveauxAliens:
   585                           
   586                           ; 1 bytes @ 0x14
   587  0000D7                     	ds	6
   588  0000DD                     nouveauxAliens@alienPlace:
   589                           	opt callstack 0
   590                           
   591                           ; 20 bytes @ 0x1A
   592  0000DD                     	ds	3
   593  0000E0                     affichePerdu@i:
   594                           	opt callstack 0
   595                           
   596                           ; 1 bytes @ 0x1D
   597  0000E0                     	ds	17
   598  0000F1                     nouveauxAliens@posAlien:
   599                           	opt callstack 0
   600                           
   601                           ; 1 bytes @ 0x2E
   602  0000F1                     	ds	1
   603  0000F2                     nouveauxAliens@j:
   604                           	opt callstack 0
   605                           
   606                           ; 1 bytes @ 0x2F
   607  0000F2                     	ds	1
   608  0000F3                     nouveauxAliens@i:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x30
   612  0000F3                     	ds	1
   613  0000F4                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x31
   616  0000F4                     	ds	1
   617  0000F5                     main@points:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x32
   621  0000F5                     	ds	2
   622  0000F7                     main@posX:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x34
   626  0000F7                     	ds	2
   627                           
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 77 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  posX            2   52[BANK0 ] PTR unsigned char 
   638 ;;		 -> RAM(1535), 
   639 ;;  points          2   50[BANK0 ] PTR unsigned long 
   640 ;;		 -> NULL(0), 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   650 ;;      Params:         0       0       0       0       0       0       0
   651 ;;      Locals:         0       4       0       0       0       0       0
   652 ;;      Temps:          0       1       0       0       0       0       0
   653 ;;      Totals:         0       5       0       0       0       0       0
   654 ;;Total ram usage:        5 bytes
   655 ;; Hardware stack levels required when called:    7
   656 ;; This function calls:
   657 ;;		_afficheAliens
   658 ;;		_affichePerdu
   659 ;;		_deplace
   660 ;;		_feu
   661 ;;		_initialisation
   662 ;;		_lcd_init
   663 ;;		_lcd_putMessage
   664 ;;		_niveau
   665 ;;		_nouveauxAliens
   666 ;;		_perdu
   667 ;;		_videAliens
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text0
   674  000C42                     __ptext0:
   675                           	opt callstack 0
   676  000C42                     _main:
   677                           	opt callstack 24
   678  000C42                     
   679                           ;main.c: 79: char* posX = 10;
   680  000C42  0E0A               	movlw	10
   681  000C44  0100               	movlb	0	; force () banked
   682  000C46  6FF7               	movwf	main@posX& (0+255),b
   683  000C48  0E00               	movlw	0
   684  000C4A  6FF8               	movwf	(main@posX+1)& (0+255),b
   685                           
   686                           ;main.c: 80: unsigned long* points=0;
   687  000C4C  0E00               	movlw	0
   688  000C4E  0100               	movlb	0	; force () banked
   689  000C50  6FF5               	movwf	main@points& (0+255),b
   690  000C52  0E00               	movlw	0
   691  000C54  6FF6               	movwf	(main@points+1)& (0+255),b
   692  000C56                     
   693                           ; BSR set to: 0
   694                           ;main.c: 82: initialisation();
   695  000C56  EC14  F00A         	call	_initialisation	;wreg free
   696  000C5A                     
   697                           ;main.c: 83: lcd_init();
   698  000C5A  EC1A  F00B         	call	_lcd_init	;wreg free
   699  000C5E                     
   700                           ;main.c: 84: lcd_putMessage("LAB5 Isak Bedard");
   701  000C5E  0E01               	movlw	low STR_1
   702  000C60  0100               	movlb	0	; force () banked
   703  000C62  6FC8               	movwf	lcd_putMessage@chaine& (0+255),b
   704  000C64  0E06               	movlw	high STR_1
   705  000C66  6FC9               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   706  000C68  ECE8  F008         	call	_lcd_putMessage	;wreg free
   707  000C6C                     l2327:
   708                           
   709                           ;main.c: 86: {;main.c: 87: m_niveau= niveau(points);
   710  000C6C  C0F5  F0D0         	movff	main@points,niveau@points
   711  000C70  C0F6  F0D1         	movff	main@points+1,niveau@points+1
   712  000C74  0100               	movlb	0	; force () banked
   713  000C76  6BD2               	clrf	(niveau@points+2)& (0+255),b
   714  000C78  6BD3               	clrf	(niveau@points+3)& (0+255),b
   715  000C7A  ECD0  F00A         	call	_niveau	;wreg free
   716  000C7E  0100               	movlb	0	; force () banked
   717  000C80  6F6E               	movwf	_m_niveau& (0+255),b
   718  000C82                     
   719                           ; BSR set to: 0
   720                           ;main.c: 89: if (m_tempsDAfficher)
   721  000C82  0100               	movlb	0	; force () banked
   722  000C84  51F9               	movf	_m_tempsDAfficher& (0+255),w,b
   723  000C86  B4D8               	btfsc	status,2,c
   724  000C88  EF48  F006         	goto	u1241
   725  000C8C  EF4A  F006         	goto	u1240
   726  000C90                     u1241:
   727  000C90  EF70  F006         	goto	l2347
   728  000C94                     u1240:
   729  000C94                     
   730                           ; BSR set to: 0
   731                           ;main.c: 90: {;main.c: 91: nouveauxAliens();
   732  000C94  EC13  F003         	call	_nouveauxAliens	;wreg free
   733  000C98                     
   734                           ;main.c: 92: if (perdu())
   735  000C98  ECBB  F009         	call	_perdu	;wreg free
   736  000C9C  0900               	iorlw	0
   737  000C9E  B4D8               	btfsc	status,2,c
   738  000CA0  EF54  F006         	goto	u1251
   739  000CA4  EF56  F006         	goto	u1250
   740  000CA8                     u1251:
   741  000CA8  EF6B  F006         	goto	l2343
   742  000CAC                     u1250:
   743  000CAC                     
   744                           ;main.c: 93: {;main.c: 94: affichePerdu(points);
   745  000CAC  C0F5  F0D0         	movff	main@points,affichePerdu@pts
   746  000CB0  C0F6  F0D1         	movff	main@points+1,affichePerdu@pts+1
   747  000CB4  0100               	movlb	0	; force () banked
   748  000CB6  6BD2               	clrf	(affichePerdu@pts+2)& (0+255),b
   749  000CB8  6BD3               	clrf	(affichePerdu@pts+3)& (0+255),b
   750  000CBA  EC28  F004         	call	_affichePerdu	;wreg free
   751  000CBE                     
   752                           ;main.c: 95: posX = 10;
   753  000CBE  0E0A               	movlw	10
   754  000CC0  0100               	movlb	0	; force () banked
   755  000CC2  6FF7               	movwf	main@posX& (0+255),b
   756  000CC4  0E00               	movlw	0
   757  000CC6  6FF8               	movwf	(main@posX+1)& (0+255),b
   758  000CC8                     
   759                           ; BSR set to: 0
   760                           ;main.c: 96: videAliens();
   761  000CC8  ECE9  F007         	call	_videAliens	;wreg free
   762  000CCC                     
   763                           ;main.c: 97: points=0;
   764  000CCC  0E00               	movlw	0
   765  000CCE  0100               	movlb	0	; force () banked
   766  000CD0  6FF5               	movwf	main@points& (0+255),b
   767  000CD2  0E00               	movlw	0
   768  000CD4  6FF6               	movwf	(main@points+1)& (0+255),b
   769  000CD6                     l2343:
   770                           
   771                           ;main.c: 98: };main.c: 99: afficheAliens();
   772  000CD6  ECED  F006         	call	_afficheAliens	;wreg free
   773  000CDA                     
   774                           ;main.c: 100: m_tempsDAfficher = 0;
   775  000CDA  0E00               	movlw	0
   776  000CDC  0100               	movlb	0	; force () banked
   777  000CDE  6FF9               	movwf	_m_tempsDAfficher& (0+255),b
   778  000CE0                     l2347:
   779                           
   780                           ; BSR set to: 0
   781                           ;main.c: 101: };main.c: 102: if (PORTBbits.RB1 ==0)
   782  000CE0  B281               	btfsc	129,1,c	;volatile
   783  000CE2  EF75  F006         	goto	u1261
   784  000CE6  EF77  F006         	goto	u1260
   785  000CEA                     u1261:
   786  000CEA  EF80  F006         	goto	l2351
   787  000CEE                     u1260:
   788  000CEE                     
   789                           ; BSR set to: 0
   790                           ;main.c: 103: feu(posX, &points);
   791  000CEE  0EF5               	movlw	low main@points
   792  000CF0  0100               	movlb	0	; force () banked
   793  000CF2  6FCC               	movwf	feu@pts& (0+255),b
   794  000CF4  0E00               	movlw	high main@points
   795  000CF6  6FCD               	movwf	(feu@pts+1)& (0+255),b
   796  000CF8  0100               	movlb	0	; force () banked
   797  000CFA  51F7               	movf	main@posX& (0+255),w,b
   798  000CFC  EC0F  F005         	call	_feu
   799  000D00                     l2351:
   800                           
   801                           ;main.c: 105: deplace(&posX);
   802  000D00  0EF7               	movlw	low main@posX
   803  000D02  0100               	movlb	0	; force () banked
   804  000D04  6FC8               	movwf	deplace@x& (0+255),b
   805  000D06  0E00               	movlw	high main@posX
   806  000D08  6FC9               	movwf	(deplace@x+1)& (0+255),b
   807  000D0A  ECAB  F005         	call	_deplace	;wreg free
   808  000D0E                     
   809                           ;main.c: 106: _delay((unsigned long)((100)*(1000000/4000.0)));
   810  000D0E  0E21               	movlw	33
   811  000D10  0100               	movlb	0	; force () banked
   812  000D12  6FF4               	movwf	??_main& (0+255),b
   813  000D14  0E76               	movlw	118
   814  000D16                     u1277:
   815  000D16  2EE8               	decfsz	wreg,f,c
   816  000D18  D7FE               	bra	u1277
   817  000D1A  2FF4               	decfsz	??_main& (0+255),f,b
   818  000D1C  D7FC               	bra	u1277
   819  000D1E  F000               	nop	
   820  000D20  EF36  F006         	goto	l2327
   821  000D24  EF16  F000         	goto	start
   822  000D28                     __end_of_main:
   823                           	opt callstack 0
   824                           
   825 ;; *************** function _videAliens *****************
   826 ;; Defined at:
   827 ;;		line 347 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  j               1    3[BANK0 ] unsigned char 
   832 ;;  i               1    2[BANK0 ] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   842 ;;      Params:         0       0       0       0       0       0       0
   843 ;;      Locals:         0       2       0       0       0       0       0
   844 ;;      Temps:          0       2       0       0       0       0       0
   845 ;;      Totals:         0       4       0       0       0       0       0
   846 ;;Total ram usage:        4 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text1
   857  000FD2                     __ptext1:
   858                           	opt callstack 0
   859  000FD2                     _videAliens:
   860                           	opt callstack 29
   861  000FD2                     
   862                           ;main.c: 349: for (char i = 0; i < 4; i++)
   863  000FD2  0E00               	movlw	0
   864  000FD4  0100               	movlb	0	; force () banked
   865  000FD6  6FC5               	movwf	videAliens@i& (0+255),b
   866  000FD8                     
   867                           ; BSR set to: 0
   868  000FD8  0E03               	movlw	3
   869  000FDA  0100               	movlb	0	; force () banked
   870  000FDC  65C5               	cpfsgt	videAliens@i& (0+255),b
   871  000FDE  EFF3  F007         	goto	u491
   872  000FE2  EFF5  F007         	goto	u490
   873  000FE6                     u491:
   874  000FE6  EFF7  F007         	goto	l1629
   875  000FEA                     u490:
   876  000FEA  EF33  F008         	goto	l159
   877  000FEE                     l1629:
   878                           
   879                           ; BSR set to: 0
   880                           ;main.c: 350: {;main.c: 351: for (char j = 0; j < 20; j++)
   881  000FEE  0E00               	movlw	0
   882  000FF0  0100               	movlb	0	; force () banked
   883  000FF2  6FC6               	movwf	videAliens@j& (0+255),b
   884  000FF4                     
   885                           ; BSR set to: 0
   886  000FF4  0E13               	movlw	19
   887  000FF6  0100               	movlb	0	; force () banked
   888  000FF8  65C6               	cpfsgt	videAliens@j& (0+255),b
   889  000FFA  EF01  F008         	goto	u501
   890  000FFE  EF03  F008         	goto	u500
   891  001002                     u501:
   892  001002  EF05  F008         	goto	l1635
   893  001006                     u500:
   894  001006  EF28  F008         	goto	l1641
   895  00100A                     l1635:
   896                           
   897                           ; BSR set to: 0
   898                           ;main.c: 352: {;main.c: 353: m_aliens[i][j] = ' ';
   899  00100A  0100               	movlb	0	; force () banked
   900  00100C  51C5               	movf	videAliens@i& (0+255),w,b
   901  00100E  0D15               	mullw	21
   902  001010  0E6F               	movlw	low _m_aliens
   903  001012  0100               	movlb	0	; force () banked
   904  001014  6FC3               	movwf	??_videAliens& (0+255),b
   905  001016  0E00               	movlw	high _m_aliens
   906  001018  6FC4               	movwf	(??_videAliens+1)& (0+255),b
   907  00101A  50F3               	movf	243,w,c
   908  00101C  27C3               	addwf	??_videAliens& (0+255),f,b
   909  00101E  50F4               	movf	244,w,c
   910  001020  23C4               	addwfc	(??_videAliens+1)& (0+255),f,b
   911  001022  0100               	movlb	0	; force () banked
   912  001024  51C6               	movf	videAliens@j& (0+255),w,b
   913  001026  0100               	movlb	0	; force () banked
   914  001028  25C3               	addwf	??_videAliens& (0+255),w,b
   915  00102A  6ED9               	movwf	fsr2l,c
   916  00102C  0100               	movlb	0	; force () banked
   917  00102E  0E00               	movlw	0
   918  001030  0100               	movlb	0	; force () banked
   919  001032  21C4               	addwfc	(??_videAliens+1)& (0+255),w,b
   920  001034  6EDA               	movwf	fsr2h,c
   921  001036  0E20               	movlw	32
   922  001038  6EDF               	movwf	indf2,c
   923  00103A                     
   924                           ; BSR set to: 0
   925  00103A  0100               	movlb	0	; force () banked
   926  00103C  2BC6               	incf	videAliens@j& (0+255),f,b
   927  00103E                     
   928                           ; BSR set to: 0
   929  00103E  0E13               	movlw	19
   930  001040  0100               	movlb	0	; force () banked
   931  001042  65C6               	cpfsgt	videAliens@j& (0+255),b
   932  001044  EF26  F008         	goto	u511
   933  001048  EF28  F008         	goto	u510
   934  00104C                     u511:
   935  00104C  EF05  F008         	goto	l1635
   936  001050                     u510:
   937  001050                     l1641:
   938                           
   939                           ; BSR set to: 0
   940  001050  0100               	movlb	0	; force () banked
   941  001052  2BC5               	incf	videAliens@i& (0+255),f,b
   942  001054                     
   943                           ; BSR set to: 0
   944  001054  0E03               	movlw	3
   945  001056  0100               	movlb	0	; force () banked
   946  001058  65C5               	cpfsgt	videAliens@i& (0+255),b
   947  00105A  EF31  F008         	goto	u521
   948  00105E  EF33  F008         	goto	u520
   949  001062                     u521:
   950  001062  EFF7  F007         	goto	l1629
   951  001066                     u520:
   952  001066                     l159:
   953                           
   954                           ; BSR set to: 0
   955  001066  0012               	return		;funcret
   956  001068                     __end_of_videAliens:
   957                           	opt callstack 0
   958                           
   959 ;; *************** function _perdu *****************
   960 ;; Defined at:
   961 ;;		line 285 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  i               1    1[BANK0 ] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      unsigned char 
   968 ;; Registers used:
   969 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   975 ;;      Params:         0       0       0       0       0       0       0
   976 ;;      Locals:         0       1       0       0       0       0       0
   977 ;;      Temps:          0       1       0       0       0       0       0
   978 ;;      Totals:         0       2       0       0       0       0       0
   979 ;;Total ram usage:        2 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text2
   990  001376                     __ptext2:
   991                           	opt callstack 0
   992  001376                     _perdu:
   993                           	opt callstack 29
   994  001376                     
   995                           ;main.c: 287: for (char i = 0; i < 20; i++)
   996  001376  0E00               	movlw	0
   997  001378  0100               	movlb	0	; force () banked
   998  00137A  6FC4               	movwf	perdu@i& (0+255),b
   999  00137C                     
  1000                           ; BSR set to: 0
  1001  00137C  0E13               	movlw	19
  1002  00137E  0100               	movlb	0	; force () banked
  1003  001380  65C4               	cpfsgt	perdu@i& (0+255),b
  1004  001382  EFC5  F009         	goto	u391
  1005  001386  EFC7  F009         	goto	u390
  1006  00138A                     u391:
  1007  00138A  EFC9  F009         	goto	l1555
  1008  00138E                     u390:
  1009  00138E  EFE7  F009         	goto	l1565
  1010  001392                     l1555:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;main.c: 288: {;main.c: 289: if (m_aliens[3][i] != ' ')
  1014  001392  0EAE               	movlw	low (_m_aliens+63)
  1015  001394  0100               	movlb	0	; force () banked
  1016  001396  25C4               	addwf	perdu@i& (0+255),w,b
  1017  001398  6ED9               	movwf	fsr2l,c
  1018  00139A  6ADA               	clrf	fsr2h,c
  1019  00139C  0E00               	movlw	high (_m_aliens+63)
  1020  00139E  22DA               	addwfc	fsr2h,f,c
  1021  0013A0  0E20               	movlw	32
  1022  0013A2  18DE               	xorwf	postinc2,w,c
  1023  0013A4  B4D8               	btfsc	status,2,c
  1024  0013A6  EFD7  F009         	goto	u401
  1025  0013AA  EFD9  F009         	goto	u400
  1026  0013AE                     u401:
  1027  0013AE  EFDC  F009         	goto	l1561
  1028  0013B2                     u400:
  1029  0013B2                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 290: return 1;
  1032  0013B2  0E01               	movlw	1
  1033  0013B4  EFE8  F009         	goto	l137
  1034  0013B8                     l1561:
  1035                           
  1036                           ; BSR set to: 0
  1037  0013B8  0100               	movlb	0	; force () banked
  1038  0013BA  2BC4               	incf	perdu@i& (0+255),f,b
  1039  0013BC                     
  1040                           ; BSR set to: 0
  1041  0013BC  0E13               	movlw	19
  1042  0013BE  0100               	movlb	0	; force () banked
  1043  0013C0  65C4               	cpfsgt	perdu@i& (0+255),b
  1044  0013C2  EFE5  F009         	goto	u411
  1045  0013C6  EFE7  F009         	goto	u410
  1046  0013CA                     u411:
  1047  0013CA  EFC9  F009         	goto	l1555
  1048  0013CE                     u410:
  1049  0013CE                     l1565:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;main.c: 291: };main.c: 292: return 0;
  1053  0013CE  0E00               	movlw	0
  1054  0013D0                     l137:
  1055                           
  1056                           ; BSR set to: 0
  1057  0013D0  0012               	return		;funcret
  1058  0013D2                     __end_of_perdu:
  1059                           	opt callstack 0
  1060                           
  1061 ;; *************** function _nouveauxAliens *****************
  1062 ;; Defined at:
  1063 ;;		line 153 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  alienPlace     20   26[BANK0 ] unsigned char [20]
  1068 ;;  i               1   48[BANK0 ] unsigned char 
  1069 ;;  j               1   47[BANK0 ] unsigned char 
  1070 ;;  posAlien        1   46[BANK0 ] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1080 ;;      Params:         0       0       0       0       0       0       0
  1081 ;;      Locals:         0      23       0       0       0       0       0
  1082 ;;      Temps:          0       6       0       0       0       0       0
  1083 ;;      Totals:         0      29       0       0       0       0       0
  1084 ;;Total ram usage:       29 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    3
  1087 ;; This function calls:
  1088 ;;		___awmod
  1089 ;;		_rand
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text3
  1096  000626                     __ptext3:
  1097                           	opt callstack 0
  1098  000626                     _nouveauxAliens:
  1099                           	opt callstack 27
  1100  000626                     
  1101                           ;main.c: 155: char posAlien;;main.c: 156: bool alienPlace[20];;main.c: 157: char i = 0;
  1102  000626  0E00               	movlw	0
  1103  000628  0100               	movlb	0	; force () banked
  1104  00062A  6FF3               	movwf	nouveauxAliens@i& (0+255),b
  1105                           
  1106                           ;main.c: 158: char j = 0;
  1107  00062C  0E00               	movlw	0
  1108  00062E  0100               	movlb	0	; force () banked
  1109  000630  6FF2               	movwf	nouveauxAliens@j& (0+255),b
  1110                           
  1111                           ;main.c: 160: for (i = 0; i < 20; i++)
  1112  000632  0E00               	movlw	0
  1113  000634  0100               	movlb	0	; force () banked
  1114  000636  6FF3               	movwf	nouveauxAliens@i& (0+255),b
  1115  000638                     
  1116                           ; BSR set to: 0
  1117  000638  0E13               	movlw	19
  1118  00063A  0100               	movlb	0	; force () banked
  1119  00063C  65F3               	cpfsgt	nouveauxAliens@i& (0+255),b
  1120  00063E  EF23  F003         	goto	u971
  1121  000642  EF25  F003         	goto	u970
  1122  000646                     u971:
  1123  000646  EF27  F003         	goto	l2157
  1124  00064A                     u970:
  1125  00064A  EF3B  F003         	goto	l2163
  1126  00064E                     l2157:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;main.c: 161: {;main.c: 162: alienPlace[i] = 0;
  1130  00064E  0EDD               	movlw	low nouveauxAliens@alienPlace
  1131  000650  0100               	movlb	0	; force () banked
  1132  000652  25F3               	addwf	nouveauxAliens@i& (0+255),w,b
  1133  000654  6ED9               	movwf	fsr2l,c
  1134  000656  6ADA               	clrf	fsr2h,c
  1135  000658  0E00               	movlw	high nouveauxAliens@alienPlace
  1136  00065A  22DA               	addwfc	fsr2h,f,c
  1137  00065C  0E00               	movlw	0
  1138  00065E  6EDF               	movwf	indf2,c
  1139  000660                     
  1140                           ; BSR set to: 0
  1141  000660  0100               	movlb	0	; force () banked
  1142  000662  2BF3               	incf	nouveauxAliens@i& (0+255),f,b
  1143  000664                     
  1144                           ; BSR set to: 0
  1145  000664  0E13               	movlw	19
  1146  000666  0100               	movlb	0	; force () banked
  1147  000668  65F3               	cpfsgt	nouveauxAliens@i& (0+255),b
  1148  00066A  EF39  F003         	goto	u981
  1149  00066E  EF3B  F003         	goto	u980
  1150  000672                     u981:
  1151  000672  EF27  F003         	goto	l2157
  1152  000676                     u980:
  1153  000676                     l2163:
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;main.c: 163: };main.c: 164: for (i = (4)-1; i > 0; i-=1)
  1157  000676  0E03               	movlw	3
  1158  000678  0100               	movlb	0	; force () banked
  1159  00067A  6FF3               	movwf	nouveauxAliens@i& (0+255),b
  1160  00067C  51F3               	movf	nouveauxAliens@i& (0+255),w,b
  1161  00067E  A4D8               	btfss	status,2,c
  1162  000680  EF44  F003         	goto	u991
  1163  000684  EF46  F003         	goto	u990
  1164  000688                     u991:
  1165  000688  EF48  F003         	goto	l2167
  1166  00068C                     u990:
  1167  00068C  EFA2  F003         	goto	l2183
  1168  000690                     l2167:
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 165: {;main.c: 166: for (j = 0; j < 20; j+=1)
  1172  000690  0E00               	movlw	0
  1173  000692  0100               	movlb	0	; force () banked
  1174  000694  6FF2               	movwf	nouveauxAliens@j& (0+255),b
  1175  000696                     
  1176                           ; BSR set to: 0
  1177  000696  0E13               	movlw	19
  1178  000698  0100               	movlb	0	; force () banked
  1179  00069A  65F2               	cpfsgt	nouveauxAliens@j& (0+255),b
  1180  00069C  EF52  F003         	goto	u1001
  1181  0006A0  EF54  F003         	goto	u1000
  1182  0006A4                     u1001:
  1183  0006A4  EF56  F003         	goto	l2173
  1184  0006A8                     u1000:
  1185  0006A8  EF97  F003         	goto	l2179
  1186  0006AC                     l2173:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 167: {;main.c: 168: m_aliens[i][j] = m_aliens[(i-1)][j];
  1190  0006AC  0100               	movlb	0	; force () banked
  1191  0006AE  51F3               	movf	nouveauxAliens@i& (0+255),w,b
  1192  0006B0  0D15               	mullw	21
  1193  0006B2  0EEB               	movlw	235
  1194  0006B4  0100               	movlb	0	; force () banked
  1195  0006B6  6FD7               	movwf	??_nouveauxAliens& (0+255),b
  1196  0006B8  0EFF               	movlw	255
  1197  0006BA  6FD8               	movwf	(??_nouveauxAliens+1)& (0+255),b
  1198  0006BC  0E6F               	movlw	low _m_aliens
  1199  0006BE  6FD9               	movwf	(??_nouveauxAliens+2)& (0+255),b
  1200  0006C0  0E00               	movlw	high _m_aliens
  1201  0006C2  6FDA               	movwf	(??_nouveauxAliens+3)& (0+255),b
  1202  0006C4  51D7               	movf	??_nouveauxAliens& (0+255),w,b
  1203  0006C6  27D9               	addwf	(??_nouveauxAliens+2)& (0+255),f,b
  1204  0006C8  51D8               	movf	(??_nouveauxAliens+1)& (0+255),w,b
  1205  0006CA  23DA               	addwfc	(??_nouveauxAliens+3)& (0+255),f,b
  1206  0006CC  50F3               	movf	243,w,c
  1207  0006CE  27D9               	addwf	(??_nouveauxAliens+2)& (0+255),f,b
  1208  0006D0  50F4               	movf	244,w,c
  1209  0006D2  23DA               	addwfc	(??_nouveauxAliens+3)& (0+255),f,b
  1210  0006D4  0100               	movlb	0	; force () banked
  1211  0006D6  51F2               	movf	nouveauxAliens@j& (0+255),w,b
  1212  0006D8  0100               	movlb	0	; force () banked
  1213  0006DA  25D9               	addwf	(??_nouveauxAliens+2)& (0+255),w,b
  1214  0006DC  6ED9               	movwf	fsr2l,c
  1215  0006DE  0100               	movlb	0	; force () banked
  1216  0006E0  0E00               	movlw	0
  1217  0006E2  0100               	movlb	0	; force () banked
  1218  0006E4  21DA               	addwfc	(??_nouveauxAliens+3)& (0+255),w,b
  1219  0006E6  6EDA               	movwf	fsr2h,c
  1220  0006E8  0100               	movlb	0	; force () banked
  1221  0006EA  51F3               	movf	nouveauxAliens@i& (0+255),w,b
  1222  0006EC  0D15               	mullw	21
  1223  0006EE  0E6F               	movlw	low _m_aliens
  1224  0006F0  0100               	movlb	0	; force () banked
  1225  0006F2  6FDB               	movwf	(??_nouveauxAliens+4)& (0+255),b
  1226  0006F4  0E00               	movlw	high _m_aliens
  1227  0006F6  6FDC               	movwf	(??_nouveauxAliens+5)& (0+255),b
  1228  0006F8  50F3               	movf	243,w,c
  1229  0006FA  27DB               	addwf	(??_nouveauxAliens+4)& (0+255),f,b
  1230  0006FC  50F4               	movf	244,w,c
  1231  0006FE  23DC               	addwfc	(??_nouveauxAliens+5)& (0+255),f,b
  1232  000700  0100               	movlb	0	; force () banked
  1233  000702  51F2               	movf	nouveauxAliens@j& (0+255),w,b
  1234  000704  0100               	movlb	0	; force () banked
  1235  000706  25DB               	addwf	(??_nouveauxAliens+4)& (0+255),w,b
  1236  000708  6EE1               	movwf	fsr1l,c
  1237  00070A  0100               	movlb	0	; force () banked
  1238  00070C  0E00               	movlw	0
  1239  00070E  0100               	movlb	0	; force () banked
  1240  000710  21DC               	addwfc	(??_nouveauxAliens+5)& (0+255),w,b
  1241  000712  6EE2               	movwf	fsr1h,c
  1242  000714  CFDF FFE7          	movff	indf2,indf1
  1243  000718                     
  1244                           ; BSR set to: 0
  1245  000718  0100               	movlb	0	; force () banked
  1246  00071A  2BF2               	incf	nouveauxAliens@j& (0+255),f,b
  1247  00071C                     
  1248                           ; BSR set to: 0
  1249  00071C  0E13               	movlw	19
  1250  00071E  0100               	movlb	0	; force () banked
  1251  000720  65F2               	cpfsgt	nouveauxAliens@j& (0+255),b
  1252  000722  EF95  F003         	goto	u1011
  1253  000726  EF97  F003         	goto	u1010
  1254  00072A                     u1011:
  1255  00072A  EF56  F003         	goto	l2173
  1256  00072E                     u1010:
  1257  00072E                     l2179:
  1258                           
  1259                           ; BSR set to: 0
  1260  00072E  0100               	movlb	0	; force () banked
  1261  000730  07F3               	decf	nouveauxAliens@i& (0+255),f,b
  1262  000732                     
  1263                           ; BSR set to: 0
  1264  000732  0100               	movlb	0	; force () banked
  1265  000734  51F3               	movf	nouveauxAliens@i& (0+255),w,b
  1266  000736  A4D8               	btfss	status,2,c
  1267  000738  EFA0  F003         	goto	u1021
  1268  00073C  EFA2  F003         	goto	u1020
  1269  000740                     u1021:
  1270  000740  EF48  F003         	goto	l2167
  1271  000744                     u1020:
  1272  000744                     l2183:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 170: };main.c: 171: };main.c: 172: i=0;
  1276  000744  0E00               	movlw	0
  1277  000746  0100               	movlb	0	; force () banked
  1278  000748  6FF3               	movwf	nouveauxAliens@i& (0+255),b
  1279                           
  1280                           ;main.c: 173: while (i < m_niveau)
  1281  00074A  EFD2  F003         	goto	l2193
  1282  00074E                     l2185:
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;main.c: 174: {;main.c: 175: posAlien = rand()%20;
  1286  00074E  ECE9  F009         	call	_rand	;wreg free
  1287  000752  C0CF  F0D1         	movff	?_rand,___awmod@dividend
  1288  000756  C0D0  F0D2         	movff	?_rand+1,___awmod@dividend+1
  1289  00075A  0E00               	movlw	0
  1290  00075C  0100               	movlb	0	; force () banked
  1291  00075E  6FD4               	movwf	(___awmod@divisor+1)& (0+255),b
  1292  000760  0E14               	movlw	20
  1293  000762  6FD3               	movwf	___awmod@divisor& (0+255),b
  1294  000764  EC94  F006         	call	___awmod	;wreg free
  1295  000768  0100               	movlb	0	; force () banked
  1296  00076A  51D1               	movf	?___awmod& (0+255),w,b
  1297  00076C  0100               	movlb	0	; force () banked
  1298  00076E  6FF1               	movwf	nouveauxAliens@posAlien& (0+255),b
  1299  000770                     
  1300                           ; BSR set to: 0
  1301                           ;main.c: 177: if (alienPlace[posAlien] == 0)
  1302  000770  0EDD               	movlw	low nouveauxAliens@alienPlace
  1303  000772  0100               	movlb	0	; force () banked
  1304  000774  25F1               	addwf	nouveauxAliens@posAlien& (0+255),w,b
  1305  000776  6ED9               	movwf	fsr2l,c
  1306  000778  6ADA               	clrf	fsr2h,c
  1307  00077A  0E00               	movlw	high nouveauxAliens@alienPlace
  1308  00077C  22DA               	addwfc	fsr2h,f,c
  1309  00077E  50DF               	movf	indf2,w,c
  1310  000780  A4D8               	btfss	status,2,c
  1311  000782  EFC5  F003         	goto	u1031
  1312  000786  EFC7  F003         	goto	u1030
  1313  00078A                     u1031:
  1314  00078A  EFD2  F003         	goto	l2193
  1315  00078E                     u1030:
  1316  00078E                     
  1317                           ; BSR set to: 0
  1318                           ;main.c: 178: {;main.c: 179: alienPlace[posAlien] = 1;
  1319  00078E  0EDD               	movlw	low nouveauxAliens@alienPlace
  1320  000790  0100               	movlb	0	; force () banked
  1321  000792  25F1               	addwf	nouveauxAliens@posAlien& (0+255),w,b
  1322  000794  6ED9               	movwf	fsr2l,c
  1323  000796  6ADA               	clrf	fsr2h,c
  1324  000798  0E00               	movlw	high nouveauxAliens@alienPlace
  1325  00079A  22DA               	addwfc	fsr2h,f,c
  1326  00079C  0E01               	movlw	1
  1327  00079E  6EDF               	movwf	indf2,c
  1328  0007A0                     
  1329                           ; BSR set to: 0
  1330                           ;main.c: 180: i++;
  1331  0007A0  0100               	movlb	0	; force () banked
  1332  0007A2  2BF3               	incf	nouveauxAliens@i& (0+255),f,b
  1333  0007A4                     l2193:
  1334                           
  1335                           ; BSR set to: 0
  1336  0007A4  0100               	movlb	0	; force () banked
  1337  0007A6  516E               	movf	_m_niveau& (0+255),w,b
  1338  0007A8  0100               	movlb	0	; force () banked
  1339  0007AA  5DF3               	subwf	nouveauxAliens@i& (0+255),w,b
  1340  0007AC  A0D8               	btfss	status,0,c
  1341  0007AE  EFDB  F003         	goto	u1041
  1342  0007B2  EFDD  F003         	goto	u1040
  1343  0007B6                     u1041:
  1344  0007B6  EFA7  F003         	goto	l2185
  1345  0007BA                     u1040:
  1346  0007BA                     
  1347                           ; BSR set to: 0
  1348                           ;main.c: 181: };main.c: 182: };main.c: 183: for (i = 0; i < 20; i++)
  1349  0007BA  0E00               	movlw	0
  1350  0007BC  0100               	movlb	0	; force () banked
  1351  0007BE  6FF3               	movwf	nouveauxAliens@i& (0+255),b
  1352  0007C0                     
  1353                           ; BSR set to: 0
  1354  0007C0  0E13               	movlw	19
  1355  0007C2  0100               	movlb	0	; force () banked
  1356  0007C4  65F3               	cpfsgt	nouveauxAliens@i& (0+255),b
  1357  0007C6  EFE7  F003         	goto	u1051
  1358  0007CA  EFE9  F003         	goto	u1050
  1359  0007CE                     u1051:
  1360  0007CE  EFEB  F003         	goto	l2201
  1361  0007D2                     u1050:
  1362  0007D2  EF27  F004         	goto	l107
  1363  0007D6                     l2201:
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;main.c: 184: {;main.c: 185: if (alienPlace[i] == 1)
  1367  0007D6  0EDD               	movlw	low nouveauxAliens@alienPlace
  1368  0007D8  0100               	movlb	0	; force () banked
  1369  0007DA  25F3               	addwf	nouveauxAliens@i& (0+255),w,b
  1370  0007DC  6ED9               	movwf	fsr2l,c
  1371  0007DE  6ADA               	clrf	fsr2h,c
  1372  0007E0  0E00               	movlw	high nouveauxAliens@alienPlace
  1373  0007E2  22DA               	addwfc	fsr2h,f,c
  1374  0007E4  04DE               	decf	postinc2,w,c
  1375  0007E6  A4D8               	btfss	status,2,c
  1376  0007E8  EFF8  F003         	goto	u1061
  1377  0007EC  EFFA  F003         	goto	u1060
  1378  0007F0                     u1061:
  1379  0007F0  EF13  F004         	goto	l2205
  1380  0007F4                     u1060:
  1381  0007F4                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 186: {;main.c: 187: m_aliens[0][i] = (rand()%3)+1;
  1384  0007F4  0E6F               	movlw	low _m_aliens
  1385  0007F6  0100               	movlb	0	; force () banked
  1386  0007F8  25F3               	addwf	nouveauxAliens@i& (0+255),w,b
  1387  0007FA  6ED9               	movwf	fsr2l,c
  1388  0007FC  6ADA               	clrf	fsr2h,c
  1389  0007FE  0E00               	movlw	high _m_aliens
  1390  000800  22DA               	addwfc	fsr2h,f,c
  1391  000802  ECE9  F009         	call	_rand	;wreg free
  1392  000806  C0CF  F0D1         	movff	?_rand,___awmod@dividend
  1393  00080A  C0D0  F0D2         	movff	?_rand+1,___awmod@dividend+1
  1394  00080E  0E00               	movlw	0
  1395  000810  0100               	movlb	0	; force () banked
  1396  000812  6FD4               	movwf	(___awmod@divisor+1)& (0+255),b
  1397  000814  0E03               	movlw	3
  1398  000816  6FD3               	movwf	___awmod@divisor& (0+255),b
  1399  000818  EC94  F006         	call	___awmod	;wreg free
  1400  00081C  0100               	movlb	0	; force () banked
  1401  00081E  29D1               	incf	?___awmod& (0+255),w,b
  1402  000820  6EDF               	movwf	indf2,c
  1403                           
  1404                           ;main.c: 192: }
  1405  000822  EF1C  F004         	goto	l2207
  1406  000826                     l2205:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;main.c: 193: else;main.c: 194: m_aliens[0][i] = ' ';
  1410  000826  0E6F               	movlw	low _m_aliens
  1411  000828  0100               	movlb	0	; force () banked
  1412  00082A  25F3               	addwf	nouveauxAliens@i& (0+255),w,b
  1413  00082C  6ED9               	movwf	fsr2l,c
  1414  00082E  6ADA               	clrf	fsr2h,c
  1415  000830  0E00               	movlw	high _m_aliens
  1416  000832  22DA               	addwfc	fsr2h,f,c
  1417  000834  0E20               	movlw	32
  1418  000836  6EDF               	movwf	indf2,c
  1419  000838                     l2207:
  1420                           
  1421                           ; BSR set to: 0
  1422  000838  0100               	movlb	0	; force () banked
  1423  00083A  2BF3               	incf	nouveauxAliens@i& (0+255),f,b
  1424  00083C                     
  1425                           ; BSR set to: 0
  1426  00083C  0E13               	movlw	19
  1427  00083E  0100               	movlb	0	; force () banked
  1428  000840  65F3               	cpfsgt	nouveauxAliens@i& (0+255),b
  1429  000842  EF25  F004         	goto	u1071
  1430  000846  EF27  F004         	goto	u1070
  1431  00084A                     u1071:
  1432  00084A  EFEB  F003         	goto	l2201
  1433  00084E                     u1070:
  1434  00084E                     l107:
  1435                           
  1436                           ; BSR set to: 0
  1437  00084E  0012               	return		;funcret
  1438  000850                     __end_of_nouveauxAliens:
  1439                           	opt callstack 0
  1440                           
  1441 ;; *************** function _rand *****************
  1442 ;; Defined at:
  1443 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2   12[BANK0 ] int 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         0       2       0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0
  1460 ;;      Totals:         0       2       0       0       0       0       0
  1461 ;;Total ram usage:        2 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    2
  1464 ;; This function calls:
  1465 ;;		___lmul
  1466 ;; This function is called by:
  1467 ;;		_nouveauxAliens
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text4
  1472  0013D2                     __ptext4:
  1473                           	opt callstack 0
  1474  0013D2                     _rand:
  1475                           	opt callstack 27
  1476  0013D2  C06A  F0C3         	movff	_randx,___lmul@multiplier
  1477  0013D6  C06B  F0C4         	movff	_randx+1,___lmul@multiplier+1
  1478  0013DA  C06C  F0C5         	movff	_randx+2,___lmul@multiplier+2
  1479  0013DE  C06D  F0C6         	movff	_randx+3,___lmul@multiplier+3
  1480  0013E2  0E6D               	movlw	109
  1481  0013E4  0100               	movlb	0	; () banked
  1482  0013E6  6FC7               	movwf	___lmul@multiplicand& (0+255),b
  1483  0013E8  0E4E               	movlw	78
  1484  0013EA  6FC8               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1485  0013EC  0EC6               	movlw	198
  1486  0013EE  6FC9               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1487  0013F0  0E41               	movlw	65
  1488  0013F2  6FCA               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1489  0013F4  ECB2  F008         	call	___lmul	;wreg free
  1490  0013F8  C0C3  F06A         	movff	?___lmul,_randx
  1491  0013FC  C0C4  F06B         	movff	?___lmul+1,_randx+1
  1492  001400  C0C5  F06C         	movff	?___lmul+2,_randx+2
  1493  001404  C0C6  F06D         	movff	?___lmul+3,_randx+3
  1494  001408  0E39               	movlw	57
  1495  00140A  0100               	movlb	0	; () banked
  1496  00140C  276A               	addwf	_randx& (0+255),f,b
  1497  00140E  0E30               	movlw	48
  1498  001410  236B               	addwfc	(_randx+1)& (0+255),f,b
  1499  001412  0E00               	movlw	0
  1500  001414  236C               	addwfc	(_randx+2)& (0+255),f,b
  1501  001416  0E00               	movlw	0
  1502  001418  236D               	addwfc	(_randx+3)& (0+255),f,b
  1503  00141A                     
  1504                           ; BSR set to: 0
  1505  00141A  0EFF               	movlw	255
  1506  00141C  156C               	andwf	(_randx+2)& (0+255),w,b
  1507  00141E  6FCF               	movwf	?_rand& (0+255),b
  1508  001420  0E7F               	movlw	127
  1509  001422  156D               	andwf	(_randx+3)& (0+255),w,b
  1510  001424  6FD0               	movwf	(?_rand+1)& (0+255),b
  1511  001426                     
  1512                           ; BSR set to: 0
  1513  001426  0012               	return		;funcret
  1514  001428                     __end_of_rand:
  1515                           	opt callstack 0
  1516                           
  1517 ;; *************** function ___lmul *****************
  1518 ;; Defined at:
  1519 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1522 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  product         4    8[BANK0 ] unsigned long 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  4    0[BANK0 ] unsigned long 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1534 ;;      Params:         0       8       0       0       0       0       0
  1535 ;;      Locals:         0       4       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0
  1537 ;;      Totals:         0      12       0       0       0       0       0
  1538 ;;Total ram usage:       12 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_rand
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text5
  1549  001164                     __ptext5:
  1550                           	opt callstack 0
  1551  001164                     ___lmul:
  1552                           	opt callstack 27
  1553  001164  0E00               	movlw	0
  1554  001166  0100               	movlb	0	; () banked
  1555  001168  6FCB               	movwf	___lmul@product& (0+255),b
  1556  00116A  0E00               	movlw	0
  1557  00116C  6FCC               	movwf	(___lmul@product+1)& (0+255),b
  1558  00116E  0E00               	movlw	0
  1559  001170  6FCD               	movwf	(___lmul@product+2)& (0+255),b
  1560  001172  0E00               	movlw	0
  1561  001174  6FCE               	movwf	(___lmul@product+3)& (0+255),b
  1562  001176                     l1911:
  1563                           
  1564                           ; BSR set to: 0
  1565  001176  A1C3               	btfss	___lmul@multiplier& (0+255),0,b
  1566  001178  EFC0  F008         	goto	u741
  1567  00117C  EFC2  F008         	goto	u740
  1568  001180                     u741:
  1569  001180  EFCA  F008         	goto	l1915
  1570  001184                     u740:
  1571  001184                     
  1572                           ; BSR set to: 0
  1573  001184  51C7               	movf	___lmul@multiplicand& (0+255),w,b
  1574  001186  27CB               	addwf	___lmul@product& (0+255),f,b
  1575  001188  51C8               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1576  00118A  23CC               	addwfc	(___lmul@product+1)& (0+255),f,b
  1577  00118C  51C9               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1578  00118E  23CD               	addwfc	(___lmul@product+2)& (0+255),f,b
  1579  001190  51CA               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1580  001192  23CE               	addwfc	(___lmul@product+3)& (0+255),f,b
  1581  001194                     l1915:
  1582                           
  1583                           ; BSR set to: 0
  1584  001194  90D8               	bcf	status,0,c
  1585  001196  37C7               	rlcf	___lmul@multiplicand& (0+255),f,b
  1586  001198  37C8               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1587  00119A  37C9               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1588  00119C  37CA               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1589  00119E                     
  1590                           ; BSR set to: 0
  1591  00119E  90D8               	bcf	status,0,c
  1592  0011A0  33C6               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1593  0011A2  33C5               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1594  0011A4  33C4               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1595  0011A6  33C3               	rrcf	___lmul@multiplier& (0+255),f,b
  1596  0011A8  51C3               	movf	___lmul@multiplier& (0+255),w,b
  1597  0011AA  11C4               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1598  0011AC  11C5               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1599  0011AE  11C6               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1600  0011B0  A4D8               	btfss	status,2,c
  1601  0011B2  EFDD  F008         	goto	u751
  1602  0011B6  EFDF  F008         	goto	u750
  1603  0011BA                     u751:
  1604  0011BA  EFBB  F008         	goto	l1911
  1605  0011BE                     u750:
  1606  0011BE                     
  1607                           ; BSR set to: 0
  1608  0011BE  C0CB  F0C3         	movff	___lmul@product,?___lmul
  1609  0011C2  C0CC  F0C4         	movff	___lmul@product+1,?___lmul+1
  1610  0011C6  C0CD  F0C5         	movff	___lmul@product+2,?___lmul+2
  1611  0011CA  C0CE  F0C6         	movff	___lmul@product+3,?___lmul+3
  1612  0011CE                     
  1613                           ; BSR set to: 0
  1614  0011CE  0012               	return		;funcret
  1615  0011D0                     __end_of___lmul:
  1616                           	opt callstack 0
  1617                           
  1618 ;; *************** function ___awmod *****************
  1619 ;; Defined at:
  1620 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  dividend        2   14[BANK0 ] int 
  1623 ;;  divisor         2   16[BANK0 ] int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  sign            1   19[BANK0 ] unsigned char 
  1626 ;;  counter         1   18[BANK0 ] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2   14[BANK0 ] int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         0       4       0       0       0       0       0
  1637 ;;      Locals:         0       2       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0
  1639 ;;      Totals:         0       6       0       0       0       0       0
  1640 ;;Total ram usage:        6 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_nouveauxAliens
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text6
  1651  000D28                     __ptext6:
  1652                           	opt callstack 0
  1653  000D28                     ___awmod:
  1654                           	opt callstack 28
  1655  000D28  0E00               	movlw	0
  1656  000D2A  0100               	movlb	0	; () banked
  1657  000D2C  6FD6               	movwf	___awmod@sign& (0+255),b
  1658  000D2E                     
  1659                           ; BSR set to: 0
  1660  000D2E  BFD2               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1661  000D30  EF9E  F006         	goto	u880
  1662  000D34  EF9C  F006         	goto	u881
  1663  000D38                     u881:
  1664  000D38  EFA4  F006         	goto	l2057
  1665  000D3C                     u880:
  1666  000D3C                     
  1667                           ; BSR set to: 0
  1668  000D3C  6DD1               	negf	___awmod@dividend& (0+255),b
  1669  000D3E  1FD2               	comf	(___awmod@dividend+1)& (0+255),f,b
  1670  000D40  B0D8               	btfsc	status,0,c
  1671  000D42  2BD2               	incf	(___awmod@dividend+1)& (0+255),f,b
  1672  000D44                     
  1673                           ; BSR set to: 0
  1674  000D44  0E01               	movlw	1
  1675  000D46  6FD6               	movwf	___awmod@sign& (0+255),b
  1676  000D48                     l2057:
  1677                           
  1678                           ; BSR set to: 0
  1679  000D48  BFD4               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1680  000D4A  EFAB  F006         	goto	u890
  1681  000D4E  EFA9  F006         	goto	u891
  1682  000D52                     u891:
  1683  000D52  EFAF  F006         	goto	l2061
  1684  000D56                     u890:
  1685  000D56                     
  1686                           ; BSR set to: 0
  1687  000D56  6DD3               	negf	___awmod@divisor& (0+255),b
  1688  000D58  1FD4               	comf	(___awmod@divisor+1)& (0+255),f,b
  1689  000D5A  B0D8               	btfsc	status,0,c
  1690  000D5C  2BD4               	incf	(___awmod@divisor+1)& (0+255),f,b
  1691  000D5E                     l2061:
  1692                           
  1693                           ; BSR set to: 0
  1694  000D5E  51D3               	movf	___awmod@divisor& (0+255),w,b
  1695  000D60  11D4               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1696  000D62  B4D8               	btfsc	status,2,c
  1697  000D64  EFB6  F006         	goto	u901
  1698  000D68  EFB8  F006         	goto	u900
  1699  000D6C                     u901:
  1700  000D6C  EFDC  F006         	goto	l2077
  1701  000D70                     u900:
  1702  000D70                     
  1703                           ; BSR set to: 0
  1704  000D70  0E01               	movlw	1
  1705  000D72  6FD5               	movwf	___awmod@counter& (0+255),b
  1706  000D74  EFC0  F006         	goto	l2067
  1707  000D78                     l2065:
  1708                           
  1709                           ; BSR set to: 0
  1710  000D78  90D8               	bcf	status,0,c
  1711  000D7A  37D3               	rlcf	___awmod@divisor& (0+255),f,b
  1712  000D7C  37D4               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1713  000D7E  2BD5               	incf	___awmod@counter& (0+255),f,b
  1714  000D80                     l2067:
  1715                           
  1716                           ; BSR set to: 0
  1717  000D80  AFD4               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1718  000D82  EFC5  F006         	goto	u911
  1719  000D86  EFC7  F006         	goto	u910
  1720  000D8A                     u911:
  1721  000D8A  EFBC  F006         	goto	l2065
  1722  000D8E                     u910:
  1723  000D8E                     l2069:
  1724                           
  1725                           ; BSR set to: 0
  1726  000D8E  51D3               	movf	___awmod@divisor& (0+255),w,b
  1727  000D90  5DD1               	subwf	___awmod@dividend& (0+255),w,b
  1728  000D92  51D4               	movf	(___awmod@divisor+1)& (0+255),w,b
  1729  000D94  59D2               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1730  000D96  A0D8               	btfss	status,0,c
  1731  000D98  EFD0  F006         	goto	u921
  1732  000D9C  EFD2  F006         	goto	u920
  1733  000DA0                     u921:
  1734  000DA0  EFD6  F006         	goto	l2073
  1735  000DA4                     u920:
  1736  000DA4                     
  1737                           ; BSR set to: 0
  1738  000DA4  51D3               	movf	___awmod@divisor& (0+255),w,b
  1739  000DA6  5FD1               	subwf	___awmod@dividend& (0+255),f,b
  1740  000DA8  51D4               	movf	(___awmod@divisor+1)& (0+255),w,b
  1741  000DAA  5BD2               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1742  000DAC                     l2073:
  1743                           
  1744                           ; BSR set to: 0
  1745  000DAC  90D8               	bcf	status,0,c
  1746  000DAE  33D4               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1747  000DB0  33D3               	rrcf	___awmod@divisor& (0+255),f,b
  1748  000DB2                     
  1749                           ; BSR set to: 0
  1750  000DB2  2FD5               	decfsz	___awmod@counter& (0+255),f,b
  1751  000DB4  EFC7  F006         	goto	l2069
  1752  000DB8                     l2077:
  1753                           
  1754                           ; BSR set to: 0
  1755  000DB8  51D6               	movf	___awmod@sign& (0+255),w,b
  1756  000DBA  B4D8               	btfsc	status,2,c
  1757  000DBC  EFE2  F006         	goto	u931
  1758  000DC0  EFE4  F006         	goto	u930
  1759  000DC4                     u931:
  1760  000DC4  EFE8  F006         	goto	l2081
  1761  000DC8                     u930:
  1762  000DC8                     
  1763                           ; BSR set to: 0
  1764  000DC8  6DD1               	negf	___awmod@dividend& (0+255),b
  1765  000DCA  1FD2               	comf	(___awmod@dividend+1)& (0+255),f,b
  1766  000DCC  B0D8               	btfsc	status,0,c
  1767  000DCE  2BD2               	incf	(___awmod@dividend+1)& (0+255),f,b
  1768  000DD0                     l2081:
  1769                           
  1770                           ; BSR set to: 0
  1771  000DD0  C0D1  F0D1         	movff	___awmod@dividend,?___awmod
  1772  000DD4  C0D2  F0D2         	movff	___awmod@dividend+1,?___awmod+1
  1773  000DD8                     
  1774                           ; BSR set to: 0
  1775  000DD8  0012               	return		;funcret
  1776  000DDA                     __end_of___awmod:
  1777                           	opt callstack 0
  1778                           
  1779 ;; *************** function _niveau *****************
  1780 ;; Defined at:
  1781 ;;		line 364 in file "main.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  points          4   13[BANK0 ] unsigned long 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  niveau          1   17[BANK0 ] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      unsigned char 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1795 ;;      Params:         0       4       0       0       0       0       0
  1796 ;;      Locals:         0       1       0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0
  1798 ;;      Totals:         0       5       0       0       0       0       0
  1799 ;;Total ram usage:        5 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    2
  1802 ;; This function calls:
  1803 ;;		___lldiv
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text7
  1810  0015A0                     __ptext7:
  1811                           	opt callstack 0
  1812  0015A0                     _niveau:
  1813                           	opt callstack 28
  1814  0015A0                     
  1815                           ;main.c: 366: char niveau = (points/10)+1;
  1816  0015A0  C0D0  F0C3         	movff	niveau@points,___lldiv@dividend
  1817  0015A4  C0D1  F0C4         	movff	niveau@points+1,___lldiv@dividend+1
  1818  0015A8  C0D2  F0C5         	movff	niveau@points+2,___lldiv@dividend+2
  1819  0015AC  C0D3  F0C6         	movff	niveau@points+3,___lldiv@dividend+3
  1820  0015B0  0E0A               	movlw	10
  1821  0015B2  0100               	movlb	0	; force () banked
  1822  0015B4  6FC7               	movwf	___lldiv@divisor& (0+255),b
  1823  0015B6  0E00               	movlw	0
  1824  0015B8  6FC8               	movwf	(___lldiv@divisor+1)& (0+255),b
  1825  0015BA  0E00               	movlw	0
  1826  0015BC  6FC9               	movwf	(___lldiv@divisor+2)& (0+255),b
  1827  0015BE  0E00               	movlw	0
  1828  0015C0  6FCA               	movwf	(___lldiv@divisor+3)& (0+255),b
  1829  0015C2  EC45  F007         	call	___lldiv	;wreg free
  1830  0015C6  0100               	movlb	0	; force () banked
  1831  0015C8  29C3               	incf	?___lldiv& (0+255),w,b
  1832  0015CA  0100               	movlb	0	; force () banked
  1833  0015CC  6FD4               	movwf	niveau@niveau& (0+255),b
  1834  0015CE                     
  1835                           ; BSR set to: 0
  1836                           ;main.c: 367: return niveau;
  1837  0015CE  0100               	movlb	0	; force () banked
  1838  0015D0  51D4               	movf	niveau@niveau& (0+255),w,b
  1839  0015D2                     
  1840                           ; BSR set to: 0
  1841  0015D2  0012               	return		;funcret
  1842  0015D4                     __end_of_niveau:
  1843                           	opt callstack 0
  1844                           
  1845 ;; *************** function _lcd_init *****************
  1846 ;; Defined at:
  1847 ;;		line 258 in file "Lcd4Lignes.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1861 ;;      Params:         0       0       0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    6
  1868 ;; This function calls:
  1869 ;;		_lcd_initCGRam
  1870 ;;		_lcd_resetSequence
  1871 ;;		_lcd_wrCom
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text8
  1878  001634                     __ptext8:
  1879                           	opt callstack 0
  1880  001634                     _lcd_init:
  1881                           	opt callstack 24
  1882  001634                     
  1883                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1884  001634  EC54  F009         	call	_lcd_resetSequence	;wreg free
  1885                           
  1886                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1887  001638  0E28               	movlw	40
  1888  00163A  EC1E  F009         	call	_lcd_wrCom
  1889                           
  1890                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1891  00163E  0E0F               	movlw	15
  1892  001640  EC1E  F009         	call	_lcd_wrCom
  1893                           
  1894                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1895  001644  0E01               	movlw	1
  1896  001646  EC1E  F009         	call	_lcd_wrCom
  1897                           
  1898                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1899  00164A  0E06               	movlw	6
  1900  00164C  EC1E  F009         	call	_lcd_wrCom
  1901                           
  1902                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1903  001650  0E80               	movlw	128
  1904  001652  EC1E  F009         	call	_lcd_wrCom
  1905  001656                     
  1906                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1907  001656  EC98  F007         	call	_lcd_initCGRam	;wreg free
  1908  00165A  0012               	return		;funcret
  1909  00165C                     __end_of_lcd_init:
  1910                           	opt callstack 0
  1911                           
  1912 ;; *************** function _lcd_resetSequence *****************
  1913 ;; Defined at:
  1914 ;;		line 221 in file "Lcd4Lignes.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1928 ;;      Params:         0       0       0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0
  1930 ;;      Temps:          0       1       0       0       0       0       0
  1931 ;;      Totals:         0       1       0       0       0       0       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    2
  1935 ;; This function calls:
  1936 ;;		_lcd_ecrireDonnees
  1937 ;;		_lcd_strobeEnableBit
  1938 ;; This function is called by:
  1939 ;;		_lcd_init
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text9
  1944  0012A8                     __ptext9:
  1945                           	opt callstack 0
  1946  0012A8                     _lcd_resetSequence:
  1947                           	opt callstack 27
  1948  0012A8                     
  1949                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1950  0012A8  0E00               	movlw	0
  1951  0012AA  6E95               	movwf	149,c	;volatile
  1952  0012AC                     
  1953                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1954  0012AC  0E0D               	movlw	13
  1955  0012AE  0100               	movlb	0	; force () banked
  1956  0012B0  6FC5               	movwf	??_lcd_resetSequence& (0+255),b
  1957  0012B2  0EFB               	movlw	251
  1958  0012B4                     u1287:
  1959  0012B4  2EE8               	decfsz	wreg,f,c
  1960  0012B6  D7FE               	bra	u1287
  1961  0012B8  2FC5               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1962  0012BA  D7FC               	bra	u1287
  1963  0012BC  F000 F000          	nop2	
  1964  0012C0                     
  1965                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1966  0012C0  9080               	bcf	128,0,c	;volatile
  1967  0012C2                     
  1968                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1969  0012C2  9280               	bcf	128,1,c	;volatile
  1970  0012C4                     
  1971                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1972  0012C4  0E03               	movlw	3
  1973  0012C6  EC2E  F00B         	call	_lcd_ecrireDonnees
  1974  0012CA                     
  1975                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1976  0012CA  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  1977  0012CE                     
  1978                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1979  0012CE  0E03               	movlw	3
  1980  0012D0                     u1297:
  1981  0012D0  2EE8               	decfsz	wreg,f,c
  1982  0012D2  D7FE               	bra	u1297
  1983  0012D4  F000               	nop	
  1984  0012D6                     
  1985                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  1986  0012D6  0E03               	movlw	3
  1987  0012D8  EC2E  F00B         	call	_lcd_ecrireDonnees
  1988  0012DC                     
  1989                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  1990  0012DC  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  1991  0012E0                     
  1992                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1993  0012E0  0E03               	movlw	3
  1994  0012E2                     u1307:
  1995  0012E2  2EE8               	decfsz	wreg,f,c
  1996  0012E4  D7FE               	bra	u1307
  1997  0012E6  F000               	nop	
  1998  0012E8                     
  1999                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2000  0012E8  0E03               	movlw	3
  2001  0012EA  EC2E  F00B         	call	_lcd_ecrireDonnees
  2002  0012EE                     
  2003                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2004  0012EE  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  2005  0012F2                     
  2006                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2007  0012F2  0E03               	movlw	3
  2008  0012F4                     u1317:
  2009  0012F4  2EE8               	decfsz	wreg,f,c
  2010  0012F6  D7FE               	bra	u1317
  2011  0012F8  F000               	nop	
  2012  0012FA                     
  2013                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2014  0012FA  0E02               	movlw	2
  2015  0012FC  EC2E  F00B         	call	_lcd_ecrireDonnees
  2016  001300                     
  2017                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2018  001300  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  2019  001304                     
  2020                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2021  001304  0E03               	movlw	3
  2022  001306                     u1327:
  2023  001306  2EE8               	decfsz	wreg,f,c
  2024  001308  D7FE               	bra	u1327
  2025  00130A  F000               	nop	
  2026  00130C                     
  2027                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2028  00130C  0E0F               	movlw	15
  2029  00130E  6E95               	movwf	149,c	;volatile
  2030  001310  0012               	return		;funcret
  2031  001312                     __end_of_lcd_resetSequence:
  2032                           	opt callstack 0
  2033                           
  2034 ;; *************** function _lcd_initCGRam *****************
  2035 ;; Defined at:
  2036 ;;		line 417 in file "Lcd4Lignes.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  j               1    6[BANK0 ] unsigned char 
  2041 ;;  i               1    5[BANK0 ] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2051 ;;      Params:         0       0       0       0       0       0       0
  2052 ;;      Locals:         0       2       0       0       0       0       0
  2053 ;;      Temps:          0       2       0       0       0       0       0
  2054 ;;      Totals:         0       4       0       0       0       0       0
  2055 ;;Total ram usage:        4 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    5
  2058 ;; This function calls:
  2059 ;;		_lcd_curseurHome
  2060 ;;		_lcd_wrCom
  2061 ;;		_lcd_wrData
  2062 ;; This function is called by:
  2063 ;;		_lcd_init
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text10
  2068  000F30                     __ptext10:
  2069                           	opt callstack 0
  2070  000F30                     _lcd_initCGRam:
  2071                           	opt callstack 24
  2072  000F30                     
  2073                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2074  000F30  0E40               	movlw	64
  2075  000F32  EC1E  F009         	call	_lcd_wrCom
  2076  000F36                     
  2077                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2078  000F36  0E00               	movlw	0
  2079  000F38  0100               	movlb	0	; force () banked
  2080  000F3A  6FC8               	movwf	lcd_initCGRam@i& (0+255),b
  2081  000F3C                     
  2082                           ; BSR set to: 0
  2083  000F3C  0E07               	movlw	7
  2084  000F3E  0100               	movlb	0	; force () banked
  2085  000F40  65C8               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2086  000F42  EFA5  F007         	goto	u811
  2087  000F46  EFA7  F007         	goto	u810
  2088  000F4A                     u811:
  2089  000F4A  EFA9  F007         	goto	l2009
  2090  000F4E                     u810:
  2091  000F4E  EFE6  F007         	goto	l2025
  2092  000F52                     l2009:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2096  000F52  0E00               	movlw	0
  2097  000F54  0100               	movlb	0	; force () banked
  2098  000F56  6FC9               	movwf	lcd_initCGRam@j& (0+255),b
  2099  000F58                     
  2100                           ; BSR set to: 0
  2101  000F58  0E07               	movlw	7
  2102  000F5A  0100               	movlb	0	; force () banked
  2103  000F5C  65C9               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2104  000F5E  EFB3  F007         	goto	u821
  2105  000F62  EFB5  F007         	goto	u820
  2106  000F66                     u821:
  2107  000F66  EFB7  F007         	goto	l2015
  2108  000F6A                     u820:
  2109  000F6A  EFDB  F007         	goto	l2021
  2110  000F6E                     l2015:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2114  000F6E  0100               	movlb	0	; force () banked
  2115  000F70  51C8               	movf	lcd_initCGRam@i& (0+255),w,b
  2116  000F72  0D08               	mullw	8
  2117  000F74  0E00               	movlw	low _matCGRAM
  2118  000F76  0100               	movlb	0	; force () banked
  2119  000F78  6FC6               	movwf	??_lcd_initCGRam& (0+255),b
  2120  000F7A  0E01               	movlw	high _matCGRAM
  2121  000F7C  6FC7               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2122  000F7E  50F3               	movf	243,w,c
  2123  000F80  27C6               	addwf	??_lcd_initCGRam& (0+255),f,b
  2124  000F82  50F4               	movf	244,w,c
  2125  000F84  23C7               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2126  000F86  0100               	movlb	0	; force () banked
  2127  000F88  51C9               	movf	lcd_initCGRam@j& (0+255),w,b
  2128  000F8A  0100               	movlb	0	; force () banked
  2129  000F8C  25C6               	addwf	??_lcd_initCGRam& (0+255),w,b
  2130  000F8E  6ED9               	movwf	fsr2l,c
  2131  000F90  0100               	movlb	0	; force () banked
  2132  000F92  0E00               	movlw	0
  2133  000F94  0100               	movlb	0	; force () banked
  2134  000F96  21C7               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2135  000F98  6EDA               	movwf	fsr2h,c
  2136  000F9A  50DF               	movf	indf2,w,c
  2137  000F9C  ECEA  F00A         	call	_lcd_wrData
  2138  000FA0  0100               	movlb	0	; force () banked
  2139  000FA2  2BC9               	incf	lcd_initCGRam@j& (0+255),f,b
  2140  000FA4                     
  2141                           ; BSR set to: 0
  2142  000FA4  0E07               	movlw	7
  2143  000FA6  0100               	movlb	0	; force () banked
  2144  000FA8  65C9               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2145  000FAA  EFD9  F007         	goto	u831
  2146  000FAE  EFDB  F007         	goto	u830
  2147  000FB2                     u831:
  2148  000FB2  EFB7  F007         	goto	l2015
  2149  000FB6                     u830:
  2150  000FB6                     l2021:
  2151                           
  2152                           ; BSR set to: 0
  2153  000FB6  0100               	movlb	0	; force () banked
  2154  000FB8  2BC8               	incf	lcd_initCGRam@i& (0+255),f,b
  2155  000FBA                     
  2156                           ; BSR set to: 0
  2157  000FBA  0E07               	movlw	7
  2158  000FBC  0100               	movlb	0	; force () banked
  2159  000FBE  65C8               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2160  000FC0  EFE4  F007         	goto	u841
  2161  000FC4  EFE6  F007         	goto	u840
  2162  000FC8                     u841:
  2163  000FC8  EFA9  F007         	goto	l2009
  2164  000FCC                     u840:
  2165  000FCC                     l2025:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2169  000FCC  EC4B  F00B         	call	_lcd_curseurHome	;wreg free
  2170  000FD0  0012               	return		;funcret
  2171  000FD2                     __end_of_lcd_initCGRam:
  2172                           	opt callstack 0
  2173                           
  2174 ;; *************** function _lcd_curseurHome *****************
  2175 ;; Defined at:
  2176 ;;		line 288 in file "Lcd4Lignes.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2190 ;;      Params:         0       0       0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    4
  2197 ;; This function calls:
  2198 ;;		_lcd_wrCom
  2199 ;; This function is called by:
  2200 ;;		_lcd_initCGRam
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text11
  2205  001696                     __ptext11:
  2206                           	opt callstack 0
  2207  001696                     _lcd_curseurHome:
  2208                           	opt callstack 24
  2209  001696                     
  2210                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2211  001696  0E02               	movlw	2
  2212  001698  EC1E  F009         	call	_lcd_wrCom
  2213  00169C  0012               	return		;funcret
  2214  00169E                     __end_of_lcd_curseurHome:
  2215                           	opt callstack 0
  2216                           
  2217 ;; *************** function _initialisation *****************
  2218 ;; Defined at:
  2219 ;;		line 115 in file "main.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         0       0       0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    2
  2240 ;; This function calls:
  2241 ;;		_srand
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text12
  2248  001428                     __ptext12:
  2249                           	opt callstack 0
  2250  001428                     _initialisation:
  2251                           	opt callstack 28
  2252  001428                     
  2253                           ;main.c: 117: TRISD = 0;
  2254  001428  0E00               	movlw	0
  2255  00142A  6E95               	movwf	149,c	;volatile
  2256                           
  2257                           ;main.c: 118: ANSELH = 0;
  2258  00142C  0E00               	movlw	0
  2259  00142E  6E7F               	movwf	127,c	;volatile
  2260  001430                     
  2261                           ;main.c: 119: TRISB = 0xFF;
  2262  001430  6893               	setf	147,c	;volatile
  2263                           
  2264                           ;main.c: 120: ANSEL = 0;
  2265  001432  0E00               	movlw	0
  2266  001434  6E7E               	movwf	126,c	;volatile
  2267                           
  2268                           ;main.c: 121: TRISA = 0;
  2269  001436  0E00               	movlw	0
  2270  001438  6E92               	movwf	146,c	;volatile
  2271  00143A                     
  2272                           ;main.c: 125: T1CONbits.TMR1ON = 1;
  2273  00143A  80CD               	bsf	205,0,c	;volatile
  2274  00143C                     
  2275                           ;main.c: 126: srand(TMR1);
  2276  00143C  CFCE F0C3          	movff	4046,srand@x	;volatile
  2277  001440  CFCF F0C4          	movff	4047,srand@x+1	;volatile
  2278  001444  EC3C  F00B         	call	_srand	;wreg free
  2279  001448                     
  2280                           ;main.c: 128: ANSELbits.ANS7 = 1;
  2281  001448  8E7E               	bsf	126,7,c	;volatile
  2282  00144A                     
  2283                           ;main.c: 129: ADCON0bits.ADON = 1;
  2284  00144A  80C2               	bsf	194,0,c	;volatile
  2285  00144C                     
  2286                           ;main.c: 130: ADCON1 = 0;
  2287  00144C  0E00               	movlw	0
  2288  00144E  6EC1               	movwf	193,c	;volatile
  2289  001450                     
  2290                           ;main.c: 131: ADCON2bits.ADFM = 0;
  2291  001450  9EC0               	bcf	192,7,c	;volatile
  2292  001452                     
  2293                           ;main.c: 132: ADCON2bits.ACQT = 0;
  2294  001452  0EC7               	movlw	-57
  2295  001454  16C0               	andwf	192,f,c	;volatile
  2296  001456                     
  2297                           ;main.c: 133: ADCON2bits.ADCS = 0;
  2298  001456  0EF8               	movlw	-8
  2299  001458  16C0               	andwf	192,f,c	;volatile
  2300  00145A                     
  2301                           ;main.c: 135: T0CONbits.TMR0ON = 1;
  2302  00145A  8ED5               	bsf	213,7,c	;volatile
  2303  00145C                     
  2304                           ;main.c: 136: T0CONbits.T08BIT = 0;
  2305  00145C  9CD5               	bcf	213,6,c	;volatile
  2306  00145E                     
  2307                           ;main.c: 137: T0CONbits.T0CS = 0;
  2308  00145E  9AD5               	bcf	213,5,c	;volatile
  2309  001460                     
  2310                           ;main.c: 138: T0CONbits.PSA = 0;
  2311  001460  96D5               	bcf	213,3,c	;volatile
  2312  001462                     
  2313                           ;main.c: 139: T0CONbits.T0PS = 0b010;
  2314  001462  50D5               	movf	213,w,c	;volatile
  2315  001464  0BF8               	andlw	-8
  2316  001466  0902               	iorlw	2
  2317  001468  6ED5               	movwf	213,c	;volatile
  2318  00146A                     
  2319                           ;main.c: 140: TMR0 = 0x0BDC;
  2320  00146A  0E0B               	movlw	11
  2321  00146C  6ED7               	movwf	215,c	;volatile
  2322  00146E  0EDC               	movlw	220
  2323  001470  6ED6               	movwf	214,c	;volatile
  2324  001472                     
  2325                           ;main.c: 141: INTCONbits.TMR0IE = 1;
  2326  001472  8AF2               	bsf	242,5,c	;volatile
  2327  001474                     
  2328                           ;main.c: 142: INTCONbits.TMR0IF = 0;
  2329  001474  94F2               	bcf	242,2,c	;volatile
  2330  001476                     
  2331                           ;main.c: 143: INTCONbits.PEIE = 1;
  2332  001476  8CF2               	bsf	242,6,c	;volatile
  2333  001478                     
  2334                           ;main.c: 144: INTCONbits.GIE = 1;
  2335  001478  8EF2               	bsf	242,7,c	;volatile
  2336  00147A  0012               	return		;funcret
  2337  00147C                     __end_of_initialisation:
  2338                           	opt callstack 0
  2339                           
  2340 ;; *************** function _srand *****************
  2341 ;; Defined at:
  2342 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  x               2    0[BANK0 ] unsigned int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		status,2
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2356 ;;      Params:         0       2       0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0
  2359 ;;      Totals:         0       2       0       0       0       0       0
  2360 ;;Total ram usage:        2 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_initialisation
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text13
  2371  001678                     __ptext13:
  2372                           	opt callstack 0
  2373  001678                     _srand:
  2374                           	opt callstack 28
  2375  001678  C0C3  F06A         	movff	srand@x,_randx
  2376  00167C  C0C4  F06B         	movff	srand@x+1,_randx+1
  2377  001680  0100               	movlb	0	; () banked
  2378  001682  6B6C               	clrf	(_randx+2)& (0+255),b
  2379  001684  6B6D               	clrf	(_randx+3)& (0+255),b
  2380  001686                     
  2381                           ; BSR set to: 0
  2382  001686  0012               	return		;funcret
  2383  001688                     __end_of_srand:
  2384                           	opt callstack 0
  2385                           
  2386 ;; *************** function _feu *****************
  2387 ;; Defined at:
  2388 ;;		line 260 in file "main.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  x               1    wreg     unsigned char 
  2391 ;;  pts             2    9[BANK0 ] PTR unsigned long 
  2392 ;;		 -> main@points(2), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  x               1   16[BANK0 ] unsigned char 
  2395 ;;  y               1   17[BANK0 ] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2405 ;;      Params:         0       2       0       0       0       0       0
  2406 ;;      Locals:         0       2       0       0       0       0       0
  2407 ;;      Temps:          0       5       0       0       0       0       0
  2408 ;;      Totals:         0       9       0       0       0       0       0
  2409 ;;Total ram usage:        9 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    6
  2412 ;; This function calls:
  2413 ;;		_afficheAliens
  2414 ;;		_lcd_cacheCurseur
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text14
  2421  000A1E                     __ptext14:
  2422                           	opt callstack 0
  2423  000A1E                     _feu:
  2424                           	opt callstack 24
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;incstack = 0
  2428                           ;feu@x stored from wreg
  2429  000A1E  0100               	movlb	0	; force () banked
  2430  000A20  6FD3               	movwf	feu@x& (0+255),b
  2431  000A22                     
  2432                           ;main.c: 262: lcd_cacheCurseur();
  2433  000A22  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  2434  000A26                     
  2435                           ;main.c: 263: for (char y =3; y >=1; y--)
  2436  000A26  0E03               	movlw	3
  2437  000A28  0100               	movlb	0	; force () banked
  2438  000A2A  6FD4               	movwf	feu@y& (0+255),b
  2439  000A2C                     
  2440                           ; BSR set to: 0
  2441  000A2C  0100               	movlb	0	; force () banked
  2442  000A2E  51D4               	movf	feu@y& (0+255),w,b
  2443  000A30  A4D8               	btfss	status,2,c
  2444  000A32  EF1D  F005         	goto	u1151
  2445  000A36  EF1F  F005         	goto	u1150
  2446  000A3A                     u1151:
  2447  000A3A  EF21  F005         	goto	l2273
  2448  000A3E                     u1150:
  2449  000A3E  EFAA  F005         	goto	l131
  2450  000A42                     l2273:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 264: {;main.c: 265: if (m_aliens[y-1][x-1]!=' ')
  2454  000A42  0100               	movlb	0	; force () banked
  2455  000A44  51D4               	movf	feu@y& (0+255),w,b
  2456  000A46  0D15               	mullw	21
  2457  000A48  0EEA               	movlw	234
  2458  000A4A  0100               	movlb	0	; force () banked
  2459  000A4C  6FCE               	movwf	??_feu& (0+255),b
  2460  000A4E  0EFF               	movlw	255
  2461  000A50  6FCF               	movwf	(??_feu+1)& (0+255),b
  2462  000A52  0E6F               	movlw	low _m_aliens
  2463  000A54  6FD0               	movwf	(??_feu+2)& (0+255),b
  2464  000A56  0E00               	movlw	high _m_aliens
  2465  000A58  6FD1               	movwf	(??_feu+3)& (0+255),b
  2466  000A5A  51CE               	movf	??_feu& (0+255),w,b
  2467  000A5C  27D0               	addwf	(??_feu+2)& (0+255),f,b
  2468  000A5E  51CF               	movf	(??_feu+1)& (0+255),w,b
  2469  000A60  23D1               	addwfc	(??_feu+3)& (0+255),f,b
  2470  000A62  50F3               	movf	243,w,c
  2471  000A64  27D0               	addwf	(??_feu+2)& (0+255),f,b
  2472  000A66  50F4               	movf	244,w,c
  2473  000A68  23D1               	addwfc	(??_feu+3)& (0+255),f,b
  2474  000A6A  0100               	movlb	0	; force () banked
  2475  000A6C  51D3               	movf	feu@x& (0+255),w,b
  2476  000A6E  0100               	movlb	0	; force () banked
  2477  000A70  25D0               	addwf	(??_feu+2)& (0+255),w,b
  2478  000A72  6ED9               	movwf	fsr2l,c
  2479  000A74  0100               	movlb	0	; force () banked
  2480  000A76  0E00               	movlw	0
  2481  000A78  0100               	movlb	0	; force () banked
  2482  000A7A  21D1               	addwfc	(??_feu+3)& (0+255),w,b
  2483  000A7C  6EDA               	movwf	fsr2h,c
  2484  000A7E  0E20               	movlw	32
  2485  000A80  18DE               	xorwf	postinc2,w,c
  2486  000A82  B4D8               	btfsc	status,2,c
  2487  000A84  EF46  F005         	goto	u1161
  2488  000A88  EF48  F005         	goto	u1160
  2489  000A8C                     u1161:
  2490  000A8C  EF9F  F005         	goto	l2283
  2491  000A90                     u1160:
  2492  000A90                     
  2493                           ; BSR set to: 0
  2494                           ;main.c: 268: {;main.c: 269: (*pts)+= m_aliens[y-1][x-1];
  2495  000A90  0100               	movlb	0	; force () banked
  2496  000A92  51D4               	movf	feu@y& (0+255),w,b
  2497  000A94  0D15               	mullw	21
  2498  000A96  0EEA               	movlw	234
  2499  000A98  0100               	movlb	0	; force () banked
  2500  000A9A  6FCE               	movwf	??_feu& (0+255),b
  2501  000A9C  0EFF               	movlw	255
  2502  000A9E  6FCF               	movwf	(??_feu+1)& (0+255),b
  2503  000AA0  0E6F               	movlw	low _m_aliens
  2504  000AA2  6FD0               	movwf	(??_feu+2)& (0+255),b
  2505  000AA4  0E00               	movlw	high _m_aliens
  2506  000AA6  6FD1               	movwf	(??_feu+3)& (0+255),b
  2507  000AA8  51CE               	movf	??_feu& (0+255),w,b
  2508  000AAA  27D0               	addwf	(??_feu+2)& (0+255),f,b
  2509  000AAC  51CF               	movf	(??_feu+1)& (0+255),w,b
  2510  000AAE  23D1               	addwfc	(??_feu+3)& (0+255),f,b
  2511  000AB0  50F3               	movf	243,w,c
  2512  000AB2  27D0               	addwf	(??_feu+2)& (0+255),f,b
  2513  000AB4  50F4               	movf	244,w,c
  2514  000AB6  23D1               	addwfc	(??_feu+3)& (0+255),f,b
  2515  000AB8  0100               	movlb	0	; force () banked
  2516  000ABA  51D3               	movf	feu@x& (0+255),w,b
  2517  000ABC  0100               	movlb	0	; force () banked
  2518  000ABE  25D0               	addwf	(??_feu+2)& (0+255),w,b
  2519  000AC0  6ED9               	movwf	fsr2l,c
  2520  000AC2  0100               	movlb	0	; force () banked
  2521  000AC4  0E00               	movlw	0
  2522  000AC6  0100               	movlb	0	; force () banked
  2523  000AC8  21D1               	addwfc	(??_feu+3)& (0+255),w,b
  2524  000ACA  6EDA               	movwf	fsr2h,c
  2525  000ACC  50DF               	movf	indf2,w,c
  2526  000ACE  6FD2               	movwf	(??_feu+4)& (0+255),b
  2527  000AD0  51D2               	movf	(??_feu+4)& (0+255),w,b
  2528  000AD2  C0CC  FFD9         	movff	feu@pts,fsr2l
  2529  000AD6  C0CD  FFDA         	movff	feu@pts+1,fsr2h
  2530  000ADA  26DE               	addwf	postinc2,f,c
  2531  000ADC  0E00               	movlw	0
  2532  000ADE  22DE               	addwfc	postinc2,f,c
  2533  000AE0  22DE               	addwfc	postinc2,f,c
  2534  000AE2  22DE               	addwfc	postinc2,f,c
  2535                           
  2536                           ;main.c: 270: m_aliens[y-1][x-1]=' ';
  2537  000AE4  0100               	movlb	0	; force () banked
  2538  000AE6  51D4               	movf	feu@y& (0+255),w,b
  2539  000AE8  0D15               	mullw	21
  2540  000AEA  0EEA               	movlw	234
  2541  000AEC  0100               	movlb	0	; force () banked
  2542  000AEE  6FCE               	movwf	??_feu& (0+255),b
  2543  000AF0  0EFF               	movlw	255
  2544  000AF2  6FCF               	movwf	(??_feu+1)& (0+255),b
  2545  000AF4  0E6F               	movlw	low _m_aliens
  2546  000AF6  6FD0               	movwf	(??_feu+2)& (0+255),b
  2547  000AF8  0E00               	movlw	high _m_aliens
  2548  000AFA  6FD1               	movwf	(??_feu+3)& (0+255),b
  2549  000AFC  51CE               	movf	??_feu& (0+255),w,b
  2550  000AFE  27D0               	addwf	(??_feu+2)& (0+255),f,b
  2551  000B00  51CF               	movf	(??_feu+1)& (0+255),w,b
  2552  000B02  23D1               	addwfc	(??_feu+3)& (0+255),f,b
  2553  000B04  50F3               	movf	243,w,c
  2554  000B06  27D0               	addwf	(??_feu+2)& (0+255),f,b
  2555  000B08  50F4               	movf	244,w,c
  2556  000B0A  23D1               	addwfc	(??_feu+3)& (0+255),f,b
  2557  000B0C  0100               	movlb	0	; force () banked
  2558  000B0E  51D3               	movf	feu@x& (0+255),w,b
  2559  000B10  0100               	movlb	0	; force () banked
  2560  000B12  25D0               	addwf	(??_feu+2)& (0+255),w,b
  2561  000B14  6ED9               	movwf	fsr2l,c
  2562  000B16  0100               	movlb	0	; force () banked
  2563  000B18  0E00               	movlw	0
  2564  000B1A  0100               	movlb	0	; force () banked
  2565  000B1C  21D1               	addwfc	(??_feu+3)& (0+255),w,b
  2566  000B1E  6EDA               	movwf	fsr2h,c
  2567  000B20  0E20               	movlw	32
  2568  000B22  6EDF               	movwf	indf2,c
  2569  000B24                     
  2570                           ; BSR set to: 0
  2571                           ;main.c: 271: afficheAliens();
  2572  000B24  ECED  F006         	call	_afficheAliens	;wreg free
  2573  000B28                     l128:
  2574  000B28  A281               	btfss	129,1,c	;volatile
  2575  000B2A  EF99  F005         	goto	u1171
  2576  000B2E  EF9B  F005         	goto	u1170
  2577  000B32                     u1171:
  2578  000B32  EF94  F005         	goto	l128
  2579  000B36                     u1170:
  2580  000B36                     
  2581                           ;main.c: 273: lcd_cacheCurseur();
  2582  000B36  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  2583  000B3A  EFAA  F005         	goto	l131
  2584  000B3E                     l2283:
  2585                           
  2586                           ; BSR set to: 0
  2587  000B3E  0100               	movlb	0	; force () banked
  2588  000B40  07D4               	decf	feu@y& (0+255),f,b
  2589  000B42                     
  2590                           ; BSR set to: 0
  2591  000B42  0100               	movlb	0	; force () banked
  2592  000B44  51D4               	movf	feu@y& (0+255),w,b
  2593  000B46  A4D8               	btfss	status,2,c
  2594  000B48  EFA8  F005         	goto	u1181
  2595  000B4C  EFAA  F005         	goto	u1180
  2596  000B50                     u1181:
  2597  000B50  EF21  F005         	goto	l2273
  2598  000B54                     u1180:
  2599  000B54                     l131:
  2600  000B54  0012               	return		;funcret
  2601  000B56                     __end_of_feu:
  2602                           	opt callstack 0
  2603                           
  2604 ;; *************** function _afficheAliens *****************
  2605 ;; Defined at:
  2606 ;;		line 205 in file "main.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  j               1    8[BANK0 ] unsigned char 
  2611 ;;  i               1    7[BANK0 ] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2621 ;;      Params:         0       0       0       0       0       0       0
  2622 ;;      Locals:         0       2       0       0       0       0       0
  2623 ;;      Temps:          0       2       0       0       0       0       0
  2624 ;;      Totals:         0       4       0       0       0       0       0
  2625 ;;Total ram usage:        4 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    5
  2628 ;; This function calls:
  2629 ;;		_lcd_cacheCurseur
  2630 ;;		_lcd_ecritChar
  2631 ;;		_lcd_gotoXY
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;;		_feu
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text15
  2639  000DDA                     __ptext15:
  2640                           	opt callstack 0
  2641  000DDA                     _afficheAliens:
  2642                           	opt callstack 24
  2643  000DDA                     
  2644                           ;main.c: 207: lcd_cacheCurseur();
  2645  000DDA  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  2646  000DDE                     
  2647                           ;main.c: 208: for (char i = 0; i < 4; i++)
  2648  000DDE  0E00               	movlw	0
  2649  000DE0  0100               	movlb	0	; force () banked
  2650  000DE2  6FCA               	movwf	afficheAliens@i& (0+255),b
  2651  000DE4                     
  2652                           ; BSR set to: 0
  2653  000DE4  0E03               	movlw	3
  2654  000DE6  0100               	movlb	0	; force () banked
  2655  000DE8  65CA               	cpfsgt	afficheAliens@i& (0+255),b
  2656  000DEA  EFF9  F006         	goto	u771
  2657  000DEE  EFFB  F006         	goto	u770
  2658  000DF2                     u771:
  2659  000DF2  EFFD  F006         	goto	l1935
  2660  000DF6                     u770:
  2661  000DF6  EF42  F007         	goto	l1953
  2662  000DFA                     l1935:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;main.c: 209: {;main.c: 210: for (char j = 0; j < 20; j++)
  2666  000DFA  0E00               	movlw	0
  2667  000DFC  0100               	movlb	0	; force () banked
  2668  000DFE  6FCB               	movwf	afficheAliens@j& (0+255),b
  2669  000E00                     
  2670                           ; BSR set to: 0
  2671  000E00  0E13               	movlw	19
  2672  000E02  0100               	movlb	0	; force () banked
  2673  000E04  65CB               	cpfsgt	afficheAliens@j& (0+255),b
  2674  000E06  EF07  F007         	goto	u781
  2675  000E0A  EF09  F007         	goto	u780
  2676  000E0E                     u781:
  2677  000E0E  EF0B  F007         	goto	l1941
  2678  000E12                     u780:
  2679  000E12  EF37  F007         	goto	l1949
  2680  000E16                     l1941:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;main.c: 211: {;main.c: 212: lcd_gotoXY((j+1),(i+1));
  2684  000E16  0100               	movlb	0	; force () banked
  2685  000E18  29CA               	incf	afficheAliens@i& (0+255),w,b
  2686  000E1A  0100               	movlb	0	; force () banked
  2687  000E1C  6FC6               	movwf	lcd_gotoXY@y& (0+255),b
  2688  000E1E  0100               	movlb	0	; force () banked
  2689  000E20  29CB               	incf	afficheAliens@j& (0+255),w,b
  2690  000E22  EC79  F008         	call	_lcd_gotoXY
  2691  000E26                     
  2692                           ;main.c: 213: lcd_ecritChar(m_aliens[i][j]);
  2693  000E26  0100               	movlb	0	; force () banked
  2694  000E28  51CA               	movf	afficheAliens@i& (0+255),w,b
  2695  000E2A  0D15               	mullw	21
  2696  000E2C  0E6F               	movlw	low _m_aliens
  2697  000E2E  0100               	movlb	0	; force () banked
  2698  000E30  6FC8               	movwf	??_afficheAliens& (0+255),b
  2699  000E32  0E00               	movlw	high _m_aliens
  2700  000E34  6FC9               	movwf	(??_afficheAliens+1)& (0+255),b
  2701  000E36  50F3               	movf	243,w,c
  2702  000E38  27C8               	addwf	??_afficheAliens& (0+255),f,b
  2703  000E3A  50F4               	movf	244,w,c
  2704  000E3C  23C9               	addwfc	(??_afficheAliens+1)& (0+255),f,b
  2705  000E3E  0100               	movlb	0	; force () banked
  2706  000E40  51CB               	movf	afficheAliens@j& (0+255),w,b
  2707  000E42  0100               	movlb	0	; force () banked
  2708  000E44  25C8               	addwf	??_afficheAliens& (0+255),w,b
  2709  000E46  6ED9               	movwf	fsr2l,c
  2710  000E48  0100               	movlb	0	; force () banked
  2711  000E4A  0E00               	movlw	0
  2712  000E4C  0100               	movlb	0	; force () banked
  2713  000E4E  21C9               	addwfc	(??_afficheAliens+1)& (0+255),w,b
  2714  000E50  6EDA               	movwf	fsr2h,c
  2715  000E52  50DF               	movf	indf2,w,c
  2716  000E54  EC3E  F00A         	call	_lcd_ecritChar
  2717  000E58  0100               	movlb	0	; force () banked
  2718  000E5A  2BCB               	incf	afficheAliens@j& (0+255),f,b
  2719  000E5C                     
  2720                           ; BSR set to: 0
  2721  000E5C  0E13               	movlw	19
  2722  000E5E  0100               	movlb	0	; force () banked
  2723  000E60  65CB               	cpfsgt	afficheAliens@j& (0+255),b
  2724  000E62  EF35  F007         	goto	u791
  2725  000E66  EF37  F007         	goto	u790
  2726  000E6A                     u791:
  2727  000E6A  EF0B  F007         	goto	l1941
  2728  000E6E                     u790:
  2729  000E6E                     l1949:
  2730                           
  2731                           ; BSR set to: 0
  2732  000E6E  0100               	movlb	0	; force () banked
  2733  000E70  2BCA               	incf	afficheAliens@i& (0+255),f,b
  2734  000E72                     
  2735                           ; BSR set to: 0
  2736  000E72  0E03               	movlw	3
  2737  000E74  0100               	movlb	0	; force () banked
  2738  000E76  65CA               	cpfsgt	afficheAliens@i& (0+255),b
  2739  000E78  EF40  F007         	goto	u801
  2740  000E7C  EF42  F007         	goto	u800
  2741  000E80                     u801:
  2742  000E80  EFFD  F006         	goto	l1935
  2743  000E84                     u800:
  2744  000E84                     l1953:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;main.c: 219: };main.c: 220: };main.c: 221: lcd_cacheCurseur();
  2748  000E84  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  2749  000E88  0012               	return		;funcret
  2750  000E8A                     __end_of_afficheAliens:
  2751                           	opt callstack 0
  2752                           
  2753 ;; *************** function _deplace *****************
  2754 ;; Defined at:
  2755 ;;		line 229 in file "main.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2758 ;;		 -> main@posX(2), 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  analog          1    8[BANK0 ] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2770 ;;      Params:         0       2       0       0       0       0       0
  2771 ;;      Locals:         0       1       0       0       0       0       0
  2772 ;;      Temps:          0       1       0       0       0       0       0
  2773 ;;      Totals:         0       4       0       0       0       0       0
  2774 ;;Total ram usage:        4 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    5
  2777 ;; This function calls:
  2778 ;;		_getAnalog
  2779 ;;		_lcd_cacheCurseur
  2780 ;;		_lcd_ecritChar
  2781 ;;		_lcd_gotoXY
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text16
  2788  000B56                     __ptext16:
  2789                           	opt callstack 0
  2790  000B56                     _deplace:
  2791                           	opt callstack 25
  2792  000B56                     
  2793                           ;main.c: 231: unsigned char analog = getAnalog(7);
  2794  000B56  0E07               	movlw	7
  2795  000B58  EC04  F00B         	call	_getAnalog
  2796  000B5C  0100               	movlb	0	; force () banked
  2797  000B5E  6FCB               	movwf	deplace@analog& (0+255),b
  2798                           
  2799                           ;main.c: 234: lcd_cacheCurseur();
  2800  000B60  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  2801                           
  2802                           ;main.c: 236: if (0 <= analog && analog <= 80)
  2803  000B64  0E20               	movlw	32
  2804  000B66  EC3E  F00A         	call	_lcd_ecritChar
  2805  000B6A  0E51               	movlw	81
  2806  000B6C  0100               	movlb	0	; force () banked
  2807  000B6E  61CB               	cpfslt	deplace@analog& (0+255),b
  2808  000B70  EFBC  F005         	goto	u1191
  2809  000B74  EFBE  F005         	goto	u1190
  2810  000B78                     u1191:
  2811  000B78  EFDF  F005         	goto	l2297
  2812  000B7C                     u1190:
  2813  000B7C                     
  2814                           ; BSR set to: 0
  2815                           ;main.c: 237: {;main.c: 238: *x = (*x)-1;
  2816  000B7C  C0C8  FFD9         	movff	deplace@x,fsr2l
  2817  000B80  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2818  000B84  50DF               	movf	indf2,w,c
  2819  000B86  0100               	movlb	0	; force () banked
  2820  000B88  6FCA               	movwf	??_deplace& (0+255),b
  2821  000B8A  05CA               	decf	??_deplace& (0+255),w,b
  2822  000B8C  C0C8  FFD9         	movff	deplace@x,fsr2l
  2823  000B90  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2824  000B94  6EDF               	movwf	indf2,c
  2825  000B96                     
  2826                           ; BSR set to: 0
  2827                           ;main.c: 239: if ((*x)<=0)
  2828  000B96  C0C8  FFD9         	movff	deplace@x,fsr2l
  2829  000B9A  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2830  000B9E  50DF               	movf	indf2,w,c
  2831  000BA0  A4D8               	btfss	status,2,c
  2832  000BA2  EFD5  F005         	goto	u1201
  2833  000BA6  EFD7  F005         	goto	u1200
  2834  000BAA                     u1201:
  2835  000BAA  EF07  F006         	goto	l2303
  2836  000BAE                     u1200:
  2837  000BAE                     
  2838                           ; BSR set to: 0
  2839                           ;main.c: 240: *x=20;
  2840  000BAE  C0C8  FFD9         	movff	deplace@x,fsr2l
  2841  000BB2  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2842  000BB6  0E14               	movlw	20
  2843  000BB8  6EDF               	movwf	indf2,c
  2844  000BBA  EF07  F006         	goto	l2303
  2845  000BBE                     l2297:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;main.c: 242: else if (175 <= analog && analog <= 255)
  2849  000BBE  0EAE               	movlw	174
  2850  000BC0  0100               	movlb	0	; force () banked
  2851  000BC2  65CB               	cpfsgt	deplace@analog& (0+255),b
  2852  000BC4  EFE6  F005         	goto	u1211
  2853  000BC8  EFE8  F005         	goto	u1210
  2854  000BCC                     u1211:
  2855  000BCC  EF07  F006         	goto	l2303
  2856  000BD0                     u1210:
  2857  000BD0                     
  2858                           ; BSR set to: 0
  2859                           ;main.c: 243: {;main.c: 244: *x = (*x)+1;
  2860  000BD0  C0C8  FFD9         	movff	deplace@x,fsr2l
  2861  000BD4  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2862  000BD8  50DF               	movf	indf2,w,c
  2863  000BDA  0100               	movlb	0	; force () banked
  2864  000BDC  6FCA               	movwf	??_deplace& (0+255),b
  2865  000BDE  29CA               	incf	??_deplace& (0+255),w,b
  2866  000BE0  C0C8  FFD9         	movff	deplace@x,fsr2l
  2867  000BE4  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2868  000BE8  6EDF               	movwf	indf2,c
  2869                           
  2870                           ;main.c: 245: if ((*x)>=21)
  2871  000BEA  C0C8  FFD9         	movff	deplace@x,fsr2l
  2872  000BEE  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2873  000BF2  0E14               	movlw	20
  2874  000BF4  64DF               	cpfsgt	indf2,c
  2875  000BF6  EFFF  F005         	goto	u1221
  2876  000BFA  EF01  F006         	goto	u1220
  2877  000BFE                     u1221:
  2878  000BFE  EF07  F006         	goto	l2303
  2879  000C02                     u1220:
  2880  000C02                     
  2881                           ; BSR set to: 0
  2882                           ;main.c: 246: *x=1;
  2883  000C02  C0C8  FFD9         	movff	deplace@x,fsr2l
  2884  000C06  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2885  000C0A  0E01               	movlw	1
  2886  000C0C  6EDF               	movwf	indf2,c
  2887  000C0E                     l2303:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;main.c: 247: };main.c: 248: lcd_gotoXY(*x, 4);
  2891  000C0E  0E04               	movlw	4
  2892  000C10  0100               	movlb	0	; force () banked
  2893  000C12  6FC6               	movwf	lcd_gotoXY@y& (0+255),b
  2894  000C14  C0C8  FFD9         	movff	deplace@x,fsr2l
  2895  000C18  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2896  000C1C  50DF               	movf	indf2,w,c
  2897  000C1E  EC79  F008         	call	_lcd_gotoXY
  2898  000C22                     
  2899                           ;main.c: 250: lcd_ecritChar(4);
  2900  000C22  0E04               	movlw	4
  2901  000C24  EC3E  F00A         	call	_lcd_ecritChar
  2902  000C28                     
  2903                           ;main.c: 251: lcd_gotoXY(*x, 4);
  2904  000C28  0E04               	movlw	4
  2905  000C2A  0100               	movlb	0	; force () banked
  2906  000C2C  6FC6               	movwf	lcd_gotoXY@y& (0+255),b
  2907  000C2E  C0C8  FFD9         	movff	deplace@x,fsr2l
  2908  000C32  C0C9  FFDA         	movff	deplace@x+1,fsr2h
  2909  000C36  50DF               	movf	indf2,w,c
  2910  000C38  EC79  F008         	call	_lcd_gotoXY
  2911  000C3C                     
  2912                           ;main.c: 252: lcd_cacheCurseur();
  2913  000C3C  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  2914  000C40  0012               	return		;funcret
  2915  000C42                     __end_of_deplace:
  2916                           	opt callstack 0
  2917                           
  2918 ;; *************** function _getAnalog *****************
  2919 ;; Defined at:
  2920 ;;		line 375 in file "main.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  canal           1    wreg     unsigned char 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  canal           1    1[BANK0 ] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2934 ;;      Params:         0       0       0       0       0       0       0
  2935 ;;      Locals:         0       1       0       0       0       0       0
  2936 ;;      Temps:          0       1       0       0       0       0       0
  2937 ;;      Totals:         0       2       0       0       0       0       0
  2938 ;;Total ram usage:        2 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_deplace
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text17
  2949  001608                     __ptext17:
  2950                           	opt callstack 0
  2951  001608                     _getAnalog:
  2952                           	opt callstack 28
  2953                           
  2954                           ;incstack = 0
  2955                           ;getAnalog@canal stored from wreg
  2956  001608  0100               	movlb	0	; force () banked
  2957  00160A  6FC4               	movwf	getAnalog@canal& (0+255),b
  2958  00160C                     
  2959                           ;main.c: 377: ADCON0bits.CHS = canal;
  2960  00160C  C0C4  F0C3         	movff	getAnalog@canal,??_getAnalog
  2961  001610  0100               	movlb	0	; force () banked
  2962  001612  47C3               	rlncf	??_getAnalog& (0+255),f,b
  2963  001614  47C3               	rlncf	??_getAnalog& (0+255),f,b
  2964  001616  50C2               	movf	194,w,c	;volatile
  2965  001618  19C3               	xorwf	??_getAnalog& (0+255),w,b
  2966  00161A  0BC3               	andlw	-61
  2967  00161C  19C3               	xorwf	??_getAnalog& (0+255),w,b
  2968  00161E  6EC2               	movwf	194,c	;volatile
  2969  001620                     
  2970                           ;main.c: 379: ADCON0bits.GO_DONE = 1;
  2971  001620  82C2               	bsf	194,1,c	;volatile
  2972  001622                     l165:
  2973  001622  B2C2               	btfsc	194,1,c	;volatile
  2974  001624  EF16  F00B         	goto	u111
  2975  001628  EF18  F00B         	goto	u110
  2976  00162C                     u111:
  2977  00162C  EF11  F00B         	goto	l165
  2978  001630                     u110:
  2979  001630                     
  2980                           ;main.c: 381: return ADRESH;
  2981  001630  50C4               	movf	196,w,c	;volatile
  2982  001632  0012               	return		;funcret
  2983  001634                     __end_of_getAnalog:
  2984                           	opt callstack 0
  2985                           
  2986 ;; *************** function _affichePerdu *****************
  2987 ;; Defined at:
  2988 ;;		line 300 in file "main.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  pts             4   13[BANK0 ] unsigned long 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  ptsString      10   19[BANK0 ] unsigned char [10]
  2993 ;;  i               1   29[BANK0 ] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3003 ;;      Params:         0       4       0       0       0       0       0
  3004 ;;      Locals:         0      11       0       0       0       0       0
  3005 ;;      Temps:          0       2       0       0       0       0       0
  3006 ;;      Totals:         0      17       0       0       0       0       0
  3007 ;;Total ram usage:       17 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    6
  3010 ;; This function calls:
  3011 ;;		___lldiv
  3012 ;;		___llmod
  3013 ;;		_lcd_cacheCurseur
  3014 ;;		_lcd_ecritChar
  3015 ;;		_lcd_effaceAffichage
  3016 ;;		_lcd_gotoXY
  3017 ;;		_lcd_putMessage
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text18
  3024  000850                     __ptext18:
  3025                           	opt callstack 0
  3026  000850                     _affichePerdu:
  3027                           	opt callstack 24
  3028  000850                     
  3029                           ;main.c: 302: char ptsString[10] = {'0','0','0','0','0','0','0','0','0','0'};
  3030  000850  EE20  F060         	lfsr	2,affichePerdu@F2752
  3031  000854  EE10  F0D6         	lfsr	1,affichePerdu@ptsString
  3032  000858  0E09               	movlw	9
  3033  00085A                     u1081:
  3034  00085A  CFDB FFE3          	movff	plusw2,plusw1
  3035  00085E  06E8               	decf	wreg,f,c
  3036  000860  E2FC               	bc	u1081
  3037  000862                     
  3038                           ;main.c: 304: char i =9;
  3039  000862  0E09               	movlw	9
  3040  000864  0100               	movlb	0	; force () banked
  3041  000866  6FE0               	movwf	affichePerdu@i& (0+255),b
  3042  000868                     
  3043                           ; BSR set to: 0
  3044                           ;main.c: 306: lcd_cacheCurseur();
  3045  000868  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  3046  00086C                     
  3047                           ;main.c: 307: if (pts ==0)
  3048  00086C  0100               	movlb	0	; force () banked
  3049  00086E  51D0               	movf	affichePerdu@pts& (0+255),w,b
  3050  000870  11D1               	iorwf	(affichePerdu@pts+1)& (0+255),w,b
  3051  000872  11D2               	iorwf	(affichePerdu@pts+2)& (0+255),w,b
  3052  000874  11D3               	iorwf	(affichePerdu@pts+3)& (0+255),w,b
  3053  000876  A4D8               	btfss	status,2,c
  3054  000878  EF40  F004         	goto	u1091
  3055  00087C  EF42  F004         	goto	u1090
  3056  000880                     u1091:
  3057  000880  EF63  F004         	goto	l2229
  3058  000884                     u1090:
  3059  000884                     
  3060                           ; BSR set to: 0
  3061                           ;main.c: 308: {;main.c: 309: lcd_effaceAffichage();
  3062  000884  EC44  F00B         	call	_lcd_effaceAffichage	;wreg free
  3063                           
  3064                           ;main.c: 310: lcd_gotoXY(1,2);
  3065  000888  0E02               	movlw	2
  3066  00088A  0100               	movlb	0	; force () banked
  3067  00088C  6FC6               	movwf	lcd_gotoXY@y& (0+255),b
  3068  00088E  0E01               	movlw	1
  3069  000890  EC79  F008         	call	_lcd_gotoXY
  3070  000894                     
  3071                           ;main.c: 312: lcd_putMessage("Score : 0");
  3072  000894  0E12               	movlw	low STR_2
  3073  000896  0100               	movlb	0	; force () banked
  3074  000898  6FC8               	movwf	lcd_putMessage@chaine& (0+255),b
  3075  00089A  0E06               	movlw	high STR_2
  3076  00089C  6FC9               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3077  00089E  ECE8  F008         	call	_lcd_putMessage	;wreg free
  3078  0008A2                     
  3079                           ;main.c: 313: lcd_cacheCurseur();
  3080  0008A2  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  3081  0008A6                     
  3082                           ;main.c: 314: _delay((unsigned long)((3000)*(1000000/4000.0)));
  3083  0008A6  0E04               	movlw	4
  3084  0008A8  0100               	movlb	0	; force () banked
  3085  0008AA  6FD5               	movwf	(??_affichePerdu+1)& (0+255),b
  3086  0008AC  0ECF               	movlw	207
  3087  0008AE  6FD4               	movwf	??_affichePerdu& (0+255),b
  3088  0008B0  0E01               	movlw	1
  3089  0008B2                     u1337:
  3090  0008B2  2EE8               	decfsz	wreg,f,c
  3091  0008B4  D7FE               	bra	u1337
  3092  0008B6  2FD4               	decfsz	??_affichePerdu& (0+255),f,b
  3093  0008B8  D7FC               	bra	u1337
  3094  0008BA  2FD5               	decfsz	(??_affichePerdu+1)& (0+255),f,b
  3095  0008BC  D7FA               	bra	u1337
  3096  0008BE  F000 F000          	nop2	
  3097  0008C2  EF0E  F005         	goto	l143
  3098  0008C6                     l2229:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;main.c: 316: };main.c: 317: if (pts !=0)
  3102  0008C6  0100               	movlb	0	; force () banked
  3103  0008C8  51D0               	movf	affichePerdu@pts& (0+255),w,b
  3104  0008CA  11D1               	iorwf	(affichePerdu@pts+1)& (0+255),w,b
  3105  0008CC  11D2               	iorwf	(affichePerdu@pts+2)& (0+255),w,b
  3106  0008CE  11D3               	iorwf	(affichePerdu@pts+3)& (0+255),w,b
  3107  0008D0  B4D8               	btfsc	status,2,c
  3108  0008D2  EF6D  F004         	goto	u1101
  3109  0008D6  EF6F  F004         	goto	u1100
  3110  0008DA                     u1101:
  3111  0008DA  EFB8  F004         	goto	l2241
  3112  0008DE                     u1100:
  3113  0008DE  EFAC  F004         	goto	l2239
  3114  0008E2                     l2233:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;main.c: 320: {;main.c: 321: ptsString[i] = (pts%10)+48;
  3118  0008E2  0ED6               	movlw	low affichePerdu@ptsString
  3119  0008E4  0100               	movlb	0	; force () banked
  3120  0008E6  25E0               	addwf	affichePerdu@i& (0+255),w,b
  3121  0008E8  6ED9               	movwf	fsr2l,c
  3122  0008EA  6ADA               	clrf	fsr2h,c
  3123  0008EC  0E00               	movlw	high affichePerdu@ptsString
  3124  0008EE  22DA               	addwfc	fsr2h,f,c
  3125  0008F0  C0D0  F0C3         	movff	affichePerdu@pts,___llmod@dividend
  3126  0008F4  C0D1  F0C4         	movff	affichePerdu@pts+1,___llmod@dividend+1
  3127  0008F8  C0D2  F0C5         	movff	affichePerdu@pts+2,___llmod@dividend+2
  3128  0008FC  C0D3  F0C6         	movff	affichePerdu@pts+3,___llmod@dividend+3
  3129  000900  0E0A               	movlw	10
  3130  000902  0100               	movlb	0	; force () banked
  3131  000904  6FC7               	movwf	___llmod@divisor& (0+255),b
  3132  000906  0E00               	movlw	0
  3133  000908  6FC8               	movwf	(___llmod@divisor+1)& (0+255),b
  3134  00090A  0E00               	movlw	0
  3135  00090C  6FC9               	movwf	(___llmod@divisor+2)& (0+255),b
  3136  00090E  0E00               	movlw	0
  3137  000910  6FCA               	movwf	(___llmod@divisor+3)& (0+255),b
  3138  000912  EC34  F008         	call	___llmod	;wreg free
  3139  000916  0100               	movlb	0	; force () banked
  3140  000918  51C3               	movf	?___llmod& (0+255),w,b
  3141  00091A  0F30               	addlw	48
  3142  00091C  6EDF               	movwf	indf2,c
  3143  00091E                     
  3144                           ; BSR set to: 0
  3145                           ;main.c: 323: pts /=10;
  3146  00091E  C0D0  F0C3         	movff	affichePerdu@pts,___lldiv@dividend
  3147  000922  C0D1  F0C4         	movff	affichePerdu@pts+1,___lldiv@dividend+1
  3148  000926  C0D2  F0C5         	movff	affichePerdu@pts+2,___lldiv@dividend+2
  3149  00092A  C0D3  F0C6         	movff	affichePerdu@pts+3,___lldiv@dividend+3
  3150  00092E  0E0A               	movlw	10
  3151  000930  0100               	movlb	0	; force () banked
  3152  000932  6FC7               	movwf	___lldiv@divisor& (0+255),b
  3153  000934  0E00               	movlw	0
  3154  000936  6FC8               	movwf	(___lldiv@divisor+1)& (0+255),b
  3155  000938  0E00               	movlw	0
  3156  00093A  6FC9               	movwf	(___lldiv@divisor+2)& (0+255),b
  3157  00093C  0E00               	movlw	0
  3158  00093E  6FCA               	movwf	(___lldiv@divisor+3)& (0+255),b
  3159  000940  EC45  F007         	call	___lldiv	;wreg free
  3160  000944  C0C3  F0D0         	movff	?___lldiv,affichePerdu@pts
  3161  000948  C0C4  F0D1         	movff	?___lldiv+1,affichePerdu@pts+1
  3162  00094C  C0C5  F0D2         	movff	?___lldiv+2,affichePerdu@pts+2
  3163  000950  C0C6  F0D3         	movff	?___lldiv+3,affichePerdu@pts+3
  3164  000954                     
  3165                           ;main.c: 324: i--;
  3166  000954  0100               	movlb	0	; force () banked
  3167  000956  07E0               	decf	affichePerdu@i& (0+255),f,b
  3168  000958                     l2239:
  3169                           
  3170                           ; BSR set to: 0
  3171  000958  0100               	movlb	0	; force () banked
  3172  00095A  51D0               	movf	affichePerdu@pts& (0+255),w,b
  3173  00095C  11D1               	iorwf	(affichePerdu@pts+1)& (0+255),w,b
  3174  00095E  11D2               	iorwf	(affichePerdu@pts+2)& (0+255),w,b
  3175  000960  11D3               	iorwf	(affichePerdu@pts+3)& (0+255),w,b
  3176  000962  A4D8               	btfss	status,2,c
  3177  000964  EFB6  F004         	goto	u1111
  3178  000968  EFB8  F004         	goto	u1110
  3179  00096C                     u1111:
  3180  00096C  EF71  F004         	goto	l2233
  3181  000970                     u1110:
  3182  000970                     l2241:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;main.c: 325: };main.c: 326: };main.c: 327: lcd_effaceAffichage();
  3186  000970  EC44  F00B         	call	_lcd_effaceAffichage	;wreg free
  3187                           
  3188                           ;main.c: 328: lcd_gotoXY(1,2);
  3189  000974  0E02               	movlw	2
  3190  000976  0100               	movlb	0	; force () banked
  3191  000978  6FC6               	movwf	lcd_gotoXY@y& (0+255),b
  3192  00097A  0E01               	movlw	1
  3193  00097C  EC79  F008         	call	_lcd_gotoXY
  3194  000980                     
  3195                           ;main.c: 329: lcd_putMessage("Score : ");
  3196  000980  0E1C               	movlw	low STR_3
  3197  000982  0100               	movlb	0	; force () banked
  3198  000984  6FC8               	movwf	lcd_putMessage@chaine& (0+255),b
  3199  000986  0E06               	movlw	high STR_3
  3200  000988  6FC9               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  3201  00098A  ECE8  F008         	call	_lcd_putMessage	;wreg free
  3202  00098E                     
  3203                           ;main.c: 330: i=0;
  3204  00098E  0E00               	movlw	0
  3205  000990  0100               	movlb	0	; force () banked
  3206  000992  6FE0               	movwf	affichePerdu@i& (0+255),b
  3207                           
  3208                           ;main.c: 331: while (ptsString[i]=='0')
  3209  000994  EFCE  F004         	goto	l2249
  3210  000998                     l2247:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;main.c: 332: {;main.c: 333: i++;
  3214  000998  0100               	movlb	0	; force () banked
  3215  00099A  2BE0               	incf	affichePerdu@i& (0+255),f,b
  3216  00099C                     l2249:
  3217                           
  3218                           ; BSR set to: 0
  3219  00099C  0ED6               	movlw	low affichePerdu@ptsString
  3220  00099E  0100               	movlb	0	; force () banked
  3221  0009A0  25E0               	addwf	affichePerdu@i& (0+255),w,b
  3222  0009A2  6ED9               	movwf	fsr2l,c
  3223  0009A4  6ADA               	clrf	fsr2h,c
  3224  0009A6  0E00               	movlw	high affichePerdu@ptsString
  3225  0009A8  22DA               	addwfc	fsr2h,f,c
  3226  0009AA  0E30               	movlw	48
  3227  0009AC  18DE               	xorwf	postinc2,w,c
  3228  0009AE  B4D8               	btfsc	status,2,c
  3229  0009B0  EFDC  F004         	goto	u1121
  3230  0009B4  EFDE  F004         	goto	u1120
  3231  0009B8                     u1121:
  3232  0009B8  EFCC  F004         	goto	l2247
  3233  0009BC                     u1120:
  3234  0009BC                     
  3235                           ; BSR set to: 0
  3236  0009BC  0E09               	movlw	9
  3237  0009BE  0100               	movlb	0	; force () banked
  3238  0009C0  65E0               	cpfsgt	affichePerdu@i& (0+255),b
  3239  0009C2  EFE5  F004         	goto	u1131
  3240  0009C6  EFE7  F004         	goto	u1130
  3241  0009CA                     u1131:
  3242  0009CA  EFE9  F004         	goto	l2255
  3243  0009CE                     u1130:
  3244  0009CE  EFFE  F004         	goto	l2261
  3245  0009D2                     l2255:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;main.c: 336: lcd_ecritChar(ptsString[i]);
  3249  0009D2  0ED6               	movlw	low affichePerdu@ptsString
  3250  0009D4  0100               	movlb	0	; force () banked
  3251  0009D6  25E0               	addwf	affichePerdu@i& (0+255),w,b
  3252  0009D8  6ED9               	movwf	fsr2l,c
  3253  0009DA  6ADA               	clrf	fsr2h,c
  3254  0009DC  0E00               	movlw	high affichePerdu@ptsString
  3255  0009DE  22DA               	addwfc	fsr2h,f,c
  3256  0009E0  50DF               	movf	indf2,w,c
  3257  0009E2  EC3E  F00A         	call	_lcd_ecritChar
  3258  0009E6  0100               	movlb	0	; force () banked
  3259  0009E8  2BE0               	incf	affichePerdu@i& (0+255),f,b
  3260  0009EA                     
  3261                           ; BSR set to: 0
  3262  0009EA  0E09               	movlw	9
  3263  0009EC  0100               	movlb	0	; force () banked
  3264  0009EE  65E0               	cpfsgt	affichePerdu@i& (0+255),b
  3265  0009F0  EFFC  F004         	goto	u1141
  3266  0009F4  EFFE  F004         	goto	u1140
  3267  0009F8                     u1141:
  3268  0009F8  EFE9  F004         	goto	l2255
  3269  0009FC                     u1140:
  3270  0009FC                     l2261:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;main.c: 337: lcd_cacheCurseur();
  3274  0009FC  EC4F  F00B         	call	_lcd_cacheCurseur	;wreg free
  3275  000A00                     
  3276                           ;main.c: 338: _delay((unsigned long)((3000)*(1000000/4000.0)));
  3277  000A00  0E04               	movlw	4
  3278  000A02  0100               	movlb	0	; force () banked
  3279  000A04  6FD5               	movwf	(??_affichePerdu+1)& (0+255),b
  3280  000A06  0ECF               	movlw	207
  3281  000A08  6FD4               	movwf	??_affichePerdu& (0+255),b
  3282  000A0A  0E01               	movlw	1
  3283  000A0C                     u1347:
  3284  000A0C  2EE8               	decfsz	wreg,f,c
  3285  000A0E  D7FE               	bra	u1347
  3286  000A10  2FD4               	decfsz	??_affichePerdu& (0+255),f,b
  3287  000A12  D7FC               	bra	u1347
  3288  000A14  2FD5               	decfsz	(??_affichePerdu+1)& (0+255),f,b
  3289  000A16  D7FA               	bra	u1347
  3290  000A18  F000 F000          	nop2	
  3291  000A1C                     l143:
  3292  000A1C  0012               	return		;funcret
  3293  000A1E                     __end_of_affichePerdu:
  3294                           	opt callstack 0
  3295                           
  3296 ;; *************** function _lcd_putMessage *****************
  3297 ;; Defined at:
  3298 ;;		line 387 in file "Lcd4Lignes.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
  3301 ;;		 -> STR_3(9), STR_2(10), STR_1(17), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  j               1    9[BANK0 ] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3313 ;;      Params:         0       2       0       0       0       0       0
  3314 ;;      Locals:         0       1       0       0       0       0       0
  3315 ;;      Temps:          0       2       0       0       0       0       0
  3316 ;;      Totals:         0       5       0       0       0       0       0
  3317 ;;Total ram usage:        5 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    5
  3320 ;; This function calls:
  3321 ;;		_lcd_ecritChar
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;;		_affichePerdu
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text19
  3329  0011D0                     __ptext19:
  3330                           	opt callstack 0
  3331  0011D0                     _lcd_putMessage:
  3332                           	opt callstack 25
  3333  0011D0                     
  3334                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  3335  0011D0  0E00               	movlw	0
  3336  0011D2  0100               	movlb	0	; force () banked
  3337  0011D4  6FCC               	movwf	lcd_putMessage@j& (0+255),b
  3338  0011D6  EF03  F009         	goto	l1925
  3339  0011DA                     l1921:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  3343  0011DA  0100               	movlb	0	; force () banked
  3344  0011DC  51CC               	movf	lcd_putMessage@j& (0+255),w,b
  3345  0011DE  0100               	movlb	0	; force () banked
  3346  0011E0  25C8               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3347  0011E2  0100               	movlb	0	; force () banked
  3348  0011E4  6FCA               	movwf	??_lcd_putMessage& (0+255),b
  3349  0011E6  0E00               	movlw	0
  3350  0011E8  0100               	movlb	0	; force () banked
  3351  0011EA  21C9               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3352  0011EC  0100               	movlb	0	; force () banked
  3353  0011EE  6FCB               	movwf	(??_lcd_putMessage+1)& (0+255),b
  3354  0011F0  C0CA  FFF6         	movff	??_lcd_putMessage,tblptrl
  3355  0011F4  C0CB  FFF7         	movff	??_lcd_putMessage+1,tblptrh
  3356  0011F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3357  0011F8  6AF8               	clrf	tblptru,c
  3358  0011FA                     	endif
  3359  0011FA                     	if	0	;tblptru may be non-zero
  3360  0011FA                     	endif
  3361  0011FA  0008               	tblrd		*
  3362  0011FC  50F5               	movf	tablat,w,c
  3363  0011FE  EC3E  F00A         	call	_lcd_ecritChar
  3364  001202  0100               	movlb	0	; force () banked
  3365  001204  2BCC               	incf	lcd_putMessage@j& (0+255),f,b
  3366  001206                     l1925:
  3367                           
  3368                           ; BSR set to: 0
  3369  001206  0100               	movlb	0	; force () banked
  3370  001208  51CC               	movf	lcd_putMessage@j& (0+255),w,b
  3371  00120A  0100               	movlb	0	; force () banked
  3372  00120C  25C8               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3373  00120E  0100               	movlb	0	; force () banked
  3374  001210  6FCA               	movwf	??_lcd_putMessage& (0+255),b
  3375  001212  0E00               	movlw	0
  3376  001214  0100               	movlb	0	; force () banked
  3377  001216  21C9               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3378  001218  0100               	movlb	0	; force () banked
  3379  00121A  6FCB               	movwf	(??_lcd_putMessage+1)& (0+255),b
  3380  00121C  C0CA  FFF6         	movff	??_lcd_putMessage,tblptrl
  3381  001220  C0CB  FFF7         	movff	??_lcd_putMessage+1,tblptrh
  3382  001224                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3383  001224  6AF8               	clrf	tblptru,c
  3384  001226                     	endif
  3385  001226                     	if	0	;tblptru may be non-zero
  3386  001226                     	endif
  3387  001226  0008               	tblrd		*
  3388  001228  50F5               	movf	tablat,w,c
  3389  00122A  0900               	iorlw	0
  3390  00122C  A4D8               	btfss	status,2,c
  3391  00122E  EF1B  F009         	goto	u761
  3392  001232  EF1D  F009         	goto	u760
  3393  001236                     u761:
  3394  001236  EFED  F008         	goto	l1921
  3395  00123A                     u760:
  3396  00123A                     
  3397                           ; BSR set to: 0
  3398  00123A  0012               	return		;funcret
  3399  00123C                     __end_of_lcd_putMessage:
  3400                           	opt callstack 0
  3401                           
  3402 ;; *************** function _lcd_ecritChar *****************
  3403 ;; Defined at:
  3404 ;;		line 359 in file "Lcd4Lignes.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  car             1    wreg     unsigned char 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  car             1    3[BANK0 ] unsigned char 
  3409 ;;  posRam          1    4[BANK0 ] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3419 ;;      Params:         0       0       0       0       0       0       0
  3420 ;;      Locals:         0       2       0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0
  3422 ;;      Totals:         0       2       0       0       0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    4
  3426 ;; This function calls:
  3427 ;;		_lcd_wrCom
  3428 ;;		_lcd_wrData
  3429 ;; This function is called by:
  3430 ;;		_afficheAliens
  3431 ;;		_deplace
  3432 ;;		_affichePerdu
  3433 ;;		_lcd_putMessage
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text20
  3438  00147C                     __ptext20:
  3439                           	opt callstack 0
  3440  00147C                     _lcd_ecritChar:
  3441                           	opt callstack 25
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;incstack = 0
  3445                           ;lcd_ecritChar@car stored from wreg
  3446  00147C  0100               	movlb	0	; force () banked
  3447  00147E  6FC6               	movwf	lcd_ecritChar@car& (0+255),b
  3448  001480                     
  3449                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  3450  001480  0100               	movlb	0	; force () banked
  3451  001482  51C6               	movf	lcd_ecritChar@car& (0+255),w,b
  3452  001484  ECEA  F00A         	call	_lcd_wrData
  3453  001488  0100               	movlb	0	; force () banked
  3454  00148A  6FC7               	movwf	lcd_ecritChar@posRam& (0+255),b
  3455                           
  3456                           ;Lcd4Lignes.c: 364: switch(posRam)
  3457  00148C  EF57  F00A         	goto	l1905
  3458  001490                     l1897:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  3462  001490  0EC0               	movlw	192
  3463  001492  EC1E  F009         	call	_lcd_wrCom
  3464                           
  3465                           ;Lcd4Lignes.c: 368: break;
  3466  001496  EF67  F00A         	goto	l248
  3467  00149A                     l1899:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  3471  00149A  0E94               	movlw	148
  3472  00149C  EC1E  F009         	call	_lcd_wrCom
  3473                           
  3474                           ;Lcd4Lignes.c: 371: break;
  3475  0014A0  EF67  F00A         	goto	l248
  3476  0014A4                     l1901:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  3480  0014A4  0ED4               	movlw	212
  3481  0014A6  EC1E  F009         	call	_lcd_wrCom
  3482                           
  3483                           ;Lcd4Lignes.c: 374: break;
  3484  0014AA  EF67  F00A         	goto	l248
  3485  0014AE                     l1905:
  3486                           
  3487                           ; BSR set to: 0
  3488  0014AE  0100               	movlb	0	; force () banked
  3489  0014B0  51C7               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3490                           
  3491                           ; Switch size 1, requested type "simple"
  3492                           ; Number of cases is 3, Range of values is 148 to 212
  3493                           ; switch strategies available:
  3494                           ; Name         Instructions Cycles
  3495                           ; simple_byte           10     6 (average)
  3496                           ;	Chosen strategy is simple_byte
  3497  0014B2  0A94               	xorlw	148	; case 148
  3498  0014B4  B4D8               	btfsc	status,2,c
  3499  0014B6  EF48  F00A         	goto	l1897
  3500  0014BA  0A54               	xorlw	84	; case 192
  3501  0014BC  B4D8               	btfsc	status,2,c
  3502  0014BE  EF52  F00A         	goto	l1901
  3503  0014C2  0A14               	xorlw	20	; case 212
  3504  0014C4  B4D8               	btfsc	status,2,c
  3505  0014C6  EF4D  F00A         	goto	l1899
  3506  0014CA  EF67  F00A         	goto	l248
  3507  0014CE                     l248:
  3508  0014CE  0012               	return		;funcret
  3509  0014D0                     __end_of_lcd_ecritChar:
  3510                           	opt callstack 0
  3511                           
  3512 ;; *************** function _lcd_wrData *****************
  3513 ;; Defined at:
  3514 ;;		line 188 in file "Lcd4Lignes.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  caractere       1    wreg     unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  caractere       1    2[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3528 ;;      Params:         0       0       0       0       0       0       0
  3529 ;;      Locals:         0       1       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0
  3531 ;;      Totals:         0       1       0       0       0       0       0
  3532 ;;Total ram usage:        1 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    3
  3535 ;; This function calls:
  3536 ;;		_lcd_busy
  3537 ;;		_lcd_ecrireDonnees
  3538 ;;		_lcd_strobeEnableBit
  3539 ;; This function is called by:
  3540 ;;		_lcd_ecritChar
  3541 ;;		_lcd_initCGRam
  3542 ;;		_lcd_effaceChar
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text21
  3547  0015D4                     __ptext21:
  3548                           	opt callstack 0
  3549  0015D4                     _lcd_wrData:
  3550                           	opt callstack 25
  3551                           
  3552                           ;incstack = 0
  3553                           ;lcd_wrData@caractere stored from wreg
  3554  0015D4  0100               	movlb	0	; force () banked
  3555  0015D6  6FC5               	movwf	lcd_wrData@caractere& (0+255),b
  3556  0015D8                     
  3557                           ;Lcd4Lignes.c: 190: lcd_busy();
  3558  0015D8  EC8F  F00A         	call	_lcd_busy	;wreg free
  3559  0015DC                     
  3560                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  3561  0015DC  0E00               	movlw	0
  3562  0015DE  6E95               	movwf	149,c	;volatile
  3563  0015E0                     
  3564                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  3565  0015E0  8080               	bsf	128,0,c	;volatile
  3566  0015E2                     
  3567                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  3568  0015E2  9280               	bcf	128,1,c	;volatile
  3569  0015E4                     
  3570                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  3571  0015E4  0100               	movlb	0	; force () banked
  3572  0015E6  39C5               	swapf	lcd_wrData@caractere& (0+255),w,b
  3573  0015E8  0B0F               	andlw	15
  3574  0015EA  EC2E  F00B         	call	_lcd_ecrireDonnees
  3575  0015EE                     
  3576                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  3577  0015EE  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  3578  0015F2                     
  3579                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  3580  0015F2  0100               	movlb	0	; force () banked
  3581  0015F4  51C5               	movf	lcd_wrData@caractere& (0+255),w,b
  3582  0015F6  EC2E  F00B         	call	_lcd_ecrireDonnees
  3583  0015FA                     
  3584                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  3585  0015FA  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  3586  0015FE                     
  3587                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  3588  0015FE  0E0F               	movlw	15
  3589  001600  6E95               	movwf	149,c	;volatile
  3590  001602                     
  3591                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3592                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  3593  001602  EC8F  F00A         	call	_lcd_busy	;wreg free
  3594  001606  0012               	return		;funcret
  3595  001608                     __end_of_lcd_wrData:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _lcd_gotoXY *****************
  3599 ;; Defined at:
  3600 ;;		line 314 in file "Lcd4Lignes.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  x               1    wreg     unsigned char 
  3603 ;;  y               1    3[BANK0 ] unsigned char 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  x               1    4[BANK0 ] unsigned char 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3615 ;;      Params:         0       1       0       0       0       0       0
  3616 ;;      Locals:         0       1       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0
  3618 ;;      Totals:         0       2       0       0       0       0       0
  3619 ;;Total ram usage:        2 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    4
  3622 ;; This function calls:
  3623 ;;		_lcd_wrCom
  3624 ;; This function is called by:
  3625 ;;		_afficheAliens
  3626 ;;		_deplace
  3627 ;;		_affichePerdu
  3628 ;;		_lcd_effaceLigne
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text22
  3633  0010F2                     __ptext22:
  3634                           	opt callstack 0
  3635  0010F2                     _lcd_gotoXY:
  3636                           	opt callstack 24
  3637                           
  3638                           ;incstack = 0
  3639                           ;lcd_gotoXY@x stored from wreg
  3640  0010F2  0100               	movlb	0	; force () banked
  3641  0010F4  6FC7               	movwf	lcd_gotoXY@x& (0+255),b
  3642  0010F6                     
  3643                           ;Lcd4Lignes.c: 316: switch(y)
  3644  0010F6  EF9D  F008         	goto	l1893
  3645  0010FA                     l1883:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  3649  0010FA  0100               	movlb	0	; force () banked
  3650  0010FC  51C7               	movf	lcd_gotoXY@x& (0+255),w,b
  3651  0010FE  0F7F               	addlw	127
  3652  001100  0980               	iorlw	128
  3653  001102  EC1E  F009         	call	_lcd_wrCom
  3654                           
  3655                           ;Lcd4Lignes.c: 320: break;
  3656  001106  EFB1  F008         	goto	l237
  3657  00110A                     l1885:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  3661  00110A  0100               	movlb	0	; force () banked
  3662  00110C  51C7               	movf	lcd_gotoXY@x& (0+255),w,b
  3663  00110E  0FBF               	addlw	191
  3664  001110  0980               	iorlw	128
  3665  001112  EC1E  F009         	call	_lcd_wrCom
  3666                           
  3667                           ;Lcd4Lignes.c: 323: break;
  3668  001116  EFB1  F008         	goto	l237
  3669  00111A                     l1887:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  3673  00111A  0100               	movlb	0	; force () banked
  3674  00111C  51C7               	movf	lcd_gotoXY@x& (0+255),w,b
  3675  00111E  0F93               	addlw	147
  3676  001120  0980               	iorlw	128
  3677  001122  EC1E  F009         	call	_lcd_wrCom
  3678                           
  3679                           ;Lcd4Lignes.c: 326: break;
  3680  001126  EFB1  F008         	goto	l237
  3681  00112A                     l1889:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  3685  00112A  0100               	movlb	0	; force () banked
  3686  00112C  51C7               	movf	lcd_gotoXY@x& (0+255),w,b
  3687  00112E  0FD3               	addlw	211
  3688  001130  0980               	iorlw	128
  3689  001132  EC1E  F009         	call	_lcd_wrCom
  3690                           
  3691                           ;Lcd4Lignes.c: 329: break;
  3692  001136  EFB1  F008         	goto	l237
  3693  00113A                     l1893:
  3694  00113A  0100               	movlb	0	; force () banked
  3695  00113C  51C6               	movf	lcd_gotoXY@y& (0+255),w,b
  3696                           
  3697                           ; Switch size 1, requested type "simple"
  3698                           ; Number of cases is 4, Range of values is 1 to 4
  3699                           ; switch strategies available:
  3700                           ; Name         Instructions Cycles
  3701                           ; simple_byte           13     7 (average)
  3702                           ;	Chosen strategy is simple_byte
  3703  00113E  0A01               	xorlw	1	; case 1
  3704  001140  B4D8               	btfsc	status,2,c
  3705  001142  EF7D  F008         	goto	l1883
  3706  001146  0A03               	xorlw	3	; case 2
  3707  001148  B4D8               	btfsc	status,2,c
  3708  00114A  EF85  F008         	goto	l1885
  3709  00114E  0A01               	xorlw	1	; case 3
  3710  001150  B4D8               	btfsc	status,2,c
  3711  001152  EF8D  F008         	goto	l1887
  3712  001156  0A07               	xorlw	7	; case 4
  3713  001158  B4D8               	btfsc	status,2,c
  3714  00115A  EF95  F008         	goto	l1889
  3715  00115E  EFB1  F008         	goto	l237
  3716  001162                     l237:
  3717  001162  0012               	return		;funcret
  3718  001164                     __end_of_lcd_gotoXY:
  3719                           	opt callstack 0
  3720                           
  3721 ;; *************** function _lcd_effaceAffichage *****************
  3722 ;; Defined at:
  3723 ;;		line 276 in file "Lcd4Lignes.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3737 ;;      Params:         0       0       0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    4
  3744 ;; This function calls:
  3745 ;;		_lcd_wrCom
  3746 ;; This function is called by:
  3747 ;;		_affichePerdu
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text23
  3752  001688                     __ptext23:
  3753                           	opt callstack 0
  3754  001688                     _lcd_effaceAffichage:
  3755                           	opt callstack 25
  3756  001688                     
  3757                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  3758  001688  0E01               	movlw	1
  3759  00168A  EC1E  F009         	call	_lcd_wrCom
  3760                           
  3761                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  3762  00168E  0E80               	movlw	128
  3763  001690  EC1E  F009         	call	_lcd_wrCom
  3764  001694  0012               	return		;funcret
  3765  001696                     __end_of_lcd_effaceAffichage:
  3766                           	opt callstack 0
  3767                           
  3768 ;; *************** function _lcd_cacheCurseur *****************
  3769 ;; Defined at:
  3770 ;;		line 401 in file "Lcd4Lignes.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3784 ;;      Params:         0       0       0       0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0
  3787 ;;      Totals:         0       0       0       0       0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    4
  3791 ;; This function calls:
  3792 ;;		_lcd_wrCom
  3793 ;; This function is called by:
  3794 ;;		_afficheAliens
  3795 ;;		_deplace
  3796 ;;		_feu
  3797 ;;		_affichePerdu
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text24
  3802  00169E                     __ptext24:
  3803                           	opt callstack 0
  3804  00169E                     _lcd_cacheCurseur:
  3805                           	opt callstack 25
  3806  00169E                     
  3807                           ;Lcd4Lignes.c: 403: lcd_wrCom(0x0C);
  3808  00169E  0E0C               	movlw	12
  3809  0016A0  EC1E  F009         	call	_lcd_wrCom
  3810  0016A4  0012               	return		;funcret
  3811  0016A6                     __end_of_lcd_cacheCurseur:
  3812                           	opt callstack 0
  3813                           
  3814 ;; *************** function _lcd_wrCom *****************
  3815 ;; Defined at:
  3816 ;;		line 156 in file "Lcd4Lignes.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  commande        1    wreg     unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  commande        1    2[BANK0 ] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      unsigned char 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3830 ;;      Params:         0       0       0       0       0       0       0
  3831 ;;      Locals:         0       1       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0
  3833 ;;      Totals:         0       1       0       0       0       0       0
  3834 ;;Total ram usage:        1 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    3
  3837 ;; This function calls:
  3838 ;;		_lcd_busy
  3839 ;;		_lcd_ecrireDonnees
  3840 ;;		_lcd_strobeEnableBit
  3841 ;; This function is called by:
  3842 ;;		_lcd_init
  3843 ;;		_lcd_effaceAffichage
  3844 ;;		_lcd_curseurHome
  3845 ;;		_lcd_gotoXY
  3846 ;;		_lcd_ecritChar
  3847 ;;		_lcd_cacheCurseur
  3848 ;;		_lcd_initCGRam
  3849 ;;		_lcd_montreCurseur
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text25
  3854  00123C                     __ptext25:
  3855                           	opt callstack 0
  3856  00123C                     _lcd_wrCom:
  3857                           	opt callstack 25
  3858                           
  3859                           ;incstack = 0
  3860                           ;lcd_wrCom@commande stored from wreg
  3861  00123C  0100               	movlb	0	; force () banked
  3862  00123E  6FC5               	movwf	lcd_wrCom@commande& (0+255),b
  3863  001240                     
  3864                           ;Lcd4Lignes.c: 158: lcd_busy();
  3865  001240  EC8F  F00A         	call	_lcd_busy	;wreg free
  3866  001244                     
  3867                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  3868  001244  0E00               	movlw	0
  3869  001246  6E95               	movwf	149,c	;volatile
  3870  001248                     
  3871                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  3872  001248  9080               	bcf	128,0,c	;volatile
  3873  00124A                     
  3874                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  3875  00124A  9280               	bcf	128,1,c	;volatile
  3876  00124C                     
  3877                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  3878  00124C  0100               	movlb	0	; force () banked
  3879  00124E  39C5               	swapf	lcd_wrCom@commande& (0+255),w,b
  3880  001250  0B0F               	andlw	15
  3881  001252  EC2E  F00B         	call	_lcd_ecrireDonnees
  3882  001256                     
  3883                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  3884  001256  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  3885  00125A                     
  3886                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  3887  00125A  0100               	movlb	0	; force () banked
  3888  00125C  51C5               	movf	lcd_wrCom@commande& (0+255),w,b
  3889  00125E  EC2E  F00B         	call	_lcd_ecrireDonnees
  3890  001262                     
  3891                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  3892  001262  EC53  F00B         	call	_lcd_strobeEnableBit	;wreg free
  3893  001266                     
  3894                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3895  001266  0E03               	movlw	3
  3896  001268                     u1357:
  3897  001268  2EE8               	decfsz	wreg,f,c
  3898  00126A  D7FE               	bra	u1357
  3899  00126C  F000               	nop	
  3900  00126E                     
  3901                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  3902  00126E  0100               	movlb	0	; force () banked
  3903  001270  05C5               	decf	lcd_wrCom@commande& (0+255),w,b
  3904  001272  B4D8               	btfsc	status,2,c
  3905  001274  EF3E  F009         	goto	u721
  3906  001278  EF40  F009         	goto	u720
  3907  00127C                     u721:
  3908  00127C  EF4A  F009         	goto	l1841
  3909  001280                     u720:
  3910  001280                     
  3911                           ; BSR set to: 0
  3912  001280  0E02               	movlw	2
  3913  001282  0100               	movlb	0	; force () banked
  3914  001284  19C5               	xorwf	lcd_wrCom@commande& (0+255),w,b
  3915  001286  A4D8               	btfss	status,2,c
  3916  001288  EF48  F009         	goto	u731
  3917  00128C  EF4A  F009         	goto	u730
  3918  001290                     u731:
  3919  001290  EF4F  F009         	goto	l1843
  3920  001294                     u730:
  3921  001294                     l1841:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  3925  001294  0EA6               	movlw	166
  3926  001296                     u1367:
  3927  001296  2EE8               	decfsz	wreg,f,c
  3928  001298  D7FE               	bra	u1367
  3929  00129A  F000 F000          	nop2	
  3930  00129E                     l1843:
  3931                           
  3932                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  3933  00129E  0E0F               	movlw	15
  3934  0012A0  6E95               	movwf	149,c	;volatile
  3935  0012A2                     
  3936                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  3937  0012A2  EC8F  F00A         	call	_lcd_busy	;wreg free
  3938  0012A6  0012               	return		;funcret
  3939  0012A8                     __end_of_lcd_wrCom:
  3940                           	opt callstack 0
  3941                           
  3942 ;; *************** function _lcd_strobeEnableBit *****************
  3943 ;; Defined at:
  3944 ;;		line 431 in file "Lcd4Lignes.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		None
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3958 ;;      Params:         0       0       0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_lcd_wrCom
  3969 ;;		_lcd_wrData
  3970 ;;		_lcd_resetSequence
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text26
  3975  0016A6                     __ptext26:
  3976                           	opt callstack 0
  3977  0016A6                     _lcd_strobeEnableBit:
  3978                           	opt callstack 26
  3979  0016A6                     
  3980                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  3981  0016A6  8480               	bsf	128,2,c	;volatile
  3982                           
  3983                           ;Lcd4Lignes.c: 434: __nop();
  3984  0016A8  F000               	nop	
  3985                           
  3986                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  3987  0016AA  9480               	bcf	128,2,c	;volatile
  3988  0016AC  0012               	return		;funcret
  3989  0016AE                     __end_of_lcd_strobeEnableBit:
  3990                           	opt callstack 0
  3991                           
  3992 ;; *************** function _lcd_ecrireDonnees *****************
  3993 ;; Defined at:
  3994 ;;		line 107 in file "Lcd4Lignes.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  donnee          1    wreg     unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  donnee          1    1[BANK0 ] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4008 ;;      Params:         0       0       0       0       0       0       0
  4009 ;;      Locals:         0       1       0       0       0       0       0
  4010 ;;      Temps:          0       1       0       0       0       0       0
  4011 ;;      Totals:         0       2       0       0       0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_lcd_wrCom
  4019 ;;		_lcd_wrData
  4020 ;;		_lcd_resetSequence
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text27
  4025  00165C                     __ptext27:
  4026                           	opt callstack 0
  4027  00165C                     _lcd_ecrireDonnees:
  4028                           	opt callstack 26
  4029                           
  4030                           ;incstack = 0
  4031                           ;lcd_ecrireDonnees@donnee stored from wreg
  4032  00165C  0100               	movlb	0	; force () banked
  4033  00165E  6FC4               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4034  001660                     
  4035                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4036  001660  CF83 F0C3          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4037  001664  0EF0               	movlw	240
  4038  001666  0100               	movlb	0	; force () banked
  4039  001668  17C3               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4040  00166A  0100               	movlb	0	; force () banked
  4041  00166C  51C4               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  4042  00166E  0B0F               	andlw	15
  4043  001670  0100               	movlb	0	; force () banked
  4044  001672  11C3               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4045  001674  6E83               	movwf	131,c	;volatile
  4046  001676                     
  4047                           ; BSR set to: 0
  4048  001676  0012               	return		;funcret
  4049  001678                     __end_of_lcd_ecrireDonnees:
  4050                           	opt callstack 0
  4051                           
  4052 ;; *************** function _lcd_busy *****************
  4053 ;; Defined at:
  4054 ;;		line 124 in file "Lcd4Lignes.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  adresse         1    1[BANK0 ] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      unsigned char 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4068 ;;      Params:         0       0       0       0       0       0       0
  4069 ;;      Locals:         0       1       0       0       0       0       0
  4070 ;;      Temps:          0       1       0       0       0       0       0
  4071 ;;      Totals:         0       2       0       0       0       0       0
  4072 ;;Total ram usage:        2 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    2
  4075 ;; This function calls:
  4076 ;;		_lcd_lireDonnees
  4077 ;; This function is called by:
  4078 ;;		_lcd_wrCom
  4079 ;;		_lcd_wrData
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text28
  4084  00151E                     __ptext28:
  4085                           	opt callstack 0
  4086  00151E                     _lcd_busy:
  4087                           	opt callstack 25
  4088  00151E                     
  4089                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4090  00151E  9080               	bcf	128,0,c	;volatile
  4091                           
  4092                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4093  001520  8280               	bsf	128,1,c	;volatile
  4094  001522                     l199:
  4095                           
  4096                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4097  001522  8480               	bsf	128,2,c	;volatile
  4098                           
  4099                           ;Lcd4Lignes.c: 134: __nop();
  4100  001524  F000               	nop	
  4101  001526                     
  4102                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4103  001526  EC57  F00B         	call	_lcd_lireDonnees	;wreg free
  4104  00152A  0100               	movlb	0	; force () banked
  4105  00152C  6FC3               	movwf	??_lcd_busy& (0+255),b
  4106  00152E  39C3               	swapf	??_lcd_busy& (0+255),w,b
  4107  001530  0BF0               	andlw	240
  4108  001532  0100               	movlb	0	; force () banked
  4109  001534  6FC4               	movwf	lcd_busy@adresse& (0+255),b
  4110  001536                     
  4111                           ; BSR set to: 0
  4112                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4113  001536  9480               	bcf	128,2,c	;volatile
  4114  001538                     
  4115                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4116  001538  8480               	bsf	128,2,c	;volatile
  4117  00153A                     
  4118                           ;Lcd4Lignes.c: 139: __nop();
  4119  00153A  F000               	nop	
  4120                           
  4121                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4122  00153C  EC57  F00B         	call	_lcd_lireDonnees	;wreg free
  4123  001540  0100               	movlb	0	; force () banked
  4124  001542  13C4               	iorwf	lcd_busy@adresse& (0+255),f,b
  4125  001544                     
  4126                           ; BSR set to: 0
  4127                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4128  001544  9480               	bcf	128,2,c	;volatile
  4129  001546                     
  4130                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4131  001546  0100               	movlb	0	; force () banked
  4132  001548  BFC4               	btfsc	lcd_busy@adresse& (0+255),7,b
  4133  00154A  EFA9  F00A         	goto	u711
  4134  00154E  EFAB  F00A         	goto	u710
  4135  001552                     u711:
  4136  001552  EF91  F00A         	goto	l199
  4137  001556                     u710:
  4138  001556                     
  4139                           ; BSR set to: 0
  4140                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4141  001556  9280               	bcf	128,1,c	;volatile
  4142  001558                     
  4143                           ; BSR set to: 0
  4144                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4145  001558  0100               	movlb	0	; force () banked
  4146  00155A  51C4               	movf	lcd_busy@adresse& (0+255),w,b
  4147  00155C  0B7F               	andlw	127
  4148  00155E                     
  4149                           ; BSR set to: 0
  4150  00155E  0012               	return		;funcret
  4151  001560                     __end_of_lcd_busy:
  4152                           	opt callstack 0
  4153                           
  4154 ;; *************** function _lcd_lireDonnees *****************
  4155 ;; Defined at:
  4156 ;;		line 93 in file "Lcd4Lignes.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      unsigned char 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4170 ;;      Params:         0       0       0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_lcd_busy
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text29
  4185  0016AE                     __ptext29:
  4186                           	opt callstack 0
  4187  0016AE                     _lcd_lireDonnees:
  4188                           	opt callstack 25
  4189  0016AE                     
  4190                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4191  0016AE  5083               	movf	131,w,c	;volatile
  4192  0016B0  0B0F               	andlw	15
  4193  0016B2  0012               	return		;funcret
  4194  0016B4                     __end_of_lcd_lireDonnees:
  4195                           	opt callstack 0
  4196                           
  4197 ;; *************** function ___llmod *****************
  4198 ;; Defined at:
  4199 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  dividend        4    0[BANK0 ] unsigned long 
  4202 ;;  divisor         4    4[BANK0 ] unsigned long 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  counter         1    8[BANK0 ] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  4    0[BANK0 ] unsigned long 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4214 ;;      Params:         0       8       0       0       0       0       0
  4215 ;;      Locals:         0       1       0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0
  4217 ;;      Totals:         0       9       0       0       0       0       0
  4218 ;;Total ram usage:        9 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    1
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_affichePerdu
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text30
  4229  001068                     __ptext30:
  4230                           	opt callstack 0
  4231  001068                     ___llmod:
  4232                           	opt callstack 28
  4233  001068  0100               	movlb	0	; () banked
  4234  00106A  51C7               	movf	___llmod@divisor& (0+255),w,b
  4235  00106C  11C8               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4236  00106E  11C9               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4237  001070  11CA               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  4238  001072  B4D8               	btfsc	status,2,c
  4239  001074  EF3E  F008         	goto	u941
  4240  001078  EF40  F008         	goto	u940
  4241  00107C                     u941:
  4242  00107C  EF70  F008         	goto	l728
  4243  001080                     u940:
  4244  001080                     
  4245                           ; BSR set to: 0
  4246  001080  0E01               	movlw	1
  4247  001082  6FCB               	movwf	___llmod@counter& (0+255),b
  4248  001084  EF4A  F008         	goto	l2091
  4249  001088                     l2089:
  4250                           
  4251                           ; BSR set to: 0
  4252  001088  90D8               	bcf	status,0,c
  4253  00108A  37C7               	rlcf	___llmod@divisor& (0+255),f,b
  4254  00108C  37C8               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4255  00108E  37C9               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4256  001090  37CA               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4257  001092  2BCB               	incf	___llmod@counter& (0+255),f,b
  4258  001094                     l2091:
  4259                           
  4260                           ; BSR set to: 0
  4261  001094  AFCA               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4262  001096  EF4F  F008         	goto	u951
  4263  00109A  EF51  F008         	goto	u950
  4264  00109E                     u951:
  4265  00109E  EF44  F008         	goto	l2089
  4266  0010A2                     u950:
  4267  0010A2                     l2093:
  4268                           
  4269                           ; BSR set to: 0
  4270  0010A2  51C7               	movf	___llmod@divisor& (0+255),w,b
  4271  0010A4  5DC3               	subwf	___llmod@dividend& (0+255),w,b
  4272  0010A6  51C8               	movf	(___llmod@divisor+1)& (0+255),w,b
  4273  0010A8  59C4               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4274  0010AA  51C9               	movf	(___llmod@divisor+2)& (0+255),w,b
  4275  0010AC  59C5               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4276  0010AE  51CA               	movf	(___llmod@divisor+3)& (0+255),w,b
  4277  0010B0  59C6               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4278  0010B2  A0D8               	btfss	status,0,c
  4279  0010B4  EF5E  F008         	goto	u961
  4280  0010B8  EF60  F008         	goto	u960
  4281  0010BC                     u961:
  4282  0010BC  EF68  F008         	goto	l2097
  4283  0010C0                     u960:
  4284  0010C0                     
  4285                           ; BSR set to: 0
  4286  0010C0  51C7               	movf	___llmod@divisor& (0+255),w,b
  4287  0010C2  5FC3               	subwf	___llmod@dividend& (0+255),f,b
  4288  0010C4  51C8               	movf	(___llmod@divisor+1)& (0+255),w,b
  4289  0010C6  5BC4               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4290  0010C8  51C9               	movf	(___llmod@divisor+2)& (0+255),w,b
  4291  0010CA  5BC5               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4292  0010CC  51CA               	movf	(___llmod@divisor+3)& (0+255),w,b
  4293  0010CE  5BC6               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4294  0010D0                     l2097:
  4295                           
  4296                           ; BSR set to: 0
  4297  0010D0  90D8               	bcf	status,0,c
  4298  0010D2  33CA               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4299  0010D4  33C9               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4300  0010D6  33C8               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4301  0010D8  33C7               	rrcf	___llmod@divisor& (0+255),f,b
  4302  0010DA                     
  4303                           ; BSR set to: 0
  4304  0010DA  2FCB               	decfsz	___llmod@counter& (0+255),f,b
  4305  0010DC  EF51  F008         	goto	l2093
  4306  0010E0                     l728:
  4307                           
  4308                           ; BSR set to: 0
  4309  0010E0  C0C3  F0C3         	movff	___llmod@dividend,?___llmod
  4310  0010E4  C0C4  F0C4         	movff	___llmod@dividend+1,?___llmod+1
  4311  0010E8  C0C5  F0C5         	movff	___llmod@dividend+2,?___llmod+2
  4312  0010EC  C0C6  F0C6         	movff	___llmod@dividend+3,?___llmod+3
  4313  0010F0                     
  4314                           ; BSR set to: 0
  4315  0010F0  0012               	return		;funcret
  4316  0010F2                     __end_of___llmod:
  4317                           	opt callstack 0
  4318                           
  4319 ;; *************** function ___lldiv *****************
  4320 ;; Defined at:
  4321 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  dividend        4    0[BANK0 ] unsigned long 
  4324 ;;  divisor         4    4[BANK0 ] unsigned long 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  quotient        4    8[BANK0 ] unsigned long 
  4327 ;;  counter         1   12[BANK0 ] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  4    0[BANK0 ] unsigned long 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4337 ;;      Params:         0       8       0       0       0       0       0
  4338 ;;      Locals:         0       5       0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0
  4340 ;;      Totals:         0      13       0       0       0       0       0
  4341 ;;Total ram usage:       13 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_affichePerdu
  4348 ;;		_niveau
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text31
  4353  000E8A                     __ptext31:
  4354                           	opt callstack 0
  4355  000E8A                     ___lldiv:
  4356                           	opt callstack 28
  4357  000E8A  0E00               	movlw	0
  4358  000E8C  0100               	movlb	0	; () banked
  4359  000E8E  6FCB               	movwf	___lldiv@quotient& (0+255),b
  4360  000E90  0E00               	movlw	0
  4361  000E92  6FCC               	movwf	(___lldiv@quotient+1)& (0+255),b
  4362  000E94  0E00               	movlw	0
  4363  000E96  6FCD               	movwf	(___lldiv@quotient+2)& (0+255),b
  4364  000E98  0E00               	movlw	0
  4365  000E9A  6FCE               	movwf	(___lldiv@quotient+3)& (0+255),b
  4366  000E9C                     
  4367                           ; BSR set to: 0
  4368  000E9C  51C7               	movf	___lldiv@divisor& (0+255),w,b
  4369  000E9E  11C8               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4370  000EA0  11C9               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4371  000EA2  11CA               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4372  000EA4  B4D8               	btfsc	status,2,c
  4373  000EA6  EF57  F007         	goto	u851
  4374  000EAA  EF59  F007         	goto	u850
  4375  000EAE                     u851:
  4376  000EAE  EF8F  F007         	goto	l347
  4377  000EB2                     u850:
  4378  000EB2                     
  4379                           ; BSR set to: 0
  4380  000EB2  0E01               	movlw	1
  4381  000EB4  6FCF               	movwf	___lldiv@counter& (0+255),b
  4382  000EB6  EF63  F007         	goto	l2035
  4383  000EBA                     l2033:
  4384                           
  4385                           ; BSR set to: 0
  4386  000EBA  90D8               	bcf	status,0,c
  4387  000EBC  37C7               	rlcf	___lldiv@divisor& (0+255),f,b
  4388  000EBE  37C8               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4389  000EC0  37C9               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4390  000EC2  37CA               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4391  000EC4  2BCF               	incf	___lldiv@counter& (0+255),f,b
  4392  000EC6                     l2035:
  4393                           
  4394                           ; BSR set to: 0
  4395  000EC6  AFCA               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4396  000EC8  EF68  F007         	goto	u861
  4397  000ECC  EF6A  F007         	goto	u860
  4398  000ED0                     u861:
  4399  000ED0  EF5D  F007         	goto	l2033
  4400  000ED4                     u860:
  4401  000ED4                     l2037:
  4402                           
  4403                           ; BSR set to: 0
  4404  000ED4  90D8               	bcf	status,0,c
  4405  000ED6  37CB               	rlcf	___lldiv@quotient& (0+255),f,b
  4406  000ED8  37CC               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4407  000EDA  37CD               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4408  000EDC  37CE               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4409  000EDE                     
  4410                           ; BSR set to: 0
  4411  000EDE  51C7               	movf	___lldiv@divisor& (0+255),w,b
  4412  000EE0  5DC3               	subwf	___lldiv@dividend& (0+255),w,b
  4413  000EE2  51C8               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4414  000EE4  59C4               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4415  000EE6  51C9               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4416  000EE8  59C5               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4417  000EEA  51CA               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4418  000EEC  59C6               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4419  000EEE  A0D8               	btfss	status,0,c
  4420  000EF0  EF7C  F007         	goto	u871
  4421  000EF4  EF7E  F007         	goto	u870
  4422  000EF8                     u871:
  4423  000EF8  EF87  F007         	goto	l2045
  4424  000EFC                     u870:
  4425  000EFC                     
  4426                           ; BSR set to: 0
  4427  000EFC  51C7               	movf	___lldiv@divisor& (0+255),w,b
  4428  000EFE  5FC3               	subwf	___lldiv@dividend& (0+255),f,b
  4429  000F00  51C8               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4430  000F02  5BC4               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4431  000F04  51C9               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4432  000F06  5BC5               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4433  000F08  51CA               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4434  000F0A  5BC6               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4435  000F0C                     
  4436                           ; BSR set to: 0
  4437  000F0C  81CB               	bsf	___lldiv@quotient& (0+255),0,b
  4438  000F0E                     l2045:
  4439                           
  4440                           ; BSR set to: 0
  4441  000F0E  90D8               	bcf	status,0,c
  4442  000F10  33CA               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4443  000F12  33C9               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4444  000F14  33C8               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4445  000F16  33C7               	rrcf	___lldiv@divisor& (0+255),f,b
  4446  000F18                     
  4447                           ; BSR set to: 0
  4448  000F18  2FCF               	decfsz	___lldiv@counter& (0+255),f,b
  4449  000F1A  EF6A  F007         	goto	l2037
  4450  000F1E                     l347:
  4451                           
  4452                           ; BSR set to: 0
  4453  000F1E  C0CB  F0C3         	movff	___lldiv@quotient,?___lldiv
  4454  000F22  C0CC  F0C4         	movff	___lldiv@quotient+1,?___lldiv+1
  4455  000F26  C0CD  F0C5         	movff	___lldiv@quotient+2,?___lldiv+2
  4456  000F2A  C0CE  F0C6         	movff	___lldiv@quotient+3,?___lldiv+3
  4457  000F2E                     
  4458                           ; BSR set to: 0
  4459  000F2E  0012               	return		;funcret
  4460  000F30                     __end_of___lldiv:
  4461                           	opt callstack 0
  4462                           
  4463 ;; *************** function _high_isr *****************
  4464 ;; Defined at:
  4465 ;;		line 391 in file "main.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4479 ;;      Params:         0       0       0       0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0
  4482 ;;      Totals:         0       0       0       0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		Interrupt level 2
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	intcode
  4493  000008                     __pintcode:
  4494                           	opt callstack 0
  4495  000008                     _high_isr:
  4496                           	opt callstack 24
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;incstack = 0
  4500  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4501  00000A                     
  4502                           ;main.c: 393: if (INTCONbits.TMR0IF)
  4503  00000A  A4F2               	btfss	242,2,c	;volatile
  4504  00000C  EF0A  F000         	goto	i2u65_41
  4505  000010  EF0C  F000         	goto	i2u65_40
  4506  000014                     i2u65_41:
  4507  000014  EF14  F000         	goto	i2l174
  4508  000018                     i2u65_40:
  4509  000018                     
  4510                           ;main.c: 394: {;main.c: 395: INTCONbits.TMR0IF = 0;
  4511  000018  94F2               	bcf	242,2,c	;volatile
  4512  00001A                     
  4513                           ;main.c: 396: TMR0 = 0x0BDC;
  4514  00001A  0E0B               	movlw	11
  4515  00001C  6ED7               	movwf	215,c	;volatile
  4516  00001E  0EDC               	movlw	220
  4517  000020  6ED6               	movwf	214,c	;volatile
  4518                           
  4519                           ;main.c: 397: m_tempsDAfficher = 1;
  4520  000022  0E01               	movlw	1
  4521  000024  0100               	movlb	0	; force () banked
  4522  000026  6FF9               	movwf	_m_tempsDAfficher& (0+255),b
  4523  000028                     i2l174:
  4524  000028  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4525  00002A  0011               	retfie		f
  4526  00002C                     __end_of_high_isr:
  4527                           	opt callstack 0
  4528                           
  4529                           	psect	param0
  4530  0000                     
  4531                           	psect	temp
  4532  000001                     btemp:
  4533                           	opt callstack 0
  4534  000001                     	ds	1
  4535  0000                     int$flags	set	btemp
  4536  0000                     wtemp8	set	btemp+1
  4537  0000                     ttemp5	set	btemp+1
  4538  0000                     ttemp6	set	btemp+4
  4539  0000                     ttemp7	set	btemp+8
  4540                           tosu	equ	0xFFF
  4541                           tosh	equ	0xFFE
  4542                           tosl	equ	0xFFD
  4543                           stkptr	equ	0xFFC
  4544                           pclatu	equ	0xFFB
  4545                           pclath	equ	0xFFA
  4546                           pcl	equ	0xFF9
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           indf0	equ	0xFEF
  4554                           postinc0	equ	0xFEE
  4555                           postdec0	equ	0xFED
  4556                           preinc0	equ	0xFEC
  4557                           plusw0	equ	0xFEB
  4558                           fsr0h	equ	0xFEA
  4559                           fsr0l	equ	0xFE9
  4560                           wreg	equ	0xFE8
  4561                           indf1	equ	0xFE7
  4562                           postinc1	equ	0xFE6
  4563                           postdec1	equ	0xFE5
  4564                           preinc1	equ	0xFE4
  4565                           plusw1	equ	0xFE3
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           bsr	equ	0xFE0
  4569                           indf2	equ	0xFDF
  4570                           postinc2	equ	0xFDE
  4571                           postdec2	equ	0xFDD
  4572                           preinc2	equ	0xFDC
  4573                           plusw2	equ	0xFDB
  4574                           fsr2h	equ	0xFDA
  4575                           fsr2l	equ	0xFD9
  4576                           status	equ	0xFD8


Data Sizes:
    Strings     36
    Constant    0
    Data        163
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     54     154
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[9]), STR_2(CODE[10]), STR_1(CODE[17]), 

    feu@pts	PTR unsigned long  size(2) Largest target is 2
		 -> main@points(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    main@points	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@posX	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_nouveauxAliens
    _nouveauxAliens->___awmod
    _rand->___lmul
    ___awmod->_rand
    _niveau->___lldiv
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _feu->_afficheAliens
    _afficheAliens->_lcd_ecritChar
    _afficheAliens->_lcd_gotoXY
    _deplace->_lcd_ecritChar
    _deplace->_lcd_gotoXY
    _affichePerdu->___lldiv
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_cacheCurseur->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11967
                                             49 BANK0      5     5      0
                      _afficheAliens
                       _affichePerdu
                            _deplace
                                _feu
                     _initialisation
                           _lcd_init
                     _lcd_putMessage
                             _niveau
                     _nouveauxAliens
                              _perdu
                         _videAliens
 ---------------------------------------------------------------------------------
 (1) _videAliens                                           4     4      0      90
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _perdu                                                2     2      0      45
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _nouveauxAliens                                      29    29      0    1495
                                             20 BANK0     29    29      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _niveau                                               5     1      4     587
                                             13 BANK0      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _feu                                                  9     7      2    1879
                                              9 BANK0      9     7      2
                      _afficheAliens
                   _lcd_cacheCurseur
 ---------------------------------------------------------------------------------
 (2) _afficheAliens                                        4     4      0    1447
                                              5 BANK0      4     4      0
                   _lcd_cacheCurseur
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _deplace                                              4     2      2    1623
                                              5 BANK0      4     2      2
                          _getAnalog
                   _lcd_cacheCurseur
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _affichePerdu                                        17    13      4    3204
                                             13 BANK0     17    13      4
                            ___lldiv
                            ___llmod
                   _lcd_cacheCurseur
                      _lcd_ecritChar
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     631
                                              5 BANK0      5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoXY                                           2     1      1     798
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     311
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheAliens
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _affichePerdu
     ___lldiv
     ___llmod
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _feu
     _afficheAliens
       _lcd_cacheCurseur
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _lcd_cacheCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _niveau
     ___lldiv
   _nouveauxAliens
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _perdu
   _videAliens

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      40       6       25.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     36      9A       4       96.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      14        0.0%
DATA                 0      0      DA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 22 22:45:55 2019

                          l90 147A                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l200 1556                           l201 155E                           l210 1606  
                         l122 0C40                           l114 0E88                           l131 0B54  
                         l107 084E                           l213 1310                           l222 169C  
                         l207 12A6                           l143 0A1C                           l128 0B28  
                         l216 165A                           l137 13D0                           l162 15D2  
                         l219 1694                           l331 11BE                           l332 11CE  
                         l237 1162                           l165 1622                           l270 16AC  
                         l254 123A                           l159 1066                           l248 14CE  
                         l168 1632                           l193 16B2                           l257 16A4  
                         l354 0F2E                           l347 0F1E                           l267 0FD0  
                         l196 1676                           l199 1522                           l564 0DD8  
                         l735 10F0                           l728 10E0                           l984 1686  
                         l987 1426                  __CFG_CPB$OFF 000000                           u110 1630  
                         u111 162C                           u400 13B2                           u401 13AE  
                         u410 13CE                           u411 13CA                           u500 1006  
                         u501 1002                           u510 1050                           u511 104C  
                         u520 1066                           u521 1062                  __CFG_CPD$OFF 000000  
                         u710 1556                           u390 138E                           u711 1552  
                         u391 138A                           u720 1280                           u800 0E84  
                         u721 127C                           u801 0E80                           u730 1294  
                         u810 0F4E                           u490 0FEA                           u731 1290  
                         u811 0F4A                           u491 0FE6                           u820 0F6A  
                         u900 0D70                           u740 1184                           u821 0F66  
                         u901 0D6C                           u741 1180                           u830 0FB6  
                         u910 0D8E                           u750 11BE                           u831 0FB2  
                         u911 0D8A                           u751 11BA                           u760 123A  
                         u840 0FCC                           u920 0DA4                           u761 1236  
                         u841 0FC8                           u921 0DA0                           u850 0EB2  
                         u770 0DF6                           u930 0DC8                           u851 0EAE  
                         u771 0DF2                           u931 0DC4                           u860 0ED4  
                         u940 1080                           u780 0E12                           u861 0ED0  
                         u941 107C                           u781 0E0E                           u870 0EFC  
                         u950 10A2                           u790 0E6E                           u871 0EF8  
                         u951 109E                           u791 0E6A                           u960 10C0  
                         u880 0D3C                           u961 10BC                           u881 0D38  
                         u890 0D56                           u970 064A                           u891 0D52  
                         u971 0646                           u980 0676                           u981 0672  
                         u990 068C                           u991 0688                           _feu 0A1E  
                __CFG_BORV$18 000000                  ___awmod@sign 00D6                   lcd_gotoXY@x 00C7  
                         wreg 000FE8                   lcd_gotoXY@y 00C6  __size_of_lcd_effaceAffichage 000E  
                __CFG_LVP$OFF 000000                          l2001 0F30                          l2011 0F58  
                        l2003 0F36                          l2101 1428                          l2021 0FB6  
                        l2005 0F3C                          l2031 0EB2                          l2111 144A  
                        l2103 1430                          l2023 0FBA                          l2015 0F6E  
                        l2041 0EFC                          l2033 0EBA                          l2121 145A  
                        l2113 144C                          l2105 143A                          l2017 0FA0  
                        l2025 0FCC                          l2009 0F52                          l2201 07D6  
                        l2043 0F0C                          l2035 0EC6                          l2027 0E8A  
                        l2211 0850                          l2131 146A                          l2123 145C  
                        l2115 1450                          l2107 143C                          l2019 0FA4  
                        l2051 0D2E                          l2203 07F4                          l2045 0F0E  
                        l2037 0ED4                          l2029 0E9C                          l2221 0894  
                        l2213 0862                          l2301 0C02                          l2133 1472  
                        l2125 145E                          l2117 1452                          l2109 1448  
                        l2141 1634                          l2061 0D5E                          l2053 0D3C  
                        l2205 0826                          l2047 0F18                          l2039 0EDE  
                        l2223 08A2                          l2215 0868                          l2303 0C0E  
                        l2135 1474                          l2127 1460                          l2119 1456  
                        l2143 1656                          l2071 0DA4                          l2063 0D70  
                        l2055 0D44                          l2207 0838                          l2151 0626  
                        l2233 08E2                          l2241 0970                          l2225 08A6  
                        l2217 086C                          l2305 0C22                          l2137 1476  
                        l2129 1462                          l2145 15A0                          l2081 0DD0  
                        l2073 0DAC                          l2065 0D78                          l2057 0D48  
                        l2049 0D28                          l2209 083C                          l2161 0664  
                        l2153 0638                          l2321 0C56                          l2091 1094  
                        l2251 09BC                          l2243 0980                          l2235 091E  
                        l2219 0884                          l2307 0C28                          l2139 1478  
                        l2147 15CE                          l2075 0DB2                          l2067 0D80  
                        l2059 0D56                          l2163 0676                          l2331 0C94  
                        l2323 0C5A                          l2093 10A2                          l2085 1068  
                        l2261 09FC                          l2245 098E                          l2237 0954  
                        l2229 08C6                          l1293 160C                          l2309 0C3C  
                        l2069 0D8E                          l2077 0DB8                          l2181 0732  
                        l2173 06AC                          l2157 064E                          l2341 0CCC  
                        l2333 0C98                          l2325 0C5E                          l2095 10C0  
                        l2087 1080                          l2263 0A00                          l2255 09D2  
                        l2247 0998                          l2239 0958                          l1295 1620  
                        l2079 0DC8                          l2191 07A0                          l2175 0718  
                        l2183 0744                          l2167 0690                          l2159 0660  
                        l1551 137C                          l1631 0FF4                          l1623 0FD2  
                        l2351 0D00                          l2335 0CAC                          l2343 0CD6  
                        l2327 0C6C                          l2319 0C42                          l2097 10D0  
                        l2089 1088                          l1801 153A                          l2257 09E6  
                        l2249 099C                          l1297 1620                          l2273 0A42  
                        l2265 0A22                          l2185 074E                          l2193 07A4  
                        l2177 071C                          l2169 0696                          l1561 13B8  
                        l1641 1050                          l1625 0FD8                          l2353 0D0E  
                        l2345 0CDA                          l2337 0CBE                          l2329 0C82  
                        l2099 10DA                          l1803 1544                          l2259 09EA  
                        l1299 1630                          l2291 0B7C                          l2275 0A90  
                        l2283 0B3E                          l2267 0A26                          l2195 07BA  
                        l2187 0770                          l2179 072E                          l1563 13BC  
                        l1555 1392                          l1643 1054                          l1635 100A  
                        l2339 0CC8                          l2347 0CE0                          l1805 1546  
                        l1813 16A6                          l1821 1248                          l1901 14A4  
                        l2293 0B96                          l2285 0B42                          l2277 0B24  
                        l2269 0A2C                          l2197 07C0                          l2189 078E  
                        l1557 13B2                          l1565 13CE                          l1549 1376  
                        l1637 103A                          l1629 0FEE                          l2349 0CEE  
                        l1807 1546                          l1831 125A                          l1823 124A  
                        l1815 1240                          l2295 0BAE                          l2287 0B56  
                        l2279 0B36                          l1911 1176                          l1639 103E  
                        ?_feu 00CC                          l1809 1558                          l1841 1294  
                        l1833 1262                          l1825 124C                          l1817 1244  
                        l1905 14AE                          l1921 11DA                          l2297 0BBE  
                        l2289 0B6A                          l1913 1184                          l1843 129E  
                        l1835 1266                          l1827 1256                          l1819 1248  
                        l1851 15D8                          l1923 1202                          l2299 0BD0  
                        l1931 0DE4                          l1907 1696                          l1915 1194  
                        l1845 12A2                          l1837 126E                          l1829 125A  
                        l1861 15E4                          l1853 15DC                          l1925 1206  
                        l1941 0E16                          l1917 119E                          l1909 1164  
                        l1791 151E                          l1847 12A2                          l1839 1280  
                        l1871 15FE                          l1863 15EE                          l1855 15E0  
                        l1919 11D0                          l1951 0E72                          l1943 0E26  
                        l1935 0DFA                          l1927 0DDA                          l1785 16AE  
                        l1793 1526                          l1881 10F6                          l1873 15FE  
                        l1865 15F2                          l1857 15E0                          l1945 0E58  
                        l1937 0E00                          l1953 0E84                          l1929 0DDE  
                        l1961 141A                          l1795 1536                          l1883 10FA  
                        l1875 1602                          l1867 15F2                          l1859 15E2  
                        l1947 0E5C                          l1955 1678                          l1971 12C0  
                        l1797 1538                          l1789 1660                          l1965 1688  
                        l1885 110A                          l1893 113A                          l1869 15FA  
                        l1949 0E6E                          l1981 12D6                          l1973 12C2  
                        l1957 13D2                          l1799 1538                          l1879 169E  
                        l1887 111A                          l1895 1480                          l1991 12F2  
                        l1983 12DC                          l1975 12C4                          l1967 12A8  
                        l1959 1408                          l1889 112A                          l1897 1490  
                        l1993 12FA                          l1985 12E0                          l1977 12CA  
                        l1969 12AC                          l1899 149A                          l1995 1300  
                        l1987 12E8                          l1979 12CE                          l1997 1304  
                        l1989 12EE                          l1999 130C                          STR_1 0601  
                        STR_2 0612                          STR_3 061C                          u1000 06A8  
                        u1001 06A4                          u1010 072E                          u1011 072A  
                        u1100 08DE                          u1020 0744                          u1101 08DA  
                        u1021 0740                          u1110 0970                          u1030 078E  
                        u1111 096C                          u1031 078A                          u1120 09BC  
                        u1200 0BAE                          u1040 07BA                          u1121 09B8  
                        u1201 0BAA                          u1041 07B6                          u1130 09CE  
                        u1210 0BD0                          u1050 07D2                          u1131 09CA  
                        u1211 0BCC                          u1051 07CE                          u1140 09FC  
                        u1220 0C02                          u1060 07F4                          u1141 09F8  
                        u1221 0BFE                          u1061 07F0                          u1150 0A3E  
                        u1070 084E                          u1151 0A3A                          u1071 084A  
                        u1160 0A90                          u1240 0C94                          u1081 085A  
                        u1161 0A8C                          u1241 0C90                          u1090 0884  
                        u1170 0B36                          u1250 0CAC                          u1091 0880  
                        u1171 0B32                          u1307 12E2                          u1251 0CA8  
                        u1180 0B54                          u1260 0CEE                          u1181 0B50  
                        u1317 12F4                          u1261 0CEA                          u1190 0B7C  
                        u1191 0B78                          u1327 1306                          u1337 08B2  
                        u1347 0A0C                          u1357 1268                          u1277 0D16  
                        u1367 1296                          u1287 12B4                          u1297 12D0  
                        _RCIF 007CF5                          _TMR0 000FD6                          _TMR1 000FCE  
            ??_initialisation 00C5                          _main 0C42                          _rand 13D2  
                        feu@x 00D3                          feu@y 00D4                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0001                          prodh 000FF4  
                        prodl 000FF3                          start 002C               ?_lcd_putMessage 00C8  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
                       ??_feu 00CE               ??_lcd_ecritChar 00C6                         ?_main 00C3  
                       ?_rand 00CF               __end_of___awmod 0DDA                         _ANSEL 000F7E  
             __end_of___lldiv 0F30               __end_of___llmod 10F2                         i2l174 0028  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 0C42  
         ___lmul@multiplicand 00C7                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00C6  
                       _randx 006A                         _perdu 1376                         _srand 1678  
                       tablat 000FF5                         plusw1 000FE3                         plusw2 000FDB  
                       ttemp5 0002                         ttemp6 0005                         ttemp7 0009  
                       status 000FD8                         wtemp8 0002      __end_of_lcd_cacheCurseur 16A6  
              __CFG_HFOFST$ON 000000         __size_of_affichePerdu 01CE                __CFG_PBADEN$ON 000000  
             __initialization 14D0                  __end_of_main 0D28                  __end_of_rand 1428  
        lcd_putMessage@chaine 00C8                        ??_main 00F4                        ??_rand 00D1  
               __activetblptr 000003                        _ADCON1 000FC1                  _affichePerdu 0850  
            ___llmod@dividend 00C3                        _ADRESH 000FC4                        ?_perdu 00C3  
                      ?_srand 00C3                        _ANSELH 000F7F                __CFG_WDTEN$OFF 000000  
                      i2l1735 000A                        i2l1737 0018                        i2l1739 001A  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000                lcd_initCGRam@i 00C8  
              lcd_initCGRam@j 00C9                getAnalog@canal 00C4              __end_of_lcd_busy 1560  
            __end_of_lcd_init 165C              __end_of_high_isr 002C                        ___lmul 1164  
              __CFG_STVREN$ON 000000                     ??___awmod 00D5                     ??___lldiv 00CB  
                   ??___llmod 00CB              ??_nouveauxAliens 00D7                        feu@pts 00CC  
                      _niveau 15A0               ___awmod@divisor 00D3                     ??_deplace 00CA  
             ___awmod@counter 00D5                        perdu@i 00C4                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00C3        __size_of_afficheAliens 00B0             _lcd_resetSequence 12A8  
                  __accesstop 0060       __end_of__initialization 1514           _lcd_strobeEnableBit 16A6  
          ?_lcd_resetSequence 00C3                 ___rparam_used 000000           _lcd_effaceAffichage 1688  
                __pidataBANK0 1312                  __pidataBANK1 1560           ??_lcd_resetSequence 00C5  
               __end_of_perdu 13D2                 __end_of_srand 1688          ?_lcd_strobeEnableBit 00C3  
          __size_of_getAnalog 002C          ?_lcd_effaceAffichage 00C3            __size_of_lcd_wrCom 006C  
                     ??_perdu 00C3     __end_of_lcd_resetSequence 1312                       ??_srand 00C5  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 165C                    __pbssBANK0 00F9  
            ??_lcd_putMessage 00CA            ?_lcd_ecrireDonnees 00C3      __size_of_lcd_curseurHome 0008  
           affichePerdu@F2752 0060           ??_lcd_ecrireDonnees 00C3                 _afficheAliens 0DDA  
                     ?___lmul 00C3                ___lmul@product 00CB         ??_lcd_strobeEnableBit 00C3  
                     ?_niveau 00D0                    _lcd_gotoXY 10F2         ??_lcd_effaceAffichage 00C6  
                     i2u65_40 0018                       i2u65_41 0014                    _lcd_wrData 15D4  
   __end_of_lcd_ecrireDonnees 1678                     ?_lcd_busy 00C3                     ?_lcd_init 00C3  
     lcd_ecrireDonnees@donnee 00C4                     ?_high_isr 00C3             __end_of_getAnalog 1634  
           ?_lcd_cacheCurseur 00C3                       __Hparam 0000                       __Lparam 0000  
          ??_lcd_cacheCurseur 00C6                ?_afficheAliens 00C3               nouveauxAliens@i 00F3  
             nouveauxAliens@j 00F2             __end_of_lcd_wrCom 12A8               __size_of___lmul 006C  
                     ___awmod 0D28                   videAliens@i 00C5                   videAliens@j 00C6  
                     ___lldiv 0E8A                       ___llmod 1068                  __psmallconst 0600  
                     __pcinit 14D0                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 0B56               __size_of_niveau 0034                       __ptext0 0C42  
                     __ptext1 0FD2                       __ptext2 1376                       __ptext3 0626  
                     __ptext4 13D2                       __ptext5 1164                       __ptext6 0D28  
                     __ptext7 15A0                       __ptext8 1634                       __ptext9 12A8  
       __end_of_lcd_ecritChar 14D0                     _T0CONbits 000FD5               lcd_busy@adresse 00C4  
                   _T1CONbits 000FCD                  __size_of_feu 0138              ___awmod@dividend 00D1  
            lcd_ecritChar@car 00C6                    ??_lcd_busy 00C3                    ??_lcd_init 00CA  
  __size_of_lcd_resetSequence 006A                    ??_high_isr 00C3              _m_tempsDAfficher 00F9  
        end_of_initialization 1514         __end_of_lcd_initCGRam 0FD2                    _videAliens 0FD2  
             ___lldiv@divisor 00C7             ??_lcd_lireDonnees 00C3               ___lldiv@counter 00CF  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0054             ??_lcd_curseurHome 00C6  
         lcd_ecritChar@posRam 00C7                     _PORTAbits 000F80                     _PORTBbits 000F81  
                 ?_lcd_gotoXY 00C6                     _TRISCbits 000F94                   ?_lcd_wrData 00C3  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC               ??_afficheAliens 00C8  
                  main@points 00F5                __end_of___lmul 11D0                   _BAUDCONbits 000FB8  
              __end_of_niveau 15D4           start_initialization 14D0                   __end_of_feu 0B56  
             ___llmod@divisor 00C7               ___llmod@counter 00CB                   ?_videAliens 00C3  
         __size_of_lcd_gotoXY 0072                      ??___lmul 00CB           __size_of_lcd_wrData 0034  
                 __pdataBANK0 0060                   __pdataBANK1 0100              __CFG_LPT1OSC$OFF 000000  
                    ??_niveau 00D4                 deplace@analog 00CB                 __pcstackBANK0 00C3  
     __size_of_nouveauxAliens 022A      nouveauxAliens@alienPlace 00DD             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __size_of_high_isr 0024         affichePerdu@ptsString 00D6  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 1608   __end_of_lcd_strobeEnableBit 16AE  
                   __pintcode 0008                _initialisation 1428                      ?___awmod 00D1  
                    ?___lldiv 00C3                      ?___llmod 00C3                      ?_deplace 00C8  
 __end_of_lcd_effaceAffichage 1696                     _lcd_wrCom 123C     __size_of_lcd_cacheCurseur 0008  
                 __smallconst 0600        nouveauxAliens@posAlien 00F1                  niveau@niveau 00D4  
         __size_of_videAliens 0096                  niveau@points 00D0                 ?_affichePerdu 00D0  
             _lcd_lireDonnees 16AE           lcd_wrData@caractere 00C5                __size_of_perdu 005C  
              __size_of_srand 0010               _lcd_curseurHome 1696        __end_of_initialisation 147C  
                  ?_getAnalog 00C3              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 006C  
                  ?_lcd_wrCom 00C3                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
                ??_lcd_gotoXY 00C7                ??_affichePerdu 00D4                  ??_lcd_wrData 00C5  
           lcd_wrCom@commande 00C5             ___lmul@multiplier 00C3                     copy_data0 14E4  
                   copy_data1 1504                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00C3            __CFG_BOREN$SBORDIS 000000  
          __end_of_lcd_gotoXY 1164            __end_of_lcd_wrData 1608              __size_of___awmod 00B2  
            __size_of___lldiv 00A6              __size_of___llmod 008A        __size_of_lcd_initCGRam 00A2  
             lcd_putMessage@j 00CC              __size_of_deplace 00EC       __end_of_lcd_lireDonnees 16B4  
              _nouveauxAliens 0626                      _matCGRAM 0100       __end_of_lcd_curseurHome 169E  
                    __ptext10 0F30                      __ptext11 1696                      __ptext20 147C  
                    __ptext12 1428                      __ptext21 15D4                      __ptext13 1678  
                    __ptext30 1068                      __ptext22 10F2                      __ptext14 0A1E  
                    __ptext31 0E8A                      __ptext23 1688                      __ptext15 0DDA  
                    __ptext24 169E                      __ptext16 0B56                      __ptext25 123C  
                    __ptext17 1608                      __ptext26 16A6                      __ptext18 0850  
                    __ptext27 165C                      __ptext19 11D0                      __ptext28 151E  
                    __ptext29 16AE               affichePerdu@pts 00D0                      _m_aliens 006F  
                    _lcd_busy 151E                      _lcd_init 1634                      _high_isr 0008  
                    _m_niveau 006E                 __size_of_main 00E6                 __size_of_rand 0056  
                ??_videAliens 00C3                      deplace@x 00C8                   ??_getAnalog 00C3  
       __end_of_afficheAliens 0E8A                      int$flags 0001                      main@posX 00F7  
                 ??_lcd_wrCom 00C5              _lcd_cacheCurseur 169E        __end_of_nouveauxAliens 0850  
              afficheAliens@i 00CA                afficheAliens@j 00CB                 _lcd_ecritChar 147C  
                  _INTCONbits 000FF2            __end_of_videAliens 1068                      intlevel2 0000  
               _lcd_initCGRam 0F30              ___lldiv@dividend 00C3                _lcd_putMessage 11D0  
        __end_of_affichePerdu 0A1E                ?_lcd_ecritChar 00C3               ?_nouveauxAliens 00C3  
            ?_lcd_lireDonnees 00C3                 affichePerdu@i 00E0              ___lldiv@quotient 00CB  
            ?_lcd_curseurHome 00C3                ?_lcd_initCGRam 00C3             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 123C  
